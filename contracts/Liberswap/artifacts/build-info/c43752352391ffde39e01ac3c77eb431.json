{
	"id": "c43752352391ffde39e01ac3c77eb431",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Liberswap/SwappingContract_2.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// Importing interfaces and utilities from OpenZeppelin Contracts library\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\n///@title TokenSwap contract for swapping tokens, inheriting from Ownable for access control\n/// @author LiberSwap Team\n/// @notice Contarct is based on swaping the usd tokens to substrate and vice versa  \ncontract TokenSwap is Ownable {\n    using SafeERC20 for IERC20; // SafeERC20 library usage for safe token transfers\n\n    // State variables\n    address public Owner; // Variable to store the owner's address, redundant with Ownable's owner()\n\n    // Events for logging different types of token swaps\n    event swapToken(address sender, uint amount);\n    event substrateSwapToken(address sender, uint amount);\n    event Hold_USDM_Token(address sender, uint amount);\n\n    // Constant addresses for USDT, USDC, DAI, and USDM tokens (Polygon)\n    address constant usdt = 0xa5014eA627Ac22A63f2Bf3b46e26d408e72f55c1;\n    address constant usdc = 0x9951342D994001468506DF88F71A582867B50dd4;\n    address constant dai = 0x77F146ca2943294CC53e6c3B5980B572c961ae23;\n    address constant usdm = 0x4b3a514Dd71850277bBa82491f26dACDF089cb68;\n\n    // // Constant addresses for USDT, USDC, DAI, and USDM tokens (Sepoliya)\n    // address constant usdt = 0x0FE9446Ca97d95B6f02c556f0D5Da557A79eE4d3;\n    // address constant usdc = 0x8501787De19D25539F52f1fd21d3749B1117a211;\n    // address constant dai = 0x4a5BB27bee2DCFBab49C5cE5278D2459F1B4d3DE;\n    // address constant usdm = 0x7cdCf6fd48ffb7096AB96bC9a4E75b1281f81354;\n\n    // Mapping to track whitelisted addresses\n    mapping(address => bool) public whiteList;\n    // Array to store all whitelisted addresses for iteration\n    address[] public whilistedAddress;\n    // Nested mapping to track amounts of tokens held by users\n    mapping (address UserAddress=> mapping (address TokenAddress  => uint)) public userTokenAmount;\n    mapping (address UserAddress=> mapping (address TokenAddress  => bool)) public checkUser;\n    mapping (address UserAddress => uint) public userAmount;\n    // mapping (address UserAddress => uint Amount) public userTotalSwapAmount;\n    mapping (address UserAddress =>  mapping(string => uint Amount)) public userTotalSwapAmount;\n    // mapping (address UserAddress => uint Amount) public userTotalSwapAmount;\n    mapping (string SubstrateAddress =>  mapping(address Owner => uint Amount)) public userTotalSubstrateSwapAmount;\n\n    // Variable to track current holdings in the contract\n    uint public currentHoldings;\n\n    // Veriable to track current overColleteralFeeAmount\n    uint public overColleteralFeeAmount;\n\n\n    // Constructor to set the initial owner of the contract\n    constructor(address initialOwner) Ownable(initialOwner) {\n        Owner = initialOwner;\n    }\n    /**\n     * @dev Adds an address to the whitelist.\n     * Only the owner of the contract can call this function.\n     * Emits an event once an address is successfully whitelisted.\n     * \n     * @param _address The address to be added to the whitelist.\n     */\n    function WhiteList(address _address) public onlyOwner{\n        require(!whiteList[_address],\"This Address is already WhiteListed!\");\n        whilistedAddress.push(_address);\n        whiteList[_address] = true;\n    }\n    function getMaticPrice(uint _amount) public view returns (uint256) {\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada);\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\n        require(answer > 0, \"Negative Matic price received\");\n        uint256 fee = ((_amount * 5)/100)/(uint256(answer));\n        return fee;\n    }\n\n    /**\n     * @dev Allows users to swap tokens by transferring them to the contract or distribute a fee among whitelisted addresses.\n     * If the token being swapped is USDM, it is simply collected by the contract.\n     * For other tokens, a 0.3% fee is distributed among all whitelisted addresses, and the rest is collected by the contract.\n     * \n     * @param _ethToken The address of the ERC20 token to be swapped.\n     * @param _amount The amount of the token to be swapped.\n     */\n\n    function swapTokens(address _ethToken,uint256 _amount,string memory substrateAddress) public payable{\n        require(IERC20(_ethToken).allowance(msg.sender, address(this)) >= _amount, \"Allowance not set\");\n        require(IERC20(_ethToken).balanceOf(msg.sender) >= _amount, \"Insufficient balance\");\n        if(_ethToken == usdm){\n            payable(owner()).transfer(getMaticPrice(_amount)*10**8);\n            IERC20(_ethToken).transferFrom(msg.sender, address(this), (_amount));\n            currentHoldings += (_amount);\n            userAmount[msg.sender] = _amount;\n            userTotalSwapAmount[msg.sender][substrateAddress] += _amount;\n            userTokenAmount[msg.sender][_ethToken] += _amount;\n            emit swapToken(msg.sender,_amount);\n        }\n        else{\n            payable(owner()).transfer(getMaticPrice(_amount)*10**8);\n            overColleteralFeeAmount = (_amount*3)/1000;\n            uint eachWhilitedAddressFee = overColleteralFeeAmount/whilistedAddress.length;\n            for (uint i=0; i<whilistedAddress.length; i++) \n            {\n                IERC20(_ethToken).transferFrom(msg.sender, whilistedAddress[i], eachWhilitedAddressFee);\n            }\n            IERC20(_ethToken).transferFrom(msg.sender, address(this), (_amount-overColleteralFeeAmount));\n            currentHoldings += (_amount-overColleteralFeeAmount);\n            userAmount[msg.sender] = (_amount-overColleteralFeeAmount);\n            userTotalSwapAmount[msg.sender][substrateAddress] += (_amount-overColleteralFeeAmount);\n            userTokenAmount[msg.sender][_ethToken] += (_amount-overColleteralFeeAmount);\n            emit swapToken(msg.sender,(_amount-overColleteralFeeAmount));\n        }    \n    }\n    /**\n     * @dev Allows users to swap tokens back from the contract or distribute a fee among whitelisted addresses before sending back the tokens.\n     * If the token being swapped back is USDM, it is directly transferred to the sender.\n     * For other tokens, a 0.3% fee is distributed among all whitelisted addresses before sending the remaining tokens back to the sender.\n     * \n     * @param _ethToken The address of the ERC20 token to be swapped back.\n     * @param _amount The amount of the token to be swapped back.\n     */\n    function substrateSwapTokens(address _ethToken,uint256 _amount,address _to,string memory substrateAddress) public {\n        require(IERC20(_ethToken).balanceOf(address(this)) >= _amount, \"Insufficient balance\");\n        if(_ethToken == usdm){\n            IERC20(_ethToken).safeTransfer(_to,_amount);\n            currentHoldings -= (_amount);\n            userAmount[_to] = _amount;\n            userTotalSubstrateSwapAmount[substrateAddress][_to] += _amount;\n            userTokenAmount[_to][_ethToken] -= _amount;\n            emit swapToken(_to,_amount);\n        }\n        else{\n\n            overColleteralFeeAmount = (_amount*3)/1000;\n            uint eachWhilitedAddressFee = overColleteralFeeAmount/whilistedAddress.length;\n            for (uint i=0; i<whilistedAddress.length; i++) \n            {\n                IERC20(_ethToken).safeTransfer(whilistedAddress[i],eachWhilitedAddressFee);\n            }\n            IERC20(_ethToken).safeTransfer(_to,(_amount-overColleteralFeeAmount));\n            currentHoldings -= (_amount-overColleteralFeeAmount);\n            userAmount[_to] = (_amount-overColleteralFeeAmount);\n            userTotalSubstrateSwapAmount[substrateAddress][_to] += _amount;\n            userTokenAmount[_to][_ethToken] -= (_amount-overColleteralFeeAmount);\n            emit substrateSwapToken(_to,(_amount-overColleteralFeeAmount));\n        }\n    }\n    /**\n     * @param _ethToken The address of the ERC20 token to be swapped back.\n     * Only owner can withdaraw the Overcolleteral fee.\n     */\n    function withdrawBalanceTokens(address _ethToken) public onlyOwner {\n        IERC20(_ethToken).safeTransfer(msg.sender, overColleteralFeeAmount);\n    }\n    /**\n     * @dev Removes an address from the whitelist. Only the owner can call this function.\n     * @param _address The address to be removed from the whitelist.\n     */\n    function removeFromWhiteList(address _address) public onlyOwner {\n        require(whiteList[_address], \"This Address does not exist!\");\n        whiteList[_address] = false;\n    }\n\n    /**\n     * @dev Returns the USDT token balance of this contract.\n     * @return holdings The amount of USDT tokens held by this contract.\n     */\n    function holdingOf_USDT(address holder) public view returns (uint holdings) {\n        return userTokenAmount[holder][usdt];\n        // return IERC20(usdt).balanceOf(holder);\n    }\n\n    /**\n     * @dev Returns the DAI token balance of this contract.\n     * @return holdings The amount of DAI tokens held by this contract.\n     */\n    function holdingOf_DAI(address holder) public view returns (uint holdings) {\n        return userTokenAmount[holder][dai];\n        // return IERC20(dai).balanceOf(holder);\n    }\n\n    /**\n     * @dev Returns the USDC token balance of this contract.\n     * @return holdings The amount of USDC tokens held by this contract.\n     */\n    function holdingOf_USDC(address holder) public view returns (uint holdings) {\n        return userTokenAmount[holder][usdc];\n        // return IERC20(usdc).balanceOf(holder);\n    }\n\n    /**\n     * @dev Returns the USDM token balance of this contract.\n     * @return holdings The amount of USDM tokens held by this contract.\n     */\n    function holdingOf_USDM(address holder) public view returns (uint holdings) {\n        return userTokenAmount[holder][usdm];\n        // return IERC20(usdm).balanceOf(holder);\n    }\n\n    /**\n     * @dev Returns the balance of a specific ERC20 token held by this contract.\n     * @param _ethToken The address of the ERC20 token.\n     * @return holdings The amount of the specified tokens held by this contract.\n     */\n    function holdingOfTokens(address _ethToken) public view returns (uint holdings) {\n        return userTokenAmount[msg.sender][_ethToken];\n        // return IERC20(_ethToken).balanceOf(address(this));\n    }\n\n}"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 54,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205efb1b99c15d71ee1223160b9449d152946caf457b016e2f1bd91047d3193e9664736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205efb1b99c15d71ee1223160b9449d152946caf457b016e2f1bd91047d3193e9664736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xFB SHL SWAP10 0xC1 0x5D PUSH18 0xEE1223160B9449D152946CAF457B016E2F1B 0xD9 LT SELFBALANCE 0xD3 NOT RETURNDATACOPY SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "751:5018:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;751:5018:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205efb1b99c15d71ee1223160b9449d152946caf457b016e2f1bd91047d3193e9664736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xFB SHL SWAP10 0xC1 0x5D PUSH18 0xEE1223160B9449D152946CAF457B016E2F1B 0xD9 LT SELFBALANCE 0xD3 NOT RETURNDATACOPY SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "751:5018:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205efb1b99c15d71ee1223160b9449d152946caf457b016e2f1bd91047d3193e9664736f6c63430008160033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Liberswap/SwappingContract_2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ab2b7458e123a4428190be37f7c3afb886b90f4fc2f1af1bb2ef028610aadd4e64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ab2b7458e123a4428190be37f7c3afb886b90f4fc2f1af1bb2ef028610aadd4e64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0x2B PUSH21 0x58E123A4428190BE37F7C3AFB886B90F4FC2F1AF1B 0xB2 0xEF MUL DUP7 LT 0xAA 0xDD 0x4E PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "195:6066:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ab2b7458e123a4428190be37f7c3afb886b90f4fc2f1af1bb2ef028610aadd4e64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0x2B PUSH21 0x58E123A4428190BE37F7C3AFB886B90F4FC2F1AF1B 0xB2 0xEF MUL DUP7 LT 0xAA 0xDD 0x4E PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "195:6066:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab2b7458e123a4428190be37f7c3afb886b90f4fc2f1af1bb2ef028610aadd4e64736f6c63430008160033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Liberswap/SwappingContract_2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Liberswap/SwappingContract_2.sol": {
				"TokenSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Hold_USDM_Token",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "substrateSwapToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "swapToken",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "WhiteList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "UserAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "TokenAddress",
									"type": "address"
								}
							],
							"name": "checkUser",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentHoldings",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "getMaticPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ethToken",
									"type": "address"
								}
							],
							"name": "holdingOfTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "holdings",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "holdingOf_DAI",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "holdings",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "holdingOf_USDC",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "holdings",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "holdingOf_USDM",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "holdings",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "holdingOf_USDT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "holdings",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "overColleteralFeeAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "removeFromWhiteList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ethToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "substrateAddress",
									"type": "string"
								}
							],
							"name": "substrateSwapTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ethToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "substrateAddress",
									"type": "string"
								}
							],
							"name": "swapTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "UserAddress",
									"type": "address"
								}
							],
							"name": "userAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "UserAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "TokenAddress",
									"type": "address"
								}
							],
							"name": "userTokenAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "SubstrateAddress",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "Owner",
									"type": "address"
								}
							],
							"name": "userTotalSubstrateSwapAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "Amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "UserAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "userTotalSwapAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "Amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "whilistedAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whiteList",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ethToken",
									"type": "address"
								}
							],
							"name": "withdrawBalanceTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "LiberSwap Team",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"WhiteList(address)": {
								"details": "Adds an address to the whitelist. Only the owner of the contract can call this function. Emits an event once an address is successfully whitelisted. ",
								"params": {
									"_address": "The address to be added to the whitelist."
								}
							},
							"holdingOfTokens(address)": {
								"details": "Returns the balance of a specific ERC20 token held by this contract.",
								"params": {
									"_ethToken": "The address of the ERC20 token."
								},
								"returns": {
									"holdings": "The amount of the specified tokens held by this contract."
								}
							},
							"holdingOf_DAI(address)": {
								"details": "Returns the DAI token balance of this contract.",
								"returns": {
									"holdings": "The amount of DAI tokens held by this contract."
								}
							},
							"holdingOf_USDC(address)": {
								"details": "Returns the USDC token balance of this contract.",
								"returns": {
									"holdings": "The amount of USDC tokens held by this contract."
								}
							},
							"holdingOf_USDM(address)": {
								"details": "Returns the USDM token balance of this contract.",
								"returns": {
									"holdings": "The amount of USDM tokens held by this contract."
								}
							},
							"holdingOf_USDT(address)": {
								"details": "Returns the USDT token balance of this contract.",
								"returns": {
									"holdings": "The amount of USDT tokens held by this contract."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"removeFromWhiteList(address)": {
								"details": "Removes an address from the whitelist. Only the owner can call this function.",
								"params": {
									"_address": "The address to be removed from the whitelist."
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"substrateSwapTokens(address,uint256,address,string)": {
								"details": "Allows users to swap tokens back from the contract or distribute a fee among whitelisted addresses before sending back the tokens. If the token being swapped back is USDM, it is directly transferred to the sender. For other tokens, a 0.3% fee is distributed among all whitelisted addresses before sending the remaining tokens back to the sender. ",
								"params": {
									"_amount": "The amount of the token to be swapped back.",
									"_ethToken": "The address of the ERC20 token to be swapped back."
								}
							},
							"swapTokens(address,uint256,string)": {
								"details": "Allows users to swap tokens by transferring them to the contract or distribute a fee among whitelisted addresses. If the token being swapped is USDM, it is simply collected by the contract. For other tokens, a 0.3% fee is distributed among all whitelisted addresses, and the rest is collected by the contract. ",
								"params": {
									"_amount": "The amount of the token to be swapped.",
									"_ethToken": "The address of the ERC20 token to be swapped."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdrawBalanceTokens(address)": {
								"params": {
									"_ethToken": "The address of the ERC20 token to be swapped back. Only owner can withdaraw the Overcolleteral fee."
								}
							}
						},
						"title": "TokenSwap contract for swapping tokens, inheriting from Ownable for access control",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Liberswap/SwappingContract_2.sol\":591:10475  contract TokenSwap is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Liberswap/SwappingContract_2.sol\":2937:3030  constructor(address initialOwner) Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Liberswap/SwappingContract_2.sol\":2979:2991  initialOwner */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":455:506   */\n  mstore\n    /* \"#utility.yul\":428:446   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/Liberswap/SwappingContract_2.sol\":3003:3008  Owner */\n  0x01\n    /* \"contracts/Liberswap/SwappingContract_2.sol\":3003:3023  Owner = initialOwner */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/Liberswap/SwappingContract_2.sol\":591:10475  contract TokenSwap is Ownable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_17\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_17:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_18:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:512   */\ntag_15:\n    /* \"contracts/Liberswap/SwappingContract_2.sol\":591:10475  contract TokenSwap is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":591:10475  contract TokenSwap is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa3150978\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xe1ad418e\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xe1ad418e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf09f0aac\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xf38e762b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xfca0a3d2\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xfd03fe90\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0xa3150978\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa4329677\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa7f696cf\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xb4a99a4e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xcb8ff545\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xcdb43478\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x373cf202\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x373cf202\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6bc20157\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70181206\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x9c2c67c9\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x01bf6648\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1a06e66e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1f1a675d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2dd91a4c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3422a7e0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x372c12b1\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8514:8692  function removeFromWhiteList(address _address) public onlyOwner {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6662:8031  function substrateSwapTokens(address _ethToken,uint256 _amount,address _to,string memory substrateAddress) public {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      tag_30\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":2055:2149  mapping (address UserAddress=> mapping (address TokenAddress  => uint)) public userTokenAmount */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      0x04\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":2194:2219   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2182:2184   */\n      0x20\n        /* \"#utility.yul\":2167:2185   */\n      add\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":2055:2149  mapping (address UserAddress=> mapping (address TokenAddress  => uint)) public userTokenAmount */\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":2834:2869  uint public overColleteralFeeAmount */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_40\n      sload(0x0a)\n      dup2\n      jump\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":2567:2678  mapping (string SubstrateAddress =>  mapping(address Owner => uint Amount)) public userTotalSubstrateSwapAmount */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      tag_40\n      tag_52\n      calldatasize\n      0x04\n      tag_53\n      jump\t// in\n    tag_52:\n      dup2\n      mload\n      0x20\n      dup2\n      dup5\n      add\n      dup2\n      add\n      dup1\n      mload\n      0x08\n      dup3\n      mstore\n      swap3\n      dup3\n      add\n      swap5\n      dup3\n      add\n      swap5\n      swap1\n      swap5\n      keccak256\n      swap2\n      swap1\n      swap4\n      mstore\n      swap1\n      swap2\n      mstore\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":1844:1885  mapping(address => bool) public whiteList */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      tag_58\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_58:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_57:\n      mload(0x40)\n        /* \"#utility.yul\":2796:2810   */\n      swap1\n      iszero\n        /* \"#utility.yul\":2789:2811   */\n      iszero\n        /* \"#utility.yul\":2771:2812   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2759:2761   */\n      0x20\n        /* \"#utility.yul\":2744:2762   */\n      add\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":1844:1885  mapping(address => bool) public whiteList */\n      tag_44\n        /* \"#utility.yul\":2631:2818   */\n      jump\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":2155:2243  mapping (address UserAddress=> mapping (address TokenAddress  => bool)) public checkUser */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_57\n      tag_64\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_64:\n      0x05\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3299:3514  function WhiteList(address _address) public onlyOwner{... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_30\n      tag_69\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":9513:9692  function holdingOf_USDC(address holder) public view returns (uint holdings) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_40\n      tag_73\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":9606:9629  userTokenAmount[holder] */\n      and\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":9574:9587  uint holdings */\n      0x00\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":9606:9629  userTokenAmount[holder] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":9606:9621  userTokenAmount */\n      0x04\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":9606:9629  userTokenAmount[holder] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":1229:1271  0x9951342D994001468506DF88F71A582867B50dd4 */\n      0x9951342d994001468506df88f71a582867b50dd4\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":9606:9635  userTokenAmount[holder][usdc] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":9513:9692  function holdingOf_USDC(address holder) public view returns (uint holdings) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_30\n      tag_78\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_80:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2987:3019   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2969:3020   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2957:2959   */\n      0x20\n        /* \"#utility.yul\":2942:2960   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_44\n        /* \"#utility.yul\":2823:3026   */\n      jump\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":2743:2770  uint public currentHoldings */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_40\n      sload(0x09)\n      dup2\n      jump\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8848:9027  function holdingOf_USDT(address holder) public view returns (uint holdings) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_88\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_88:\n      pop\n      tag_40\n      tag_90\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_90:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8941:8964  userTokenAmount[holder] */\n      and\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8909:8922  uint holdings */\n      0x00\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8941:8964  userTokenAmount[holder] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8941:8956  userTokenAmount */\n      0x04\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8941:8964  userTokenAmount[holder] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":1157:1199  0xa5014eA627Ac22A63f2Bf3b46e26d408e72f55c1 */\n      0xa5014ea627ac22a63f2bf3b46e26d408e72f55c1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8941:8970  userTokenAmount[holder][usdt] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8848:9027  function holdingOf_USDT(address holder) public view returns (uint holdings) {... */\n      jump\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":10268:10472  function holdingOfTokens(address _ethToken) public view returns (uint holdings) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      tag_40\n      tag_95\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_95:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":10381:10391  msg.sender */\n      caller\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":10333:10346  uint holdings */\n      0x00\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":10365:10392  userTokenAmount[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":10365:10380  userTokenAmount */\n      0x04\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":10365:10392  userTokenAmount[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":10365:10403  userTokenAmount[msg.sender][_ethToken] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":10268:10472  function holdingOfTokens(address _ethToken) public view returns (uint holdings) {... */\n      jump\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":9181:9357  function holdingOf_DAI(address holder) public view returns (uint holdings) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_40\n      tag_100\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":9273:9296  userTokenAmount[holder] */\n      and\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":9241:9254  uint holdings */\n      0x00\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":9273:9296  userTokenAmount[holder] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":9273:9288  userTokenAmount */\n      0x04\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":9273:9296  userTokenAmount[holder] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":1300:1342  0x77F146ca2943294CC53e6c3B5980B572c961ae23 */\n      0x77f146ca2943294cc53e6c3b5980b572c961ae23\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":9273:9301  userTokenAmount[holder][dai] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":9181:9357  function holdingOf_DAI(address holder) public view returns (uint holdings) {... */\n      jump\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":735:755  address public Owner */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      sload(0x01)\n      tag_80\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4406:6120  function swapTokens(address _ethToken,uint256 _amount,string memory substrateAddress) public payable{... */\n    tag_18:\n      tag_30\n      tag_108\n      calldatasize\n      0x04\n      tag_109\n      jump\t// in\n    tag_108:\n      tag_110\n      jump\t// in\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8183:8334  function withdrawBalanceTokens(address _ethToken) public onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_30\n      tag_113\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":2249:2304  mapping (address UserAddress => uint) public userAmount */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_40\n      tag_117\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_117:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":1953:1986  address[] public whilistedAddress */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      tag_80\n      tag_122\n      calldatasize\n      0x04\n      tag_123\n      jump\t// in\n    tag_122:\n      tag_124\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_30\n      tag_128\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3519:3908  function getMaticPrice(uint _amount) public view returns (uint256) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_40\n      tag_132\n      calldatasize\n      0x04\n      tag_123\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":9848:10027  function holdingOf_USDM(address holder) public view returns (uint holdings) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_40\n      tag_137\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":9941:9964  userTokenAmount[holder] */\n      and\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":9909:9922  uint holdings */\n      0x00\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":9941:9964  userTokenAmount[holder] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":9941:9956  userTokenAmount */\n      0x04\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":9941:9964  userTokenAmount[holder] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":1372:1414  0x4b3a514Dd71850277bBa82491f26dACDF089cb68 */\n      0x4b3a514dd71850277bba82491f26dacdf089cb68\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":9941:9970  userTokenAmount[holder][usdm] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":9848:10027  function holdingOf_USDM(address holder) public view returns (uint holdings) {... */\n      jump\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":2390:2481  mapping (address UserAddress =>  mapping(string => uint Amount)) public userTotalSwapAmount */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      tag_40\n      tag_142\n      calldatasize\n      0x04\n      tag_143\n      jump\t// in\n    tag_142:\n      0x07\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      swap1\n      swap3\n      keccak256\n      dup2\n      mload\n      dup1\n      dup4\n      add\n      dup5\n      add\n      dup1\n      mload\n      swap3\n      dup2\n      mstore\n      swap1\n      dup5\n      add\n      swap3\n      swap1\n      swap4\n      add\n      swap2\n      swap1\n      swap2\n      keccak256\n      swap2\n      mstore\n      sload\n      dup2\n      jump\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8514:8692  function removeFromWhiteList(address _address) public onlyOwner {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8596:8615  whiteList[_address] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8596:8605  whiteList */\n      0x02\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8596:8615  whiteList[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8588:8648  require(whiteList[_address], \"This Address does not exist!\") */\n      tag_150\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4288:4290   */\n      0x20\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8588:8648  require(whiteList[_address], \"This Address does not exist!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4270:4291   */\n      mstore\n        /* \"#utility.yul\":4327:4329   */\n      0x1c\n        /* \"#utility.yul\":4307:4325   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4300:4330   */\n      mstore\n        /* \"#utility.yul\":4366:4396   */\n      0x54686973204164647265737320646f6573206e6f742065786973742100000000\n        /* \"#utility.yul\":4346:4364   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4339:4397   */\n      mstore\n        /* \"#utility.yul\":4414:4432   */\n      0x64\n      add\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8588:8648  require(whiteList[_address], \"This Address does not exist!\") */\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8658:8677  whiteList[_address] */\n      and\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8680:8685  false */\n      0x00\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8658:8677  whiteList[_address] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8658:8667  whiteList */\n      0x02\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8658:8677  whiteList[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8658:8685  whiteList[_address] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8514:8692  function removeFromWhiteList(address _address) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6662:8031  function substrateSwapTokens(address _ethToken,uint256 _amount,address _to,string memory substrateAddress) public {... */\n    tag_38:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6794:6836  IERC20(_ethToken).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6830:6834  this */\n      address\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6794:6836  IERC20(_ethToken).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2969:3020   */\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6840:6847  _amount */\n      dup4\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6794:6821  IERC20(_ethToken).balanceOf */\n      dup7\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2942:2960   */\n      0x24\n      add\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6794:6836  IERC20(_ethToken).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_156\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_156:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6794:6847  IERC20(_ethToken).balanceOf(address(this)) >= _amount */\n      lt\n      iszero\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6786:6872  require(IERC20(_ethToken).balanceOf(address(this)) >= _amount, \"Insufficient balance\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4834:4836   */\n      0x20\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6786:6872  require(IERC20(_ethToken).balanceOf(address(this)) >= _amount, \"Insufficient balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4816:4837   */\n      mstore\n        /* \"#utility.yul\":4873:4875   */\n      0x14\n        /* \"#utility.yul\":4853:4871   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4846:4876   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742062616c616e6365)\n        /* \"#utility.yul\":4892:4910   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4885:4935   */\n      mstore\n        /* \"#utility.yul\":4952:4970   */\n      0x64\n      add\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6786:6872  require(IERC20(_ethToken).balanceOf(address(this)) >= _amount, \"Insufficient balance\") */\n      tag_151\n        /* \"#utility.yul\":4632:4976   */\n      jump\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6786:6872  require(IERC20(_ethToken).balanceOf(address(this)) >= _amount, \"Insufficient balance\") */\n    tag_159:\n      not(0x4b3a514dd71850277bba82491f26dacdf089cb67)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6885:6902  _ethToken == usdm */\n      dup6\n      and\n      add\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6882:8025  if(_ethToken == usdm){... */\n      tag_162\n      jumpi\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6917:6960  IERC20(_ethToken).safeTransfer(_to,_amount) */\n      tag_163\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6917:6947  IERC20(_ethToken).safeTransfer */\n      dup6\n      and\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6948:6951  _to */\n      dup4\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6952:6959  _amount */\n      dup6\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6917:6947  IERC20(_ethToken).safeTransfer */\n      tag_164\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6917:6960  IERC20(_ethToken).safeTransfer(_to,_amount) */\n      jump\t// in\n    tag_163:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6994:7001  _amount */\n      dup3\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6974:6989  currentHoldings */\n      0x09\n      0x00\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6974:7002  currentHoldings -= (_amount) */\n      dup3\n      dup3\n      sload\n      tag_165\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7016:7031  userAmount[_to] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7016:7026  userAmount */\n      0x06\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7016:7031  userAmount[_to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7016:7041  userAmount[_to] = _amount */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7055:7101  userTotalSubstrateSwapAmount[substrateAddress] */\n      mload\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7034:7041  _amount */\n      dup4\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7055:7083  userTotalSubstrateSwapAmount */\n      0x08\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7055:7101  userTotalSubstrateSwapAmount[substrateAddress] */\n      tag_167\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7084:7100  substrateAddress */\n      dup5\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7055:7101  userTotalSubstrateSwapAmount[substrateAddress] */\n      tag_168\n      jump\t// in\n    tag_167:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7055:7106  userTotalSubstrateSwapAmount[substrateAddress][_to] */\n      0x00\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7102:7105  _to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7055:7106  userTotalSubstrateSwapAmount[substrateAddress][_to] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7055:7117  userTotalSubstrateSwapAmount[substrateAddress][_to] += _amount */\n      dup3\n      dup3\n      sload\n      tag_169\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7131:7151  userTokenAmount[_to] */\n      dup1\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7131:7146  userTokenAmount */\n      0x04\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7131:7151  userTokenAmount[_to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7131:7162  userTokenAmount[_to][_ethToken] */\n      swap4\n      dup9\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7131:7173  userTokenAmount[_to][_ethToken] -= _amount */\n      dup1\n      sload\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7166:7173  _amount */\n      dup6\n      swap3\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7131:7151  userTokenAmount[_to] */\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7131:7173  userTokenAmount[_to][_ethToken] -= _amount */\n      tag_171\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7166:7173  _amount */\n      dup5\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7131:7173  userTokenAmount[_to][_ethToken] -= _amount */\n      tag_166\n      jump\t// in\n    tag_171:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7192:7214  swapToken(_to,_amount) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6117:6149   */\n      dup5\n      and\n        /* \"#utility.yul\":6099:6150   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6181:6183   */\n      0x20\n        /* \"#utility.yul\":6166:6184   */\n      dup2\n      add\n        /* \"#utility.yul\":6159:6193   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7192:7214  swapToken(_to,_amount) */\n      0xcc87ab2abfe87b272af9b77691e40b3d9186a0431f3d41a8e06d39614f460722\n      swap2\n        /* \"#utility.yul\":6072:6090   */\n      add\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7192:7214  swapToken(_to,_amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6882:8025  if(_ethToken == usdm){... */\n      jump(tag_174)\n    tag_162:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7291:7295  1000 */\n      0x03e8\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7280:7289  _amount*3 */\n      tag_175\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7280:7287  _amount */\n      dup5\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7288:7289  3 */\n      0x03\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7280:7289  _amount*3 */\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7279:7295  (_amount*3)/1000 */\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7253:7276  overColleteralFeeAmount */\n      0x0a\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7253:7295  overColleteralFeeAmount = (_amount*3)/1000 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7363:7379  whilistedAddress */\n      0x03\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7363:7386  whilistedAddress.length */\n      sload\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7309:7336  uint eachWhilitedAddressFee */\n      0x00\n      swap2\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7339:7386  overColleteralFeeAmount/whilistedAddress.length */\n      tag_179\n      swap2\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7363:7386  whilistedAddress.length */\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7339:7386  overColleteralFeeAmount/whilistedAddress.length */\n      tag_178\n      jump\t// in\n    tag_179:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7309:7386  uint eachWhilitedAddressFee = overColleteralFeeAmount/whilistedAddress.length */\n      swap1\n      pop\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7405:7411  uint i */\n      0x00\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7400:7567  for (uint i=0; i<whilistedAddress.length; i++) ... */\n    tag_180:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7417:7433  whilistedAddress */\n      0x03\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7417:7440  whilistedAddress.length */\n      sload\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7415:7440  i<whilistedAddress.length */\n      dup2\n      lt\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7400:7567  for (uint i=0; i<whilistedAddress.length; i++) ... */\n      iszero\n      tag_181\n      jumpi\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7478:7552  IERC20(_ethToken).safeTransfer(whilistedAddress[i],eachWhilitedAddressFee) */\n      tag_183\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7509:7525  whilistedAddress */\n      0x03\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7526:7527  i */\n      dup3\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7509:7528  whilistedAddress[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_185\n      jumpi\n      tag_185\n      tag_186\n      jump\t// in\n    tag_185:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7478:7508  IERC20(_ethToken).safeTransfer */\n      dup9\n      dup2\n      and\n      swap2\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7509:7528  whilistedAddress[i] */\n      and\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7529:7551  eachWhilitedAddressFee */\n      dup5\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7478:7508  IERC20(_ethToken).safeTransfer */\n      tag_164\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7478:7552  IERC20(_ethToken).safeTransfer(whilistedAddress[i],eachWhilitedAddressFee) */\n      jump\t// in\n    tag_183:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7442:7445  i++ */\n      0x01\n      add\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7400:7567  for (uint i=0; i<whilistedAddress.length; i++) ... */\n      jump(tag_180)\n    tag_181:\n      pop\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7580:7649  IERC20(_ethToken).safeTransfer(_to,(_amount-overColleteralFeeAmount)) */\n      tag_188\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7611:7614  _to */\n      dup4\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7624:7647  overColleteralFeeAmount */\n      sload(0x0a)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7616:7623  _amount */\n      dup7\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7616:7647  _amount-overColleteralFeeAmount */\n      tag_189\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_189:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7580:7610  IERC20(_ethToken).safeTransfer */\n      dup9\n      and\n      swap2\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7580:7649  IERC20(_ethToken).safeTransfer(_to,(_amount-overColleteralFeeAmount)) */\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7580:7610  IERC20(_ethToken).safeTransfer */\n      tag_164\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7580:7649  IERC20(_ethToken).safeTransfer(_to,(_amount-overColleteralFeeAmount)) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7691:7714  overColleteralFeeAmount */\n      sload(0x0a)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7683:7714  _amount-overColleteralFeeAmount */\n      tag_190\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7683:7690  _amount */\n      dup6\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7683:7714  _amount-overColleteralFeeAmount */\n      tag_166\n      jump\t// in\n    tag_190:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7663:7678  currentHoldings */\n      0x09\n      0x00\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7663:7715  currentHoldings -= (_amount-overColleteralFeeAmount) */\n      dup3\n      dup3\n      sload\n      tag_191\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_191:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7756:7779  overColleteralFeeAmount */\n      sload(0x0a)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7748:7779  _amount-overColleteralFeeAmount */\n      tag_192\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7748:7755  _amount */\n      dup6\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7748:7779  _amount-overColleteralFeeAmount */\n      tag_166\n      jump\t// in\n    tag_192:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7729:7744  userAmount[_to] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7729:7739  userAmount */\n      0x06\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7729:7744  userAmount[_to] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7729:7780  userAmount[_to] = (_amount-overColleteralFeeAmount) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7794:7840  userTotalSubstrateSwapAmount[substrateAddress] */\n      mload\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7849:7856  _amount */\n      dup5\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7794:7822  userTotalSubstrateSwapAmount */\n      0x08\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7794:7840  userTotalSubstrateSwapAmount[substrateAddress] */\n      tag_193\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7823:7839  substrateAddress */\n      dup6\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7794:7840  userTotalSubstrateSwapAmount[substrateAddress] */\n      tag_168\n      jump\t// in\n    tag_193:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7794:7845  userTotalSubstrateSwapAmount[substrateAddress][_to] */\n      0x00\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7841:7844  _to */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7794:7845  userTotalSubstrateSwapAmount[substrateAddress][_to] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7794:7856  userTotalSubstrateSwapAmount[substrateAddress][_to] += _amount */\n      dup3\n      dup3\n      sload\n      tag_194\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_194:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7914:7937  overColleteralFeeAmount */\n      sload(0x0a)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7906:7937  _amount-overColleteralFeeAmount */\n      tag_195\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7906:7913  _amount */\n      dup6\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7906:7937  _amount-overColleteralFeeAmount */\n      tag_166\n      jump\t// in\n    tag_195:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7870:7890  userTokenAmount[_to] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7870:7885  userTokenAmount */\n      0x04\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7870:7890  userTokenAmount[_to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7870:7901  userTokenAmount[_to][_ethToken] */\n      swap4\n      dup11\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7870:7938  userTokenAmount[_to][_ethToken] -= (_amount-overColleteralFeeAmount) */\n      dup1\n      sload\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7870:7901  userTokenAmount[_to][_ethToken] */\n      swap1\n      swap2\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7870:7890  userTokenAmount[_to] */\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7870:7938  userTokenAmount[_to][_ethToken] -= (_amount-overColleteralFeeAmount) */\n      tag_196\n      swap1\n      dup5\n      swap1\n      tag_166\n      jump\t// in\n    tag_196:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7989:8012  overColleteralFeeAmount */\n      sload(0x0a)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7957:8014  substrateSwapToken(_to,(_amount-overColleteralFeeAmount)) */\n      0xcf53ae9736a409c662fa8b1187549847acd41beb1b89fd026293fc2e19adaca7\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7976:7979  _to */\n      dup5\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7981:8012  _amount-overColleteralFeeAmount */\n      tag_197\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7981:7988  _amount */\n      dup8\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7981:8012  _amount-overColleteralFeeAmount */\n      tag_166\n      jump\t// in\n    tag_197:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7957:8014  substrateSwapToken(_to,(_amount-overColleteralFeeAmount)) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6117:6149   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":6099:6150   */\n      dup4\n      mstore\n        /* \"#utility.yul\":6181:6183   */\n      0x20\n        /* \"#utility.yul\":6166:6184   */\n      dup4\n      add\n        /* \"#utility.yul\":6159:6193   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":6072:6090   */\n      add\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7957:8014  substrateSwapToken(_to,(_amount-overColleteralFeeAmount)) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":7238:8025  {... */\n      pop\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6882:8025  if(_ethToken == usdm){... */\n    tag_174:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6662:8031  function substrateSwapTokens(address _ethToken,uint256 _amount,address _to,string memory substrateAddress) public {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3299:3514  function WhiteList(address _address) public onlyOwner{... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_200:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3371:3390  whiteList[_address] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3371:3380  whiteList */\n      0x02\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3371:3390  whiteList[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3370:3390  !whiteList[_address] */\n      iszero\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3362:3430  require(!whiteList[_address],\"This Address is already WhiteListed!\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6933:6935   */\n      0x20\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3362:3430  require(!whiteList[_address],\"This Address is already WhiteListed!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6915:6936   */\n      mstore\n        /* \"#utility.yul\":6972:6974   */\n      0x24\n        /* \"#utility.yul\":6952:6970   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6945:6975   */\n      mstore\n        /* \"#utility.yul\":7011:7045   */\n      0x54686973204164647265737320697320616c72656164792057686974654c6973\n        /* \"#utility.yul\":6991:7009   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6984:7046   */\n      mstore\n      shl(0xe0, 0x74656421)\n        /* \"#utility.yul\":7062:7080   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7055:7089   */\n      mstore\n        /* \"#utility.yul\":7106:7125   */\n      0x84\n      add\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3362:3430  require(!whiteList[_address],\"This Address is already WhiteListed!\") */\n      tag_151\n        /* \"#utility.yul\":6731:7131   */\n      jump\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3362:3430  require(!whiteList[_address],\"This Address is already WhiteListed!\") */\n    tag_202:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3440:3456  whilistedAddress */\n      0x03\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3440:3471  whilistedAddress.push(_address) */\n      dup1\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      swap1\n      swap3\n      sstore\n      0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      dup4\n      or\n      swap1\n      sstore\n      0x00\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3481:3500  whiteList[_address] */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3481:3490  whiteList */\n      0x02\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3440:3471  whilistedAddress.push(_address) */\n      0x20\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3481:3500  whiteList[_address] */\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3481:3507  whiteList[_address] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3299:3514  function WhiteList(address _address) public onlyOwner{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_208\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_211\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4406:6120  function swapTokens(address _ethToken,uint256 _amount,string memory substrateAddress) public payable{... */\n    tag_110:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4524:4578  IERC20(_ethToken).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4552:4562  msg.sender */\n      caller\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4524:4578  IERC20(_ethToken).allowance(msg.sender, address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7348:7382   */\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4572:4576  this */\n      address\n        /* \"#utility.yul\":7398:7416   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7391:7434   */\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4582:4589  _amount */\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4524:4551  IERC20(_ethToken).allowance */\n      dup6\n      and\n      swap1\n      0xdd62ed3e\n      swap1\n        /* \"#utility.yul\":7283:7301   */\n      0x44\n      add\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4524:4578  IERC20(_ethToken).allowance(msg.sender, address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_220\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_220:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_221\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_221:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4524:4589  IERC20(_ethToken).allowance(msg.sender, address(this)) >= _amount */\n      lt\n      iszero\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4516:4611  require(IERC20(_ethToken).allowance(msg.sender, address(this)) >= _amount, \"Allowance not set\") */\n      tag_222\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7647:7649   */\n      0x20\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4516:4611  require(IERC20(_ethToken).allowance(msg.sender, address(this)) >= _amount, \"Allowance not set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7629:7650   */\n      mstore\n        /* \"#utility.yul\":7686:7688   */\n      0x11\n        /* \"#utility.yul\":7666:7684   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7659:7689   */\n      mstore\n      shl(0x7a, 0x105b1b1bddd85b98d9481b9bdd081cd95d)\n        /* \"#utility.yul\":7705:7723   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7698:7745   */\n      mstore\n        /* \"#utility.yul\":7762:7780   */\n      0x64\n      add\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4516:4611  require(IERC20(_ethToken).allowance(msg.sender, address(this)) >= _amount, \"Allowance not set\") */\n      tag_151\n        /* \"#utility.yul\":7445:7786   */\n      jump\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4516:4611  require(IERC20(_ethToken).allowance(msg.sender, address(this)) >= _amount, \"Allowance not set\") */\n    tag_222:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4629:4668  IERC20(_ethToken).balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4657:4667  msg.sender */\n      caller\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4629:4668  IERC20(_ethToken).balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2969:3020   */\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4672:4679  _amount */\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4629:4656  IERC20(_ethToken).balanceOf */\n      dup6\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":2942:2960   */\n      0x24\n      add\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4629:4668  IERC20(_ethToken).balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_227\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_227:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_228\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_228:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4629:4679  IERC20(_ethToken).balanceOf(msg.sender) >= _amount */\n      lt\n      iszero\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4621:4704  require(IERC20(_ethToken).balanceOf(msg.sender) >= _amount, \"Insufficient balance\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4834:4836   */\n      0x20\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4621:4704  require(IERC20(_ethToken).balanceOf(msg.sender) >= _amount, \"Insufficient balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4816:4837   */\n      mstore\n        /* \"#utility.yul\":4873:4875   */\n      0x14\n        /* \"#utility.yul\":4853:4871   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4846:4876   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742062616c616e6365)\n        /* \"#utility.yul\":4892:4910   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4885:4935   */\n      mstore\n        /* \"#utility.yul\":4952:4970   */\n      0x64\n      add\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4621:4704  require(IERC20(_ethToken).balanceOf(msg.sender) >= _amount, \"Insufficient balance\") */\n      tag_151\n        /* \"#utility.yul\":4632:4976   */\n      jump\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4621:4704  require(IERC20(_ethToken).balanceOf(msg.sender) >= _amount, \"Insufficient balance\") */\n    tag_229:\n      not(0x4b3a514dd71850277bba82491f26dacdf089cb67)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4717:4734  _ethToken == usdm */\n      dup5\n      and\n      add\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4714:6110  if(_ethToken == usdm){... */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4749:4804  payable(owner()).transfer(getMaticPrice(_amount)*10**8) */\n      0x08fc\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4775:4797  getMaticPrice(_amount) */\n      tag_233\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4789:4796  _amount */\n      dup5\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4775:4788  getMaticPrice */\n      tag_133\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4775:4797  getMaticPrice(_amount) */\n      jump\t// in\n    tag_233:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4775:4803  getMaticPrice(_amount)*10**8 */\n      tag_234\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4798:4803  10**8 */\n      0x05f5e100\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4775:4803  getMaticPrice(_amount)*10**8 */\n      tag_176\n      jump\t// in\n    tag_234:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4749:4804  payable(owner()).transfer(getMaticPrice(_amount)*10**8) */\n      mload(0x40)\n      dup2\n      iszero\n      swap1\n      swap3\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_236\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_236:\n      pop\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4818:4886  IERC20(_ethToken).transferFrom(msg.sender, address(this), (_amount)) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4849:4859  msg.sender */\n      caller\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4818:4886  IERC20(_ethToken).transferFrom(msg.sender, address(this), (_amount)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8031:8065   */\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4869:4873  this */\n      address\n        /* \"#utility.yul\":8081:8099   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8074:8117   */\n      mstore\n        /* \"#utility.yul\":8133:8151   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":8126:8160   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4818:4848  IERC20(_ethToken).transferFrom */\n      dup5\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":7966:7984   */\n      0x64\n      add\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4818:4886  IERC20(_ethToken).transferFrom(msg.sender, address(this), (_amount)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_240\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_240:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_241\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n      pop\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4920:4927  _amount */\n      dup2\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4900:4915  currentHoldings */\n      0x09\n      0x00\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4900:4928  currentHoldings += (_amount) */\n      dup3\n      dup3\n      sload\n      tag_243\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_243:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4953:4963  msg.sender */\n      caller\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4942:4964  userAmount[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4942:4952  userAmount */\n      0x06\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4942:4964  userAmount[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4942:4974  userAmount[msg.sender] = _amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4988:5007  userTotalSwapAmount */\n      0x07\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4988:5019  userTotalSwapAmount[msg.sender] */\n      swap1\n      swap2\n      mstore\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4988:5037  userTotalSwapAmount[msg.sender][substrateAddress] */\n      swap1\n      mload\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4967:4974  _amount */\n      dup4\n      swap2\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4988:5019  userTotalSwapAmount[msg.sender] */\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4988:5037  userTotalSwapAmount[msg.sender][substrateAddress] */\n      tag_244\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5020:5036  substrateAddress */\n      dup5\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4988:5037  userTotalSwapAmount[msg.sender][substrateAddress] */\n      tag_168\n      jump\t// in\n    tag_244:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4988:5048  userTotalSwapAmount[msg.sender][substrateAddress] += _amount */\n      dup3\n      dup3\n      sload\n      tag_245\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_245:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5078:5088  msg.sender */\n      caller\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5062:5089  userTokenAmount[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5062:5077  userTokenAmount */\n      0x04\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5062:5089  userTokenAmount[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5062:5100  userTokenAmount[msg.sender][_ethToken] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5062:5111  userTokenAmount[msg.sender][_ethToken] += _amount */\n      dup1\n      sload\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5104:5111  _amount */\n      dup5\n      swap3\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5062:5089  userTokenAmount[msg.sender] */\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5062:5111  userTokenAmount[msg.sender][_ethToken] += _amount */\n      tag_246\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5104:5111  _amount */\n      dup5\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5062:5111  userTokenAmount[msg.sender][_ethToken] += _amount */\n      tag_170\n      jump\t// in\n    tag_246:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5130:5159  swapToken(msg.sender,_amount) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5140:5150  msg.sender */\n      caller\n        /* \"#utility.yul\":6099:6150   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6181:6183   */\n      0x20\n        /* \"#utility.yul\":6166:6184   */\n      dup2\n      add\n        /* \"#utility.yul\":6159:6193   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5130:5159  swapToken(msg.sender,_amount) */\n      0xcc87ab2abfe87b272af9b77691e40b3d9186a0431f3d41a8e06d39614f460722\n      swap2\n        /* \"#utility.yul\":6072:6090   */\n      add\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5130:5159  swapToken(msg.sender,_amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4406:6120  function swapTokens(address _ethToken,uint256 _amount,string memory substrateAddress) public payable{... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4714:6110  if(_ethToken == usdm){... */\n    tag_231:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5197:5252  payable(owner()).transfer(getMaticPrice(_amount)*10**8) */\n      0x08fc\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5223:5245  getMaticPrice(_amount) */\n      tag_250\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5237:5244  _amount */\n      dup5\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5223:5236  getMaticPrice */\n      tag_133\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5223:5245  getMaticPrice(_amount) */\n      jump\t// in\n    tag_250:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5223:5251  getMaticPrice(_amount)*10**8 */\n      tag_251\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5246:5251  10**8 */\n      0x05f5e100\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5223:5251  getMaticPrice(_amount)*10**8 */\n      tag_176\n      jump\t// in\n    tag_251:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5197:5252  payable(owner()).transfer(getMaticPrice(_amount)*10**8) */\n      mload(0x40)\n      dup2\n      iszero\n      swap1\n      swap3\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_253\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_253:\n      pop\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5304:5308  1000 */\n      0x03e8\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5293:5302  _amount*3 */\n      tag_254\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5293:5300  _amount */\n      dup4\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5301:5302  3 */\n      0x03\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5293:5302  _amount*3 */\n      tag_176\n      jump\t// in\n    tag_254:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5292:5308  (_amount*3)/1000 */\n      tag_255\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_255:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5266:5289  overColleteralFeeAmount */\n      0x0a\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5266:5308  overColleteralFeeAmount = (_amount*3)/1000 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5376:5392  whilistedAddress */\n      0x03\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5376:5399  whilistedAddress.length */\n      sload\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5322:5349  uint eachWhilitedAddressFee */\n      0x00\n      swap2\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5352:5399  overColleteralFeeAmount/whilistedAddress.length */\n      tag_256\n      swap2\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5376:5399  whilistedAddress.length */\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5352:5399  overColleteralFeeAmount/whilistedAddress.length */\n      tag_178\n      jump\t// in\n    tag_256:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5322:5399  uint eachWhilitedAddressFee = overColleteralFeeAmount/whilistedAddress.length */\n      swap1\n      pop\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5418:5424  uint i */\n      0x00\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5413:5593  for (uint i=0; i<whilistedAddress.length; i++) ... */\n    tag_257:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5430:5446  whilistedAddress */\n      0x03\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5430:5453  whilistedAddress.length */\n      sload\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5428:5453  i<whilistedAddress.length */\n      dup2\n      lt\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5413:5593  for (uint i=0; i<whilistedAddress.length; i++) ... */\n      iszero\n      tag_258\n      jumpi\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5498:5507  _ethToken */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5491:5521  IERC20(_ethToken).transferFrom */\n      and\n      0x23b872dd\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5522:5532  msg.sender */\n      caller\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5534:5550  whilistedAddress */\n      0x03\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5551:5552  i */\n      dup5\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5534:5553  whilistedAddress[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_261\n      jumpi\n      tag_261\n      tag_186\n      jump\t// in\n    tag_261:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5491:5578  IERC20(_ethToken).transferFrom(msg.sender, whilistedAddress[i], eachWhilitedAddressFee) */\n      mload(0x40)\n      0xe0\n      dup5\n      swap1\n      shl\n      not(sub(shl(0xe0, 0x01), 0x01))\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8049:8064   */\n      swap3\n      dup4\n      and\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5491:5578  IERC20(_ethToken).transferFrom(msg.sender, whilistedAddress[i], eachWhilitedAddressFee) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8031:8065   */\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5534:5553  whilistedAddress[i] */\n      swap2\n      and\n        /* \"#utility.yul\":8081:8099   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8074:8117   */\n      mstore\n        /* \"#utility.yul\":8133:8151   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":8126:8160   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":7966:7984   */\n      0x64\n      add\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5491:5578  IERC20(_ethToken).transferFrom(msg.sender, whilistedAddress[i], eachWhilitedAddressFee) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_265\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_265:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_266\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_266:\n      pop\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5455:5458  i++ */\n      0x01\n      add\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5413:5593  for (uint i=0; i<whilistedAddress.length; i++) ... */\n      jump(tag_257)\n    tag_258:\n      pop\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5613:5622  _ethToken */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5606:5636  IERC20(_ethToken).transferFrom */\n      and\n      0x23b872dd\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5637:5647  msg.sender */\n      caller\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5657:5661  this */\n      address\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5673:5696  overColleteralFeeAmount */\n      sload(0x0a)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5665:5672  _amount */\n      dup8\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5665:5696  _amount-overColleteralFeeAmount */\n      tag_267\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_267:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5606:5698  IERC20(_ethToken).transferFrom(msg.sender, address(this), (_amount-overColleteralFeeAmount)) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup7\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8049:8064   */\n      swap4\n      dup5\n      and\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5606:5698  IERC20(_ethToken).transferFrom(msg.sender, address(this), (_amount-overColleteralFeeAmount)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8031:8065   */\n      mstore\n        /* \"#utility.yul\":8101:8116   */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":8081:8099   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":8074:8117   */\n      mstore\n        /* \"#utility.yul\":8133:8151   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8126:8160   */\n      mstore\n        /* \"#utility.yul\":7966:7984   */\n      0x64\n      add\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5606:5698  IERC20(_ethToken).transferFrom(msg.sender, address(this), (_amount-overColleteralFeeAmount)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_270\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_270:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_271\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_271:\n      pop\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5740:5763  overColleteralFeeAmount */\n      sload(0x0a)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5732:5763  _amount-overColleteralFeeAmount */\n      tag_272\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5732:5739  _amount */\n      dup5\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5732:5763  _amount-overColleteralFeeAmount */\n      tag_166\n      jump\t// in\n    tag_272:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5712:5727  currentHoldings */\n      0x09\n      0x00\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5712:5764  currentHoldings += (_amount-overColleteralFeeAmount) */\n      dup3\n      dup3\n      sload\n      tag_273\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_273:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5812:5835  overColleteralFeeAmount */\n      sload(0x0a)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5804:5835  _amount-overColleteralFeeAmount */\n      tag_274\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5804:5811  _amount */\n      dup5\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5804:5835  _amount-overColleteralFeeAmount */\n      tag_166\n      jump\t// in\n    tag_274:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5789:5799  msg.sender */\n      caller\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5778:5800  userAmount[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5778:5788  userAmount */\n      0x06\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5778:5800  userAmount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5778:5836  userAmount[msg.sender] = (_amount-overColleteralFeeAmount) */\n      sstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5912:5935  overColleteralFeeAmount */\n      sload(0x0a)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5904:5935  _amount-overColleteralFeeAmount */\n      tag_275\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5904:5911  _amount */\n      dup5\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5904:5935  _amount-overColleteralFeeAmount */\n      tag_166\n      jump\t// in\n    tag_275:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5870:5880  msg.sender */\n      caller\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5850:5881  userTotalSwapAmount[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5850:5869  userTotalSwapAmount */\n      0x07\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5850:5881  userTotalSwapAmount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5850:5899  userTotalSwapAmount[msg.sender][substrateAddress] */\n      swap1\n      mload\n      tag_276\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5882:5898  substrateAddress */\n      dup6\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5850:5899  userTotalSwapAmount[msg.sender][substrateAddress] */\n      tag_168\n      jump\t// in\n    tag_276:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5850:5936  userTotalSwapAmount[msg.sender][substrateAddress] += (_amount-overColleteralFeeAmount) */\n      dup3\n      dup3\n      sload\n      tag_277\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_277:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6001:6024  overColleteralFeeAmount */\n      sload(0x0a)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5993:6024  _amount-overColleteralFeeAmount */\n      tag_278\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5993:6000  _amount */\n      dup5\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5993:6024  _amount-overColleteralFeeAmount */\n      tag_166\n      jump\t// in\n    tag_278:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5966:5976  msg.sender */\n      caller\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5950:5977  userTokenAmount[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5950:5965  userTokenAmount */\n      0x04\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5950:5977  userTokenAmount[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5950:5988  userTokenAmount[msg.sender][_ethToken] */\n      dup10\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5950:6025  userTokenAmount[msg.sender][_ethToken] += (_amount-overColleteralFeeAmount) */\n      dup1\n      sload\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5950:5988  userTokenAmount[msg.sender][_ethToken] */\n      swap1\n      swap2\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5950:5977  userTokenAmount[msg.sender] */\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5950:6025  userTokenAmount[msg.sender][_ethToken] += (_amount-overColleteralFeeAmount) */\n      tag_279\n      swap1\n      dup5\n      swap1\n      tag_170\n      jump\t// in\n    tag_279:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6074:6097  overColleteralFeeAmount */\n      sload(0x0a)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6044:6099  swapToken(msg.sender,(_amount-overColleteralFeeAmount)) */\n      0xcc87ab2abfe87b272af9b77691e40b3d9186a0431f3d41a8e06d39614f460722\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6054:6064  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6066:6097  _amount-overColleteralFeeAmount */\n      tag_280\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6066:6073  _amount */\n      dup7\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6066:6097  _amount-overColleteralFeeAmount */\n      tag_166\n      jump\t// in\n    tag_280:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6044:6099  swapToken(msg.sender,(_amount-overColleteralFeeAmount)) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6117:6149   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":6099:6150   */\n      dup4\n      mstore\n        /* \"#utility.yul\":6181:6183   */\n      0x20\n        /* \"#utility.yul\":6166:6184   */\n      dup4\n      add\n        /* \"#utility.yul\":6159:6193   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":6072:6090   */\n      add\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":6044:6099  swapToken(msg.sender,(_amount-overColleteralFeeAmount)) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":5183:6110  {... */\n      pop\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4714:6110  if(_ethToken == usdm){... */\n    tag_248:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":4406:6120  function swapTokens(address _ethToken,uint256 _amount,string memory substrateAddress) public payable{... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8183:8334  function withdrawBalanceTokens(address _ethToken) public onlyOwner {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_283\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_283:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8303:8326  overColleteralFeeAmount */\n      sload(0x0a)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8260:8327  IERC20(_ethToken).safeTransfer(msg.sender, overColleteralFeeAmount) */\n      tag_285\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8260:8290  IERC20(_ethToken).safeTransfer */\n      dup4\n      and\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8291:8301  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8260:8290  IERC20(_ethToken).safeTransfer */\n      tag_164\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8260:8327  IERC20(_ethToken).safeTransfer(msg.sender, overColleteralFeeAmount) */\n      jump\t// in\n    tag_285:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":8183:8334  function withdrawBalanceTokens(address _ethToken) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":1953:1986  address[] public whilistedAddress */\n    tag_124:\n      0x03\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_286\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_286:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_289\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_289:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_291\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2969:3020   */\n      mstore\n        /* \"#utility.yul\":2942:2960   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_151\n        /* \"#utility.yul\":2823:3026   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_291:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_285\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_211\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3519:3908  function getMaticPrice(uint _amount) public view returns (uint256) {... */\n    tag_133:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3577:3584  uint256 */\n      0x00\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3596:3627  AggregatorV3Interface priceFeed */\n      dup1\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3652:3694  0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada */\n      0xd0d5e3db44de05e9f294bb0a3beeaf030de24ada\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3596:3695  AggregatorV3Interface priceFeed = AggregatorV3Interface(0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada) */\n      swap1\n      pop\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3708:3721  int256 answer */\n      0x00\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3731:3740  priceFeed */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3731:3756  priceFeed.latestRoundData */\n      and\n      0xfeaf968c\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3731:3758  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_296\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_296:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_297\n      swap2\n      swap1\n      tag_298\n      jump\t// in\n    tag_297:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3705:3758  (, int256 answer, , , ) = priceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3785:3786  0 */\n      0x00\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3776:3782  answer */\n      dup2\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3776:3786  answer > 0 */\n      sgt\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3768:3820  require(answer > 0, \"Negative Matic price received\") */\n      tag_299\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9317:9319   */\n      0x20\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3768:3820  require(answer > 0, \"Negative Matic price received\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9299:9320   */\n      mstore\n        /* \"#utility.yul\":9356:9358   */\n      0x1d\n        /* \"#utility.yul\":9336:9354   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9329:9359   */\n      mstore\n        /* \"#utility.yul\":9395:9426   */\n      0x4e65676174697665204d61746963207072696365207265636569766564000000\n        /* \"#utility.yul\":9375:9393   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9368:9427   */\n      mstore\n        /* \"#utility.yul\":9444:9462   */\n      0x64\n      add\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3768:3820  require(answer > 0, \"Negative Matic price received\") */\n      tag_151\n        /* \"#utility.yul\":9115:9468   */\n      jump\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3768:3820  require(answer > 0, \"Negative Matic price received\") */\n    tag_299:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3830:3841  uint256 fee */\n      0x00\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3873:3879  answer */\n      dup2\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3859:3862  100 */\n      0x64\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3846:3857  _amount * 5 */\n      tag_302\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3846:3853  _amount */\n      dup8\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3856:3857  5 */\n      0x05\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3846:3857  _amount * 5 */\n      tag_176\n      jump\t// in\n    tag_302:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3845:3862  (_amount * 5)/100 */\n      tag_303\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_303:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3844:3881  ((_amount * 5)/100)/(uint256(answer)) */\n      tag_304\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_304:\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3830:3881  uint256 fee = ((_amount * 5)/100)/(uint256(answer)) */\n      swap6\n        /* \"contracts/Liberswap/SwappingContract_2.sol\":3519:3908  function getMaticPrice(uint _amount) public view returns (uint256) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2969:3020   */\n      mstore\n        /* \"#utility.yul\":2942:2960   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_151\n        /* \"#utility.yul\":2823:3026   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6117:6149   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6099:6150   */\n      mstore\n        /* \"#utility.yul\":6166:6184   */\n      0x44\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6159:6193   */\n      dup5\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":6072:6090   */\n      0x64\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_248\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_316\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_320\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      tag_321\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      jump\t// in\n    tag_320:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_322\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_323\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_323:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_322:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2987:3019   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2969:3020   */\n      mstore\n        /* \"#utility.yul\":2942:2960   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      tag_151\n        /* \"#utility.yul\":2823:3026   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_321:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_327\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_328\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_327:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_326:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_328:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0xcd786059)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2969:3020   */\n      mstore\n        /* \"#utility.yul\":2942:2960   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      tag_151\n        /* \"#utility.yul\":2823:3026   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_332\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_332:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_336\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_335)\n    tag_336:\n      0x60\n      swap2\n      pop\n    tag_335:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_337\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_338\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_337:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_329:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_338:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_340\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_341\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_342\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_329)\n    tag_340:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_344\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_344:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_345\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2987:3019   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2969:3020   */\n      mstore\n        /* \"#utility.yul\":2942:2960   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      tag_151\n        /* \"#utility.yul\":2823:3026   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_345:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      jump(tag_329)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_342:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      tag_348\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_348:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:187   */\n    tag_350:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_358\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_358:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_32:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_360\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_360:\n        /* \"#utility.yul\":343:372   */\n      tag_327\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_350\n      jump\t// in\n        /* \"#utility.yul\":383:510   */\n    tag_351:\n        /* \"#utility.yul\":444:454   */\n      0x4e487b71\n        /* \"#utility.yul\":439:442   */\n      0xe0\n        /* \"#utility.yul\":435:455   */\n      shl\n        /* \"#utility.yul\":432:433   */\n      0x00\n        /* \"#utility.yul\":425:456   */\n      mstore\n        /* \"#utility.yul\":475:479   */\n      0x41\n        /* \"#utility.yul\":472:473   */\n      0x04\n        /* \"#utility.yul\":465:480   */\n      mstore\n        /* \"#utility.yul\":499:503   */\n      0x24\n        /* \"#utility.yul\":496:497   */\n      0x00\n        /* \"#utility.yul\":489:504   */\n      revert\n        /* \"#utility.yul\":515:1234   */\n    tag_352:\n        /* \"#utility.yul\":558:563   */\n      0x00\n        /* \"#utility.yul\":611:614   */\n      dup3\n        /* \"#utility.yul\":604:608   */\n      0x1f\n        /* \"#utility.yul\":596:602   */\n      dup4\n        /* \"#utility.yul\":592:609   */\n      add\n        /* \"#utility.yul\":588:615   */\n      slt\n        /* \"#utility.yul\":578:633   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":629:630   */\n      0x00\n        /* \"#utility.yul\":626:627   */\n      dup1\n        /* \"#utility.yul\":619:631   */\n      revert\n        /* \"#utility.yul\":578:633   */\n    tag_364:\n        /* \"#utility.yul\":665:671   */\n      dup2\n        /* \"#utility.yul\":652:672   */\n      calldataload\n        /* \"#utility.yul\":691:709   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":728:730   */\n      dup1\n        /* \"#utility.yul\":724:726   */\n      dup3\n        /* \"#utility.yul\":721:731   */\n      gt\n        /* \"#utility.yul\":718:754   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":734:752   */\n      tag_366\n      tag_351\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":809:811   */\n      0x40\n        /* \"#utility.yul\":803:812   */\n      mload\n        /* \"#utility.yul\":777:779   */\n      0x1f\n        /* \"#utility.yul\":863:876   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":859:881   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":883:885   */\n      0x3f\n        /* \"#utility.yul\":855:886   */\n      add\n        /* \"#utility.yul\":851:891   */\n      and\n        /* \"#utility.yul\":839:892   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":907:925   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":927:949   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":904:950   */\n      or\n        /* \"#utility.yul\":901:973   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":953:971   */\n      tag_368\n      tag_351\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":993:1003   */\n      dup2\n        /* \"#utility.yul\":989:991   */\n      0x40\n        /* \"#utility.yul\":982:1004   */\n      mstore\n        /* \"#utility.yul\":1028:1030   */\n      dup4\n        /* \"#utility.yul\":1020:1026   */\n      dup2\n        /* \"#utility.yul\":1013:1031   */\n      mstore\n        /* \"#utility.yul\":1074:1077   */\n      dup7\n        /* \"#utility.yul\":1067:1071   */\n      0x20\n        /* \"#utility.yul\":1062:1064   */\n      dup6\n        /* \"#utility.yul\":1054:1060   */\n      dup9\n        /* \"#utility.yul\":1050:1065   */\n      add\n        /* \"#utility.yul\":1046:1072   */\n      add\n        /* \"#utility.yul\":1043:1078   */\n      gt\n        /* \"#utility.yul\":1040:1095   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":1091:1092   */\n      0x00\n        /* \"#utility.yul\":1088:1089   */\n      dup1\n        /* \"#utility.yul\":1081:1093   */\n      revert\n        /* \"#utility.yul\":1040:1095   */\n    tag_369:\n        /* \"#utility.yul\":1155:1157   */\n      dup4\n        /* \"#utility.yul\":1148:1152   */\n      0x20\n        /* \"#utility.yul\":1140:1146   */\n      dup8\n        /* \"#utility.yul\":1136:1153   */\n      add\n        /* \"#utility.yul\":1129:1133   */\n      0x20\n        /* \"#utility.yul\":1121:1127   */\n      dup4\n        /* \"#utility.yul\":1117:1134   */\n      add\n        /* \"#utility.yul\":1104:1158   */\n      calldatacopy\n        /* \"#utility.yul\":1202:1203   */\n      0x00\n        /* \"#utility.yul\":1195:1199   */\n      0x20\n        /* \"#utility.yul\":1190:1192   */\n      dup6\n        /* \"#utility.yul\":1182:1188   */\n      dup4\n        /* \"#utility.yul\":1178:1193   */\n      add\n        /* \"#utility.yul\":1174:1200   */\n      add\n        /* \"#utility.yul\":1167:1204   */\n      mstore\n        /* \"#utility.yul\":1222:1228   */\n      dup1\n        /* \"#utility.yul\":1213:1228   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":515:1234   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1239:1778   */\n    tag_37:\n        /* \"#utility.yul\":1335:1341   */\n      0x00\n        /* \"#utility.yul\":1343:1349   */\n      dup1\n        /* \"#utility.yul\":1351:1357   */\n      0x00\n        /* \"#utility.yul\":1359:1365   */\n      dup1\n        /* \"#utility.yul\":1412:1415   */\n      0x80\n        /* \"#utility.yul\":1400:1409   */\n      dup6\n        /* \"#utility.yul\":1391:1398   */\n      dup8\n        /* \"#utility.yul\":1387:1410   */\n      sub\n        /* \"#utility.yul\":1383:1416   */\n      slt\n        /* \"#utility.yul\":1380:1433   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1426:1427   */\n      dup1\n        /* \"#utility.yul\":1419:1431   */\n      revert\n        /* \"#utility.yul\":1380:1433   */\n    tag_371:\n        /* \"#utility.yul\":1452:1481   */\n      tag_372\n        /* \"#utility.yul\":1471:1480   */\n      dup6\n        /* \"#utility.yul\":1452:1481   */\n      tag_350\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":1442:1481   */\n      swap4\n      pop\n        /* \"#utility.yul\":1528:1530   */\n      0x20\n        /* \"#utility.yul\":1517:1526   */\n      dup6\n        /* \"#utility.yul\":1513:1531   */\n      add\n        /* \"#utility.yul\":1500:1532   */\n      calldataload\n        /* \"#utility.yul\":1490:1532   */\n      swap3\n      pop\n        /* \"#utility.yul\":1551:1589   */\n      tag_373\n        /* \"#utility.yul\":1585:1587   */\n      0x40\n        /* \"#utility.yul\":1574:1583   */\n      dup7\n        /* \"#utility.yul\":1570:1588   */\n      add\n        /* \"#utility.yul\":1551:1589   */\n      tag_350\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":1541:1589   */\n      swap2\n      pop\n        /* \"#utility.yul\":1640:1642   */\n      0x60\n        /* \"#utility.yul\":1629:1638   */\n      dup6\n        /* \"#utility.yul\":1625:1643   */\n      add\n        /* \"#utility.yul\":1612:1644   */\n      calldataload\n        /* \"#utility.yul\":1667:1685   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1659:1665   */\n      dup2\n        /* \"#utility.yul\":1656:1686   */\n      gt\n        /* \"#utility.yul\":1653:1703   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":1699:1700   */\n      0x00\n        /* \"#utility.yul\":1696:1697   */\n      dup1\n        /* \"#utility.yul\":1689:1701   */\n      revert\n        /* \"#utility.yul\":1653:1703   */\n    tag_374:\n        /* \"#utility.yul\":1722:1772   */\n      tag_375\n        /* \"#utility.yul\":1764:1771   */\n      dup8\n        /* \"#utility.yul\":1755:1761   */\n      dup3\n        /* \"#utility.yul\":1744:1753   */\n      dup9\n        /* \"#utility.yul\":1740:1762   */\n      add\n        /* \"#utility.yul\":1722:1772   */\n      tag_352\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":1712:1772   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1239:1778   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1783:2043   */\n    tag_42:\n        /* \"#utility.yul\":1851:1857   */\n      0x00\n        /* \"#utility.yul\":1859:1865   */\n      dup1\n        /* \"#utility.yul\":1912:1914   */\n      0x40\n        /* \"#utility.yul\":1900:1909   */\n      dup4\n        /* \"#utility.yul\":1891:1898   */\n      dup6\n        /* \"#utility.yul\":1887:1910   */\n      sub\n        /* \"#utility.yul\":1883:1915   */\n      slt\n        /* \"#utility.yul\":1880:1932   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1925:1926   */\n      dup1\n        /* \"#utility.yul\":1918:1930   */\n      revert\n        /* \"#utility.yul\":1880:1932   */\n    tag_377:\n        /* \"#utility.yul\":1951:1980   */\n      tag_378\n        /* \"#utility.yul\":1970:1979   */\n      dup4\n        /* \"#utility.yul\":1951:1980   */\n      tag_350\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":1941:1980   */\n      swap2\n      pop\n        /* \"#utility.yul\":1999:2037   */\n      tag_379\n        /* \"#utility.yul\":2033:2035   */\n      0x20\n        /* \"#utility.yul\":2022:2031   */\n      dup5\n        /* \"#utility.yul\":2018:2036   */\n      add\n        /* \"#utility.yul\":1999:2037   */\n      tag_350\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":1989:2037   */\n      swap1\n      pop\n        /* \"#utility.yul\":1783:2043   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2230:2626   */\n    tag_53:\n        /* \"#utility.yul\":2308:2314   */\n      0x00\n        /* \"#utility.yul\":2316:2322   */\n      dup1\n        /* \"#utility.yul\":2369:2371   */\n      0x40\n        /* \"#utility.yul\":2357:2366   */\n      dup4\n        /* \"#utility.yul\":2348:2355   */\n      dup6\n        /* \"#utility.yul\":2344:2367   */\n      sub\n        /* \"#utility.yul\":2340:2372   */\n      slt\n        /* \"#utility.yul\":2337:2389   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":2385:2386   */\n      0x00\n        /* \"#utility.yul\":2382:2383   */\n      dup1\n        /* \"#utility.yul\":2375:2387   */\n      revert\n        /* \"#utility.yul\":2337:2389   */\n    tag_382:\n        /* \"#utility.yul\":2425:2434   */\n      dup3\n        /* \"#utility.yul\":2412:2435   */\n      calldataload\n        /* \"#utility.yul\":2458:2476   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2450:2456   */\n      dup2\n        /* \"#utility.yul\":2447:2477   */\n      gt\n        /* \"#utility.yul\":2444:2494   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":2490:2491   */\n      0x00\n        /* \"#utility.yul\":2487:2488   */\n      dup1\n        /* \"#utility.yul\":2480:2492   */\n      revert\n        /* \"#utility.yul\":2444:2494   */\n    tag_383:\n        /* \"#utility.yul\":2513:2563   */\n      tag_384\n        /* \"#utility.yul\":2555:2562   */\n      dup6\n        /* \"#utility.yul\":2546:2552   */\n      dup3\n        /* \"#utility.yul\":2535:2544   */\n      dup7\n        /* \"#utility.yul\":2531:2553   */\n      add\n        /* \"#utility.yul\":2513:2563   */\n      tag_352\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":2503:2563   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":2582:2620   */\n      tag_379\n        /* \"#utility.yul\":2616:2618   */\n      0x20\n        /* \"#utility.yul\":2605:2614   */\n      dup5\n        /* \"#utility.yul\":2601:2619   */\n      add\n        /* \"#utility.yul\":2582:2620   */\n      tag_350\n      jump\t// in\n        /* \"#utility.yul\":3031:3495   */\n    tag_109:\n        /* \"#utility.yul\":3118:3124   */\n      0x00\n        /* \"#utility.yul\":3126:3132   */\n      dup1\n        /* \"#utility.yul\":3134:3140   */\n      0x00\n        /* \"#utility.yul\":3187:3189   */\n      0x60\n        /* \"#utility.yul\":3175:3184   */\n      dup5\n        /* \"#utility.yul\":3166:3173   */\n      dup7\n        /* \"#utility.yul\":3162:3185   */\n      sub\n        /* \"#utility.yul\":3158:3190   */\n      slt\n        /* \"#utility.yul\":3155:3207   */\n      iszero\n      tag_389\n      jumpi\n        /* \"#utility.yul\":3203:3204   */\n      0x00\n        /* \"#utility.yul\":3200:3201   */\n      dup1\n        /* \"#utility.yul\":3193:3205   */\n      revert\n        /* \"#utility.yul\":3155:3207   */\n    tag_389:\n        /* \"#utility.yul\":3226:3255   */\n      tag_390\n        /* \"#utility.yul\":3245:3254   */\n      dup5\n        /* \"#utility.yul\":3226:3255   */\n      tag_350\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":3216:3255   */\n      swap3\n      pop\n        /* \"#utility.yul\":3302:3304   */\n      0x20\n        /* \"#utility.yul\":3291:3300   */\n      dup5\n        /* \"#utility.yul\":3287:3305   */\n      add\n        /* \"#utility.yul\":3274:3306   */\n      calldataload\n        /* \"#utility.yul\":3264:3306   */\n      swap2\n      pop\n        /* \"#utility.yul\":3357:3359   */\n      0x40\n        /* \"#utility.yul\":3346:3355   */\n      dup5\n        /* \"#utility.yul\":3342:3360   */\n      add\n        /* \"#utility.yul\":3329:3361   */\n      calldataload\n        /* \"#utility.yul\":3384:3402   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3376:3382   */\n      dup2\n        /* \"#utility.yul\":3373:3403   */\n      gt\n        /* \"#utility.yul\":3370:3420   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":3416:3417   */\n      0x00\n        /* \"#utility.yul\":3413:3414   */\n      dup1\n        /* \"#utility.yul\":3406:3418   */\n      revert\n        /* \"#utility.yul\":3370:3420   */\n    tag_391:\n        /* \"#utility.yul\":3439:3489   */\n      tag_392\n        /* \"#utility.yul\":3481:3488   */\n      dup7\n        /* \"#utility.yul\":3472:3478   */\n      dup3\n        /* \"#utility.yul\":3461:3470   */\n      dup8\n        /* \"#utility.yul\":3457:3479   */\n      add\n        /* \"#utility.yul\":3439:3489   */\n      tag_352\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":3429:3489   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3031:3495   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3500:3680   */\n    tag_123:\n        /* \"#utility.yul\":3559:3565   */\n      0x00\n        /* \"#utility.yul\":3612:3614   */\n      0x20\n        /* \"#utility.yul\":3600:3609   */\n      dup3\n        /* \"#utility.yul\":3591:3598   */\n      dup5\n        /* \"#utility.yul\":3587:3610   */\n      sub\n        /* \"#utility.yul\":3583:3615   */\n      slt\n        /* \"#utility.yul\":3580:3632   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":3628:3629   */\n      0x00\n        /* \"#utility.yul\":3625:3626   */\n      dup1\n        /* \"#utility.yul\":3618:3630   */\n      revert\n        /* \"#utility.yul\":3580:3632   */\n    tag_394:\n      pop\n        /* \"#utility.yul\":3651:3674   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":3500:3680   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3685:4081   */\n    tag_143:\n        /* \"#utility.yul\":3763:3769   */\n      0x00\n        /* \"#utility.yul\":3771:3777   */\n      dup1\n        /* \"#utility.yul\":3824:3826   */\n      0x40\n        /* \"#utility.yul\":3812:3821   */\n      dup4\n        /* \"#utility.yul\":3803:3810   */\n      dup6\n        /* \"#utility.yul\":3799:3822   */\n      sub\n        /* \"#utility.yul\":3795:3827   */\n      slt\n        /* \"#utility.yul\":3792:3844   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":3840:3841   */\n      0x00\n        /* \"#utility.yul\":3837:3838   */\n      dup1\n        /* \"#utility.yul\":3830:3842   */\n      revert\n        /* \"#utility.yul\":3792:3844   */\n    tag_396:\n        /* \"#utility.yul\":3863:3892   */\n      tag_397\n        /* \"#utility.yul\":3882:3891   */\n      dup4\n        /* \"#utility.yul\":3863:3892   */\n      tag_350\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":3853:3892   */\n      swap2\n      pop\n        /* \"#utility.yul\":3943:3945   */\n      0x20\n        /* \"#utility.yul\":3932:3941   */\n      dup4\n        /* \"#utility.yul\":3928:3946   */\n      add\n        /* \"#utility.yul\":3915:3947   */\n      calldataload\n        /* \"#utility.yul\":3970:3988   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3962:3968   */\n      dup2\n        /* \"#utility.yul\":3959:3989   */\n      gt\n        /* \"#utility.yul\":3956:4006   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":4002:4003   */\n      0x00\n        /* \"#utility.yul\":3999:4000   */\n      dup1\n        /* \"#utility.yul\":3992:4004   */\n      revert\n        /* \"#utility.yul\":3956:4006   */\n    tag_398:\n        /* \"#utility.yul\":4025:4075   */\n      tag_399\n        /* \"#utility.yul\":4067:4074   */\n      dup6\n        /* \"#utility.yul\":4058:4064   */\n      dup3\n        /* \"#utility.yul\":4047:4056   */\n      dup7\n        /* \"#utility.yul\":4043:4065   */\n      add\n        /* \"#utility.yul\":4025:4075   */\n      tag_352\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":4015:4075   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3685:4081   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4443:4627   */\n    tag_158:\n        /* \"#utility.yul\":4513:4519   */\n      0x00\n        /* \"#utility.yul\":4566:4568   */\n      0x20\n        /* \"#utility.yul\":4554:4563   */\n      dup3\n        /* \"#utility.yul\":4545:4552   */\n      dup5\n        /* \"#utility.yul\":4541:4564   */\n      sub\n        /* \"#utility.yul\":4537:4569   */\n      slt\n        /* \"#utility.yul\":4534:4586   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":4582:4583   */\n      0x00\n        /* \"#utility.yul\":4579:4580   */\n      dup1\n        /* \"#utility.yul\":4572:4584   */\n      revert\n        /* \"#utility.yul\":4534:4586   */\n    tag_402:\n      pop\n        /* \"#utility.yul\":4605:4621   */\n      mload\n      swap2\n        /* \"#utility.yul\":4443:4627   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4981:5108   */\n    tag_353:\n        /* \"#utility.yul\":5042:5052   */\n      0x4e487b71\n        /* \"#utility.yul\":5037:5040   */\n      0xe0\n        /* \"#utility.yul\":5033:5053   */\n      shl\n        /* \"#utility.yul\":5030:5031   */\n      0x00\n        /* \"#utility.yul\":5023:5054   */\n      mstore\n        /* \"#utility.yul\":5073:5077   */\n      0x11\n        /* \"#utility.yul\":5070:5071   */\n      0x04\n        /* \"#utility.yul\":5063:5078   */\n      mstore\n        /* \"#utility.yul\":5097:5101   */\n      0x24\n        /* \"#utility.yul\":5094:5095   */\n      0x00\n        /* \"#utility.yul\":5087:5102   */\n      revert\n        /* \"#utility.yul\":5113:5241   */\n    tag_166:\n        /* \"#utility.yul\":5180:5189   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5201:5212   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5198:5235   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":5215:5233   */\n      tag_326\n      tag_353\n      jump\t// in\n        /* \"#utility.yul\":5246:5496   */\n    tag_354:\n        /* \"#utility.yul\":5331:5332   */\n      0x00\n        /* \"#utility.yul\":5341:5454   */\n    tag_409:\n        /* \"#utility.yul\":5355:5361   */\n      dup4\n        /* \"#utility.yul\":5352:5353   */\n      dup2\n        /* \"#utility.yul\":5349:5362   */\n      lt\n        /* \"#utility.yul\":5341:5454   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":5431:5442   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":5425:5443   */\n      mload\n        /* \"#utility.yul\":5412:5423   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":5405:5444   */\n      mstore\n        /* \"#utility.yul\":5377:5379   */\n      0x20\n        /* \"#utility.yul\":5370:5380   */\n      add\n        /* \"#utility.yul\":5341:5454   */\n      jump(tag_409)\n    tag_411:\n      pop\n      pop\n        /* \"#utility.yul\":5488:5489   */\n      0x00\n        /* \"#utility.yul\":5470:5486   */\n      swap2\n      add\n        /* \"#utility.yul\":5463:5490   */\n      mstore\n        /* \"#utility.yul\":5246:5496   */\n      jump\t// out\n        /* \"#utility.yul\":5501:5790   */\n    tag_168:\n        /* \"#utility.yul\":5632:5635   */\n      0x00\n        /* \"#utility.yul\":5670:5676   */\n      dup3\n        /* \"#utility.yul\":5664:5677   */\n      mload\n        /* \"#utility.yul\":5686:5752   */\n      tag_413\n        /* \"#utility.yul\":5745:5751   */\n      dup2\n        /* \"#utility.yul\":5740:5743   */\n      dup5\n        /* \"#utility.yul\":5733:5737   */\n      0x20\n        /* \"#utility.yul\":5725:5731   */\n      dup8\n        /* \"#utility.yul\":5721:5738   */\n      add\n        /* \"#utility.yul\":5686:5752   */\n      tag_354\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":5768:5784   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":5501:5790   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5795:5920   */\n    tag_170:\n        /* \"#utility.yul\":5860:5869   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5881:5891   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5878:5914   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":5894:5912   */\n      tag_326\n      tag_353\n      jump\t// in\n        /* \"#utility.yul\":6204:6372   */\n    tag_176:\n        /* \"#utility.yul\":6277:6286   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":6308:6317   */\n      dup2\n      iszero\n        /* \"#utility.yul\":6325:6340   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":6319:6341   */\n      dup5\n      eq\n        /* \"#utility.yul\":6305:6342   */\n      or\n        /* \"#utility.yul\":6295:6366   */\n      tag_326\n      jumpi\n        /* \"#utility.yul\":6346:6364   */\n      tag_326\n      tag_353\n      jump\t// in\n        /* \"#utility.yul\":6377:6594   */\n    tag_178:\n        /* \"#utility.yul\":6417:6418   */\n      0x00\n        /* \"#utility.yul\":6443:6444   */\n      dup3\n        /* \"#utility.yul\":6433:6565   */\n      tag_422\n      jumpi\n        /* \"#utility.yul\":6487:6497   */\n      0x4e487b71\n        /* \"#utility.yul\":6482:6485   */\n      0xe0\n        /* \"#utility.yul\":6478:6498   */\n      shl\n        /* \"#utility.yul\":6475:6476   */\n      0x00\n        /* \"#utility.yul\":6468:6499   */\n      mstore\n        /* \"#utility.yul\":6522:6526   */\n      0x12\n        /* \"#utility.yul\":6519:6520   */\n      0x04\n        /* \"#utility.yul\":6512:6527   */\n      mstore\n        /* \"#utility.yul\":6550:6554   */\n      0x24\n        /* \"#utility.yul\":6547:6548   */\n      0x00\n        /* \"#utility.yul\":6540:6555   */\n      revert\n        /* \"#utility.yul\":6433:6565   */\n    tag_422:\n      pop\n        /* \"#utility.yul\":6579:6588   */\n      div\n      swap1\n        /* \"#utility.yul\":6377:6594   */\n      jump\t// out\n        /* \"#utility.yul\":6599:6726   */\n    tag_186:\n        /* \"#utility.yul\":6660:6670   */\n      0x4e487b71\n        /* \"#utility.yul\":6655:6658   */\n      0xe0\n        /* \"#utility.yul\":6651:6671   */\n      shl\n        /* \"#utility.yul\":6648:6649   */\n      0x00\n        /* \"#utility.yul\":6641:6672   */\n      mstore\n        /* \"#utility.yul\":6691:6695   */\n      0x32\n        /* \"#utility.yul\":6688:6689   */\n      0x04\n        /* \"#utility.yul\":6681:6696   */\n      mstore\n        /* \"#utility.yul\":6715:6719   */\n      0x24\n        /* \"#utility.yul\":6712:6713   */\n      0x00\n        /* \"#utility.yul\":6705:6720   */\n      revert\n        /* \"#utility.yul\":8171:8448   */\n    tag_242:\n        /* \"#utility.yul\":8238:8244   */\n      0x00\n        /* \"#utility.yul\":8291:8293   */\n      0x20\n        /* \"#utility.yul\":8279:8288   */\n      dup3\n        /* \"#utility.yul\":8270:8277   */\n      dup5\n        /* \"#utility.yul\":8266:8289   */\n      sub\n        /* \"#utility.yul\":8262:8294   */\n      slt\n        /* \"#utility.yul\":8259:8311   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":8307:8308   */\n      0x00\n        /* \"#utility.yul\":8304:8305   */\n      dup1\n        /* \"#utility.yul\":8297:8309   */\n      revert\n        /* \"#utility.yul\":8259:8311   */\n    tag_429:\n        /* \"#utility.yul\":8339:8348   */\n      dup2\n        /* \"#utility.yul\":8333:8349   */\n      mload\n        /* \"#utility.yul\":8392:8397   */\n      dup1\n        /* \"#utility.yul\":8385:8398   */\n      iszero\n        /* \"#utility.yul\":8378:8399   */\n      iszero\n        /* \"#utility.yul\":8371:8376   */\n      dup2\n        /* \"#utility.yul\":8368:8400   */\n      eq\n        /* \"#utility.yul\":8358:8418   */\n      tag_329\n      jumpi\n        /* \"#utility.yul\":8414:8415   */\n      0x00\n        /* \"#utility.yul\":8411:8412   */\n      dup1\n        /* \"#utility.yul\":8404:8416   */\n      revert\n        /* \"#utility.yul\":8453:8632   */\n    tag_355:\n        /* \"#utility.yul\":8531:8544   */\n      dup1\n      mload\n        /* \"#utility.yul\":8584:8606   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":8573:8607   */\n      dup2\n      and\n        /* \"#utility.yul\":8563:8608   */\n      dup2\n      eq\n        /* \"#utility.yul\":8553:8626   */\n      tag_358\n      jumpi\n        /* \"#utility.yul\":8622:8623   */\n      0x00\n        /* \"#utility.yul\":8619:8620   */\n      dup1\n        /* \"#utility.yul\":8612:8624   */\n      revert\n        /* \"#utility.yul\":8637:9110   */\n    tag_298:\n        /* \"#utility.yul\":8740:8746   */\n      0x00\n        /* \"#utility.yul\":8748:8754   */\n      dup1\n        /* \"#utility.yul\":8756:8762   */\n      0x00\n        /* \"#utility.yul\":8764:8770   */\n      dup1\n        /* \"#utility.yul\":8772:8778   */\n      0x00\n        /* \"#utility.yul\":8825:8828   */\n      0xa0\n        /* \"#utility.yul\":8813:8822   */\n      dup7\n        /* \"#utility.yul\":8804:8811   */\n      dup9\n        /* \"#utility.yul\":8800:8823   */\n      sub\n        /* \"#utility.yul\":8796:8829   */\n      slt\n        /* \"#utility.yul\":8793:8846   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":8842:8843   */\n      0x00\n        /* \"#utility.yul\":8839:8840   */\n      dup1\n        /* \"#utility.yul\":8832:8844   */\n      revert\n        /* \"#utility.yul\":8793:8846   */\n    tag_434:\n        /* \"#utility.yul\":8865:8904   */\n      tag_435\n        /* \"#utility.yul\":8894:8903   */\n      dup7\n        /* \"#utility.yul\":8865:8904   */\n      tag_355\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":8855:8904   */\n      swap5\n      pop\n        /* \"#utility.yul\":8944:8946   */\n      0x20\n        /* \"#utility.yul\":8933:8942   */\n      dup7\n        /* \"#utility.yul\":8929:8947   */\n      add\n        /* \"#utility.yul\":8923:8948   */\n      mload\n        /* \"#utility.yul\":8913:8948   */\n      swap4\n      pop\n        /* \"#utility.yul\":8988:8990   */\n      0x40\n        /* \"#utility.yul\":8977:8986   */\n      dup7\n        /* \"#utility.yul\":8973:8991   */\n      add\n        /* \"#utility.yul\":8967:8992   */\n      mload\n        /* \"#utility.yul\":8957:8992   */\n      swap3\n      pop\n        /* \"#utility.yul\":9032:9034   */\n      0x60\n        /* \"#utility.yul\":9021:9030   */\n      dup7\n        /* \"#utility.yul\":9017:9035   */\n      add\n        /* \"#utility.yul\":9011:9036   */\n      mload\n        /* \"#utility.yul\":9001:9036   */\n      swap2\n      pop\n        /* \"#utility.yul\":9055:9104   */\n      tag_436\n        /* \"#utility.yul\":9099:9102   */\n      0x80\n        /* \"#utility.yul\":9088:9097   */\n      dup8\n        /* \"#utility.yul\":9084:9103   */\n      add\n        /* \"#utility.yul\":9055:9104   */\n      tag_355\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":9045:9104   */\n      swap1\n      pop\n        /* \"#utility.yul\":8637:9110   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209ef82d5bc861811481542095417cb45a7e5a67990b80ad87a6cc96b4ae7ab1d464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_96": {
									"entryPoint": null,
									"id": 96,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_969": {
									"entryPoint": null,
									"id": 969,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_192": {
									"entryPoint": 141,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:514:8",
										"nodeType": "YulBlock",
										"src": "0:514:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:8",
													"nodeType": "YulBlock",
													"src": "95:209:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:8",
																"nodeType": "YulBlock",
																"src": "141:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:8",
																					"nodeType": "YulLiteral",
																					"src": "150:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:8",
																					"nodeType": "YulLiteral",
																					"src": "153:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:8"
																			},
																			"nativeSrc": "143:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:8"
																		},
																		"nativeSrc": "143:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:8"
																		},
																		"nativeSrc": "112:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:8",
																		"nodeType": "YulLiteral",
																		"src": "137:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:8"
																},
																"nativeSrc": "108:32:8",
																"nodeType": "YulFunctionCall",
																"src": "108:32:8"
															},
															"nativeSrc": "105:52:8",
															"nodeType": "YulIf",
															"src": "105:52:8"
														},
														{
															"nativeSrc": "166:29:8",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:8"
																},
																"nativeSrc": "179:16:8",
																"nodeType": "YulFunctionCall",
																"src": "179:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:8",
																	"nodeType": "YulTypedName",
																	"src": "170:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:8",
																"nodeType": "YulBlock",
																"src": "258:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:8",
																					"nodeType": "YulLiteral",
																					"src": "267:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:8",
																					"nodeType": "YulLiteral",
																					"src": "270:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:8"
																			},
																			"nativeSrc": "260:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:8"
																		},
																		"nativeSrc": "260:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:8",
																										"nodeType": "YulLiteral",
																										"src": "243:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:8",
																										"nodeType": "YulLiteral",
																										"src": "248:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:8"
																								},
																								"nativeSrc": "239:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:8",
																								"nodeType": "YulLiteral",
																								"src": "252:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:8"
																						},
																						"nativeSrc": "235:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:8"
																				},
																				"nativeSrc": "224:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:8"
																		},
																		"nativeSrc": "214:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:8"
																},
																"nativeSrc": "207:50:8",
																"nodeType": "YulFunctionCall",
																"src": "207:50:8"
															},
															"nativeSrc": "204:70:8",
															"nodeType": "YulIf",
															"src": "204:70:8"
														},
														{
															"nativeSrc": "283:15:8",
															"nodeType": "YulAssignment",
															"src": "283:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:8",
																"nodeType": "YulIdentifier",
																"src": "293:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:8",
														"nodeType": "YulTypedName",
														"src": "61:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:8",
														"nodeType": "YulTypedName",
														"src": "72:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:8",
														"nodeType": "YulTypedName",
														"src": "84:6:8",
														"type": ""
													}
												],
												"src": "14:290:8"
											},
											{
												"body": {
													"nativeSrc": "410:102:8",
													"nodeType": "YulBlock",
													"src": "410:102:8",
													"statements": [
														{
															"nativeSrc": "420:26:8",
															"nodeType": "YulAssignment",
															"src": "420:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "432:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "432:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:2:8",
																		"nodeType": "YulLiteral",
																		"src": "443:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "428:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "428:3:8"
																},
																"nativeSrc": "428:18:8",
																"nodeType": "YulFunctionCall",
																"src": "428:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "420:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "420:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "462:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "477:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "477:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "493:3:8",
																								"nodeType": "YulLiteral",
																								"src": "493:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "498:1:8",
																								"nodeType": "YulLiteral",
																								"src": "498:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "489:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "489:3:8"
																						},
																						"nativeSrc": "489:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "489:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "502:1:8",
																						"nodeType": "YulLiteral",
																						"src": "502:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "485:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "485:3:8"
																				},
																				"nativeSrc": "485:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "485:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "473:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:8"
																		},
																		"nativeSrc": "473:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "473:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "455:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "455:6:8"
																},
																"nativeSrc": "455:51:8",
																"nodeType": "YulFunctionCall",
																"src": "455:51:8"
															},
															"nativeSrc": "455:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "455:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "309:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "379:9:8",
														"nodeType": "YulTypedName",
														"src": "379:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "390:6:8",
														"nodeType": "YulTypedName",
														"src": "390:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "401:4:8",
														"nodeType": "YulTypedName",
														"src": "401:4:8",
														"type": ""
													}
												],
												"src": "309:203:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405162001a1138038062001a11833981016040819052610030916100dc565b806001600160a01b03811661005e57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100678161008d565b50600180546001600160a01b0319166001600160a01b0392909216919091179055610109565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f602082840312156100ec575f80fd5b81516001600160a01b0381168114610102575f80fd5b9392505050565b6118fa80620001175f395ff3fe608060405260043610610147575f3560e01c8063a3150978116100b3578063e1ad418e1161006d578063e1ad418e146104a9578063f09f0aac146104d4578063f2fde38b146104f3578063f38e762b14610512578063fca0a3d214610531578063fd03fe9014610584575f80fd5b8063a315097814610371578063a4329677146103c4578063a7f696cf14610405578063b4a99a4e14610458578063cb8ff54514610477578063cdb434781461048a575f80fd5b8063373cf20211610104578063373cf2021461026d5780636bc20157146102a657806370181206146102c5578063715018a6146103185780638da5cb5b1461032c5780639c2c67c91461035c575f80fd5b806301bf66481461014b5780631a06e66e1461016c5780631f1a675d1461018b5780632dd91a4c146101d45780633422a7e0146101e9578063372c12b11461022f575b5f80fd5b348015610156575f80fd5b5061016a610165366004611526565b6105cb565b005b348015610177575f80fd5b5061016a6101863660046115dc565b61065f565b348015610196575f80fd5b506101c16101a5366004611640565b600460209081525f928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b3480156101df575f80fd5b506101c1600a5481565b3480156101f4575f80fd5b506101c1610203366004611671565b81516020818401810180516008825292820194820194909420919093529091525f908152604090205481565b34801561023a575f80fd5b5061025d610249366004611526565b60026020525f908152604090205460ff1681565b60405190151581526020016101cb565b348015610278575f80fd5b5061025d610287366004611640565b600560209081525f928352604080842090915290825290205460ff1681565b3480156102b1575f80fd5b5061016a6102c0366004611526565b610a28565b3480156102d0575f80fd5b506101c16102df366004611526565b6001600160a01b03165f908152600460209081526040808320739951342d994001468506df88f71a582867b50dd4845290915290205490565b348015610323575f80fd5b5061016a610b0a565b348015610337575f80fd5b505f546001600160a01b03165b6040516001600160a01b0390911681526020016101cb565b348015610367575f80fd5b506101c160095481565b34801561037c575f80fd5b506101c161038b366004611526565b6001600160a01b03165f90815260046020908152604080832073a5014ea627ac22a63f2bf3b46e26d408e72f55c1845290915290205490565b3480156103cf575f80fd5b506101c16103de366004611526565b335f9081526004602090815260408083206001600160a01b03949094168352929052205490565b348015610410575f80fd5b506101c161041f366004611526565b6001600160a01b03165f9081526004602090815260408083207377f146ca2943294cc53e6c3b5980b572c961ae23845290915290205490565b348015610463575f80fd5b50600154610344906001600160a01b031681565b61016a6104853660046116b3565b610b1d565b348015610495575f80fd5b5061016a6104a4366004611526565b611126565b3480156104b4575f80fd5b506101c16104c3366004611526565b60066020525f908152604090205481565b3480156104df575f80fd5b506103446104ee366004611706565b61114a565b3480156104fe575f80fd5b5061016a61050d366004611526565b611172565b34801561051d575f80fd5b506101c161052c366004611706565b6111ac565b34801561053c575f80fd5b506101c161054b366004611526565b6001600160a01b03165f908152600460209081526040808320734b3a514dd71850277bba82491f26dacdf089cb68845290915290205490565b34801561058f575f80fd5b506101c161059e36600461171d565b600760209081525f9283526040909220815180830184018051928152908401929093019190912091525481565b6105d36112a7565b6001600160a01b0381165f9081526002602052604090205460ff1661063f5760405162461bcd60e51b815260206004820152601c60248201527f54686973204164647265737320646f6573206e6f74206578697374210000000060448201526064015b60405180910390fd5b6001600160a01b03165f908152600260205260409020805460ff19169055565b6040516370a0823160e01b815230600482015283906001600160a01b038616906370a0823190602401602060405180830381865afa1580156106a3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106c79190611768565b101561070c5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610636565b734b3a514dd71850277bba82491f26dacdf089cb67196001600160a01b0385160161084c576107456001600160a01b03851683856112d3565b8260095f8282546107569190611793565b90915550506001600160a01b0382165f90815260066020526040908190208490555183906008906107889084906117c8565b90815260200160405180910390205f846001600160a01b03166001600160a01b031681526020019081526020015f205f8282546107c591906117e3565b90915550506001600160a01b038083165f90815260046020908152604080832093881683529290529081208054859290610800908490611793565b9091555050604080516001600160a01b0384168152602081018590527fcc87ab2abfe87b272af9b77691e40b3d9186a0431f3d41a8e06d39614f460722910160405180910390a1610a22565b6103e861085a8460036117f6565b610864919061180d565b600a8190556003545f91610878919061180d565b90505f5b6003548110156108c2576108ba6003828154811061089c5761089c61182c565b5f918252602090912001546001600160a01b038881169116846112d3565b60010161087c565b506108e683600a54866108d59190611793565b6001600160a01b03881691906112d3565b600a546108f39085611793565b60095f8282546109039190611793565b9091555050600a546109159085611793565b6001600160a01b0384165f9081526006602052604090819020919091555184906008906109439085906117c8565b90815260200160405180910390205f856001600160a01b03166001600160a01b031681526020019081526020015f205f82825461098091906117e3565b9091555050600a546109929085611793565b6001600160a01b038085165f908152600460209081526040808320938a16835292905290812080549091906109c8908490611793565b9091555050600a547fcf53ae9736a409c662fa8b1187549847acd41beb1b89fd026293fc2e19adaca79084906109fe9087611793565b604080516001600160a01b03909316835260208301919091520160405180910390a1505b50505050565b610a306112a7565b6001600160a01b0381165f9081526002602052604090205460ff1615610aa45760405162461bcd60e51b8152602060048201526024808201527f54686973204164647265737320697320616c72656164792057686974654c69736044820152637465642160e01b6064820152608401610636565b6003805460018181019092557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b039093166001600160a01b0319909316831790555f91825260026020526040909120805460ff19169091179055565b610b126112a7565b610b1b5f611325565b565b604051636eb1769f60e11b815233600482015230602482015282906001600160a01b0385169063dd62ed3e90604401602060405180830381865afa158015610b67573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b8b9190611768565b1015610bcd5760405162461bcd60e51b8152602060048201526011602482015270105b1b1bddd85b98d9481b9bdd081cd95d607a1b6044820152606401610636565b6040516370a0823160e01b815233600482015282906001600160a01b038516906370a0823190602401602060405180830381865afa158015610c11573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c359190611768565b1015610c7a5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610636565b734b3a514dd71850277bba82491f26dacdf089cb67196001600160a01b03841601610e38575f546001600160a01b03166108fc610cb6846111ac565b610cc4906305f5e1006117f6565b6040518115909202915f818181858888f19350505050158015610ce9573d5f803e3d5ffd5b506040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038416906323b872dd906064016020604051808303815f875af1158015610d3a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d5e9190611840565b508160095f828254610d7091906117e3565b9091555050335f9081526006602090815260408083208590556007909152908190209051839190610da29084906117c8565b90815260200160405180910390205f828254610dbe91906117e3565b9091555050335f9081526004602090815260408083206001600160a01b038716845290915281208054849290610df59084906117e3565b909155505060408051338152602081018490527fcc87ab2abfe87b272af9b77691e40b3d9186a0431f3d41a8e06d39614f460722910160405180910390a1505050565b5f546001600160a01b03166108fc610e4f846111ac565b610e5d906305f5e1006117f6565b6040518115909202915f818181858888f19350505050158015610e82573d5f803e3d5ffd5b506103e8610e918360036117f6565b610e9b919061180d565b600a8190556003545f91610eaf919061180d565b90505f5b600354811015610f6957846001600160a01b03166323b872dd3360038481548110610ee057610ee061182c565b5f9182526020909120015460405160e084901b6001600160e01b03191681526001600160a01b03928316600482015291166024820152604481018590526064016020604051808303815f875af1158015610f3c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f609190611840565b50600101610eb3565b50836001600160a01b03166323b872dd3330600a5487610f899190611793565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303815f875af1158015610fda573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ffe9190611840565b50600a5461100c9084611793565b60095f82825461101c91906117e3565b9091555050600a5461102e9084611793565b335f90815260066020526040902055600a5461104a9084611793565b335f908152600760205260409081902090516110679085906117c8565b90815260200160405180910390205f82825461108391906117e3565b9091555050600a546110959084611793565b335f9081526004602090815260408083206001600160a01b0389168452909152812080549091906110c79084906117e3565b9091555050600a547fcc87ab2abfe87b272af9b77691e40b3d9186a0431f3d41a8e06d39614f4607229033906110fd9086611793565b604080516001600160a01b03909316835260208301919091520160405180910390a1505b505050565b61112e6112a7565b600a54611147906001600160a01b0383169033906112d3565b50565b60038181548110611159575f80fd5b5f918252602090912001546001600160a01b0316905081565b61117a6112a7565b6001600160a01b0381166111a357604051631e4fbdf760e01b81525f6004820152602401610636565b61114781611325565b5f8073d0d5e3db44de05e9f294bb0a3beeaf030de24ada90505f816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611202573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112269190611878565b5050509150505f811361127b5760405162461bcd60e51b815260206004820152601d60248201527f4e65676174697665204d617469632070726963652072656365697665640000006044820152606401610636565b5f81606461128a8760056117f6565b611294919061180d565b61129e919061180d565b95945050505050565b5f546001600160a01b03163314610b1b5760405163118cdaa760e01b8152336004820152602401610636565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611121908490611374565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f6113886001600160a01b038416836113d5565b905080515f141580156113ac5750808060200190518101906113aa9190611840565b155b1561112157604051635274afe760e01b81526001600160a01b0384166004820152602401610636565b60606113e283835f6113eb565b90505b92915050565b6060814710156114105760405163cd78605960e01b8152306004820152602401610636565b5f80856001600160a01b0316848660405161142b91906117c8565b5f6040518083038185875af1925050503d805f8114611465576040519150601f19603f3d011682016040523d82523d5f602084013e61146a565b606091505b509150915061147a868383611486565b925050505b9392505050565b60608261149b57611496826114e2565b61147f565b81511580156114b257506001600160a01b0384163b155b156114db57604051639996b31560e01b81526001600160a01b0385166004820152602401610636565b508061147f565b8051156114f25780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b0381168114611521575f80fd5b919050565b5f60208284031215611536575f80fd5b6113e28261150b565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112611562575f80fd5b813567ffffffffffffffff8082111561157d5761157d61153f565b604051601f8301601f19908116603f011681019082821181831017156115a5576115a561153f565b816040528381528660208588010111156115bd575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f80608085870312156115ef575f80fd5b6115f88561150b565b93506020850135925061160d6040860161150b565b9150606085013567ffffffffffffffff811115611628575f80fd5b61163487828801611553565b91505092959194509250565b5f8060408385031215611651575f80fd5b61165a8361150b565b91506116686020840161150b565b90509250929050565b5f8060408385031215611682575f80fd5b823567ffffffffffffffff811115611698575f80fd5b6116a485828601611553565b9250506116686020840161150b565b5f805f606084860312156116c5575f80fd5b6116ce8461150b565b925060208401359150604084013567ffffffffffffffff8111156116f0575f80fd5b6116fc86828701611553565b9150509250925092565b5f60208284031215611716575f80fd5b5035919050565b5f806040838503121561172e575f80fd5b6117378361150b565b9150602083013567ffffffffffffffff811115611752575f80fd5b61175e85828601611553565b9150509250929050565b5f60208284031215611778575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156113e5576113e561177f565b5f5b838110156117c05781810151838201526020016117a8565b50505f910152565b5f82516117d98184602087016117a6565b9190910192915050565b808201808211156113e5576113e561177f565b80820281158282048414176113e5576113e561177f565b5f8261182757634e487b7160e01b5f52601260045260245ffd5b500490565b634e487b7160e01b5f52603260045260245ffd5b5f60208284031215611850575f80fd5b8151801515811461147f575f80fd5b805169ffffffffffffffffffff81168114611521575f80fd5b5f805f805f60a0868803121561188c575f80fd5b6118958661185f565b94506020860151935060408601519250606086015191506118b86080870161185f565b9050929550929590935056fea26469706673582212209ef82d5bc861811481542095417cb45a7e5a67990b80ad87a6cc96b4ae7ab1d464736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1A11 CODESIZE SUB DUP1 PUSH3 0x1A11 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x30 SWAP2 PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x67 DUP2 PUSH2 0x8D JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x109 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x102 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x18FA DUP1 PUSH3 0x117 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x147 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA3150978 GT PUSH2 0xB3 JUMPI DUP1 PUSH4 0xE1AD418E GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xE1AD418E EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0xF09F0AAC EQ PUSH2 0x4D4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4F3 JUMPI DUP1 PUSH4 0xF38E762B EQ PUSH2 0x512 JUMPI DUP1 PUSH4 0xFCA0A3D2 EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0xFD03FE90 EQ PUSH2 0x584 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3150978 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xA4329677 EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0xA7F696CF EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0xCB8FF545 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0xCDB43478 EQ PUSH2 0x48A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x373CF202 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x373CF202 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x6BC20157 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x70181206 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x9C2C67C9 EQ PUSH2 0x35C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1BF6648 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x1A06E66E EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x1F1A675D EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x2DD91A4C EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x3422A7E0 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x372C12B1 EQ PUSH2 0x22F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x1526 JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DC JUMP JUMPDEST PUSH2 0x65F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x196 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1640 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x1671 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP2 DUP5 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x8 DUP3 MSTORE SWAP3 DUP3 ADD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 KECCAK256 SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25D PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25D PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x1640 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1526 JUMP JUMPDEST PUSH2 0xA28 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0x9951342D994001468506DF88F71A582867B50DD4 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A PUSH2 0xB0A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x367 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x38B CALLDATASIZE PUSH1 0x4 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xA5014EA627AC22A63F2BF3B46E26D408E72F55C1 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x3DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1526 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x410 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x41F CALLDATASIZE PUSH1 0x4 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0x77F146CA2943294CC53E6C3B5980B572C961AE23 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x463 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x344 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x485 CALLDATASIZE PUSH1 0x4 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0xB1D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A PUSH2 0x4A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1526 JUMP JUMPDEST PUSH2 0x1126 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x4C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x344 PUSH2 0x4EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1706 JUMP JUMPDEST PUSH2 0x114A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A PUSH2 0x50D CALLDATASIZE PUSH1 0x4 PUSH2 0x1526 JUMP JUMPDEST PUSH2 0x1172 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x52C CALLDATASIZE PUSH1 0x4 PUSH2 0x1706 JUMP JUMPDEST PUSH2 0x11AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x54B CALLDATASIZE PUSH1 0x4 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0x4B3A514DD71850277BBA82491F26DACDF089CB68 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x59E CALLDATASIZE PUSH1 0x4 PUSH2 0x171D JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5D3 PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x63F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973204164647265737320646F6573206E6F742065786973742100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C7 SWAP2 SWAP1 PUSH2 0x1768 JUMP JUMPDEST LT ISZERO PUSH2 0x70C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x636 JUMP JUMPDEST PUSH20 0x4B3A514DD71850277BBA82491F26DACDF089CB67 NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ADD PUSH2 0x84C JUMPI PUSH2 0x745 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP4 DUP6 PUSH2 0x12D3 JUMP JUMPDEST DUP3 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x756 SWAP2 SWAP1 PUSH2 0x1793 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD DUP4 SWAP1 PUSH1 0x8 SWAP1 PUSH2 0x788 SWAP1 DUP5 SWAP1 PUSH2 0x17C8 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7C5 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x800 SWAP1 DUP5 SWAP1 PUSH2 0x1793 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0xCC87AB2ABFE87B272AF9B77691E40B3D9186A0431F3D41A8E06D39614F460722 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x85A DUP5 PUSH1 0x3 PUSH2 0x17F6 JUMP JUMPDEST PUSH2 0x864 SWAP2 SWAP1 PUSH2 0x180D JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH0 SWAP2 PUSH2 0x878 SWAP2 SWAP1 PUSH2 0x180D JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x8C2 JUMPI PUSH2 0x8BA PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x89C JUMPI PUSH2 0x89C PUSH2 0x182C JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 AND DUP5 PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x87C JUMP JUMPDEST POP PUSH2 0x8E6 DUP4 PUSH1 0xA SLOAD DUP7 PUSH2 0x8D5 SWAP2 SWAP1 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 SWAP1 PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x8F3 SWAP1 DUP6 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x903 SWAP2 SWAP1 PUSH2 0x1793 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA SLOAD PUSH2 0x915 SWAP1 DUP6 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD DUP5 SWAP1 PUSH1 0x8 SWAP1 PUSH2 0x943 SWAP1 DUP6 SWAP1 PUSH2 0x17C8 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x980 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA SLOAD PUSH2 0x992 SWAP1 DUP6 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP11 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x9C8 SWAP1 DUP5 SWAP1 PUSH2 0x1793 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA SLOAD PUSH32 0xCF53AE9736A409C662FA8B1187549847ACD41BEB1B89FD026293FC2E19ADACA7 SWAP1 DUP5 SWAP1 PUSH2 0x9FE SWAP1 DUP8 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xA30 PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x54686973204164647265737320697320616C72656164792057686974654C6973 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x74656421 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x636 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD SWAP1 SWAP3 SSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND DUP4 OR SWAP1 SSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB12 PUSH2 0x12A7 JUMP JUMPDEST PUSH2 0xB1B PUSH0 PUSH2 0x1325 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB67 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB8B SWAP2 SWAP1 PUSH2 0x1768 JUMP JUMPDEST LT ISZERO PUSH2 0xBCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1B1BDDD85B98D9481B9BDD081CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x636 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC11 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC35 SWAP2 SWAP1 PUSH2 0x1768 JUMP JUMPDEST LT ISZERO PUSH2 0xC7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x636 JUMP JUMPDEST PUSH20 0x4B3A514DD71850277BBA82491F26DACDF089CB67 NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ADD PUSH2 0xE38 JUMPI PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC PUSH2 0xCB6 DUP5 PUSH2 0x11AC JUMP JUMPDEST PUSH2 0xCC4 SWAP1 PUSH4 0x5F5E100 PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCE9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD3A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD5E SWAP2 SWAP1 PUSH2 0x1840 JUMP JUMPDEST POP DUP2 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD70 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD DUP4 SWAP2 SWAP1 PUSH2 0xDA2 SWAP1 DUP5 SWAP1 PUSH2 0x17C8 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDBE SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xDF5 SWAP1 DUP5 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xCC87AB2ABFE87B272AF9B77691E40B3D9186A0431F3D41A8E06D39614F460722 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC PUSH2 0xE4F DUP5 PUSH2 0x11AC JUMP JUMPDEST PUSH2 0xE5D SWAP1 PUSH4 0x5F5E100 PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xE82 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0x3E8 PUSH2 0xE91 DUP4 PUSH1 0x3 PUSH2 0x17F6 JUMP JUMPDEST PUSH2 0xE9B SWAP2 SWAP1 PUSH2 0x180D JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH0 SWAP2 PUSH2 0xEAF SWAP2 SWAP1 PUSH2 0x180D JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xF69 JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xEE0 JUMPI PUSH2 0xEE0 PUSH2 0x182C JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP5 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF3C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF60 SWAP2 SWAP1 PUSH2 0x1840 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xEB3 JUMP JUMPDEST POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS PUSH1 0xA SLOAD DUP8 PUSH2 0xF89 SWAP2 SWAP1 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFDA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFFE SWAP2 SWAP1 PUSH2 0x1840 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x100C SWAP1 DUP5 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x101C SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA SLOAD PUSH2 0x102E SWAP1 DUP5 PUSH2 0x1793 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xA SLOAD PUSH2 0x104A SWAP1 DUP5 PUSH2 0x1793 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0x1067 SWAP1 DUP6 SWAP1 PUSH2 0x17C8 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1083 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA SLOAD PUSH2 0x1095 SWAP1 DUP5 PUSH2 0x1793 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x10C7 SWAP1 DUP5 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA SLOAD PUSH32 0xCC87AB2ABFE87B272AF9B77691E40B3D9186A0431F3D41A8E06D39614F460722 SWAP1 CALLER SWAP1 PUSH2 0x10FD SWAP1 DUP7 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x112E PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1147 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 CALLER SWAP1 PUSH2 0x12D3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1159 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x117A PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x636 JUMP JUMPDEST PUSH2 0x1147 DUP2 PUSH2 0x1325 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xD0D5E3DB44DE05E9F294BB0A3BEEAF030DE24ADA SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1202 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1226 SWAP2 SWAP1 PUSH2 0x1878 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP2 SGT PUSH2 0x127B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E65676174697665204D61746963207072696365207265636569766564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x636 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x64 PUSH2 0x128A DUP8 PUSH1 0x5 PUSH2 0x17F6 JUMP JUMPDEST PUSH2 0x1294 SWAP2 SWAP1 PUSH2 0x180D JUMP JUMPDEST PUSH2 0x129E SWAP2 SWAP1 PUSH2 0x180D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB1B JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x636 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1121 SWAP1 DUP5 SWAP1 PUSH2 0x1374 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1388 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0x13D5 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 EQ ISZERO DUP1 ISZERO PUSH2 0x13AC JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x13AA SWAP2 SWAP1 PUSH2 0x1840 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1121 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x636 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13E2 DUP4 DUP4 PUSH0 PUSH2 0x13EB JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1410 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x636 JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x142B SWAP2 SWAP1 PUSH2 0x17C8 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1465 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x146A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x147A DUP7 DUP4 DUP4 PUSH2 0x1486 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x149B JUMPI PUSH2 0x1496 DUP3 PUSH2 0x14E2 JUMP JUMPDEST PUSH2 0x147F JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x14B2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x14DB JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x636 JUMP JUMPDEST POP DUP1 PUSH2 0x147F JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x14F2 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1521 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1536 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13E2 DUP3 PUSH2 0x150B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1562 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x157D JUMPI PUSH2 0x157D PUSH2 0x153F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x15A5 JUMPI PUSH2 0x15A5 PUSH2 0x153F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x15BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x15EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15F8 DUP6 PUSH2 0x150B JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0x160D PUSH1 0x40 DUP7 ADD PUSH2 0x150B JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1628 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1634 DUP8 DUP3 DUP9 ADD PUSH2 0x1553 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1651 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x165A DUP4 PUSH2 0x150B JUMP JUMPDEST SWAP2 POP PUSH2 0x1668 PUSH1 0x20 DUP5 ADD PUSH2 0x150B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1682 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1698 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16A4 DUP6 DUP3 DUP7 ADD PUSH2 0x1553 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1668 PUSH1 0x20 DUP5 ADD PUSH2 0x150B JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16CE DUP5 PUSH2 0x150B JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16FC DUP7 DUP3 DUP8 ADD PUSH2 0x1553 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1716 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x172E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1737 DUP4 PUSH2 0x150B JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1752 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x175E DUP6 DUP3 DUP7 ADD PUSH2 0x1553 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1778 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x13E5 JUMPI PUSH2 0x13E5 PUSH2 0x177F JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17C0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x17A8 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x17D9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x17A6 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x13E5 JUMPI PUSH2 0x13E5 PUSH2 0x177F JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x13E5 JUMPI PUSH2 0x13E5 PUSH2 0x177F JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1827 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1850 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x147F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1521 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x188C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1895 DUP7 PUSH2 0x185F JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x18B8 PUSH1 0x80 DUP8 ADD PUSH2 0x185F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0xF8 0x2D JUMPDEST 0xC8 PUSH2 0x8114 DUP2 SLOAD KECCAK256 SWAP6 COINBASE PUSH29 0xB45A7E5A67990B80AD87A6CC96B4AE7AB1D464736F6C63430008160033 ",
							"sourceMap": "591:9884:7:-:0;;;2937:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2979:12;-1:-1:-1;;;;;1273:26:1;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:1;;1350:1;1322:31;;;455:51:8;428:18;;1322:31:1;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;3003:5:7::1;:20:::0;;-1:-1:-1;;;;;;3003:20:7::1;-1:-1:-1::0;;;;;3003:20:7;;;::::1;::::0;;;::::1;::::0;;591:9884;;2912:187:1;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:1;;;-1:-1:-1;;;;;;3020:17:1;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:290:8:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:8;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:8:o;309:203::-;591:9884:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Owner_887": {
									"entryPoint": null,
									"id": 887,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WhiteList_998": {
									"entryPoint": 2600,
									"id": 998,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_callOptionalReturn_547": {
									"entryPoint": 4980,
									"id": 547,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_130": {
									"entryPoint": 4775,
									"id": 130,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_862": {
									"entryPoint": null,
									"id": 862,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_849": {
									"entryPoint": 5346,
									"id": 849,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_192": {
									"entryPoint": 4901,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@checkUser_936": {
									"entryPoint": null,
									"id": 936,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@currentHoldings_954": {
									"entryPoint": null,
									"id": 954,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_717": {
									"entryPoint": 5099,
									"id": 717,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_671": {
									"entryPoint": 5077,
									"id": 671,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getMaticPrice_1044": {
									"entryPoint": 4524,
									"id": 1044,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@holdingOfTokens_1561": {
									"entryPoint": null,
									"id": 1561,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@holdingOf_DAI_1515": {
									"entryPoint": null,
									"id": 1515,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@holdingOf_USDC_1530": {
									"entryPoint": null,
									"id": 1530,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@holdingOf_USDM_1545": {
									"entryPoint": null,
									"id": 1545,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@holdingOf_USDT_1500": {
									"entryPoint": null,
									"id": 1500,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@overColleteralFeeAmount_956": {
									"entryPoint": null,
									"id": 956,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_113": {
									"entryPoint": null,
									"id": 113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeFromWhiteList_1485": {
									"entryPoint": 1483,
									"id": 1485,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_144": {
									"entryPoint": 2826,
									"id": 144,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_357": {
									"entryPoint": 4819,
									"id": 357,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@substrateSwapTokens_1445": {
									"entryPoint": 1631,
									"id": 1445,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@swapTokens_1278": {
									"entryPoint": 2845,
									"id": 1278,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_172": {
									"entryPoint": 4466,
									"id": 172,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userAmount_940": {
									"entryPoint": null,
									"id": 940,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userTokenAmount_930": {
									"entryPoint": null,
									"id": 930,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userTotalSubstrateSwapAmount_952": {
									"entryPoint": null,
									"id": 952,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userTotalSwapAmount_946": {
									"entryPoint": null,
									"id": 946,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_809": {
									"entryPoint": 5254,
									"id": 809,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@whilistedAddress_924": {
									"entryPoint": 4426,
									"id": 924,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@whiteList_921": {
									"entryPoint": null,
									"id": 921,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawBalanceTokens_1463": {
									"entryPoint": 4390,
									"id": 1463,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 5387,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 5459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5414,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5696,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr": {
									"entryPoint": 5917,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_addresst_string_memory_ptr": {
									"entryPoint": 5596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_uint256t_string_memory_ptr": {
									"entryPoint": 5811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_address": {
									"entryPoint": 5745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 6264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_uint80_fromMemory": {
									"entryPoint": 6239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_141490049d64491bad25101e25b612b24d846247901441fd85fdb93962f4e9d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_69cc1d0091f450c9f1b40951e04a8e02ae8a28f18820a3d492d53b3c2bca82f7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_96f12f93478a3768b4b822c9ec935962a88f68f145f33917ac63ab3e2a411fe3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b7f5bbf01babd612ff41adb253311ab3eccd8d56664e3b6ae54fa2e62b1bbfb0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6054,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 6015,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6188,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5439,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9762:8",
										"nodeType": "YulBlock",
										"src": "0:9762:8",
										"statements": [
											{
												"nativeSrc": "6:3:8",
												"nodeType": "YulBlock",
												"src": "6:3:8",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:8",
													"nodeType": "YulBlock",
													"src": "63:124:8",
													"statements": [
														{
															"nativeSrc": "73:29:8",
															"nodeType": "YulAssignment",
															"src": "73:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:8"
																},
																"nativeSrc": "82:20:8",
																"nodeType": "YulFunctionCall",
																"src": "82:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:8",
																"nodeType": "YulBlock",
																"src": "165:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:8",
																					"nodeType": "YulLiteral",
																					"src": "174:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:8",
																					"nodeType": "YulLiteral",
																					"src": "177:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:8"
																			},
																			"nativeSrc": "167:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:8"
																		},
																		"nativeSrc": "167:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:8"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:8",
																										"nodeType": "YulLiteral",
																										"src": "150:3:8",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:8",
																										"nodeType": "YulLiteral",
																										"src": "155:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:8"
																								},
																								"nativeSrc": "146:11:8",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:8"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:8",
																								"nodeType": "YulLiteral",
																								"src": "159:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:8"
																						},
																						"nativeSrc": "142:19:8",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:8"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:8"
																				},
																				"nativeSrc": "131:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:8"
																		},
																		"nativeSrc": "121:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:8"
																},
																"nativeSrc": "114:50:8",
																"nodeType": "YulFunctionCall",
																"src": "114:50:8"
															},
															"nativeSrc": "111:70:8",
															"nodeType": "YulIf",
															"src": "111:70:8"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:8",
														"nodeType": "YulTypedName",
														"src": "42:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:8",
														"nodeType": "YulTypedName",
														"src": "53:5:8",
														"type": ""
													}
												],
												"src": "14:173:8"
											},
											{
												"body": {
													"nativeSrc": "262:116:8",
													"nodeType": "YulBlock",
													"src": "262:116:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "308:16:8",
																"nodeType": "YulBlock",
																"src": "308:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "317:1:8",
																					"nodeType": "YulLiteral",
																					"src": "317:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "320:1:8",
																					"nodeType": "YulLiteral",
																					"src": "320:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "310:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:8"
																			},
																			"nativeSrc": "310:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:8"
																		},
																		"nativeSrc": "310:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "283:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "292:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "279:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:8"
																		},
																		"nativeSrc": "279:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "304:2:8",
																		"nodeType": "YulLiteral",
																		"src": "304:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "275:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:8"
																},
																"nativeSrc": "275:32:8",
																"nodeType": "YulFunctionCall",
																"src": "275:32:8"
															},
															"nativeSrc": "272:52:8",
															"nodeType": "YulIf",
															"src": "272:52:8"
														},
														{
															"nativeSrc": "333:39:8",
															"nodeType": "YulAssignment",
															"src": "333:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "343:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:8"
																},
																"nativeSrc": "343:29:8",
																"nodeType": "YulFunctionCall",
																"src": "343:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "333:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "192:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "228:9:8",
														"nodeType": "YulTypedName",
														"src": "228:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "239:7:8",
														"nodeType": "YulTypedName",
														"src": "239:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "251:6:8",
														"nodeType": "YulTypedName",
														"src": "251:6:8",
														"type": ""
													}
												],
												"src": "192:186:8"
											},
											{
												"body": {
													"nativeSrc": "415:95:8",
													"nodeType": "YulBlock",
													"src": "415:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "432:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "439:3:8",
																				"nodeType": "YulLiteral",
																				"src": "439:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "444:10:8",
																				"nodeType": "YulLiteral",
																				"src": "444:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "435:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "435:3:8"
																		},
																		"nativeSrc": "435:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "435:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "425:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "425:6:8"
																},
																"nativeSrc": "425:31:8",
																"nodeType": "YulFunctionCall",
																"src": "425:31:8"
															},
															"nativeSrc": "425:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "425:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "472:1:8",
																		"nodeType": "YulLiteral",
																		"src": "472:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "475:4:8",
																		"nodeType": "YulLiteral",
																		"src": "475:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "465:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "465:6:8"
																},
																"nativeSrc": "465:15:8",
																"nodeType": "YulFunctionCall",
																"src": "465:15:8"
															},
															"nativeSrc": "465:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "465:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "496:1:8",
																		"nodeType": "YulLiteral",
																		"src": "496:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "499:4:8",
																		"nodeType": "YulLiteral",
																		"src": "499:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "489:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "489:6:8"
																},
																"nativeSrc": "489:15:8",
																"nodeType": "YulFunctionCall",
																"src": "489:15:8"
															},
															"nativeSrc": "489:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "489:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "383:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "383:127:8"
											},
											{
												"body": {
													"nativeSrc": "568:666:8",
													"nodeType": "YulBlock",
													"src": "568:666:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "617:16:8",
																"nodeType": "YulBlock",
																"src": "617:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "626:1:8",
																					"nodeType": "YulLiteral",
																					"src": "626:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "629:1:8",
																					"nodeType": "YulLiteral",
																					"src": "629:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "619:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "619:6:8"
																			},
																			"nativeSrc": "619:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "619:12:8"
																		},
																		"nativeSrc": "619:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "619:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "596:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "596:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "604:4:8",
																						"nodeType": "YulLiteral",
																						"src": "604:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "592:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "592:3:8"
																				},
																				"nativeSrc": "592:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "592:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "611:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "611:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "588:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "588:3:8"
																		},
																		"nativeSrc": "588:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "588:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "581:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "581:6:8"
																},
																"nativeSrc": "581:35:8",
																"nodeType": "YulFunctionCall",
																"src": "581:35:8"
															},
															"nativeSrc": "578:55:8",
															"nodeType": "YulIf",
															"src": "578:55:8"
														},
														{
															"nativeSrc": "642:30:8",
															"nodeType": "YulVariableDeclaration",
															"src": "642:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "665:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "665:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "652:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "652:12:8"
																},
																"nativeSrc": "652:20:8",
																"nodeType": "YulFunctionCall",
																"src": "652:20:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "646:2:8",
																	"nodeType": "YulTypedName",
																	"src": "646:2:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "681:28:8",
															"nodeType": "YulVariableDeclaration",
															"src": "681:28:8",
															"value": {
																"kind": "number",
																"nativeSrc": "691:18:8",
																"nodeType": "YulLiteral",
																"src": "691:18:8",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "685:2:8",
																	"nodeType": "YulTypedName",
																	"src": "685:2:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "732:22:8",
																"nodeType": "YulBlock",
																"src": "732:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "734:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "734:16:8"
																			},
																			"nativeSrc": "734:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "734:18:8"
																		},
																		"nativeSrc": "734:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "734:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "724:2:8",
																		"nodeType": "YulIdentifier",
																		"src": "724:2:8"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "728:2:8",
																		"nodeType": "YulIdentifier",
																		"src": "728:2:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "721:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "721:2:8"
																},
																"nativeSrc": "721:10:8",
																"nodeType": "YulFunctionCall",
																"src": "721:10:8"
															},
															"nativeSrc": "718:36:8",
															"nodeType": "YulIf",
															"src": "718:36:8"
														},
														{
															"nativeSrc": "763:17:8",
															"nodeType": "YulVariableDeclaration",
															"src": "763:17:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "777:2:8",
																		"nodeType": "YulLiteral",
																		"src": "777:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "773:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "773:3:8"
																},
																"nativeSrc": "773:7:8",
																"nodeType": "YulFunctionCall",
																"src": "773:7:8"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "767:2:8",
																	"nodeType": "YulTypedName",
																	"src": "767:2:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "789:23:8",
															"nodeType": "YulVariableDeclaration",
															"src": "789:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "809:2:8",
																		"nodeType": "YulLiteral",
																		"src": "809:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "803:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "803:5:8"
																},
																"nativeSrc": "803:9:8",
																"nodeType": "YulFunctionCall",
																"src": "803:9:8"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "793:6:8",
																	"nodeType": "YulTypedName",
																	"src": "793:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "821:71:8",
															"nodeType": "YulVariableDeclaration",
															"src": "821:71:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "843:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "843:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "867:2:8",
																										"nodeType": "YulIdentifier",
																										"src": "867:2:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "871:4:8",
																										"nodeType": "YulLiteral",
																										"src": "871:4:8",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "863:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "863:3:8"
																								},
																								"nativeSrc": "863:13:8",
																								"nodeType": "YulFunctionCall",
																								"src": "863:13:8"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "878:2:8",
																								"nodeType": "YulIdentifier",
																								"src": "878:2:8"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "859:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "859:3:8"
																						},
																						"nativeSrc": "859:22:8",
																						"nodeType": "YulFunctionCall",
																						"src": "859:22:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "883:2:8",
																						"nodeType": "YulLiteral",
																						"src": "883:2:8",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "855:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "855:3:8"
																				},
																				"nativeSrc": "855:31:8",
																				"nodeType": "YulFunctionCall",
																				"src": "855:31:8"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "888:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "888:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "851:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "851:3:8"
																		},
																		"nativeSrc": "851:40:8",
																		"nodeType": "YulFunctionCall",
																		"src": "851:40:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "839:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "839:3:8"
																},
																"nativeSrc": "839:53:8",
																"nodeType": "YulFunctionCall",
																"src": "839:53:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "825:10:8",
																	"nodeType": "YulTypedName",
																	"src": "825:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "951:22:8",
																"nodeType": "YulBlock",
																"src": "951:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "953:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "953:16:8"
																			},
																			"nativeSrc": "953:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "953:18:8"
																		},
																		"nativeSrc": "953:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "953:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "910:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "910:10:8"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "922:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "922:2:8"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "907:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "907:2:8"
																		},
																		"nativeSrc": "907:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "907:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "930:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "930:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "942:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "942:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "927:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "927:2:8"
																		},
																		"nativeSrc": "927:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "927:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "904:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "904:2:8"
																},
																"nativeSrc": "904:46:8",
																"nodeType": "YulFunctionCall",
																"src": "904:46:8"
															},
															"nativeSrc": "901:72:8",
															"nodeType": "YulIf",
															"src": "901:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "989:2:8",
																		"nodeType": "YulLiteral",
																		"src": "989:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "993:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "993:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "982:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "982:6:8"
																},
																"nativeSrc": "982:22:8",
																"nodeType": "YulFunctionCall",
																"src": "982:22:8"
															},
															"nativeSrc": "982:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "982:22:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1020:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1020:6:8"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1028:2:8",
																		"nodeType": "YulIdentifier",
																		"src": "1028:2:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1013:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1013:6:8"
																},
																"nativeSrc": "1013:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1013:18:8"
															},
															"nativeSrc": "1013:18:8",
															"nodeType": "YulExpressionStatement",
															"src": "1013:18:8"
														},
														{
															"body": {
																"nativeSrc": "1079:16:8",
																"nodeType": "YulBlock",
																"src": "1079:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1088:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1088:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1091:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1091:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1081:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1081:6:8"
																			},
																			"nativeSrc": "1081:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1081:12:8"
																		},
																		"nativeSrc": "1081:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1081:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "1054:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1054:6:8"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "1062:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "1062:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1050:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1050:3:8"
																				},
																				"nativeSrc": "1050:15:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1050:15:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1067:4:8",
																				"nodeType": "YulLiteral",
																				"src": "1067:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1046:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1046:3:8"
																		},
																		"nativeSrc": "1046:26:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1046:26:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "1074:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "1074:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1043:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1043:2:8"
																},
																"nativeSrc": "1043:35:8",
																"nodeType": "YulFunctionCall",
																"src": "1043:35:8"
															},
															"nativeSrc": "1040:55:8",
															"nodeType": "YulIf",
															"src": "1040:55:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1121:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1121:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1129:4:8",
																				"nodeType": "YulLiteral",
																				"src": "1129:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1117:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1117:3:8"
																		},
																		"nativeSrc": "1117:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1117:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "1140:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1140:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1148:4:8",
																				"nodeType": "YulLiteral",
																				"src": "1148:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1136:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1136:3:8"
																		},
																		"nativeSrc": "1136:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1136:17:8"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1155:2:8",
																		"nodeType": "YulIdentifier",
																		"src": "1155:2:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1104:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1104:12:8"
																},
																"nativeSrc": "1104:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1104:54:8"
															},
															"nativeSrc": "1104:54:8",
															"nodeType": "YulExpressionStatement",
															"src": "1104:54:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "1182:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "1182:6:8"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "1190:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "1190:2:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1178:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "1178:3:8"
																				},
																				"nativeSrc": "1178:15:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1178:15:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1195:4:8",
																				"nodeType": "YulLiteral",
																				"src": "1195:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1174:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1174:3:8"
																		},
																		"nativeSrc": "1174:26:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1174:26:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1202:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1202:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1167:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1167:6:8"
																},
																"nativeSrc": "1167:37:8",
																"nodeType": "YulFunctionCall",
																"src": "1167:37:8"
															},
															"nativeSrc": "1167:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "1167:37:8"
														},
														{
															"nativeSrc": "1213:15:8",
															"nodeType": "YulAssignment",
															"src": "1213:15:8",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1222:6:8",
																"nodeType": "YulIdentifier",
																"src": "1222:6:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1213:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1213:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nativeSrc": "515:719:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "542:6:8",
														"nodeType": "YulTypedName",
														"src": "542:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "550:3:8",
														"nodeType": "YulTypedName",
														"src": "550:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "558:5:8",
														"nodeType": "YulTypedName",
														"src": "558:5:8",
														"type": ""
													}
												],
												"src": "515:719:8"
											},
											{
												"body": {
													"nativeSrc": "1370:408:8",
													"nodeType": "YulBlock",
													"src": "1370:408:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1417:16:8",
																"nodeType": "YulBlock",
																"src": "1417:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1426:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1426:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1429:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1429:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1419:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1419:6:8"
																			},
																			"nativeSrc": "1419:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1419:12:8"
																		},
																		"nativeSrc": "1419:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1419:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1391:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1391:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1400:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1400:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1387:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1387:3:8"
																		},
																		"nativeSrc": "1387:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1387:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1412:3:8",
																		"nodeType": "YulLiteral",
																		"src": "1412:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1383:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1383:3:8"
																},
																"nativeSrc": "1383:33:8",
																"nodeType": "YulFunctionCall",
																"src": "1383:33:8"
															},
															"nativeSrc": "1380:53:8",
															"nodeType": "YulIf",
															"src": "1380:53:8"
														},
														{
															"nativeSrc": "1442:39:8",
															"nodeType": "YulAssignment",
															"src": "1442:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1471:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1471:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1452:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1452:18:8"
																},
																"nativeSrc": "1452:29:8",
																"nodeType": "YulFunctionCall",
																"src": "1452:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1442:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:8"
																}
															]
														},
														{
															"nativeSrc": "1490:42:8",
															"nodeType": "YulAssignment",
															"src": "1490:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1517:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1528:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1528:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1513:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:8"
																		},
																		"nativeSrc": "1513:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1513:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1500:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1500:12:8"
																},
																"nativeSrc": "1500:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1500:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1490:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1490:6:8"
																}
															]
														},
														{
															"nativeSrc": "1541:48:8",
															"nodeType": "YulAssignment",
															"src": "1541:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1574:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1574:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1585:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1585:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1570:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1570:3:8"
																		},
																		"nativeSrc": "1570:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1570:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1551:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1551:18:8"
																},
																"nativeSrc": "1551:38:8",
																"nodeType": "YulFunctionCall",
																"src": "1551:38:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1541:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1541:6:8"
																}
															]
														},
														{
															"nativeSrc": "1598:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "1598:46:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1629:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1629:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1640:2:8",
																				"nodeType": "YulLiteral",
																				"src": "1640:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1625:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1625:3:8"
																		},
																		"nativeSrc": "1625:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1625:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1612:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "1612:12:8"
																},
																"nativeSrc": "1612:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1612:32:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1602:6:8",
																	"nodeType": "YulTypedName",
																	"src": "1602:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1687:16:8",
																"nodeType": "YulBlock",
																"src": "1687:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1696:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1696:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1699:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1699:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1689:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1689:6:8"
																			},
																			"nativeSrc": "1689:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1689:12:8"
																		},
																		"nativeSrc": "1689:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1689:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1659:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1659:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1667:18:8",
																		"nodeType": "YulLiteral",
																		"src": "1667:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1656:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "1656:2:8"
																},
																"nativeSrc": "1656:30:8",
																"nodeType": "YulFunctionCall",
																"src": "1656:30:8"
															},
															"nativeSrc": "1653:50:8",
															"nodeType": "YulIf",
															"src": "1653:50:8"
														},
														{
															"nativeSrc": "1712:60:8",
															"nodeType": "YulAssignment",
															"src": "1712:60:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1744:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1744:9:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1755:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1755:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1740:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1740:3:8"
																		},
																		"nativeSrc": "1740:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1740:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1764:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "1764:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "1722:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1722:17:8"
																},
																"nativeSrc": "1722:50:8",
																"nodeType": "YulFunctionCall",
																"src": "1722:50:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "1712:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1712:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_addresst_string_memory_ptr",
												"nativeSrc": "1239:539:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1312:9:8",
														"nodeType": "YulTypedName",
														"src": "1312:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1323:7:8",
														"nodeType": "YulTypedName",
														"src": "1323:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1335:6:8",
														"nodeType": "YulTypedName",
														"src": "1335:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1343:6:8",
														"nodeType": "YulTypedName",
														"src": "1343:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1351:6:8",
														"nodeType": "YulTypedName",
														"src": "1351:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1359:6:8",
														"nodeType": "YulTypedName",
														"src": "1359:6:8",
														"type": ""
													}
												],
												"src": "1239:539:8"
											},
											{
												"body": {
													"nativeSrc": "1870:173:8",
													"nodeType": "YulBlock",
													"src": "1870:173:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1916:16:8",
																"nodeType": "YulBlock",
																"src": "1916:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1925:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1925:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1928:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1928:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1918:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1918:6:8"
																			},
																			"nativeSrc": "1918:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:12:8"
																		},
																		"nativeSrc": "1918:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1918:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1891:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "1891:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1900:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1900:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1887:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1887:3:8"
																		},
																		"nativeSrc": "1887:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1887:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1912:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1912:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1883:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1883:3:8"
																},
																"nativeSrc": "1883:32:8",
																"nodeType": "YulFunctionCall",
																"src": "1883:32:8"
															},
															"nativeSrc": "1880:52:8",
															"nodeType": "YulIf",
															"src": "1880:52:8"
														},
														{
															"nativeSrc": "1941:39:8",
															"nodeType": "YulAssignment",
															"src": "1941:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1970:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1970:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1951:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1951:18:8"
																},
																"nativeSrc": "1951:29:8",
																"nodeType": "YulFunctionCall",
																"src": "1951:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1941:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1941:6:8"
																}
															]
														},
														{
															"nativeSrc": "1989:48:8",
															"nodeType": "YulAssignment",
															"src": "1989:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2022:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2022:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2033:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2033:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:8"
																		},
																		"nativeSrc": "2018:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1999:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "1999:18:8"
																},
																"nativeSrc": "1999:38:8",
																"nodeType": "YulFunctionCall",
																"src": "1999:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1989:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1989:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "1783:260:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1828:9:8",
														"nodeType": "YulTypedName",
														"src": "1828:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1839:7:8",
														"nodeType": "YulTypedName",
														"src": "1839:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1851:6:8",
														"nodeType": "YulTypedName",
														"src": "1851:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1859:6:8",
														"nodeType": "YulTypedName",
														"src": "1859:6:8",
														"type": ""
													}
												],
												"src": "1783:260:8"
											},
											{
												"body": {
													"nativeSrc": "2149:76:8",
													"nodeType": "YulBlock",
													"src": "2149:76:8",
													"statements": [
														{
															"nativeSrc": "2159:26:8",
															"nodeType": "YulAssignment",
															"src": "2159:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2171:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2171:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2182:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2182:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2167:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2167:3:8"
																},
																"nativeSrc": "2167:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2167:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2159:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2159:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2201:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2201:9:8"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2212:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2212:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2194:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2194:6:8"
																},
																"nativeSrc": "2194:25:8",
																"nodeType": "YulFunctionCall",
																"src": "2194:25:8"
															},
															"nativeSrc": "2194:25:8",
															"nodeType": "YulExpressionStatement",
															"src": "2194:25:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2048:177:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2118:9:8",
														"nodeType": "YulTypedName",
														"src": "2118:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2129:6:8",
														"nodeType": "YulTypedName",
														"src": "2129:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2140:4:8",
														"nodeType": "YulTypedName",
														"src": "2140:4:8",
														"type": ""
													}
												],
												"src": "2048:177:8"
											},
											{
												"body": {
													"nativeSrc": "2327:299:8",
													"nodeType": "YulBlock",
													"src": "2327:299:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2373:16:8",
																"nodeType": "YulBlock",
																"src": "2373:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2382:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2382:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2385:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2385:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2375:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2375:6:8"
																			},
																			"nativeSrc": "2375:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2375:12:8"
																		},
																		"nativeSrc": "2375:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2375:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2348:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2348:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2357:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2357:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2344:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2344:3:8"
																		},
																		"nativeSrc": "2344:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2344:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2369:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2369:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2340:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2340:3:8"
																},
																"nativeSrc": "2340:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2340:32:8"
															},
															"nativeSrc": "2337:52:8",
															"nodeType": "YulIf",
															"src": "2337:52:8"
														},
														{
															"nativeSrc": "2398:37:8",
															"nodeType": "YulVariableDeclaration",
															"src": "2398:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2425:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2425:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2412:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2412:12:8"
																},
																"nativeSrc": "2412:23:8",
																"nodeType": "YulFunctionCall",
																"src": "2412:23:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2402:6:8",
																	"nodeType": "YulTypedName",
																	"src": "2402:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2478:16:8",
																"nodeType": "YulBlock",
																"src": "2478:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2487:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2487:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2490:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2490:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2480:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2480:6:8"
																			},
																			"nativeSrc": "2480:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2480:12:8"
																		},
																		"nativeSrc": "2480:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2480:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2450:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2450:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2458:18:8",
																		"nodeType": "YulLiteral",
																		"src": "2458:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2447:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "2447:2:8"
																},
																"nativeSrc": "2447:30:8",
																"nodeType": "YulFunctionCall",
																"src": "2447:30:8"
															},
															"nativeSrc": "2444:50:8",
															"nodeType": "YulIf",
															"src": "2444:50:8"
														},
														{
															"nativeSrc": "2503:60:8",
															"nodeType": "YulAssignment",
															"src": "2503:60:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2535:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2535:9:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2546:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2546:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2531:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2531:3:8"
																		},
																		"nativeSrc": "2531:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2531:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2555:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "2555:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "2513:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "2513:17:8"
																},
																"nativeSrc": "2513:50:8",
																"nodeType": "YulFunctionCall",
																"src": "2513:50:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2503:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2503:6:8"
																}
															]
														},
														{
															"nativeSrc": "2572:48:8",
															"nodeType": "YulAssignment",
															"src": "2572:48:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2605:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2605:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2616:2:8",
																				"nodeType": "YulLiteral",
																				"src": "2616:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2601:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2601:3:8"
																		},
																		"nativeSrc": "2601:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2601:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2582:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "2582:18:8"
																},
																"nativeSrc": "2582:38:8",
																"nodeType": "YulFunctionCall",
																"src": "2582:38:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2572:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2572:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_address",
												"nativeSrc": "2230:396:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2285:9:8",
														"nodeType": "YulTypedName",
														"src": "2285:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2296:7:8",
														"nodeType": "YulTypedName",
														"src": "2296:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2308:6:8",
														"nodeType": "YulTypedName",
														"src": "2308:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2316:6:8",
														"nodeType": "YulTypedName",
														"src": "2316:6:8",
														"type": ""
													}
												],
												"src": "2230:396:8"
											},
											{
												"body": {
													"nativeSrc": "2726:92:8",
													"nodeType": "YulBlock",
													"src": "2726:92:8",
													"statements": [
														{
															"nativeSrc": "2736:26:8",
															"nodeType": "YulAssignment",
															"src": "2736:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2748:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2748:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2759:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2759:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2744:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2744:3:8"
																},
																"nativeSrc": "2744:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2744:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2736:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2736:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2778:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2778:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "2803:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2803:6:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2796:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "2796:6:8"
																				},
																				"nativeSrc": "2796:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2796:14:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2789:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2789:6:8"
																		},
																		"nativeSrc": "2789:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2789:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2771:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2771:6:8"
																},
																"nativeSrc": "2771:41:8",
																"nodeType": "YulFunctionCall",
																"src": "2771:41:8"
															},
															"nativeSrc": "2771:41:8",
															"nodeType": "YulExpressionStatement",
															"src": "2771:41:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2631:187:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2695:9:8",
														"nodeType": "YulTypedName",
														"src": "2695:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2706:6:8",
														"nodeType": "YulTypedName",
														"src": "2706:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2717:4:8",
														"nodeType": "YulTypedName",
														"src": "2717:4:8",
														"type": ""
													}
												],
												"src": "2631:187:8"
											},
											{
												"body": {
													"nativeSrc": "2924:102:8",
													"nodeType": "YulBlock",
													"src": "2924:102:8",
													"statements": [
														{
															"nativeSrc": "2934:26:8",
															"nodeType": "YulAssignment",
															"src": "2934:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2946:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2946:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2957:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2957:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2942:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2942:3:8"
																},
																"nativeSrc": "2942:18:8",
																"nodeType": "YulFunctionCall",
																"src": "2942:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2934:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "2934:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2976:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "2976:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2991:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2991:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3007:3:8",
																								"nodeType": "YulLiteral",
																								"src": "3007:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3012:1:8",
																								"nodeType": "YulLiteral",
																								"src": "3012:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3003:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "3003:3:8"
																						},
																						"nativeSrc": "3003:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "3003:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3016:1:8",
																						"nodeType": "YulLiteral",
																						"src": "3016:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2999:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2999:3:8"
																				},
																				"nativeSrc": "2999:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2999:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2987:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2987:3:8"
																		},
																		"nativeSrc": "2987:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2987:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2969:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2969:6:8"
																},
																"nativeSrc": "2969:51:8",
																"nodeType": "YulFunctionCall",
																"src": "2969:51:8"
															},
															"nativeSrc": "2969:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "2969:51:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2823:203:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2893:9:8",
														"nodeType": "YulTypedName",
														"src": "2893:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2904:6:8",
														"nodeType": "YulTypedName",
														"src": "2904:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2915:4:8",
														"nodeType": "YulTypedName",
														"src": "2915:4:8",
														"type": ""
													}
												],
												"src": "2823:203:8"
											},
											{
												"body": {
													"nativeSrc": "3145:350:8",
													"nodeType": "YulBlock",
													"src": "3145:350:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3191:16:8",
																"nodeType": "YulBlock",
																"src": "3191:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3200:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3200:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3203:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3203:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3193:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3193:6:8"
																			},
																			"nativeSrc": "3193:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3193:12:8"
																		},
																		"nativeSrc": "3193:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3193:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3166:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3166:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3175:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3175:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3162:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3162:3:8"
																		},
																		"nativeSrc": "3162:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3162:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3187:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3187:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3158:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3158:3:8"
																},
																"nativeSrc": "3158:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3158:32:8"
															},
															"nativeSrc": "3155:52:8",
															"nodeType": "YulIf",
															"src": "3155:52:8"
														},
														{
															"nativeSrc": "3216:39:8",
															"nodeType": "YulAssignment",
															"src": "3216:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3245:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3245:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3226:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3226:18:8"
																},
																"nativeSrc": "3226:29:8",
																"nodeType": "YulFunctionCall",
																"src": "3226:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3216:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3216:6:8"
																}
															]
														},
														{
															"nativeSrc": "3264:42:8",
															"nodeType": "YulAssignment",
															"src": "3264:42:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3291:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3291:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3302:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3302:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3287:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3287:3:8"
																		},
																		"nativeSrc": "3287:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3287:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3274:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3274:12:8"
																},
																"nativeSrc": "3274:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3274:32:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3264:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3264:6:8"
																}
															]
														},
														{
															"nativeSrc": "3315:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3315:46:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3346:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3346:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3357:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3357:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3342:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3342:3:8"
																		},
																		"nativeSrc": "3342:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3342:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3329:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3329:12:8"
																},
																"nativeSrc": "3329:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3329:32:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3319:6:8",
																	"nodeType": "YulTypedName",
																	"src": "3319:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3404:16:8",
																"nodeType": "YulBlock",
																"src": "3404:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3413:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3413:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3416:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3416:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3406:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3406:6:8"
																			},
																			"nativeSrc": "3406:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3406:12:8"
																		},
																		"nativeSrc": "3406:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3406:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3376:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3376:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3384:18:8",
																		"nodeType": "YulLiteral",
																		"src": "3384:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3373:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3373:2:8"
																},
																"nativeSrc": "3373:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3373:30:8"
															},
															"nativeSrc": "3370:50:8",
															"nodeType": "YulIf",
															"src": "3370:50:8"
														},
														{
															"nativeSrc": "3429:60:8",
															"nodeType": "YulAssignment",
															"src": "3429:60:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3461:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3461:9:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3472:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3472:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3457:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3457:3:8"
																		},
																		"nativeSrc": "3457:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3457:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3481:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "3481:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "3439:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "3439:17:8"
																},
																"nativeSrc": "3439:50:8",
																"nodeType": "YulFunctionCall",
																"src": "3439:50:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3429:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3429:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_string_memory_ptr",
												"nativeSrc": "3031:464:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3095:9:8",
														"nodeType": "YulTypedName",
														"src": "3095:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3106:7:8",
														"nodeType": "YulTypedName",
														"src": "3106:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3118:6:8",
														"nodeType": "YulTypedName",
														"src": "3118:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3126:6:8",
														"nodeType": "YulTypedName",
														"src": "3126:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3134:6:8",
														"nodeType": "YulTypedName",
														"src": "3134:6:8",
														"type": ""
													}
												],
												"src": "3031:464:8"
											},
											{
												"body": {
													"nativeSrc": "3570:110:8",
													"nodeType": "YulBlock",
													"src": "3570:110:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3616:16:8",
																"nodeType": "YulBlock",
																"src": "3616:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3625:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3625:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3628:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3628:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3618:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3618:6:8"
																			},
																			"nativeSrc": "3618:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3618:12:8"
																		},
																		"nativeSrc": "3618:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3618:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3591:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3591:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3600:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3600:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3587:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3587:3:8"
																		},
																		"nativeSrc": "3587:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3587:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3612:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3612:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3583:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3583:3:8"
																},
																"nativeSrc": "3583:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3583:32:8"
															},
															"nativeSrc": "3580:52:8",
															"nodeType": "YulIf",
															"src": "3580:52:8"
														},
														{
															"nativeSrc": "3641:33:8",
															"nodeType": "YulAssignment",
															"src": "3641:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3664:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3664:9:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3651:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3651:12:8"
																},
																"nativeSrc": "3651:23:8",
																"nodeType": "YulFunctionCall",
																"src": "3651:23:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3641:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3641:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3500:180:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3536:9:8",
														"nodeType": "YulTypedName",
														"src": "3536:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3547:7:8",
														"nodeType": "YulTypedName",
														"src": "3547:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3559:6:8",
														"nodeType": "YulTypedName",
														"src": "3559:6:8",
														"type": ""
													}
												],
												"src": "3500:180:8"
											},
											{
												"body": {
													"nativeSrc": "3782:299:8",
													"nodeType": "YulBlock",
													"src": "3782:299:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3828:16:8",
																"nodeType": "YulBlock",
																"src": "3828:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3837:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3837:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3840:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3840:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3830:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3830:6:8"
																			},
																			"nativeSrc": "3830:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3830:12:8"
																		},
																		"nativeSrc": "3830:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3830:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3803:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3803:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3812:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3812:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3799:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3799:3:8"
																		},
																		"nativeSrc": "3799:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3799:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3824:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3824:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3795:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3795:3:8"
																},
																"nativeSrc": "3795:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3795:32:8"
															},
															"nativeSrc": "3792:52:8",
															"nodeType": "YulIf",
															"src": "3792:52:8"
														},
														{
															"nativeSrc": "3853:39:8",
															"nodeType": "YulAssignment",
															"src": "3853:39:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3882:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3882:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3863:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "3863:18:8"
																},
																"nativeSrc": "3863:29:8",
																"nodeType": "YulFunctionCall",
																"src": "3863:29:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3853:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3853:6:8"
																}
															]
														},
														{
															"nativeSrc": "3901:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "3901:46:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3932:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3932:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3943:2:8",
																				"nodeType": "YulLiteral",
																				"src": "3943:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3928:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3928:3:8"
																		},
																		"nativeSrc": "3928:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3928:18:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3915:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "3915:12:8"
																},
																"nativeSrc": "3915:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3915:32:8"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3905:6:8",
																	"nodeType": "YulTypedName",
																	"src": "3905:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3990:16:8",
																"nodeType": "YulBlock",
																"src": "3990:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3999:1:8",
																					"nodeType": "YulLiteral",
																					"src": "3999:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4002:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4002:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3992:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "3992:6:8"
																			},
																			"nativeSrc": "3992:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3992:12:8"
																		},
																		"nativeSrc": "3992:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3992:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3962:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3962:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3970:18:8",
																		"nodeType": "YulLiteral",
																		"src": "3970:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3959:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "3959:2:8"
																},
																"nativeSrc": "3959:30:8",
																"nodeType": "YulFunctionCall",
																"src": "3959:30:8"
															},
															"nativeSrc": "3956:50:8",
															"nodeType": "YulIf",
															"src": "3956:50:8"
														},
														{
															"nativeSrc": "4015:60:8",
															"nodeType": "YulAssignment",
															"src": "4015:60:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4047:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4047:9:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "4058:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4058:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4043:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4043:3:8"
																		},
																		"nativeSrc": "4043:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4043:22:8"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4067:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "4067:7:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "4025:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "4025:17:8"
																},
																"nativeSrc": "4025:50:8",
																"nodeType": "YulFunctionCall",
																"src": "4025:50:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4015:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4015:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr",
												"nativeSrc": "3685:396:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3740:9:8",
														"nodeType": "YulTypedName",
														"src": "3740:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3751:7:8",
														"nodeType": "YulTypedName",
														"src": "3751:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3763:6:8",
														"nodeType": "YulTypedName",
														"src": "3763:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3771:6:8",
														"nodeType": "YulTypedName",
														"src": "3771:6:8",
														"type": ""
													}
												],
												"src": "3685:396:8"
											},
											{
												"body": {
													"nativeSrc": "4260:178:8",
													"nodeType": "YulBlock",
													"src": "4260:178:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4277:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4277:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4288:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4288:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4270:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4270:6:8"
																},
																"nativeSrc": "4270:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4270:21:8"
															},
															"nativeSrc": "4270:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "4270:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4311:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4311:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4322:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4322:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4307:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4307:3:8"
																		},
																		"nativeSrc": "4307:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4307:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4327:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4327:2:8",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4300:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4300:6:8"
																},
																"nativeSrc": "4300:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4300:30:8"
															},
															"nativeSrc": "4300:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "4300:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4350:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4350:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4361:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4361:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4346:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4346:3:8"
																		},
																		"nativeSrc": "4346:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4346:18:8"
																	},
																	{
																		"hexValue": "54686973204164647265737320646f6573206e6f7420657869737421",
																		"kind": "string",
																		"nativeSrc": "4366:30:8",
																		"nodeType": "YulLiteral",
																		"src": "4366:30:8",
																		"type": "",
																		"value": "This Address does not exist!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4339:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4339:6:8"
																},
																"nativeSrc": "4339:58:8",
																"nodeType": "YulFunctionCall",
																"src": "4339:58:8"
															},
															"nativeSrc": "4339:58:8",
															"nodeType": "YulExpressionStatement",
															"src": "4339:58:8"
														},
														{
															"nativeSrc": "4406:26:8",
															"nodeType": "YulAssignment",
															"src": "4406:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4418:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4418:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4429:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4429:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4414:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4414:3:8"
																},
																"nativeSrc": "4414:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4414:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4406:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4406:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_96f12f93478a3768b4b822c9ec935962a88f68f145f33917ac63ab3e2a411fe3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4086:352:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4237:9:8",
														"nodeType": "YulTypedName",
														"src": "4237:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4251:4:8",
														"nodeType": "YulTypedName",
														"src": "4251:4:8",
														"type": ""
													}
												],
												"src": "4086:352:8"
											},
											{
												"body": {
													"nativeSrc": "4524:103:8",
													"nodeType": "YulBlock",
													"src": "4524:103:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "4570:16:8",
																"nodeType": "YulBlock",
																"src": "4570:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4579:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4579:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4582:1:8",
																					"nodeType": "YulLiteral",
																					"src": "4582:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4572:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "4572:6:8"
																			},
																			"nativeSrc": "4572:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "4572:12:8"
																		},
																		"nativeSrc": "4572:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "4572:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4545:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4545:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4554:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4554:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4541:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4541:3:8"
																		},
																		"nativeSrc": "4541:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4541:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4566:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4566:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4537:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4537:3:8"
																},
																"nativeSrc": "4537:32:8",
																"nodeType": "YulFunctionCall",
																"src": "4537:32:8"
															},
															"nativeSrc": "4534:52:8",
															"nodeType": "YulIf",
															"src": "4534:52:8"
														},
														{
															"nativeSrc": "4595:26:8",
															"nodeType": "YulAssignment",
															"src": "4595:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4611:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4611:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4605:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "4605:5:8"
																},
																"nativeSrc": "4605:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4605:16:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4595:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4595:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "4443:184:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4490:9:8",
														"nodeType": "YulTypedName",
														"src": "4490:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4501:7:8",
														"nodeType": "YulTypedName",
														"src": "4501:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4513:6:8",
														"nodeType": "YulTypedName",
														"src": "4513:6:8",
														"type": ""
													}
												],
												"src": "4443:184:8"
											},
											{
												"body": {
													"nativeSrc": "4806:170:8",
													"nodeType": "YulBlock",
													"src": "4806:170:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4823:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4823:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4834:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4834:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4816:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4816:6:8"
																},
																"nativeSrc": "4816:21:8",
																"nodeType": "YulFunctionCall",
																"src": "4816:21:8"
															},
															"nativeSrc": "4816:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "4816:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4857:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4857:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4868:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4868:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4853:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4853:3:8"
																		},
																		"nativeSrc": "4853:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4853:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4873:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4873:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4846:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4846:6:8"
																},
																"nativeSrc": "4846:30:8",
																"nodeType": "YulFunctionCall",
																"src": "4846:30:8"
															},
															"nativeSrc": "4846:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "4846:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4896:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4896:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4907:2:8",
																				"nodeType": "YulLiteral",
																				"src": "4907:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4892:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4892:3:8"
																		},
																		"nativeSrc": "4892:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4892:18:8"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "4912:22:8",
																		"nodeType": "YulLiteral",
																		"src": "4912:22:8",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4885:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4885:6:8"
																},
																"nativeSrc": "4885:50:8",
																"nodeType": "YulFunctionCall",
																"src": "4885:50:8"
															},
															"nativeSrc": "4885:50:8",
															"nodeType": "YulExpressionStatement",
															"src": "4885:50:8"
														},
														{
															"nativeSrc": "4944:26:8",
															"nodeType": "YulAssignment",
															"src": "4944:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4956:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4956:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4967:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4967:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4952:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4952:3:8"
																},
																"nativeSrc": "4952:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4952:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4944:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4944:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4632:344:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4783:9:8",
														"nodeType": "YulTypedName",
														"src": "4783:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4797:4:8",
														"nodeType": "YulTypedName",
														"src": "4797:4:8",
														"type": ""
													}
												],
												"src": "4632:344:8"
											},
											{
												"body": {
													"nativeSrc": "5013:95:8",
													"nodeType": "YulBlock",
													"src": "5013:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5030:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5030:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5037:3:8",
																				"nodeType": "YulLiteral",
																				"src": "5037:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5042:10:8",
																				"nodeType": "YulLiteral",
																				"src": "5042:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5033:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5033:3:8"
																		},
																		"nativeSrc": "5033:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5033:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5023:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5023:6:8"
																},
																"nativeSrc": "5023:31:8",
																"nodeType": "YulFunctionCall",
																"src": "5023:31:8"
															},
															"nativeSrc": "5023:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "5023:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5070:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5070:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5073:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5073:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5063:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5063:6:8"
																},
																"nativeSrc": "5063:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5063:15:8"
															},
															"nativeSrc": "5063:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5063:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5094:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5094:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5097:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5097:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5087:6:8"
																},
																"nativeSrc": "5087:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5087:15:8"
															},
															"nativeSrc": "5087:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5087:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4981:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "4981:127:8"
											},
											{
												"body": {
													"nativeSrc": "5162:79:8",
													"nodeType": "YulBlock",
													"src": "5162:79:8",
													"statements": [
														{
															"nativeSrc": "5172:17:8",
															"nodeType": "YulAssignment",
															"src": "5172:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5184:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5184:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5187:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5187:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5180:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5180:3:8"
																},
																"nativeSrc": "5180:9:8",
																"nodeType": "YulFunctionCall",
																"src": "5180:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "5172:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5172:4:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5213:22:8",
																"nodeType": "YulBlock",
																"src": "5213:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5215:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5215:16:8"
																			},
																			"nativeSrc": "5215:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5215:18:8"
																		},
																		"nativeSrc": "5215:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5215:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "5204:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5204:4:8"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "5210:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5210:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5201:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5201:2:8"
																},
																"nativeSrc": "5201:11:8",
																"nodeType": "YulFunctionCall",
																"src": "5201:11:8"
															},
															"nativeSrc": "5198:37:8",
															"nodeType": "YulIf",
															"src": "5198:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "5113:128:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5144:1:8",
														"nodeType": "YulTypedName",
														"src": "5144:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5147:1:8",
														"nodeType": "YulTypedName",
														"src": "5147:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "5153:4:8",
														"nodeType": "YulTypedName",
														"src": "5153:4:8",
														"type": ""
													}
												],
												"src": "5113:128:8"
											},
											{
												"body": {
													"nativeSrc": "5312:184:8",
													"nodeType": "YulBlock",
													"src": "5312:184:8",
													"statements": [
														{
															"nativeSrc": "5322:10:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5322:10:8",
															"value": {
																"kind": "number",
																"nativeSrc": "5331:1:8",
																"nodeType": "YulLiteral",
																"src": "5331:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "5326:1:8",
																	"nodeType": "YulTypedName",
																	"src": "5326:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5391:63:8",
																"nodeType": "YulBlock",
																"src": "5391:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "5416:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "5416:3:8"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "5421:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "5421:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5412:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "5412:3:8"
																					},
																					"nativeSrc": "5412:11:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5412:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "5435:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "5435:3:8"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "5440:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "5440:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5431:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "5431:3:8"
																							},
																							"nativeSrc": "5431:11:8",
																							"nodeType": "YulFunctionCall",
																							"src": "5431:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "5425:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "5425:5:8"
																					},
																					"nativeSrc": "5425:18:8",
																					"nodeType": "YulFunctionCall",
																					"src": "5425:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5405:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5405:6:8"
																			},
																			"nativeSrc": "5405:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5405:39:8"
																		},
																		"nativeSrc": "5405:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5405:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "5352:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5352:1:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5355:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5355:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5349:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5349:2:8"
																},
																"nativeSrc": "5349:13:8",
																"nodeType": "YulFunctionCall",
																"src": "5349:13:8"
															},
															"nativeSrc": "5341:113:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5363:19:8",
																"nodeType": "YulBlock",
																"src": "5363:19:8",
																"statements": [
																	{
																		"nativeSrc": "5365:15:8",
																		"nodeType": "YulAssignment",
																		"src": "5365:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "5374:1:8",
																					"nodeType": "YulIdentifier",
																					"src": "5374:1:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5377:2:8",
																					"nodeType": "YulLiteral",
																					"src": "5377:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5370:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5370:3:8"
																			},
																			"nativeSrc": "5370:10:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5370:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "5365:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "5365:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5345:3:8",
																"nodeType": "YulBlock",
																"src": "5345:3:8",
																"statements": []
															},
															"src": "5341:113:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "5474:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "5474:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5479:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5479:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5470:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5470:3:8"
																		},
																		"nativeSrc": "5470:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5470:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5488:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5488:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5463:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5463:6:8"
																},
																"nativeSrc": "5463:27:8",
																"nodeType": "YulFunctionCall",
																"src": "5463:27:8"
															},
															"nativeSrc": "5463:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "5463:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "5246:250:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5290:3:8",
														"nodeType": "YulTypedName",
														"src": "5290:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "5295:3:8",
														"nodeType": "YulTypedName",
														"src": "5295:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5300:6:8",
														"nodeType": "YulTypedName",
														"src": "5300:6:8",
														"type": ""
													}
												],
												"src": "5246:250:8"
											},
											{
												"body": {
													"nativeSrc": "5640:150:8",
													"nodeType": "YulBlock",
													"src": "5640:150:8",
													"statements": [
														{
															"nativeSrc": "5650:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5650:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5670:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5670:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5664:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "5664:5:8"
																},
																"nativeSrc": "5664:13:8",
																"nodeType": "YulFunctionCall",
																"src": "5664:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5654:6:8",
																	"nodeType": "YulTypedName",
																	"src": "5654:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5725:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5725:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5733:4:8",
																				"nodeType": "YulLiteral",
																				"src": "5733:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5721:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "5721:3:8"
																		},
																		"nativeSrc": "5721:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5721:17:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "5740:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5740:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5745:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5745:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "5686:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "5686:34:8"
																},
																"nativeSrc": "5686:66:8",
																"nodeType": "YulFunctionCall",
																"src": "5686:66:8"
															},
															"nativeSrc": "5686:66:8",
															"nodeType": "YulExpressionStatement",
															"src": "5686:66:8"
														},
														{
															"nativeSrc": "5761:23:8",
															"nodeType": "YulAssignment",
															"src": "5761:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5772:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5772:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5777:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5777:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5768:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5768:3:8"
																},
																"nativeSrc": "5768:16:8",
																"nodeType": "YulFunctionCall",
																"src": "5768:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5761:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5761:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "5501:289:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5616:3:8",
														"nodeType": "YulTypedName",
														"src": "5616:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5621:6:8",
														"nodeType": "YulTypedName",
														"src": "5621:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5632:3:8",
														"nodeType": "YulTypedName",
														"src": "5632:3:8",
														"type": ""
													}
												],
												"src": "5501:289:8"
											},
											{
												"body": {
													"nativeSrc": "5843:77:8",
													"nodeType": "YulBlock",
													"src": "5843:77:8",
													"statements": [
														{
															"nativeSrc": "5853:16:8",
															"nodeType": "YulAssignment",
															"src": "5853:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5864:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5864:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5867:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5867:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5860:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5860:3:8"
																},
																"nativeSrc": "5860:9:8",
																"nodeType": "YulFunctionCall",
																"src": "5860:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5853:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5853:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5892:22:8",
																"nodeType": "YulBlock",
																"src": "5892:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5894:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5894:16:8"
																			},
																			"nativeSrc": "5894:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5894:18:8"
																		},
																		"nativeSrc": "5894:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5894:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5884:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "5884:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5887:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "5887:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5881:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5881:2:8"
																},
																"nativeSrc": "5881:10:8",
																"nodeType": "YulFunctionCall",
																"src": "5881:10:8"
															},
															"nativeSrc": "5878:36:8",
															"nodeType": "YulIf",
															"src": "5878:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5795:125:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5826:1:8",
														"nodeType": "YulTypedName",
														"src": "5826:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5829:1:8",
														"nodeType": "YulTypedName",
														"src": "5829:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5835:3:8",
														"nodeType": "YulTypedName",
														"src": "5835:3:8",
														"type": ""
													}
												],
												"src": "5795:125:8"
											},
											{
												"body": {
													"nativeSrc": "6054:145:8",
													"nodeType": "YulBlock",
													"src": "6054:145:8",
													"statements": [
														{
															"nativeSrc": "6064:26:8",
															"nodeType": "YulAssignment",
															"src": "6064:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6076:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6076:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6087:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6087:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6072:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6072:3:8"
																},
																"nativeSrc": "6072:18:8",
																"nodeType": "YulFunctionCall",
																"src": "6072:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6064:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "6064:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6106:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6106:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6121:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6121:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6137:3:8",
																								"nodeType": "YulLiteral",
																								"src": "6137:3:8",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6142:1:8",
																								"nodeType": "YulLiteral",
																								"src": "6142:1:8",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6133:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "6133:3:8"
																						},
																						"nativeSrc": "6133:11:8",
																						"nodeType": "YulFunctionCall",
																						"src": "6133:11:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6146:1:8",
																						"nodeType": "YulLiteral",
																						"src": "6146:1:8",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6129:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6129:3:8"
																				},
																				"nativeSrc": "6129:19:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6129:19:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6117:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6117:3:8"
																		},
																		"nativeSrc": "6117:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6117:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6099:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6099:6:8"
																},
																"nativeSrc": "6099:51:8",
																"nodeType": "YulFunctionCall",
																"src": "6099:51:8"
															},
															"nativeSrc": "6099:51:8",
															"nodeType": "YulExpressionStatement",
															"src": "6099:51:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6170:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6170:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6181:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6181:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6166:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6166:3:8"
																		},
																		"nativeSrc": "6166:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6166:18:8"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "6186:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6186:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6159:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6159:6:8"
																},
																"nativeSrc": "6159:34:8",
																"nodeType": "YulFunctionCall",
																"src": "6159:34:8"
															},
															"nativeSrc": "6159:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "6159:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5925:274:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6015:9:8",
														"nodeType": "YulTypedName",
														"src": "6015:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6026:6:8",
														"nodeType": "YulTypedName",
														"src": "6026:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6034:6:8",
														"nodeType": "YulTypedName",
														"src": "6034:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6045:4:8",
														"nodeType": "YulTypedName",
														"src": "6045:4:8",
														"type": ""
													}
												],
												"src": "5925:274:8"
											},
											{
												"body": {
													"nativeSrc": "6256:116:8",
													"nodeType": "YulBlock",
													"src": "6256:116:8",
													"statements": [
														{
															"nativeSrc": "6266:20:8",
															"nodeType": "YulAssignment",
															"src": "6266:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6281:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6281:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6284:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6284:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6277:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6277:3:8"
																},
																"nativeSrc": "6277:9:8",
																"nodeType": "YulFunctionCall",
																"src": "6277:9:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6266:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "6266:7:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6344:22:8",
																"nodeType": "YulBlock",
																"src": "6344:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6346:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "6346:16:8"
																			},
																			"nativeSrc": "6346:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6346:18:8"
																		},
																		"nativeSrc": "6346:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6346:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "6315:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "6315:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6308:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "6308:6:8"
																				},
																				"nativeSrc": "6308:9:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6308:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6322:1:8",
																						"nodeType": "YulIdentifier",
																						"src": "6322:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6329:7:8",
																								"nodeType": "YulIdentifier",
																								"src": "6329:7:8"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6338:1:8",
																								"nodeType": "YulIdentifier",
																								"src": "6338:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6325:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "6325:3:8"
																						},
																						"nativeSrc": "6325:15:8",
																						"nodeType": "YulFunctionCall",
																						"src": "6325:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6319:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "6319:2:8"
																				},
																				"nativeSrc": "6319:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6319:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6305:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "6305:2:8"
																		},
																		"nativeSrc": "6305:37:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6305:37:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6298:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6298:6:8"
																},
																"nativeSrc": "6298:45:8",
																"nodeType": "YulFunctionCall",
																"src": "6298:45:8"
															},
															"nativeSrc": "6295:71:8",
															"nodeType": "YulIf",
															"src": "6295:71:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6204:168:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6235:1:8",
														"nodeType": "YulTypedName",
														"src": "6235:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6238:1:8",
														"nodeType": "YulTypedName",
														"src": "6238:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6244:7:8",
														"nodeType": "YulTypedName",
														"src": "6244:7:8",
														"type": ""
													}
												],
												"src": "6204:168:8"
											},
											{
												"body": {
													"nativeSrc": "6423:171:8",
													"nodeType": "YulBlock",
													"src": "6423:171:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6454:111:8",
																"nodeType": "YulBlock",
																"src": "6454:111:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6475:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6475:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6482:3:8",
																							"nodeType": "YulLiteral",
																							"src": "6482:3:8",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "6487:10:8",
																							"nodeType": "YulLiteral",
																							"src": "6487:10:8",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "6478:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6478:3:8"
																					},
																					"nativeSrc": "6478:20:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6478:20:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6468:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6468:6:8"
																			},
																			"nativeSrc": "6468:31:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6468:31:8"
																		},
																		"nativeSrc": "6468:31:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6468:31:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6519:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6519:1:8",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6522:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6522:4:8",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6512:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6512:6:8"
																			},
																			"nativeSrc": "6512:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6512:15:8"
																		},
																		"nativeSrc": "6512:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6512:15:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6547:1:8",
																					"nodeType": "YulLiteral",
																					"src": "6547:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6550:4:8",
																					"nodeType": "YulLiteral",
																					"src": "6550:4:8",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6540:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6540:6:8"
																			},
																			"nativeSrc": "6540:15:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6540:15:8"
																		},
																		"nativeSrc": "6540:15:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6540:15:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6443:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6443:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6436:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6436:6:8"
																},
																"nativeSrc": "6436:9:8",
																"nodeType": "YulFunctionCall",
																"src": "6436:9:8"
															},
															"nativeSrc": "6433:132:8",
															"nodeType": "YulIf",
															"src": "6433:132:8"
														},
														{
															"nativeSrc": "6574:14:8",
															"nodeType": "YulAssignment",
															"src": "6574:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6583:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6583:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6586:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "6586:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6579:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6579:3:8"
																},
																"nativeSrc": "6579:9:8",
																"nodeType": "YulFunctionCall",
																"src": "6579:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6574:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "6574:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "6377:217:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6408:1:8",
														"nodeType": "YulTypedName",
														"src": "6408:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6411:1:8",
														"nodeType": "YulTypedName",
														"src": "6411:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "6417:1:8",
														"nodeType": "YulTypedName",
														"src": "6417:1:8",
														"type": ""
													}
												],
												"src": "6377:217:8"
											},
											{
												"body": {
													"nativeSrc": "6631:95:8",
													"nodeType": "YulBlock",
													"src": "6631:95:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6648:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6648:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6655:3:8",
																				"nodeType": "YulLiteral",
																				"src": "6655:3:8",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6660:10:8",
																				"nodeType": "YulLiteral",
																				"src": "6660:10:8",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6651:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6651:3:8"
																		},
																		"nativeSrc": "6651:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6651:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6641:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6641:6:8"
																},
																"nativeSrc": "6641:31:8",
																"nodeType": "YulFunctionCall",
																"src": "6641:31:8"
															},
															"nativeSrc": "6641:31:8",
															"nodeType": "YulExpressionStatement",
															"src": "6641:31:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6688:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6688:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6691:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6691:4:8",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6681:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6681:6:8"
																},
																"nativeSrc": "6681:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6681:15:8"
															},
															"nativeSrc": "6681:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6681:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6712:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6712:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6715:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6715:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6705:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6705:6:8"
																},
																"nativeSrc": "6705:15:8",
																"nodeType": "YulFunctionCall",
																"src": "6705:15:8"
															},
															"nativeSrc": "6705:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "6705:15:8"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "6599:127:8",
												"nodeType": "YulFunctionDefinition",
												"src": "6599:127:8"
											},
											{
												"body": {
													"nativeSrc": "6905:226:8",
													"nodeType": "YulBlock",
													"src": "6905:226:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6922:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "6922:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6933:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6933:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6915:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6915:6:8"
																},
																"nativeSrc": "6915:21:8",
																"nodeType": "YulFunctionCall",
																"src": "6915:21:8"
															},
															"nativeSrc": "6915:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "6915:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6956:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6956:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6967:2:8",
																				"nodeType": "YulLiteral",
																				"src": "6967:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6952:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6952:3:8"
																		},
																		"nativeSrc": "6952:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6952:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6972:2:8",
																		"nodeType": "YulLiteral",
																		"src": "6972:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6945:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6945:6:8"
																},
																"nativeSrc": "6945:30:8",
																"nodeType": "YulFunctionCall",
																"src": "6945:30:8"
															},
															"nativeSrc": "6945:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "6945:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6995:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6995:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7006:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7006:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6991:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6991:3:8"
																		},
																		"nativeSrc": "6991:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6991:18:8"
																	},
																	{
																		"hexValue": "54686973204164647265737320697320616c72656164792057686974654c6973",
																		"kind": "string",
																		"nativeSrc": "7011:34:8",
																		"nodeType": "YulLiteral",
																		"src": "7011:34:8",
																		"type": "",
																		"value": "This Address is already WhiteLis"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6984:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6984:6:8"
																},
																"nativeSrc": "6984:62:8",
																"nodeType": "YulFunctionCall",
																"src": "6984:62:8"
															},
															"nativeSrc": "6984:62:8",
															"nodeType": "YulExpressionStatement",
															"src": "6984:62:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7066:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7066:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7077:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7077:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7062:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7062:3:8"
																		},
																		"nativeSrc": "7062:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7062:18:8"
																	},
																	{
																		"hexValue": "74656421",
																		"kind": "string",
																		"nativeSrc": "7082:6:8",
																		"nodeType": "YulLiteral",
																		"src": "7082:6:8",
																		"type": "",
																		"value": "ted!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7055:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7055:6:8"
																},
																"nativeSrc": "7055:34:8",
																"nodeType": "YulFunctionCall",
																"src": "7055:34:8"
															},
															"nativeSrc": "7055:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "7055:34:8"
														},
														{
															"nativeSrc": "7098:27:8",
															"nodeType": "YulAssignment",
															"src": "7098:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7110:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7110:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7121:3:8",
																		"nodeType": "YulLiteral",
																		"src": "7121:3:8",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7106:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7106:3:8"
																},
																"nativeSrc": "7106:19:8",
																"nodeType": "YulFunctionCall",
																"src": "7106:19:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7098:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7098:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_69cc1d0091f450c9f1b40951e04a8e02ae8a28f18820a3d492d53b3c2bca82f7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6731:400:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6882:9:8",
														"nodeType": "YulTypedName",
														"src": "6882:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6896:4:8",
														"nodeType": "YulTypedName",
														"src": "6896:4:8",
														"type": ""
													}
												],
												"src": "6731:400:8"
											},
											{
												"body": {
													"nativeSrc": "7265:175:8",
													"nodeType": "YulBlock",
													"src": "7265:175:8",
													"statements": [
														{
															"nativeSrc": "7275:26:8",
															"nodeType": "YulAssignment",
															"src": "7275:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7287:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7287:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7298:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7298:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7283:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7283:3:8"
																},
																"nativeSrc": "7283:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7283:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7275:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7275:4:8"
																}
															]
														},
														{
															"nativeSrc": "7310:29:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7310:29:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7328:3:8",
																				"nodeType": "YulLiteral",
																				"src": "7328:3:8",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7333:1:8",
																				"nodeType": "YulLiteral",
																				"src": "7333:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7324:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7324:3:8"
																		},
																		"nativeSrc": "7324:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7324:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7337:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7337:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7320:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7320:3:8"
																},
																"nativeSrc": "7320:19:8",
																"nodeType": "YulFunctionCall",
																"src": "7320:19:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "7314:2:8",
																	"nodeType": "YulTypedName",
																	"src": "7314:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7355:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7355:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7370:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7370:6:8"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "7378:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "7378:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7366:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7366:3:8"
																		},
																		"nativeSrc": "7366:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7366:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7348:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7348:6:8"
																},
																"nativeSrc": "7348:34:8",
																"nodeType": "YulFunctionCall",
																"src": "7348:34:8"
															},
															"nativeSrc": "7348:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "7348:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7402:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7402:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7413:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7413:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7398:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7398:3:8"
																		},
																		"nativeSrc": "7398:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7398:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7422:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7422:6:8"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "7430:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "7430:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7418:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7418:3:8"
																		},
																		"nativeSrc": "7418:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7418:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7391:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7391:6:8"
																},
																"nativeSrc": "7391:43:8",
																"nodeType": "YulFunctionCall",
																"src": "7391:43:8"
															},
															"nativeSrc": "7391:43:8",
															"nodeType": "YulExpressionStatement",
															"src": "7391:43:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "7136:304:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7226:9:8",
														"nodeType": "YulTypedName",
														"src": "7226:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7237:6:8",
														"nodeType": "YulTypedName",
														"src": "7237:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7245:6:8",
														"nodeType": "YulTypedName",
														"src": "7245:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7256:4:8",
														"nodeType": "YulTypedName",
														"src": "7256:4:8",
														"type": ""
													}
												],
												"src": "7136:304:8"
											},
											{
												"body": {
													"nativeSrc": "7619:167:8",
													"nodeType": "YulBlock",
													"src": "7619:167:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7636:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7636:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7647:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7647:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7629:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7629:6:8"
																},
																"nativeSrc": "7629:21:8",
																"nodeType": "YulFunctionCall",
																"src": "7629:21:8"
															},
															"nativeSrc": "7629:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "7629:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7670:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7670:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7681:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7681:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7666:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7666:3:8"
																		},
																		"nativeSrc": "7666:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7666:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7686:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7686:2:8",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7659:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7659:6:8"
																},
																"nativeSrc": "7659:30:8",
																"nodeType": "YulFunctionCall",
																"src": "7659:30:8"
															},
															"nativeSrc": "7659:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "7659:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7709:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7709:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7720:2:8",
																				"nodeType": "YulLiteral",
																				"src": "7720:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7705:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7705:3:8"
																		},
																		"nativeSrc": "7705:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7705:18:8"
																	},
																	{
																		"hexValue": "416c6c6f77616e6365206e6f7420736574",
																		"kind": "string",
																		"nativeSrc": "7725:19:8",
																		"nodeType": "YulLiteral",
																		"src": "7725:19:8",
																		"type": "",
																		"value": "Allowance not set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7698:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "7698:6:8"
																},
																"nativeSrc": "7698:47:8",
																"nodeType": "YulFunctionCall",
																"src": "7698:47:8"
															},
															"nativeSrc": "7698:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "7698:47:8"
														},
														{
															"nativeSrc": "7754:26:8",
															"nodeType": "YulAssignment",
															"src": "7754:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7766:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7766:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7777:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7777:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7762:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7762:3:8"
																},
																"nativeSrc": "7762:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7762:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7754:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7754:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b7f5bbf01babd612ff41adb253311ab3eccd8d56664e3b6ae54fa2e62b1bbfb0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7445:341:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7596:9:8",
														"nodeType": "YulTypedName",
														"src": "7596:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7610:4:8",
														"nodeType": "YulTypedName",
														"src": "7610:4:8",
														"type": ""
													}
												],
												"src": "7445:341:8"
											},
											{
												"body": {
													"nativeSrc": "7948:218:8",
													"nodeType": "YulBlock",
													"src": "7948:218:8",
													"statements": [
														{
															"nativeSrc": "7958:26:8",
															"nodeType": "YulAssignment",
															"src": "7958:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7970:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "7970:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7981:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7981:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7966:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7966:3:8"
																},
																"nativeSrc": "7966:18:8",
																"nodeType": "YulFunctionCall",
																"src": "7966:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7958:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "7958:4:8"
																}
															]
														},
														{
															"nativeSrc": "7993:29:8",
															"nodeType": "YulVariableDeclaration",
															"src": "7993:29:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8011:3:8",
																				"nodeType": "YulLiteral",
																				"src": "8011:3:8",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8016:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8016:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8007:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8007:3:8"
																		},
																		"nativeSrc": "8007:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8007:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8020:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8020:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8003:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8003:3:8"
																},
																"nativeSrc": "8003:19:8",
																"nodeType": "YulFunctionCall",
																"src": "8003:19:8"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "7997:2:8",
																	"nodeType": "YulTypedName",
																	"src": "7997:2:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8038:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8038:9:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8053:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8053:6:8"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "8061:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "8061:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8049:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8049:3:8"
																		},
																		"nativeSrc": "8049:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8049:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8031:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8031:6:8"
																},
																"nativeSrc": "8031:34:8",
																"nodeType": "YulFunctionCall",
																"src": "8031:34:8"
															},
															"nativeSrc": "8031:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "8031:34:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8085:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8085:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8096:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8096:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8081:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8081:3:8"
																		},
																		"nativeSrc": "8081:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8081:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "8105:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8105:6:8"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "8113:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "8113:2:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8101:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8101:3:8"
																		},
																		"nativeSrc": "8101:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8101:15:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8074:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8074:6:8"
																},
																"nativeSrc": "8074:43:8",
																"nodeType": "YulFunctionCall",
																"src": "8074:43:8"
															},
															"nativeSrc": "8074:43:8",
															"nodeType": "YulExpressionStatement",
															"src": "8074:43:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8137:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8137:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8148:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8148:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8133:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8133:3:8"
																		},
																		"nativeSrc": "8133:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8133:18:8"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8153:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8153:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8126:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8126:6:8"
																},
																"nativeSrc": "8126:34:8",
																"nodeType": "YulFunctionCall",
																"src": "8126:34:8"
															},
															"nativeSrc": "8126:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "8126:34:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7791:375:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7901:9:8",
														"nodeType": "YulTypedName",
														"src": "7901:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7912:6:8",
														"nodeType": "YulTypedName",
														"src": "7912:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7920:6:8",
														"nodeType": "YulTypedName",
														"src": "7920:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7928:6:8",
														"nodeType": "YulTypedName",
														"src": "7928:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7939:4:8",
														"nodeType": "YulTypedName",
														"src": "7939:4:8",
														"type": ""
													}
												],
												"src": "7791:375:8"
											},
											{
												"body": {
													"nativeSrc": "8249:199:8",
													"nodeType": "YulBlock",
													"src": "8249:199:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "8295:16:8",
																"nodeType": "YulBlock",
																"src": "8295:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8304:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8304:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8307:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8307:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8297:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8297:6:8"
																			},
																			"nativeSrc": "8297:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8297:12:8"
																		},
																		"nativeSrc": "8297:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8297:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8270:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8270:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8279:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8279:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8266:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8266:3:8"
																		},
																		"nativeSrc": "8266:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8266:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8291:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8291:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8262:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8262:3:8"
																},
																"nativeSrc": "8262:32:8",
																"nodeType": "YulFunctionCall",
																"src": "8262:32:8"
															},
															"nativeSrc": "8259:52:8",
															"nodeType": "YulIf",
															"src": "8259:52:8"
														},
														{
															"nativeSrc": "8320:29:8",
															"nodeType": "YulVariableDeclaration",
															"src": "8320:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8339:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8339:9:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8333:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8333:5:8"
																},
																"nativeSrc": "8333:16:8",
																"nodeType": "YulFunctionCall",
																"src": "8333:16:8"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "8324:5:8",
																	"nodeType": "YulTypedName",
																	"src": "8324:5:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8402:16:8",
																"nodeType": "YulBlock",
																"src": "8402:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8411:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8411:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8414:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8414:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8404:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8404:6:8"
																			},
																			"nativeSrc": "8404:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8404:12:8"
																		},
																		"nativeSrc": "8404:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8404:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8371:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8371:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "8392:5:8",
																								"nodeType": "YulIdentifier",
																								"src": "8392:5:8"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "8385:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "8385:6:8"
																						},
																						"nativeSrc": "8385:13:8",
																						"nodeType": "YulFunctionCall",
																						"src": "8385:13:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "8378:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "8378:6:8"
																				},
																				"nativeSrc": "8378:21:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8378:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8368:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "8368:2:8"
																		},
																		"nativeSrc": "8368:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8368:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8361:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8361:6:8"
																},
																"nativeSrc": "8361:40:8",
																"nodeType": "YulFunctionCall",
																"src": "8361:40:8"
															},
															"nativeSrc": "8358:60:8",
															"nodeType": "YulIf",
															"src": "8358:60:8"
														},
														{
															"nativeSrc": "8427:15:8",
															"nodeType": "YulAssignment",
															"src": "8427:15:8",
															"value": {
																"name": "value",
																"nativeSrc": "8437:5:8",
																"nodeType": "YulIdentifier",
																"src": "8437:5:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8427:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8427:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "8171:277:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8215:9:8",
														"nodeType": "YulTypedName",
														"src": "8215:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8226:7:8",
														"nodeType": "YulTypedName",
														"src": "8226:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8238:6:8",
														"nodeType": "YulTypedName",
														"src": "8238:6:8",
														"type": ""
													}
												],
												"src": "8171:277:8"
											},
											{
												"body": {
													"nativeSrc": "8512:120:8",
													"nodeType": "YulBlock",
													"src": "8512:120:8",
													"statements": [
														{
															"nativeSrc": "8522:22:8",
															"nodeType": "YulAssignment",
															"src": "8522:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8537:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8537:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8531:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8531:5:8"
																},
																"nativeSrc": "8531:13:8",
																"nodeType": "YulFunctionCall",
																"src": "8531:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8522:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8522:5:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8610:16:8",
																"nodeType": "YulBlock",
																"src": "8610:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8619:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8619:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8622:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8622:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8612:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8612:6:8"
																			},
																			"nativeSrc": "8612:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8612:12:8"
																		},
																		"nativeSrc": "8612:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8612:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8566:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8566:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8577:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "8577:5:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8584:22:8",
																						"nodeType": "YulLiteral",
																						"src": "8584:22:8",
																						"type": "",
																						"value": "0xffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "8573:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8573:3:8"
																				},
																				"nativeSrc": "8573:34:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8573:34:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8563:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "8563:2:8"
																		},
																		"nativeSrc": "8563:45:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8563:45:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8556:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8556:6:8"
																},
																"nativeSrc": "8556:53:8",
																"nodeType": "YulFunctionCall",
																"src": "8556:53:8"
															},
															"nativeSrc": "8553:73:8",
															"nodeType": "YulIf",
															"src": "8553:73:8"
														}
													]
												},
												"name": "abi_decode_uint80_fromMemory",
												"nativeSrc": "8453:179:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8491:6:8",
														"nodeType": "YulTypedName",
														"src": "8491:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8502:5:8",
														"nodeType": "YulTypedName",
														"src": "8502:5:8",
														"type": ""
													}
												],
												"src": "8453:179:8"
											},
											{
												"body": {
													"nativeSrc": "8783:327:8",
													"nodeType": "YulBlock",
													"src": "8783:327:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "8830:16:8",
																"nodeType": "YulBlock",
																"src": "8830:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8839:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8839:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8842:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8842:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8832:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8832:6:8"
																			},
																			"nativeSrc": "8832:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8832:12:8"
																		},
																		"nativeSrc": "8832:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8832:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8804:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8804:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8813:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8813:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8800:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8800:3:8"
																		},
																		"nativeSrc": "8800:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8800:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8825:3:8",
																		"nodeType": "YulLiteral",
																		"src": "8825:3:8",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8796:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8796:3:8"
																},
																"nativeSrc": "8796:33:8",
																"nodeType": "YulFunctionCall",
																"src": "8796:33:8"
															},
															"nativeSrc": "8793:53:8",
															"nodeType": "YulIf",
															"src": "8793:53:8"
														},
														{
															"nativeSrc": "8855:49:8",
															"nodeType": "YulAssignment",
															"src": "8855:49:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8894:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8894:9:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nativeSrc": "8865:28:8",
																	"nodeType": "YulIdentifier",
																	"src": "8865:28:8"
																},
																"nativeSrc": "8865:39:8",
																"nodeType": "YulFunctionCall",
																"src": "8865:39:8"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8855:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8855:6:8"
																}
															]
														},
														{
															"nativeSrc": "8913:35:8",
															"nodeType": "YulAssignment",
															"src": "8913:35:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8933:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8933:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8944:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8944:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8929:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8929:3:8"
																		},
																		"nativeSrc": "8929:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8929:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8923:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8923:5:8"
																},
																"nativeSrc": "8923:25:8",
																"nodeType": "YulFunctionCall",
																"src": "8923:25:8"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "8913:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8913:6:8"
																}
															]
														},
														{
															"nativeSrc": "8957:35:8",
															"nodeType": "YulAssignment",
															"src": "8957:35:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8977:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8977:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8988:2:8",
																				"nodeType": "YulLiteral",
																				"src": "8988:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8973:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8973:3:8"
																		},
																		"nativeSrc": "8973:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8973:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8967:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8967:5:8"
																},
																"nativeSrc": "8967:25:8",
																"nodeType": "YulFunctionCall",
																"src": "8967:25:8"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "8957:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8957:6:8"
																}
															]
														},
														{
															"nativeSrc": "9001:35:8",
															"nodeType": "YulAssignment",
															"src": "9001:35:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9021:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9021:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9032:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9032:2:8",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9017:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9017:3:8"
																		},
																		"nativeSrc": "9017:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9017:18:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9011:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9011:5:8"
																},
																"nativeSrc": "9011:25:8",
																"nodeType": "YulFunctionCall",
																"src": "9011:25:8"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "9001:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9001:6:8"
																}
															]
														},
														{
															"nativeSrc": "9045:59:8",
															"nodeType": "YulAssignment",
															"src": "9045:59:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9088:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9088:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9099:3:8",
																				"nodeType": "YulLiteral",
																				"src": "9099:3:8",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9084:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9084:3:8"
																		},
																		"nativeSrc": "9084:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9084:19:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_uint80_fromMemory",
																	"nativeSrc": "9055:28:8",
																	"nodeType": "YulIdentifier",
																	"src": "9055:28:8"
																},
																"nativeSrc": "9055:49:8",
																"nodeType": "YulFunctionCall",
																"src": "9055:49:8"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "9045:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9045:6:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "8637:473:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8717:9:8",
														"nodeType": "YulTypedName",
														"src": "8717:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8728:7:8",
														"nodeType": "YulTypedName",
														"src": "8728:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8740:6:8",
														"nodeType": "YulTypedName",
														"src": "8740:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8748:6:8",
														"nodeType": "YulTypedName",
														"src": "8748:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8756:6:8",
														"nodeType": "YulTypedName",
														"src": "8756:6:8",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8764:6:8",
														"nodeType": "YulTypedName",
														"src": "8764:6:8",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8772:6:8",
														"nodeType": "YulTypedName",
														"src": "8772:6:8",
														"type": ""
													}
												],
												"src": "8637:473:8"
											},
											{
												"body": {
													"nativeSrc": "9289:179:8",
													"nodeType": "YulBlock",
													"src": "9289:179:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9306:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9306:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9317:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9317:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9299:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9299:6:8"
																},
																"nativeSrc": "9299:21:8",
																"nodeType": "YulFunctionCall",
																"src": "9299:21:8"
															},
															"nativeSrc": "9299:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "9299:21:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9340:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9340:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9351:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9351:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9336:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9336:3:8"
																		},
																		"nativeSrc": "9336:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9336:18:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9356:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9356:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9329:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9329:6:8"
																},
																"nativeSrc": "9329:30:8",
																"nodeType": "YulFunctionCall",
																"src": "9329:30:8"
															},
															"nativeSrc": "9329:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "9329:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9379:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "9379:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9390:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9390:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9375:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9375:3:8"
																		},
																		"nativeSrc": "9375:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9375:18:8"
																	},
																	{
																		"hexValue": "4e65676174697665204d61746963207072696365207265636569766564",
																		"kind": "string",
																		"nativeSrc": "9395:31:8",
																		"nodeType": "YulLiteral",
																		"src": "9395:31:8",
																		"type": "",
																		"value": "Negative Matic price received"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9368:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9368:6:8"
																},
																"nativeSrc": "9368:59:8",
																"nodeType": "YulFunctionCall",
																"src": "9368:59:8"
															},
															"nativeSrc": "9368:59:8",
															"nodeType": "YulExpressionStatement",
															"src": "9368:59:8"
														},
														{
															"nativeSrc": "9436:26:8",
															"nodeType": "YulAssignment",
															"src": "9436:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9448:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "9448:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9459:2:8",
																		"nodeType": "YulLiteral",
																		"src": "9459:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9444:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9444:3:8"
																},
																"nativeSrc": "9444:18:8",
																"nodeType": "YulFunctionCall",
																"src": "9444:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9436:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9436:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_141490049d64491bad25101e25b612b24d846247901441fd85fdb93962f4e9d5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9115:353:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9266:9:8",
														"nodeType": "YulTypedName",
														"src": "9266:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9280:4:8",
														"nodeType": "YulTypedName",
														"src": "9280:4:8",
														"type": ""
													}
												],
												"src": "9115:353:8"
											},
											{
												"body": {
													"nativeSrc": "9610:150:8",
													"nodeType": "YulBlock",
													"src": "9610:150:8",
													"statements": [
														{
															"nativeSrc": "9620:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9620:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9640:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9640:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9634:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9634:5:8"
																},
																"nativeSrc": "9634:13:8",
																"nodeType": "YulFunctionCall",
																"src": "9634:13:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9624:6:8",
																	"nodeType": "YulTypedName",
																	"src": "9624:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9695:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9695:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9703:4:8",
																				"nodeType": "YulLiteral",
																				"src": "9703:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9691:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9691:3:8"
																		},
																		"nativeSrc": "9691:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9691:17:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "9710:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9710:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9715:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9715:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "9656:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "9656:34:8"
																},
																"nativeSrc": "9656:66:8",
																"nodeType": "YulFunctionCall",
																"src": "9656:66:8"
															},
															"nativeSrc": "9656:66:8",
															"nodeType": "YulExpressionStatement",
															"src": "9656:66:8"
														},
														{
															"nativeSrc": "9731:23:8",
															"nodeType": "YulAssignment",
															"src": "9731:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9742:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9742:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9747:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "9747:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9738:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9738:3:8"
																},
																"nativeSrc": "9738:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9738:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9731:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9731:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "9473:287:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9586:3:8",
														"nodeType": "YulTypedName",
														"src": "9586:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9591:6:8",
														"nodeType": "YulTypedName",
														"src": "9591:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9602:3:8",
														"nodeType": "YulTypedName",
														"src": "9602:3:8",
														"type": ""
													}
												],
												"src": "9473:287:8"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_uint256t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_96f12f93478a3768b4b822c9ec935962a88f68f145f33917ac63ab3e2a411fe3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"This Address does not exist!\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_69cc1d0091f450c9f1b40951e04a8e02ae8a28f18820a3d492d53b3c2bca82f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"This Address is already WhiteLis\")\n        mstore(add(headStart, 96), \"ted!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_b7f5bbf01babd612ff41adb253311ab3eccd8d56664e3b6ae54fa2e62b1bbfb0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Allowance not set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_141490049d64491bad25101e25b612b24d846247901441fd85fdb93962f4e9d5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Negative Matic price received\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610147575f3560e01c8063a3150978116100b3578063e1ad418e1161006d578063e1ad418e146104a9578063f09f0aac146104d4578063f2fde38b146104f3578063f38e762b14610512578063fca0a3d214610531578063fd03fe9014610584575f80fd5b8063a315097814610371578063a4329677146103c4578063a7f696cf14610405578063b4a99a4e14610458578063cb8ff54514610477578063cdb434781461048a575f80fd5b8063373cf20211610104578063373cf2021461026d5780636bc20157146102a657806370181206146102c5578063715018a6146103185780638da5cb5b1461032c5780639c2c67c91461035c575f80fd5b806301bf66481461014b5780631a06e66e1461016c5780631f1a675d1461018b5780632dd91a4c146101d45780633422a7e0146101e9578063372c12b11461022f575b5f80fd5b348015610156575f80fd5b5061016a610165366004611526565b6105cb565b005b348015610177575f80fd5b5061016a6101863660046115dc565b61065f565b348015610196575f80fd5b506101c16101a5366004611640565b600460209081525f928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b3480156101df575f80fd5b506101c1600a5481565b3480156101f4575f80fd5b506101c1610203366004611671565b81516020818401810180516008825292820194820194909420919093529091525f908152604090205481565b34801561023a575f80fd5b5061025d610249366004611526565b60026020525f908152604090205460ff1681565b60405190151581526020016101cb565b348015610278575f80fd5b5061025d610287366004611640565b600560209081525f928352604080842090915290825290205460ff1681565b3480156102b1575f80fd5b5061016a6102c0366004611526565b610a28565b3480156102d0575f80fd5b506101c16102df366004611526565b6001600160a01b03165f908152600460209081526040808320739951342d994001468506df88f71a582867b50dd4845290915290205490565b348015610323575f80fd5b5061016a610b0a565b348015610337575f80fd5b505f546001600160a01b03165b6040516001600160a01b0390911681526020016101cb565b348015610367575f80fd5b506101c160095481565b34801561037c575f80fd5b506101c161038b366004611526565b6001600160a01b03165f90815260046020908152604080832073a5014ea627ac22a63f2bf3b46e26d408e72f55c1845290915290205490565b3480156103cf575f80fd5b506101c16103de366004611526565b335f9081526004602090815260408083206001600160a01b03949094168352929052205490565b348015610410575f80fd5b506101c161041f366004611526565b6001600160a01b03165f9081526004602090815260408083207377f146ca2943294cc53e6c3b5980b572c961ae23845290915290205490565b348015610463575f80fd5b50600154610344906001600160a01b031681565b61016a6104853660046116b3565b610b1d565b348015610495575f80fd5b5061016a6104a4366004611526565b611126565b3480156104b4575f80fd5b506101c16104c3366004611526565b60066020525f908152604090205481565b3480156104df575f80fd5b506103446104ee366004611706565b61114a565b3480156104fe575f80fd5b5061016a61050d366004611526565b611172565b34801561051d575f80fd5b506101c161052c366004611706565b6111ac565b34801561053c575f80fd5b506101c161054b366004611526565b6001600160a01b03165f908152600460209081526040808320734b3a514dd71850277bba82491f26dacdf089cb68845290915290205490565b34801561058f575f80fd5b506101c161059e36600461171d565b600760209081525f9283526040909220815180830184018051928152908401929093019190912091525481565b6105d36112a7565b6001600160a01b0381165f9081526002602052604090205460ff1661063f5760405162461bcd60e51b815260206004820152601c60248201527f54686973204164647265737320646f6573206e6f74206578697374210000000060448201526064015b60405180910390fd5b6001600160a01b03165f908152600260205260409020805460ff19169055565b6040516370a0823160e01b815230600482015283906001600160a01b038616906370a0823190602401602060405180830381865afa1580156106a3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106c79190611768565b101561070c5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610636565b734b3a514dd71850277bba82491f26dacdf089cb67196001600160a01b0385160161084c576107456001600160a01b03851683856112d3565b8260095f8282546107569190611793565b90915550506001600160a01b0382165f90815260066020526040908190208490555183906008906107889084906117c8565b90815260200160405180910390205f846001600160a01b03166001600160a01b031681526020019081526020015f205f8282546107c591906117e3565b90915550506001600160a01b038083165f90815260046020908152604080832093881683529290529081208054859290610800908490611793565b9091555050604080516001600160a01b0384168152602081018590527fcc87ab2abfe87b272af9b77691e40b3d9186a0431f3d41a8e06d39614f460722910160405180910390a1610a22565b6103e861085a8460036117f6565b610864919061180d565b600a8190556003545f91610878919061180d565b90505f5b6003548110156108c2576108ba6003828154811061089c5761089c61182c565b5f918252602090912001546001600160a01b038881169116846112d3565b60010161087c565b506108e683600a54866108d59190611793565b6001600160a01b03881691906112d3565b600a546108f39085611793565b60095f8282546109039190611793565b9091555050600a546109159085611793565b6001600160a01b0384165f9081526006602052604090819020919091555184906008906109439085906117c8565b90815260200160405180910390205f856001600160a01b03166001600160a01b031681526020019081526020015f205f82825461098091906117e3565b9091555050600a546109929085611793565b6001600160a01b038085165f908152600460209081526040808320938a16835292905290812080549091906109c8908490611793565b9091555050600a547fcf53ae9736a409c662fa8b1187549847acd41beb1b89fd026293fc2e19adaca79084906109fe9087611793565b604080516001600160a01b03909316835260208301919091520160405180910390a1505b50505050565b610a306112a7565b6001600160a01b0381165f9081526002602052604090205460ff1615610aa45760405162461bcd60e51b8152602060048201526024808201527f54686973204164647265737320697320616c72656164792057686974654c69736044820152637465642160e01b6064820152608401610636565b6003805460018181019092557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b039093166001600160a01b0319909316831790555f91825260026020526040909120805460ff19169091179055565b610b126112a7565b610b1b5f611325565b565b604051636eb1769f60e11b815233600482015230602482015282906001600160a01b0385169063dd62ed3e90604401602060405180830381865afa158015610b67573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b8b9190611768565b1015610bcd5760405162461bcd60e51b8152602060048201526011602482015270105b1b1bddd85b98d9481b9bdd081cd95d607a1b6044820152606401610636565b6040516370a0823160e01b815233600482015282906001600160a01b038516906370a0823190602401602060405180830381865afa158015610c11573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c359190611768565b1015610c7a5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610636565b734b3a514dd71850277bba82491f26dacdf089cb67196001600160a01b03841601610e38575f546001600160a01b03166108fc610cb6846111ac565b610cc4906305f5e1006117f6565b6040518115909202915f818181858888f19350505050158015610ce9573d5f803e3d5ffd5b506040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038416906323b872dd906064016020604051808303815f875af1158015610d3a573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d5e9190611840565b508160095f828254610d7091906117e3565b9091555050335f9081526006602090815260408083208590556007909152908190209051839190610da29084906117c8565b90815260200160405180910390205f828254610dbe91906117e3565b9091555050335f9081526004602090815260408083206001600160a01b038716845290915281208054849290610df59084906117e3565b909155505060408051338152602081018490527fcc87ab2abfe87b272af9b77691e40b3d9186a0431f3d41a8e06d39614f460722910160405180910390a1505050565b5f546001600160a01b03166108fc610e4f846111ac565b610e5d906305f5e1006117f6565b6040518115909202915f818181858888f19350505050158015610e82573d5f803e3d5ffd5b506103e8610e918360036117f6565b610e9b919061180d565b600a8190556003545f91610eaf919061180d565b90505f5b600354811015610f6957846001600160a01b03166323b872dd3360038481548110610ee057610ee061182c565b5f9182526020909120015460405160e084901b6001600160e01b03191681526001600160a01b03928316600482015291166024820152604481018590526064016020604051808303815f875af1158015610f3c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f609190611840565b50600101610eb3565b50836001600160a01b03166323b872dd3330600a5487610f899190611793565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303815f875af1158015610fda573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ffe9190611840565b50600a5461100c9084611793565b60095f82825461101c91906117e3565b9091555050600a5461102e9084611793565b335f90815260066020526040902055600a5461104a9084611793565b335f908152600760205260409081902090516110679085906117c8565b90815260200160405180910390205f82825461108391906117e3565b9091555050600a546110959084611793565b335f9081526004602090815260408083206001600160a01b0389168452909152812080549091906110c79084906117e3565b9091555050600a547fcc87ab2abfe87b272af9b77691e40b3d9186a0431f3d41a8e06d39614f4607229033906110fd9086611793565b604080516001600160a01b03909316835260208301919091520160405180910390a1505b505050565b61112e6112a7565b600a54611147906001600160a01b0383169033906112d3565b50565b60038181548110611159575f80fd5b5f918252602090912001546001600160a01b0316905081565b61117a6112a7565b6001600160a01b0381166111a357604051631e4fbdf760e01b81525f6004820152602401610636565b61114781611325565b5f8073d0d5e3db44de05e9f294bb0a3beeaf030de24ada90505f816001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611202573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112269190611878565b5050509150505f811361127b5760405162461bcd60e51b815260206004820152601d60248201527f4e65676174697665204d617469632070726963652072656365697665640000006044820152606401610636565b5f81606461128a8760056117f6565b611294919061180d565b61129e919061180d565b95945050505050565b5f546001600160a01b03163314610b1b5760405163118cdaa760e01b8152336004820152602401610636565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052611121908490611374565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f6113886001600160a01b038416836113d5565b905080515f141580156113ac5750808060200190518101906113aa9190611840565b155b1561112157604051635274afe760e01b81526001600160a01b0384166004820152602401610636565b60606113e283835f6113eb565b90505b92915050565b6060814710156114105760405163cd78605960e01b8152306004820152602401610636565b5f80856001600160a01b0316848660405161142b91906117c8565b5f6040518083038185875af1925050503d805f8114611465576040519150601f19603f3d011682016040523d82523d5f602084013e61146a565b606091505b509150915061147a868383611486565b925050505b9392505050565b60608261149b57611496826114e2565b61147f565b81511580156114b257506001600160a01b0384163b155b156114db57604051639996b31560e01b81526001600160a01b0385166004820152602401610636565b508061147f565b8051156114f25780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b0381168114611521575f80fd5b919050565b5f60208284031215611536575f80fd5b6113e28261150b565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112611562575f80fd5b813567ffffffffffffffff8082111561157d5761157d61153f565b604051601f8301601f19908116603f011681019082821181831017156115a5576115a561153f565b816040528381528660208588010111156115bd575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f80608085870312156115ef575f80fd5b6115f88561150b565b93506020850135925061160d6040860161150b565b9150606085013567ffffffffffffffff811115611628575f80fd5b61163487828801611553565b91505092959194509250565b5f8060408385031215611651575f80fd5b61165a8361150b565b91506116686020840161150b565b90509250929050565b5f8060408385031215611682575f80fd5b823567ffffffffffffffff811115611698575f80fd5b6116a485828601611553565b9250506116686020840161150b565b5f805f606084860312156116c5575f80fd5b6116ce8461150b565b925060208401359150604084013567ffffffffffffffff8111156116f0575f80fd5b6116fc86828701611553565b9150509250925092565b5f60208284031215611716575f80fd5b5035919050565b5f806040838503121561172e575f80fd5b6117378361150b565b9150602083013567ffffffffffffffff811115611752575f80fd5b61175e85828601611553565b9150509250929050565b5f60208284031215611778575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156113e5576113e561177f565b5f5b838110156117c05781810151838201526020016117a8565b50505f910152565b5f82516117d98184602087016117a6565b9190910192915050565b808201808211156113e5576113e561177f565b80820281158282048414176113e5576113e561177f565b5f8261182757634e487b7160e01b5f52601260045260245ffd5b500490565b634e487b7160e01b5f52603260045260245ffd5b5f60208284031215611850575f80fd5b8151801515811461147f575f80fd5b805169ffffffffffffffffffff81168114611521575f80fd5b5f805f805f60a0868803121561188c575f80fd5b6118958661185f565b94506020860151935060408601519250606086015191506118b86080870161185f565b9050929550929590935056fea26469706673582212209ef82d5bc861811481542095417cb45a7e5a67990b80ad87a6cc96b4ae7ab1d464736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x147 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA3150978 GT PUSH2 0xB3 JUMPI DUP1 PUSH4 0xE1AD418E GT PUSH2 0x6D JUMPI DUP1 PUSH4 0xE1AD418E EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0xF09F0AAC EQ PUSH2 0x4D4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x4F3 JUMPI DUP1 PUSH4 0xF38E762B EQ PUSH2 0x512 JUMPI DUP1 PUSH4 0xFCA0A3D2 EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0xFD03FE90 EQ PUSH2 0x584 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3150978 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0xA4329677 EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0xA7F696CF EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0xCB8FF545 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0xCDB43478 EQ PUSH2 0x48A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x373CF202 GT PUSH2 0x104 JUMPI DUP1 PUSH4 0x373CF202 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x6BC20157 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x70181206 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x9C2C67C9 EQ PUSH2 0x35C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1BF6648 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x1A06E66E EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x1F1A675D EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x2DD91A4C EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x3422A7E0 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x372C12B1 EQ PUSH2 0x22F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x1526 JUMP JUMPDEST PUSH2 0x5CB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x177 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A PUSH2 0x186 CALLDATASIZE PUSH1 0x4 PUSH2 0x15DC JUMP JUMPDEST PUSH2 0x65F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x196 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x1A5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1640 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x1671 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP2 DUP5 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x8 DUP3 MSTORE SWAP3 DUP3 ADD SWAP5 DUP3 ADD SWAP5 SWAP1 SWAP5 KECCAK256 SWAP2 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25D PUSH2 0x249 CALLDATASIZE PUSH1 0x4 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x278 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x25D PUSH2 0x287 CALLDATASIZE PUSH1 0x4 PUSH2 0x1640 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A PUSH2 0x2C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1526 JUMP JUMPDEST PUSH2 0xA28 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x2DF CALLDATASIZE PUSH1 0x4 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0x9951342D994001468506DF88F71A582867B50DD4 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x323 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A PUSH2 0xB0A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x367 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x38B CALLDATASIZE PUSH1 0x4 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xA5014EA627AC22A63F2BF3B46E26D408E72F55C1 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x3DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1526 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x410 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x41F CALLDATASIZE PUSH1 0x4 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0x77F146CA2943294CC53E6C3B5980B572C961AE23 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x463 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x344 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x16A PUSH2 0x485 CALLDATASIZE PUSH1 0x4 PUSH2 0x16B3 JUMP JUMPDEST PUSH2 0xB1D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x495 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A PUSH2 0x4A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1526 JUMP JUMPDEST PUSH2 0x1126 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x4C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x344 PUSH2 0x4EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1706 JUMP JUMPDEST PUSH2 0x114A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x16A PUSH2 0x50D CALLDATASIZE PUSH1 0x4 PUSH2 0x1526 JUMP JUMPDEST PUSH2 0x1172 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x52C CALLDATASIZE PUSH1 0x4 PUSH2 0x1706 JUMP JUMPDEST PUSH2 0x11AC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x54B CALLDATASIZE PUSH1 0x4 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0x4B3A514DD71850277BBA82491F26DACDF089CB68 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C1 PUSH2 0x59E CALLDATASIZE PUSH1 0x4 PUSH2 0x171D JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x5D3 PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x63F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973204164647265737320646F6573206E6F742065786973742100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6C7 SWAP2 SWAP1 PUSH2 0x1768 JUMP JUMPDEST LT ISZERO PUSH2 0x70C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x636 JUMP JUMPDEST PUSH20 0x4B3A514DD71850277BBA82491F26DACDF089CB67 NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ADD PUSH2 0x84C JUMPI PUSH2 0x745 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP4 DUP6 PUSH2 0x12D3 JUMP JUMPDEST DUP3 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x756 SWAP2 SWAP1 PUSH2 0x1793 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE MLOAD DUP4 SWAP1 PUSH1 0x8 SWAP1 PUSH2 0x788 SWAP1 DUP5 SWAP1 PUSH2 0x17C8 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x7C5 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x800 SWAP1 DUP5 SWAP1 PUSH2 0x1793 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0xCC87AB2ABFE87B272AF9B77691E40B3D9186A0431F3D41A8E06D39614F460722 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x85A DUP5 PUSH1 0x3 PUSH2 0x17F6 JUMP JUMPDEST PUSH2 0x864 SWAP2 SWAP1 PUSH2 0x180D JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH0 SWAP2 PUSH2 0x878 SWAP2 SWAP1 PUSH2 0x180D JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x8C2 JUMPI PUSH2 0x8BA PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x89C JUMPI PUSH2 0x89C PUSH2 0x182C JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND SWAP2 AND DUP5 PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x87C JUMP JUMPDEST POP PUSH2 0x8E6 DUP4 PUSH1 0xA SLOAD DUP7 PUSH2 0x8D5 SWAP2 SWAP1 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP2 SWAP1 PUSH2 0x12D3 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x8F3 SWAP1 DUP6 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x903 SWAP2 SWAP1 PUSH2 0x1793 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA SLOAD PUSH2 0x915 SWAP1 DUP6 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD DUP5 SWAP1 PUSH1 0x8 SWAP1 PUSH2 0x943 SWAP1 DUP6 SWAP1 PUSH2 0x17C8 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x980 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA SLOAD PUSH2 0x992 SWAP1 DUP6 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP11 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x9C8 SWAP1 DUP5 SWAP1 PUSH2 0x1793 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA SLOAD PUSH32 0xCF53AE9736A409C662FA8B1187549847ACD41BEB1B89FD026293FC2E19ADACA7 SWAP1 DUP5 SWAP1 PUSH2 0x9FE SWAP1 DUP8 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xA30 PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x54686973204164647265737320697320616C72656164792057686974654C6973 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x74656421 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x636 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD SWAP1 SWAP3 SSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND DUP4 OR SWAP1 SSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xB12 PUSH2 0x12A7 JUMP JUMPDEST PUSH2 0xB1B PUSH0 PUSH2 0x1325 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB67 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB8B SWAP2 SWAP1 PUSH2 0x1768 JUMP JUMPDEST LT ISZERO PUSH2 0xBCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1B1BDDD85B98D9481B9BDD081CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x636 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC11 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC35 SWAP2 SWAP1 PUSH2 0x1768 JUMP JUMPDEST LT ISZERO PUSH2 0xC7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x636 JUMP JUMPDEST PUSH20 0x4B3A514DD71850277BBA82491F26DACDF089CB67 NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ADD PUSH2 0xE38 JUMPI PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC PUSH2 0xCB6 DUP5 PUSH2 0x11AC JUMP JUMPDEST PUSH2 0xCC4 SWAP1 PUSH4 0x5F5E100 PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCE9 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD3A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD5E SWAP2 SWAP1 PUSH2 0x1840 JUMP JUMPDEST POP DUP2 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD70 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE PUSH1 0x7 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD DUP4 SWAP2 SWAP1 PUSH2 0xDA2 SWAP1 DUP5 SWAP1 PUSH2 0x17C8 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xDBE SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xDF5 SWAP1 DUP5 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xCC87AB2ABFE87B272AF9B77691E40B3D9186A0431F3D41A8E06D39614F460722 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x8FC PUSH2 0xE4F DUP5 PUSH2 0x11AC JUMP JUMPDEST PUSH2 0xE5D SWAP1 PUSH4 0x5F5E100 PUSH2 0x17F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xE82 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0x3E8 PUSH2 0xE91 DUP4 PUSH1 0x3 PUSH2 0x17F6 JUMP JUMPDEST PUSH2 0xE9B SWAP2 SWAP1 PUSH2 0x180D JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH0 SWAP2 PUSH2 0xEAF SWAP2 SWAP1 PUSH2 0x180D JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xF69 JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xEE0 JUMPI PUSH2 0xEE0 PUSH2 0x182C JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP5 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF3C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF60 SWAP2 SWAP1 PUSH2 0x1840 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xEB3 JUMP JUMPDEST POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS PUSH1 0xA SLOAD DUP8 PUSH2 0xF89 SWAP2 SWAP1 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFDA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFFE SWAP2 SWAP1 PUSH2 0x1840 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x100C SWAP1 DUP5 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x101C SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA SLOAD PUSH2 0x102E SWAP1 DUP5 PUSH2 0x1793 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0xA SLOAD PUSH2 0x104A SWAP1 DUP5 PUSH2 0x1793 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0x1067 SWAP1 DUP6 SWAP1 PUSH2 0x17C8 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1083 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA SLOAD PUSH2 0x1095 SWAP1 DUP5 PUSH2 0x1793 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x10C7 SWAP1 DUP5 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0xA SLOAD PUSH32 0xCC87AB2ABFE87B272AF9B77691E40B3D9186A0431F3D41A8E06D39614F460722 SWAP1 CALLER SWAP1 PUSH2 0x10FD SWAP1 DUP7 PUSH2 0x1793 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x112E PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x1147 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 CALLER SWAP1 PUSH2 0x12D3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1159 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x117A PUSH2 0x12A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x11A3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x636 JUMP JUMPDEST PUSH2 0x1147 DUP2 PUSH2 0x1325 JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xD0D5E3DB44DE05E9F294BB0A3BEEAF030DE24ADA SWAP1 POP PUSH0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1202 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1226 SWAP2 SWAP1 PUSH2 0x1878 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 DUP2 SGT PUSH2 0x127B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E65676174697665204D61746963207072696365207265636569766564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x636 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x64 PUSH2 0x128A DUP8 PUSH1 0x5 PUSH2 0x17F6 JUMP JUMPDEST PUSH2 0x1294 SWAP2 SWAP1 PUSH2 0x180D JUMP JUMPDEST PUSH2 0x129E SWAP2 SWAP1 PUSH2 0x180D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB1B JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x636 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x1121 SWAP1 DUP5 SWAP1 PUSH2 0x1374 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1388 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0x13D5 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 EQ ISZERO DUP1 ISZERO PUSH2 0x13AC JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x13AA SWAP2 SWAP1 PUSH2 0x1840 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1121 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x636 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x13E2 DUP4 DUP4 PUSH0 PUSH2 0x13EB JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1410 JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x636 JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x142B SWAP2 SWAP1 PUSH2 0x17C8 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1465 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x146A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x147A DUP7 DUP4 DUP4 PUSH2 0x1486 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x149B JUMPI PUSH2 0x1496 DUP3 PUSH2 0x14E2 JUMP JUMPDEST PUSH2 0x147F JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x14B2 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x14DB JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x636 JUMP JUMPDEST POP DUP1 PUSH2 0x147F JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x14F2 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1521 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1536 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13E2 DUP3 PUSH2 0x150B JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1562 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x157D JUMPI PUSH2 0x157D PUSH2 0x153F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x15A5 JUMPI PUSH2 0x15A5 PUSH2 0x153F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x15BD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x15EF JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x15F8 DUP6 PUSH2 0x150B JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH2 0x160D PUSH1 0x40 DUP7 ADD PUSH2 0x150B JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1628 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1634 DUP8 DUP3 DUP9 ADD PUSH2 0x1553 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1651 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x165A DUP4 PUSH2 0x150B JUMP JUMPDEST SWAP2 POP PUSH2 0x1668 PUSH1 0x20 DUP5 ADD PUSH2 0x150B JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1682 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1698 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16A4 DUP6 DUP3 DUP7 ADD PUSH2 0x1553 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1668 PUSH1 0x20 DUP5 ADD PUSH2 0x150B JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16C5 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16CE DUP5 PUSH2 0x150B JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16F0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x16FC DUP7 DUP3 DUP8 ADD PUSH2 0x1553 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1716 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x172E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1737 DUP4 PUSH2 0x150B JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1752 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x175E DUP6 DUP3 DUP7 ADD PUSH2 0x1553 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1778 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x13E5 JUMPI PUSH2 0x13E5 PUSH2 0x177F JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x17C0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x17A8 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x17D9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x17A6 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x13E5 JUMPI PUSH2 0x13E5 PUSH2 0x177F JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x13E5 JUMPI PUSH2 0x13E5 PUSH2 0x177F JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1827 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1850 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x147F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1521 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x188C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1895 DUP7 PUSH2 0x185F JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x18B8 PUSH1 0x80 DUP8 ADD PUSH2 0x185F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 0xF8 0x2D JUMPDEST 0xC8 PUSH2 0x8114 DUP2 SLOAD KECCAK256 SWAP6 COINBASE PUSH29 0xB45A7E5A67990B80AD87A6CC96B4AE7AB1D464736F6C63430008160033 ",
							"sourceMap": "591:9884:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8514:178;;;;;;;;;;-1:-1:-1;8514:178:7;;;;;:::i;:::-;;:::i;:::-;;6662:1369;;;;;;;;;;-1:-1:-1;6662:1369:7;;;;;:::i;:::-;;:::i;2055:94::-;;;;;;;;;;-1:-1:-1;2055:94:7;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2194:25:8;;;2182:2;2167:18;2055:94:7;;;;;;;;2834:35;;;;;;;;;;;;;;;;2567:111;;;;;;;;;;-1:-1:-1;2567:111:7;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2567:111:7;;;;;;;;;1844:41;;;;;;;;;;-1:-1:-1;1844:41:7;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2796:14:8;;2789:22;2771:41;;2759:2;2744:18;1844:41:7;2631:187:8;2155:88:7;;;;;;;;;;-1:-1:-1;2155:88:7;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;3299:215;;;;;;;;;;-1:-1:-1;3299:215:7;;;;;:::i;:::-;;:::i;9513:179::-;;;;;;;;;;-1:-1:-1;9513:179:7;;;;;:::i;:::-;-1:-1:-1;;;;;9606:23:7;9574:13;9606:23;;;:15;:23;;;;;;;;1229:42;9606:29;;;;;;;;;9513:179;2293:101:1;;;;;;;;;;;;;:::i;1638:85::-;;;;;;;;;;-1:-1:-1;1684:7:1;1710:6;-1:-1:-1;;;;;1710:6:1;1638:85;;;-1:-1:-1;;;;;2987:32:8;;;2969:51;;2957:2;2942:18;1638:85:1;2823:203:8;2743:27:7;;;;;;;;;;;;;;;;8848:179;;;;;;;;;;-1:-1:-1;8848:179:7;;;;;:::i;:::-;-1:-1:-1;;;;;8941:23:7;8909:13;8941:23;;;:15;:23;;;;;;;;1157:42;8941:29;;;;;;;;;8848:179;10268:204;;;;;;;;;;-1:-1:-1;10268:204:7;;;;;:::i;:::-;10381:10;10333:13;10365:27;;;:15;:27;;;;;;;;-1:-1:-1;;;;;10365:38:7;;;;;;;;;;;;10268:204;9181:176;;;;;;;;;;-1:-1:-1;9181:176:7;;;;;:::i;:::-;-1:-1:-1;;;;;9273:23:7;9241:13;9273:23;;;:15;:23;;;;;;;;1300:42;9273:28;;;;;;;;;9181:176;735:20;;;;;;;;;;-1:-1:-1;735:20:7;;;;-1:-1:-1;;;;;735:20:7;;;4406:1714;;;;;;:::i;:::-;;:::i;8183:151::-;;;;;;;;;;-1:-1:-1;8183:151:7;;;;;:::i;:::-;;:::i;2249:55::-;;;;;;;;;;-1:-1:-1;2249:55:7;;;;;:::i;:::-;;;;;;;;;;;;;;1953:33;;;;;;;;;;-1:-1:-1;1953:33:7;;;;;:::i;:::-;;:::i;2543:215:1:-;;;;;;;;;;-1:-1:-1;2543:215:1;;;;;:::i;:::-;;:::i;3519:389:7:-;;;;;;;;;;-1:-1:-1;3519:389:7;;;;;:::i;:::-;;:::i;9848:179::-;;;;;;;;;;-1:-1:-1;9848:179:7;;;;;:::i;:::-;-1:-1:-1;;;;;9941:23:7;9909:13;9941:23;;;:15;:23;;;;;;;;1372:42;9941:29;;;;;;;;;9848:179;2390:91;;;;;;;;;;-1:-1:-1;2390:91:7;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8514:178;1531:13:1;:11;:13::i;:::-;-1:-1:-1;;;;;8596:19:7;::::1;;::::0;;;:9:::1;:19;::::0;;;;;::::1;;8588:60;;;::::0;-1:-1:-1;;;8588:60:7;;4288:2:8;8588:60:7::1;::::0;::::1;4270:21:8::0;4327:2;4307:18;;;4300:30;4366;4346:18;;;4339:58;4414:18;;8588:60:7::1;;;;;;;;;-1:-1:-1::0;;;;;8658:19:7::1;8680:5;8658:19:::0;;;:9:::1;:19;::::0;;;;:27;;-1:-1:-1;;8658:27:7::1;::::0;;8514:178::o;6662:1369::-;6794:42;;-1:-1:-1;;;6794:42:7;;6830:4;6794:42;;;2969:51:8;6840:7:7;;-1:-1:-1;;;;;6794:27:7;;;;;2942:18:8;;6794:42:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;6786:86;;;;-1:-1:-1;;;6786:86:7;;4834:2:8;6786:86:7;;;4816:21:8;4873:2;4853:18;;;4846:30;-1:-1:-1;;;4892:18:8;;;4885:50;4952:18;;6786:86:7;4632:344:8;6786:86:7;-1:-1:-1;;;;;;;6885:17:7;;;6882:1143;;6917:43;-1:-1:-1;;;;;6917:30:7;;6948:3;6952:7;6917:30;:43::i;:::-;6994:7;6974:15;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;7016:15:7;;;;;;:10;:15;;;;;;;:25;;;7055:46;7034:7;;7055:28;;:46;;7084:16;;7055:46;:::i;:::-;;;;;;;;;;;;;:51;7102:3;-1:-1:-1;;;;;7055:51:7;-1:-1:-1;;;;;7055:51:7;;;;;;;;;;;;;:62;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;7131:20:7;;;;;;;:15;:20;;;;;;;;:31;;;;;;;;;;;:42;;7166:7;;7131:20;:42;;7166:7;;7131:42;:::i;:::-;;;;-1:-1:-1;;7192:22:7;;;-1:-1:-1;;;;;6117:32:8;;6099:51;;6181:2;6166:18;;6159:34;;;7192:22:7;;6072:18:8;7192:22:7;;;;;;;6882:1143;;;7291:4;7280:9;:7;7288:1;7280:9;:::i;:::-;7279:16;;;;:::i;:::-;7253:23;:42;;;7363:16;:23;7309:27;;7339:47;;7363:23;7339:47;:::i;:::-;7309:77;;7405:6;7400:167;7417:16;:23;7415:25;;7400:167;;;7478:74;7509:16;7526:1;7509:19;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;7478:30:7;;;;7509:19;7529:22;7478:30;:74::i;:::-;7442:3;;7400:167;;;;7580:69;7611:3;7624:23;;7616:7;:31;;;;:::i;:::-;-1:-1:-1;;;;;7580:30:7;;;:69;:30;:69::i;:::-;7691:23;;7683:31;;:7;:31;:::i;:::-;7663:15;;:52;;;;;;;:::i;:::-;;;;-1:-1:-1;;7756:23:7;;7748:31;;:7;:31;:::i;:::-;-1:-1:-1;;;;;7729:15:7;;;;;;:10;:15;;;;;;;:51;;;;7794:46;7849:7;;7794:28;;:46;;7823:16;;7794:46;:::i;:::-;;;;;;;;;;;;;:51;7841:3;-1:-1:-1;;;;;7794:51:7;-1:-1:-1;;;;;7794:51:7;;;;;;;;;;;;;:62;;;;;;;:::i;:::-;;;;-1:-1:-1;;7914:23:7;;7906:31;;:7;:31;:::i;:::-;-1:-1:-1;;;;;7870:20:7;;;;;;;:15;:20;;;;;;;;:31;;;;;;;;;;;:68;;:31;;:20;:68;;;;;:::i;:::-;;;;-1:-1:-1;;7989:23:7;;7957:57;;7976:3;;7981:31;;:7;:31;:::i;:::-;7957:57;;;-1:-1:-1;;;;;6117:32:8;;;6099:51;;6181:2;6166:18;;6159:34;;;;6072:18;7957:57:7;;;;;;;7238:787;6882:1143;6662:1369;;;;:::o;3299:215::-;1531:13:1;:11;:13::i;:::-;-1:-1:-1;;;;;3371:19:7;::::1;;::::0;;;:9:::1;:19;::::0;;;;;::::1;;3370:20;3362:68;;;::::0;-1:-1:-1;;;3362:68:7;;6933:2:8;3362:68:7::1;::::0;::::1;6915:21:8::0;6972:2;6952:18;;;6945:30;7011:34;6991:18;;;6984:62;-1:-1:-1;;;7062:18:8;;;7055:34;7106:19;;3362:68:7::1;6731:400:8::0;3362:68:7::1;3440:16;:31:::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;3440:31:7;;::::1;-1:-1:-1::0;;;;;;3440:31:7;;::::1;::::0;::::1;::::0;;-1:-1:-1;3481:19:7;;;:9:::1;3440:31;3481:19:::0;;;;;:26;;-1:-1:-1;;3481:26:7::1;::::0;;::::1;::::0;;3299:215::o;2293:101:1:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;4406:1714:7:-;4524:54;;-1:-1:-1;;;4524:54:7;;4552:10;4524:54;;;7348:34:8;4572:4:7;7398:18:8;;;7391:43;4582:7:7;;-1:-1:-1;;;;;4524:27:7;;;;;7283:18:8;;4524:54:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;;4516:95;;;;-1:-1:-1;;;4516:95:7;;7647:2:8;4516:95:7;;;7629:21:8;7686:2;7666:18;;;7659:30;-1:-1:-1;;;7705:18:8;;;7698:47;7762:18;;4516:95:7;7445:341:8;4516:95:7;4629:39;;-1:-1:-1;;;4629:39:7;;4657:10;4629:39;;;2969:51:8;4672:7:7;;-1:-1:-1;;;;;4629:27:7;;;;;2942:18:8;;4629:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;4621:83;;;;-1:-1:-1;;;4621:83:7;;4834:2:8;4621:83:7;;;4816:21:8;4873:2;4853:18;;;4846:30;-1:-1:-1;;;4892:18:8;;;4885:50;4952:18;;4621:83:7;4632:344:8;4621:83:7;-1:-1:-1;;;;;;;4717:17:7;;;4714:1396;;1684:7:1;1710:6;-1:-1:-1;;;;;1710:6:1;4749:55:7;4775:22;4789:7;4775:13;:22::i;:::-;:28;;4798:5;4775:28;:::i;:::-;4749:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4818:68:7;;-1:-1:-1;;;4818:68:7;;4849:10;4818:68;;;8031:34:8;4869:4:7;8081:18:8;;;8074:43;8133:18;;;8126:34;;;-1:-1:-1;;;;;4818:30:7;;;;;7966:18:8;;4818:68:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4920:7;4900:15;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;4953:10:7;4942:22;;;;:10;:22;;;;;;;;:32;;;4988:19;:31;;;;;;;:49;;4967:7;;4988:31;:49;;5020:16;;4988:49;:::i;:::-;;;;;;;;;;;;;;:60;;;;;;;:::i;:::-;;;;-1:-1:-1;;5078:10:7;5062:27;;;;:15;:27;;;;;;;;-1:-1:-1;;;;;5062:38:7;;;;;;;;;:49;;5104:7;;5062:27;:49;;5104:7;;5062:49;:::i;:::-;;;;-1:-1:-1;;5130:29:7;;;5140:10;6099:51:8;;6181:2;6166:18;;6159:34;;;5130:29:7;;6072:18:8;5130:29:7;;;;;;;4406:1714;;;:::o;4714:1396::-;1684:7:1;1710:6;-1:-1:-1;;;;;1710:6:1;5197:55:7;5223:22;5237:7;5223:13;:22::i;:::-;:28;;5246:5;5223:28;:::i;:::-;5197:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5304:4:7;5293:9;:7;5301:1;5293:9;:::i;:::-;5292:16;;;;:::i;:::-;5266:23;:42;;;5376:16;:23;5322:27;;5352:47;;5376:23;5352:47;:::i;:::-;5322:77;;5418:6;5413:180;5430:16;:23;5428:25;;5413:180;;;5498:9;-1:-1:-1;;;;;5491:30:7;;5522:10;5534:16;5551:1;5534:19;;;;;;;;:::i;:::-;;;;;;;;;;;5491:87;;;;;;-1:-1:-1;;;;;;5491:87:7;;;-1:-1:-1;;;;;8049:15:8;;;5491:87:7;;;8031:34:8;5534:19:7;;8081:18:8;;;8074:43;8133:18;;;8126:34;;;7966:18;;5491:87:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5455:3:7;;5413:180;;;;5613:9;-1:-1:-1;;;;;5606:30:7;;5637:10;5657:4;5673:23;;5665:7;:31;;;;:::i;:::-;5606:92;;-1:-1:-1;;;;;;5606:92:7;;;;;;;-1:-1:-1;;;;;8049:15:8;;;5606:92:7;;;8031:34:8;8101:15;;;;8081:18;;;8074:43;8133:18;;;8126:34;7966:18;;5606:92:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5740:23:7;;5732:31;;:7;:31;:::i;:::-;5712:15;;:52;;;;;;;:::i;:::-;;;;-1:-1:-1;;5812:23:7;;5804:31;;:7;:31;:::i;:::-;5789:10;5778:22;;;;:10;:22;;;;;:58;5912:23;;5904:31;;:7;:31;:::i;:::-;5870:10;5850:31;;;;:19;:31;;;;;;;:49;;;;5882:16;;5850:49;:::i;:::-;;;;;;;;;;;;;;:86;;;;;;;:::i;:::-;;;;-1:-1:-1;;6001:23:7;;5993:31;;:7;:31;:::i;:::-;5966:10;5950:27;;;;:15;:27;;;;;;;;-1:-1:-1;;;;;5950:38:7;;;;;;;;;:75;;:38;;:27;:75;;;;;:::i;:::-;;;;-1:-1:-1;;6074:23:7;;6044:55;;6054:10;;6066:31;;:7;:31;:::i;:::-;6044:55;;;-1:-1:-1;;;;;6117:32:8;;;6099:51;;6181:2;6166:18;;6159:34;;;;6072:18;6044:55:7;;;;;;;5183:927;4714:1396;4406:1714;;;:::o;8183:151::-;1531:13:1;:11;:13::i;:::-;8303:23:7::1;::::0;8260:67:::1;::::0;-1:-1:-1;;;;;8260:30:7;::::1;::::0;8291:10:::1;::::0;8260:30:::1;:67::i;:::-;8183:151:::0;:::o;1953:33::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1953:33:7;;-1:-1:-1;1953:33:7;:::o;2543:215:1:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:1;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:1;;2700:1:::1;2672:31;::::0;::::1;2969:51:8::0;2942:18;;2672:31:1::1;2823:203:8::0;2623:91:1::1;2723:28;2742:8;2723:18;:28::i;3519:389:7:-:0;3577:7;3596:31;3652:42;3596:99;;3708:13;3731:9;-1:-1:-1;;;;;3731:25:7;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3705:53;;;;;;3785:1;3776:6;:10;3768:52;;;;-1:-1:-1;;;3768:52:7;;9317:2:8;3768:52:7;;;9299:21:8;9356:2;9336:18;;;9329:30;9395:31;9375:18;;;9368:59;9444:18;;3768:52:7;9115:353:8;3768:52:7;3830:11;3873:6;3859:3;3846:11;:7;3856:1;3846:11;:::i;:::-;3845:17;;;;:::i;:::-;3844:37;;;;:::i;:::-;3830:51;3519:389;-1:-1:-1;;;;;3519:389:7:o;1796:162:1:-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:1;735:10:6;1855:23:1;1851:101;;1901:40;;-1:-1:-1;;;1901:40:1;;735:10:6;1901:40:1;;;2969:51:8;2942:18;;1901:40:1;2823:203:8;1303:160:4;1412:43;;;-1:-1:-1;;;;;6117:32:8;;1412:43:4;;;6099:51:8;6166:18;;;;6159:34;;;1412:43:4;;;;;;;;;;6072:18:8;;;;1412:43:4;;;;;;;;-1:-1:-1;;;;;1412:43:4;-1:-1:-1;;;1412:43:4;;;1385:71;;1405:5;;1385:19;:71::i;2912:187:1:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:1;;;-1:-1:-1;;;;;;3020:17:1;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;4059:629:4:-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:4;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:4;;-1:-1:-1;;;;;2987:32:8;;4631:40:4;;;2969:51:8;2942:18;;4631:40:4;2823:203:8;2705:151:5;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3359:41;;-1:-1:-1;;;3359:41:5;;3394:4;3359:41;;;2969:51:8;2942:18;;3359:41:5;2823:203:8;3303:108:5;3421:12;3435:23;3462:6;-1:-1:-1;;;;;3462:11:5;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:5;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:5;;-1:-1:-1;;;;;2987:32:8;;5121:24:5;;;2969:51:8;2942:18;;5121:24:5;2823:203:8;5041:119:5;-1:-1:-1;5180:10:5;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:5;;;;;;;;;;;14:173:8;82:20;;-1:-1:-1;;;;;131:31:8;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:127::-;444:10;439:3;435:20;432:1;425:31;475:4;472:1;465:15;499:4;496:1;489:15;515:719;558:5;611:3;604:4;596:6;592:17;588:27;578:55;;629:1;626;619:12;578:55;665:6;652:20;691:18;728:2;724;721:10;718:36;;;734:18;;:::i;:::-;809:2;803:9;777:2;863:13;;-1:-1:-1;;859:22:8;;;883:2;855:31;851:40;839:53;;;907:18;;;927:22;;;904:46;901:72;;;953:18;;:::i;:::-;993:10;989:2;982:22;1028:2;1020:6;1013:18;1074:3;1067:4;1062:2;1054:6;1050:15;1046:26;1043:35;1040:55;;;1091:1;1088;1081:12;1040:55;1155:2;1148:4;1140:6;1136:17;1129:4;1121:6;1117:17;1104:54;1202:1;1195:4;1190:2;1182:6;1178:15;1174:26;1167:37;1222:6;1213:15;;;;;;515:719;;;;:::o;1239:539::-;1335:6;1343;1351;1359;1412:3;1400:9;1391:7;1387:23;1383:33;1380:53;;;1429:1;1426;1419:12;1380:53;1452:29;1471:9;1452:29;:::i;:::-;1442:39;;1528:2;1517:9;1513:18;1500:32;1490:42;;1551:38;1585:2;1574:9;1570:18;1551:38;:::i;:::-;1541:48;;1640:2;1629:9;1625:18;1612:32;1667:18;1659:6;1656:30;1653:50;;;1699:1;1696;1689:12;1653:50;1722;1764:7;1755:6;1744:9;1740:22;1722:50;:::i;:::-;1712:60;;;1239:539;;;;;;;:::o;1783:260::-;1851:6;1859;1912:2;1900:9;1891:7;1887:23;1883:32;1880:52;;;1928:1;1925;1918:12;1880:52;1951:29;1970:9;1951:29;:::i;:::-;1941:39;;1999:38;2033:2;2022:9;2018:18;1999:38;:::i;:::-;1989:48;;1783:260;;;;;:::o;2230:396::-;2308:6;2316;2369:2;2357:9;2348:7;2344:23;2340:32;2337:52;;;2385:1;2382;2375:12;2337:52;2425:9;2412:23;2458:18;2450:6;2447:30;2444:50;;;2490:1;2487;2480:12;2444:50;2513;2555:7;2546:6;2535:9;2531:22;2513:50;:::i;:::-;2503:60;;;2582:38;2616:2;2605:9;2601:18;2582:38;:::i;3031:464::-;3118:6;3126;3134;3187:2;3175:9;3166:7;3162:23;3158:32;3155:52;;;3203:1;3200;3193:12;3155:52;3226:29;3245:9;3226:29;:::i;:::-;3216:39;;3302:2;3291:9;3287:18;3274:32;3264:42;;3357:2;3346:9;3342:18;3329:32;3384:18;3376:6;3373:30;3370:50;;;3416:1;3413;3406:12;3370:50;3439;3481:7;3472:6;3461:9;3457:22;3439:50;:::i;:::-;3429:60;;;3031:464;;;;;:::o;3500:180::-;3559:6;3612:2;3600:9;3591:7;3587:23;3583:32;3580:52;;;3628:1;3625;3618:12;3580:52;-1:-1:-1;3651:23:8;;3500:180;-1:-1:-1;3500:180:8:o;3685:396::-;3763:6;3771;3824:2;3812:9;3803:7;3799:23;3795:32;3792:52;;;3840:1;3837;3830:12;3792:52;3863:29;3882:9;3863:29;:::i;:::-;3853:39;;3943:2;3932:9;3928:18;3915:32;3970:18;3962:6;3959:30;3956:50;;;4002:1;3999;3992:12;3956:50;4025;4067:7;4058:6;4047:9;4043:22;4025:50;:::i;:::-;4015:60;;;3685:396;;;;;:::o;4443:184::-;4513:6;4566:2;4554:9;4545:7;4541:23;4537:32;4534:52;;;4582:1;4579;4572:12;4534:52;-1:-1:-1;4605:16:8;;4443:184;-1:-1:-1;4443:184:8:o;4981:127::-;5042:10;5037:3;5033:20;5030:1;5023:31;5073:4;5070:1;5063:15;5097:4;5094:1;5087:15;5113:128;5180:9;;;5201:11;;;5198:37;;;5215:18;;:::i;5246:250::-;5331:1;5341:113;5355:6;5352:1;5349:13;5341:113;;;5431:11;;;5425:18;5412:11;;;5405:39;5377:2;5370:10;5341:113;;;-1:-1:-1;;5488:1:8;5470:16;;5463:27;5246:250::o;5501:289::-;5632:3;5670:6;5664:13;5686:66;5745:6;5740:3;5733:4;5725:6;5721:17;5686:66;:::i;:::-;5768:16;;;;;5501:289;-1:-1:-1;;5501:289:8:o;5795:125::-;5860:9;;;5881:10;;;5878:36;;;5894:18;;:::i;6204:168::-;6277:9;;;6308;;6325:15;;;6319:22;;6305:37;6295:71;;6346:18;;:::i;6377:217::-;6417:1;6443;6433:132;;6487:10;6482:3;6478:20;6475:1;6468:31;6522:4;6519:1;6512:15;6550:4;6547:1;6540:15;6433:132;-1:-1:-1;6579:9:8;;6377:217::o;6599:127::-;6660:10;6655:3;6651:20;6648:1;6641:31;6691:4;6688:1;6681:15;6715:4;6712:1;6705:15;8171:277;8238:6;8291:2;8279:9;8270:7;8266:23;8262:32;8259:52;;;8307:1;8304;8297:12;8259:52;8339:9;8333:16;8392:5;8385:13;8378:21;8371:5;8368:32;8358:60;;8414:1;8411;8404:12;8453:179;8531:13;;8584:22;8573:34;;8563:45;;8553:73;;8622:1;8619;8612:12;8637:473;8740:6;8748;8756;8764;8772;8825:3;8813:9;8804:7;8800:23;8796:33;8793:53;;;8842:1;8839;8832:12;8793:53;8865:39;8894:9;8865:39;:::i;:::-;8855:49;;8944:2;8933:9;8929:18;8923:25;8913:35;;8988:2;8977:9;8973:18;8967:25;8957:35;;9032:2;9021:9;9017:18;9011:25;9001:35;;9055:49;9099:3;9088:9;9084:19;9055:49;:::i;:::-;9045:59;;8637:473;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1278800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Owner()": "2425",
								"WhiteList(address)": "77512",
								"checkUser(address,address)": "infinite",
								"currentHoldings()": "2416",
								"getMaticPrice(uint256)": "infinite",
								"holdingOfTokens(address)": "2649",
								"holdingOf_DAI(address)": "2666",
								"holdingOf_USDC(address)": "2666",
								"holdingOf_USDM(address)": "2709",
								"holdingOf_USDT(address)": "2622",
								"overColleteralFeeAmount()": "2373",
								"owner()": "2429",
								"removeFromWhiteList(address)": "29001",
								"renounceOwnership()": "infinite",
								"substrateSwapTokens(address,uint256,address,string)": "infinite",
								"swapTokens(address,uint256,string)": "infinite",
								"transferOwnership(address)": "28399",
								"userAmount(address)": "2531",
								"userTokenAmount(address,address)": "infinite",
								"userTotalSubstrateSwapAmount(string,address)": "infinite",
								"userTotalSwapAmount(address,string)": "infinite",
								"whilistedAddress(uint256)": "4655",
								"whiteList(address)": "2666",
								"withdrawBalanceTokens(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 591,
									"end": 10475,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 591,
									"end": 10475,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 591,
									"end": 10475,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 2937,
									"end": 3030,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2937,
									"end": 3030,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2979,
									"end": 2991,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 455,
									"end": 506,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 428,
									"end": 446,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 428,
									"end": 446,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3003,
									"end": 3008,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 3003,
									"end": 3023,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3003,
									"end": 3023,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3003,
									"end": 3023,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3003,
									"end": 3023,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3003,
									"end": 3023,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3003,
									"end": 3023,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3003,
									"end": 3023,
									"modifierDepth": 1,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3003,
									"end": 3023,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3003,
									"end": 3023,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3003,
									"end": 3023,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3003,
									"end": 3023,
									"modifierDepth": 1,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3003,
									"end": 3023,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3003,
									"end": 3023,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 591,
									"end": 10475,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 591,
									"end": 10475,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 1,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 309,
									"end": 512,
									"name": "tag",
									"source": 8,
									"value": "15"
								},
								{
									"begin": 309,
									"end": 512,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 591,
									"end": 10475,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 591,
									"end": 10475,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 591,
									"end": 10475,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 591,
									"end": 10475,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 591,
									"end": 10475,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 591,
									"end": 10475,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 591,
									"end": 10475,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209ef82d5bc861811481542095417cb45a7e5a67990b80ad87a6cc96b4ae7ab1d464736f6c63430008160033",
									".code": [
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "A3150978"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "E1AD418E"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "E1AD418E"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "F09F0AAC"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "F38E762B"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "FCA0A3D2"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "FD03FE90"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "A3150978"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "A4329677"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "A7F696CF"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "B4A99A4E"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "CB8FF545"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "CDB43478"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "373CF202"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "373CF202"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "6BC20157"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "70181206"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "9C2C67C9"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "1BF6648"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "1A06E66E"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "1F1A675D"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "2DD91A4C"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "3422A7E0"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "372C12B1"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 591,
											"end": 10475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8514,
											"end": 8692,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8514,
											"end": 8692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8514,
											"end": 8692,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 8514,
											"end": 8692,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8514,
											"end": 8692,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8514,
											"end": 8692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 8514,
											"end": 8692,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8514,
											"end": 8692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8514,
											"end": 8692,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8514,
											"end": 8692,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8514,
											"end": 8692,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 8514,
											"end": 8692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8514,
											"end": 8692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 8514,
											"end": 8692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 8514,
											"end": 8692,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8514,
											"end": 8692,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8514,
											"end": 8692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 8514,
											"end": 8692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8514,
											"end": 8692,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 8514,
											"end": 8692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8514,
											"end": 8692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 8514,
											"end": 8692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8514,
											"end": 8692,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 8514,
											"end": 8692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8514,
											"end": 8692,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 6662,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 6662,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 2055,
											"end": 2149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2194,
											"end": 2219,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2219,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2194,
											"end": 2219,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2182,
											"end": 2184,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2167,
											"end": 2185,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2149,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2869,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2834,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2869,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2869,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2869,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2834,
											"end": 2869,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2869,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2834,
											"end": 2869,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2869,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2869,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2834,
											"end": 2869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2869,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2834,
											"end": 2869,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2869,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2834,
											"end": 2869,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 2567,
											"end": 2678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2678,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1844,
											"end": 1885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2796,
											"end": 2810,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2796,
											"end": 2810,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2789,
											"end": 2811,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2771,
											"end": 2812,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2771,
											"end": 2812,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2759,
											"end": 2761,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1844,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2631,
											"end": 2818,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 2155,
											"end": 2243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2243,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3514,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 3299,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3514,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3514,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3514,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 3299,
											"end": 3514,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3514,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3514,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3514,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3514,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 3299,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 3299,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 3299,
											"end": 3514,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3514,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3299,
											"end": 3514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3514,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 3299,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3514,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 3299,
											"end": 3514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9513,
											"end": 9692,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 9513,
											"end": 9692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9513,
											"end": 9692,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 9513,
											"end": 9692,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9513,
											"end": 9692,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9513,
											"end": 9692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 9513,
											"end": 9692,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9513,
											"end": 9692,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9513,
											"end": 9692,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9513,
											"end": 9692,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9513,
											"end": 9692,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 9513,
											"end": 9692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9513,
											"end": 9692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9513,
											"end": 9692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 9513,
											"end": 9692,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9513,
											"end": 9692,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9513,
											"end": 9692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 9513,
											"end": 9692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9513,
											"end": 9692,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 9513,
											"end": 9692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9606,
											"end": 9629,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9574,
											"end": 9587,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9606,
											"end": 9629,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9606,
											"end": 9629,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9606,
											"end": 9629,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9606,
											"end": 9621,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9606,
											"end": 9629,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9606,
											"end": 9629,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9606,
											"end": 9629,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9606,
											"end": 9629,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9606,
											"end": 9629,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9606,
											"end": 9629,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9606,
											"end": 9629,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9606,
											"end": 9629,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1229,
											"end": 1271,
											"name": "PUSH",
											"source": 7,
											"value": "9951342D994001468506DF88F71A582867B50DD4"
										},
										{
											"begin": 9606,
											"end": 9635,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9606,
											"end": 9635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9606,
											"end": 9635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9606,
											"end": 9635,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9606,
											"end": 9635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9606,
											"end": 9635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9606,
											"end": 9635,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9606,
											"end": 9635,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9606,
											"end": 9635,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9513,
											"end": 9692,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2987,
											"end": 3019,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2987,
											"end": 3019,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2987,
											"end": 3019,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2957,
											"end": 2959,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2942,
											"end": 2960,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2823,
											"end": 3026,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2743,
											"end": 2770,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 2743,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2770,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2770,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2770,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 2743,
											"end": 2770,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2770,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2770,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2770,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2770,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 2743,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2743,
											"end": 2770,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2743,
											"end": 2770,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2770,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2770,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8848,
											"end": 9027,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 8848,
											"end": 9027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8848,
											"end": 9027,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 8848,
											"end": 9027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8848,
											"end": 9027,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8848,
											"end": 9027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 8848,
											"end": 9027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8848,
											"end": 9027,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8848,
											"end": 9027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8848,
											"end": 9027,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8848,
											"end": 9027,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 8848,
											"end": 9027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8848,
											"end": 9027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8848,
											"end": 9027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 8848,
											"end": 9027,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8848,
											"end": 9027,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8848,
											"end": 9027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 8848,
											"end": 9027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8848,
											"end": 9027,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 8848,
											"end": 9027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8941,
											"end": 8964,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8909,
											"end": 8922,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8941,
											"end": 8964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 8964,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 8964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 8956,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8941,
											"end": 8964,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8941,
											"end": 8964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 8964,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 8964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 8964,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8941,
											"end": 8964,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 8964,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 8964,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1157,
											"end": 1199,
											"name": "PUSH",
											"source": 7,
											"value": "A5014EA627AC22A63F2BF3B46E26D408E72F55C1"
										},
										{
											"begin": 8941,
											"end": 8970,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 8970,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 8970,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 8970,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 8970,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 8970,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 8970,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 8970,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8941,
											"end": 8970,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8848,
											"end": 9027,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10268,
											"end": 10472,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 10268,
											"end": 10472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10268,
											"end": 10472,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 10268,
											"end": 10472,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10268,
											"end": 10472,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10268,
											"end": 10472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 10268,
											"end": 10472,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10268,
											"end": 10472,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10268,
											"end": 10472,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10268,
											"end": 10472,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10268,
											"end": 10472,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 10268,
											"end": 10472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10268,
											"end": 10472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10268,
											"end": 10472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 10268,
											"end": 10472,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 10268,
											"end": 10472,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10268,
											"end": 10472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 10268,
											"end": 10472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10268,
											"end": 10472,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 10268,
											"end": 10472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10381,
											"end": 10391,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 10333,
											"end": 10346,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10365,
											"end": 10392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10365,
											"end": 10392,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10365,
											"end": 10392,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10365,
											"end": 10380,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10365,
											"end": 10392,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10365,
											"end": 10392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10365,
											"end": 10392,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10365,
											"end": 10392,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10365,
											"end": 10392,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10365,
											"end": 10392,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10365,
											"end": 10392,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10365,
											"end": 10392,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10365,
											"end": 10403,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 10365,
											"end": 10403,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10365,
											"end": 10403,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 10365,
											"end": 10403,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10365,
											"end": 10403,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10365,
											"end": 10403,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10365,
											"end": 10403,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10365,
											"end": 10403,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10365,
											"end": 10403,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10365,
											"end": 10403,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 10365,
											"end": 10403,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10365,
											"end": 10403,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10268,
											"end": 10472,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9181,
											"end": 9357,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 9181,
											"end": 9357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9181,
											"end": 9357,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 9181,
											"end": 9357,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9181,
											"end": 9357,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9181,
											"end": 9357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 9181,
											"end": 9357,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9181,
											"end": 9357,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9181,
											"end": 9357,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9181,
											"end": 9357,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9181,
											"end": 9357,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 9181,
											"end": 9357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9181,
											"end": 9357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9181,
											"end": 9357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 9181,
											"end": 9357,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9181,
											"end": 9357,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9181,
											"end": 9357,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 9181,
											"end": 9357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9181,
											"end": 9357,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 9181,
											"end": 9357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9273,
											"end": 9296,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9241,
											"end": 9254,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9273,
											"end": 9296,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9296,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9296,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9288,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9273,
											"end": 9296,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9273,
											"end": 9296,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9296,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9296,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9296,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9273,
											"end": 9296,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9296,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9296,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1300,
											"end": 1342,
											"name": "PUSH",
											"source": 7,
											"value": "77F146CA2943294CC53E6C3B5980B572C961AE23"
										},
										{
											"begin": 9273,
											"end": 9301,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9301,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9301,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9301,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9301,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9301,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9301,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9301,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9301,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9181,
											"end": 9357,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 735,
											"end": 755,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 735,
											"end": 755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 735,
											"end": 755,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 735,
											"end": 755,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 735,
											"end": 755,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 735,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 735,
											"end": 755,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 735,
											"end": 755,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 755,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 735,
											"end": 755,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 735,
											"end": 755,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 735,
											"end": 755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 735,
											"end": 755,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 735,
											"end": 755,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 735,
											"end": 755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 735,
											"end": 755,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 735,
											"end": 755,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 735,
											"end": 755,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 735,
											"end": 755,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 6120,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 4406,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 4406,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 4406,
											"end": 6120,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 6120,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4406,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 4406,
											"end": 6120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 6120,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 4406,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 4406,
											"end": 6120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8334,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 8183,
											"end": 8334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8334,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8334,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8334,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 8183,
											"end": 8334,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8334,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8183,
											"end": 8334,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8334,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8334,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 8183,
											"end": 8334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8183,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 8183,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 8183,
											"end": 8334,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8334,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8183,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 8183,
											"end": 8334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8334,
											"name": "tag",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 8183,
											"end": 8334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 8183,
											"end": 8334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 2249,
											"end": 2304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2249,
											"end": 2304,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 1953,
											"end": 1986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 1953,
											"end": 1986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3908,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 3519,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3908,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3908,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3908,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 3519,
											"end": 3908,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3908,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3908,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3908,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3908,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 3519,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3519,
											"end": 3908,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3908,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3519,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 3519,
											"end": 3908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3908,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 3519,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3519,
											"end": 3908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 10027,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9848,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 10027,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 10027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 10027,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 9848,
											"end": 10027,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 10027,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9848,
											"end": 10027,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 10027,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 10027,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 9848,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9848,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9848,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 9848,
											"end": 10027,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 10027,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9848,
											"end": 10027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 9848,
											"end": 10027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 10027,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 9848,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9941,
											"end": 9964,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9909,
											"end": 9922,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9941,
											"end": 9964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9941,
											"end": 9964,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9941,
											"end": 9964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9941,
											"end": 9956,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9941,
											"end": 9964,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9941,
											"end": 9964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9941,
											"end": 9964,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9941,
											"end": 9964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9941,
											"end": 9964,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9941,
											"end": 9964,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9941,
											"end": 9964,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9941,
											"end": 9964,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1372,
											"end": 1414,
											"name": "PUSH",
											"source": 7,
											"value": "4B3A514DD71850277BBA82491F26DACDF089CB68"
										},
										{
											"begin": 9941,
											"end": 9970,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9941,
											"end": 9970,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9941,
											"end": 9970,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9941,
											"end": 9970,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9941,
											"end": 9970,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9941,
											"end": 9970,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9941,
											"end": 9970,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9941,
											"end": 9970,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9941,
											"end": 9970,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9848,
											"end": 10027,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 2390,
											"end": 2481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2390,
											"end": 2481,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8514,
											"end": 8692,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 8514,
											"end": 8692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8596,
											"end": 8615,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8596,
											"end": 8615,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8596,
											"end": 8615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8596,
											"end": 8615,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8596,
											"end": 8615,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8596,
											"end": 8615,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8596,
											"end": 8605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8596,
											"end": 8615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8596,
											"end": 8615,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8596,
											"end": 8615,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8596,
											"end": 8615,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8596,
											"end": 8615,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8596,
											"end": 8615,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8596,
											"end": 8615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 8596,
											"end": 8615,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8588,
											"end": 8648,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 8588,
											"end": 8648,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8588,
											"end": 8648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8588,
											"end": 8648,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8588,
											"end": 8648,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8588,
											"end": 8648,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4288,
											"end": 4290,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8588,
											"end": 8648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8588,
											"end": 8648,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8588,
											"end": 8648,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4327,
											"end": 4329,
											"name": "PUSH",
											"source": 8,
											"value": "1C"
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4307,
											"end": 4325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4300,
											"end": 4330,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4366,
											"end": 4396,
											"name": "PUSH",
											"source": 8,
											"value": "54686973204164647265737320646F6573206E6F742065786973742100000000"
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4346,
											"end": 4364,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4339,
											"end": 4397,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4414,
											"end": 4432,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4414,
											"end": 4432,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8588,
											"end": 8648,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 8588,
											"end": 8648,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8588,
											"end": 8648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8588,
											"end": 8648,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8588,
											"end": 8648,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8588,
											"end": 8648,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8588,
											"end": 8648,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8588,
											"end": 8648,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8588,
											"end": 8648,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8588,
											"end": 8648,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 8588,
											"end": 8648,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8658,
											"end": 8677,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8680,
											"end": 8685,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8658,
											"end": 8677,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8658,
											"end": 8677,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8658,
											"end": 8677,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8658,
											"end": 8667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8658,
											"end": 8677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8658,
											"end": 8677,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8658,
											"end": 8677,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8658,
											"end": 8677,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8658,
											"end": 8677,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8658,
											"end": 8685,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8658,
											"end": 8685,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8658,
											"end": 8685,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8658,
											"end": 8685,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8658,
											"end": 8685,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8514,
											"end": 8692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6830,
											"end": 6834,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6840,
											"end": 6847,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6840,
											"end": 6847,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6794,
											"end": 6821,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6821,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6821,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 6794,
											"end": 6821,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2942,
											"end": 2960,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2942,
											"end": 2960,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 6794,
											"end": 6836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 6794,
											"end": 6836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6847,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6847,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6786,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 6786,
											"end": 6872,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6786,
											"end": 6872,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6786,
											"end": 6872,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6786,
											"end": 6872,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6786,
											"end": 6872,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4834,
											"end": 4836,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6786,
											"end": 6872,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6786,
											"end": 6872,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6786,
											"end": 6872,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4837,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4873,
											"end": 4875,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 4853,
											"end": 4871,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4853,
											"end": 4871,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 4871,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4892,
											"end": 4910,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4892,
											"end": 4910,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4892,
											"end": 4910,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4885,
											"end": 4935,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4952,
											"end": 4970,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4952,
											"end": 4970,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6786,
											"end": 6872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 4632,
											"end": 4976,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6786,
											"end": 6872,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 6786,
											"end": 6872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B3A514DD71850277BBA82491F26DACDF089CB67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6885,
											"end": 6902,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6885,
											"end": 6902,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6885,
											"end": 6902,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6882,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 6882,
											"end": 8025,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6917,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6917,
											"end": 6947,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6917,
											"end": 6947,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6951,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 6959,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6917,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 6917,
											"end": 6960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6917,
											"end": 6960,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 6917,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6994,
											"end": 7001,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 6989,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 6974,
											"end": 6989,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 7002,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 7002,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 7002,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 6974,
											"end": 7002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 7002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 6974,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 7002,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 6974,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 7002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 7002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 7002,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7026,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7031,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7041,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7041,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7016,
											"end": 7041,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7101,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7034,
											"end": 7041,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7034,
											"end": 7041,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7083,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 7055,
											"end": 7083,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 7055,
											"end": 7101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7084,
											"end": 7100,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7084,
											"end": 7100,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 7055,
											"end": 7101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7101,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 7055,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7101,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7101,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7101,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7055,
											"end": 7101,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7101,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7055,
											"end": 7101,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7101,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7101,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7101,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7101,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7106,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7102,
											"end": 7105,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7055,
											"end": 7106,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7055,
											"end": 7106,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7106,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7106,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7106,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7055,
											"end": 7106,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7106,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7106,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7106,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7055,
											"end": 7106,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7106,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7055,
											"end": 7106,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7106,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7055,
											"end": 7117,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7117,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7117,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 7055,
											"end": 7117,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7117,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 7055,
											"end": 7117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7117,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 7055,
											"end": 7117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7117,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7117,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7055,
											"end": 7117,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7131,
											"end": 7151,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7151,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7151,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7151,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7131,
											"end": 7151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7151,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7151,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7146,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7131,
											"end": 7151,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7131,
											"end": 7151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7151,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7151,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7151,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7131,
											"end": 7151,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7151,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7151,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7162,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7162,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7162,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7162,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7162,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7162,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7162,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7162,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7162,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7162,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7162,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7173,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7173,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7166,
											"end": 7173,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7166,
											"end": 7173,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 7131,
											"end": 7173,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7166,
											"end": 7173,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7166,
											"end": 7173,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 7131,
											"end": 7173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7173,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 7131,
											"end": 7173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7173,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7173,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7131,
											"end": 7173,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7192,
											"end": 7214,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7192,
											"end": 7214,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7192,
											"end": 7214,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6117,
											"end": 6149,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6117,
											"end": 6149,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6150,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6183,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6193,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6193,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7192,
											"end": 7214,
											"name": "PUSH",
											"source": 7,
											"value": "CC87AB2ABFE87B272AF9B77691E40B3D9186A0431F3D41A8E06D39614F460722"
										},
										{
											"begin": 7192,
											"end": 7214,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6072,
											"end": 6090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7192,
											"end": 7214,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7192,
											"end": 7214,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7192,
											"end": 7214,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7192,
											"end": 7214,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7192,
											"end": 7214,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7192,
											"end": 7214,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7192,
											"end": 7214,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 6882,
											"end": 8025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 6882,
											"end": 8025,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6882,
											"end": 8025,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 6882,
											"end": 8025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7291,
											"end": 7295,
											"name": "PUSH",
											"source": 7,
											"value": "3E8"
										},
										{
											"begin": 7280,
											"end": 7289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 7280,
											"end": 7287,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7288,
											"end": 7289,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7280,
											"end": 7289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 7280,
											"end": 7289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7280,
											"end": 7289,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 7280,
											"end": 7289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7279,
											"end": 7295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 7279,
											"end": 7295,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7279,
											"end": 7295,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7279,
											"end": 7295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 7279,
											"end": 7295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7279,
											"end": 7295,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 7279,
											"end": 7295,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7253,
											"end": 7276,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 7253,
											"end": 7295,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7253,
											"end": 7295,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7253,
											"end": 7295,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7363,
											"end": 7379,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7363,
											"end": 7386,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7309,
											"end": 7336,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7309,
											"end": 7336,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 7339,
											"end": 7386,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7363,
											"end": 7386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7386,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 7339,
											"end": 7386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7339,
											"end": 7386,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 7339,
											"end": 7386,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7309,
											"end": 7386,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7309,
											"end": 7386,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7405,
											"end": 7411,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7400,
											"end": 7567,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 7400,
											"end": 7567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7417,
											"end": 7433,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7417,
											"end": 7440,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7415,
											"end": 7440,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7415,
											"end": 7440,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7567,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 7400,
											"end": 7567,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7478,
											"end": 7552,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 7509,
											"end": 7525,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7526,
											"end": 7527,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 7509,
											"end": 7528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7478,
											"end": 7508,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7478,
											"end": 7508,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7478,
											"end": 7508,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7478,
											"end": 7508,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7509,
											"end": 7528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7529,
											"end": 7551,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7478,
											"end": 7508,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 7478,
											"end": 7552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7478,
											"end": 7552,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 7478,
											"end": 7552,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7442,
											"end": 7445,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7442,
											"end": 7445,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 7400,
											"end": 7567,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7567,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 7400,
											"end": 7567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7400,
											"end": 7567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7580,
											"end": 7649,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 7611,
											"end": 7614,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7624,
											"end": 7647,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 7624,
											"end": 7647,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7616,
											"end": 7623,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7616,
											"end": 7647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 7616,
											"end": 7647,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7616,
											"end": 7647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7616,
											"end": 7647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 7616,
											"end": 7647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7616,
											"end": 7647,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 7616,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7580,
											"end": 7610,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7580,
											"end": 7610,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7580,
											"end": 7610,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7580,
											"end": 7649,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7580,
											"end": 7610,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 7580,
											"end": 7649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7580,
											"end": 7649,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 7580,
											"end": 7649,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7691,
											"end": 7714,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 7691,
											"end": 7714,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7683,
											"end": 7714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 7683,
											"end": 7714,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7683,
											"end": 7690,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7683,
											"end": 7714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 7683,
											"end": 7714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7683,
											"end": 7714,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 7683,
											"end": 7714,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7663,
											"end": 7678,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 7663,
											"end": 7678,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7663,
											"end": 7715,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7663,
											"end": 7715,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7663,
											"end": 7715,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7663,
											"end": 7715,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 7663,
											"end": 7715,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7663,
											"end": 7715,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7663,
											"end": 7715,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 7663,
											"end": 7715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7663,
											"end": 7715,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 7663,
											"end": 7715,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7663,
											"end": 7715,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7663,
											"end": 7715,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7663,
											"end": 7715,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7756,
											"end": 7779,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 7756,
											"end": 7779,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7748,
											"end": 7755,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 7748,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 7748,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7729,
											"end": 7744,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7729,
											"end": 7744,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7729,
											"end": 7744,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7729,
											"end": 7744,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7729,
											"end": 7744,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7729,
											"end": 7744,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7729,
											"end": 7739,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 7729,
											"end": 7744,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7729,
											"end": 7744,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7729,
											"end": 7744,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7729,
											"end": 7744,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7729,
											"end": 7744,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7729,
											"end": 7744,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7729,
											"end": 7744,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7729,
											"end": 7780,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7729,
											"end": 7780,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7729,
											"end": 7780,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7729,
											"end": 7780,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7840,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7849,
											"end": 7856,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7849,
											"end": 7856,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7822,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 7794,
											"end": 7822,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 7794,
											"end": 7840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7839,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7823,
											"end": 7839,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 7794,
											"end": 7840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7840,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 7794,
											"end": 7840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7840,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7840,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7840,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7794,
											"end": 7840,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7840,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7794,
											"end": 7840,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7840,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7840,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7840,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7840,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7845,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7841,
											"end": 7844,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7794,
											"end": 7845,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7794,
											"end": 7845,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7845,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7845,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7845,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7794,
											"end": 7845,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7845,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7845,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7845,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7845,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7794,
											"end": 7845,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7845,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7845,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7845,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7794,
											"end": 7856,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7856,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7856,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 7794,
											"end": 7856,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7856,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 7794,
											"end": 7856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7856,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 7794,
											"end": 7856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7856,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7856,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7794,
											"end": 7856,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7914,
											"end": 7937,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 7914,
											"end": 7937,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 7937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 7906,
											"end": 7937,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 7913,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 7937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 7906,
											"end": 7937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 7937,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 7906,
											"end": 7937,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7870,
											"end": 7890,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7890,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7890,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7890,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7870,
											"end": 7890,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7890,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7890,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7885,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7870,
											"end": 7890,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7870,
											"end": 7890,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7890,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7890,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7890,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7870,
											"end": 7890,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7890,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7890,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7901,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7901,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7901,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7901,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7901,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7901,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7901,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7901,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7901,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7901,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7901,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7938,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7938,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7901,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7901,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7890,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7938,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 7870,
											"end": 7938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7938,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7938,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 7870,
											"end": 7938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7938,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 7870,
											"end": 7938,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7938,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7938,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7938,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7989,
											"end": 8012,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 7989,
											"end": 8012,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7957,
											"end": 8014,
											"name": "PUSH",
											"source": 7,
											"value": "CF53AE9736A409C662FA8B1187549847ACD41BEB1B89FD026293FC2E19ADACA7"
										},
										{
											"begin": 7957,
											"end": 8014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7976,
											"end": 7979,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7976,
											"end": 7979,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7981,
											"end": 8012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 7981,
											"end": 8012,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7981,
											"end": 7988,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7981,
											"end": 8012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 7981,
											"end": 8012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7981,
											"end": 8012,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 7981,
											"end": 8012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7957,
											"end": 8014,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7957,
											"end": 8014,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7957,
											"end": 8014,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6117,
											"end": 6149,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6117,
											"end": 6149,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6117,
											"end": 6149,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6150,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6183,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6193,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6193,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6193,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6072,
											"end": 6090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7957,
											"end": 8014,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7957,
											"end": 8014,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7957,
											"end": 8014,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7957,
											"end": 8014,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7957,
											"end": 8014,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7957,
											"end": 8014,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7957,
											"end": 8014,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 7238,
											"end": 8025,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6882,
											"end": 8025,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 6882,
											"end": 8025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6662,
											"end": 8031,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6662,
											"end": 8031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3514,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 3299,
											"end": 3514,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3371,
											"end": 3390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3371,
											"end": 3390,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3371,
											"end": 3390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3371,
											"end": 3390,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3371,
											"end": 3390,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3371,
											"end": 3390,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3371,
											"end": 3380,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3371,
											"end": 3390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3371,
											"end": 3390,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3371,
											"end": 3390,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3371,
											"end": 3390,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3371,
											"end": 3390,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3371,
											"end": 3390,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3371,
											"end": 3390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3371,
											"end": 3390,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3370,
											"end": 3390,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3362,
											"end": 3430,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 3362,
											"end": 3430,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3362,
											"end": 3430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3362,
											"end": 3430,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3362,
											"end": 3430,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3362,
											"end": 3430,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6933,
											"end": 6935,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3362,
											"end": 3430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3362,
											"end": 3430,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3362,
											"end": 3430,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6915,
											"end": 6936,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6972,
											"end": 6974,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6952,
											"end": 6970,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6952,
											"end": 6970,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6952,
											"end": 6970,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6945,
											"end": 6975,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7011,
											"end": 7045,
											"name": "PUSH",
											"source": 8,
											"value": "54686973204164647265737320697320616C72656164792057686974654C6973"
										},
										{
											"begin": 6991,
											"end": 7009,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6991,
											"end": 7009,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6991,
											"end": 7009,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6984,
											"end": 7046,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "74656421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7062,
											"end": 7080,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7062,
											"end": 7080,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7062,
											"end": 7080,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7055,
											"end": 7089,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7106,
											"end": 7125,
											"name": "PUSH",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 7106,
											"end": 7125,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3430,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 6731,
											"end": 7131,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3362,
											"end": 3430,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 3362,
											"end": 3430,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3440,
											"end": 3456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3440,
											"end": 3471,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3440,
											"end": 3471,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3440,
											"end": 3471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3440,
											"end": 3471,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3440,
											"end": 3471,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3440,
											"end": 3471,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3440,
											"end": 3471,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3440,
											"end": 3471,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3440,
											"end": 3471,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3440,
											"end": 3471,
											"name": "PUSH",
											"source": 7,
											"value": "C2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
										},
										{
											"begin": 3440,
											"end": 3471,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3440,
											"end": 3471,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3440,
											"end": 3471,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3440,
											"end": 3471,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3440,
											"end": 3471,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3440,
											"end": 3471,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3440,
											"end": 3471,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3440,
											"end": 3471,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3440,
											"end": 3471,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3440,
											"end": 3471,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3440,
											"end": 3471,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3440,
											"end": 3471,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3440,
											"end": 3471,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3500,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3481,
											"end": 3500,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3481,
											"end": 3500,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3481,
											"end": 3490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3440,
											"end": 3471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3481,
											"end": 3500,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3481,
											"end": 3500,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3481,
											"end": 3500,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3481,
											"end": 3500,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3481,
											"end": 3500,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3481,
											"end": 3507,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3481,
											"end": 3507,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3481,
											"end": 3507,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3481,
											"end": 3507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3481,
											"end": 3507,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3481,
											"end": 3507,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 3481,
											"end": 3507,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3481,
											"end": 3507,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 6120,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 4406,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4552,
											"end": 4562,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7348,
											"end": 7382,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4576,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 7398,
											"end": 7416,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7398,
											"end": 7416,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7398,
											"end": 7416,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7391,
											"end": 7434,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4582,
											"end": 4589,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4582,
											"end": 4589,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7283,
											"end": 7301,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7283,
											"end": 7301,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 4524,
											"end": 4578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 4524,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4589,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4524,
											"end": 4589,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4516,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 4516,
											"end": 4611,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4516,
											"end": 4611,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4516,
											"end": 4611,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4516,
											"end": 4611,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4516,
											"end": 4611,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7647,
											"end": 7649,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4516,
											"end": 4611,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4516,
											"end": 4611,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4516,
											"end": 4611,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7629,
											"end": 7650,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7686,
											"end": 7688,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 7666,
											"end": 7684,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 7666,
											"end": 7684,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7666,
											"end": 7684,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7659,
											"end": 7689,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1B1BDDD85B98D9481B9BDD081CD95D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7705,
											"end": 7723,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 7705,
											"end": 7723,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7705,
											"end": 7723,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7698,
											"end": 7745,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7762,
											"end": 7780,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7762,
											"end": 7780,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4516,
											"end": 4611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 7445,
											"end": 7786,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4516,
											"end": 4611,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 4516,
											"end": 4611,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4657,
											"end": 4667,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4672,
											"end": 4679,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4672,
											"end": 4679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4629,
											"end": 4656,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4656,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4656,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 4629,
											"end": 4656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2942,
											"end": 2960,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2942,
											"end": 2960,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 4629,
											"end": 4668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 4629,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4679,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4629,
											"end": 4679,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 4621,
											"end": 4704,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 4704,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4621,
											"end": 4704,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4621,
											"end": 4704,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 4704,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4834,
											"end": 4836,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4621,
											"end": 4704,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4621,
											"end": 4704,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 4704,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4837,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4873,
											"end": 4875,
											"name": "PUSH",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 4853,
											"end": 4871,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 4853,
											"end": 4871,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 4871,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4846,
											"end": 4876,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4892,
											"end": 4910,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4892,
											"end": 4910,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4892,
											"end": 4910,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4885,
											"end": 4935,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4952,
											"end": 4970,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 4952,
											"end": 4970,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4621,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 4632,
											"end": 4976,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4621,
											"end": 4704,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 4621,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B3A514DD71850277BBA82491F26DACDF089CB67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4717,
											"end": 4734,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4717,
											"end": 4734,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4717,
											"end": 4734,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4714,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 4714,
											"end": 6110,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 4775,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 4789,
											"end": 4796,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4775,
											"end": 4788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 4775,
											"end": 4797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4775,
											"end": 4797,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 4775,
											"end": 4797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4775,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 4775,
											"end": 4803,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4798,
											"end": 4803,
											"name": "PUSH",
											"source": 7,
											"value": "5F5E100"
										},
										{
											"begin": 4775,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 4775,
											"end": 4803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4775,
											"end": 4803,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 4775,
											"end": 4803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 4749,
											"end": 4804,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4859,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8065,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4873,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8099,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8081,
											"end": 8099,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8081,
											"end": 8099,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8074,
											"end": 8117,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8133,
											"end": 8151,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8133,
											"end": 8151,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8133,
											"end": 8151,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8126,
											"end": 8160,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8126,
											"end": 8160,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8126,
											"end": 8160,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4848,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4848,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4848,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4848,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 4818,
											"end": 4848,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 4818,
											"end": 4886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4818,
											"end": 4886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4927,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4900,
											"end": 4928,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 4928,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 4928,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 4900,
											"end": 4928,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 4928,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 4900,
											"end": 4928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 4928,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 4900,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 4928,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 4928,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 4928,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4953,
											"end": 4963,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4942,
											"end": 4964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4942,
											"end": 4964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4942,
											"end": 4964,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4942,
											"end": 4964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4942,
											"end": 4952,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4942,
											"end": 4964,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4942,
											"end": 4964,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4942,
											"end": 4964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4942,
											"end": 4964,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4942,
											"end": 4964,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4942,
											"end": 4964,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4942,
											"end": 4964,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4942,
											"end": 4974,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4942,
											"end": 4974,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4942,
											"end": 4974,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5007,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4988,
											"end": 5019,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5019,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5019,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5019,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5019,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5019,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5019,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5037,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5037,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4967,
											"end": 4974,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4967,
											"end": 4974,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5019,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4988,
											"end": 5037,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5036,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5036,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 4988,
											"end": 5037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5037,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 4988,
											"end": 5037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5037,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5037,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5037,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5037,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4988,
											"end": 5037,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5037,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4988,
											"end": 5037,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5037,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5037,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5037,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5037,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5037,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4988,
											"end": 5048,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5048,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5048,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 4988,
											"end": 5048,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5048,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 4988,
											"end": 5048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5048,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 4988,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5048,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5048,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4988,
											"end": 5048,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5078,
											"end": 5088,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5089,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5062,
											"end": 5089,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5089,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5089,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5077,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5062,
											"end": 5089,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5062,
											"end": 5089,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5089,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5089,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5089,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5062,
											"end": 5089,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5089,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5089,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5062,
											"end": 5100,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5100,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5100,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5100,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5100,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5100,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5100,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5100,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5100,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5111,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5111,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5111,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5111,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5089,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 5062,
											"end": 5111,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5111,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5104,
											"end": 5111,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 5062,
											"end": 5111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5111,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 5062,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5111,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5111,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5111,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5140,
											"end": 5150,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6150,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6183,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6193,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6193,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "PUSH",
											"source": 7,
											"value": "CC87AB2ABFE87B272AF9B77691E40B3D9186A0431F3D41A8E06D39614F460722"
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6072,
											"end": 6090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5130,
											"end": 5159,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 6120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 6120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 6120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 6120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4714,
											"end": 6110,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 4714,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 5223,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 5237,
											"end": 5244,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5223,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 5223,
											"end": 5245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5223,
											"end": 5245,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 5223,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5223,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 5223,
											"end": 5251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5246,
											"end": 5251,
											"name": "PUSH",
											"source": 7,
											"value": "5F5E100"
										},
										{
											"begin": 5223,
											"end": 5251,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 5223,
											"end": 5251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5223,
											"end": 5251,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 5223,
											"end": 5251,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 5197,
											"end": 5252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5304,
											"end": 5308,
											"name": "PUSH",
											"source": 7,
											"value": "3E8"
										},
										{
											"begin": 5293,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 5293,
											"end": 5300,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5301,
											"end": 5302,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5293,
											"end": 5302,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 5293,
											"end": 5302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5293,
											"end": 5302,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 5293,
											"end": 5302,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5292,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 5292,
											"end": 5308,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5292,
											"end": 5308,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5292,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 5292,
											"end": 5308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5292,
											"end": 5308,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 5292,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5289,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 5266,
											"end": 5308,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5308,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5308,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5376,
											"end": 5392,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5376,
											"end": 5399,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5322,
											"end": 5349,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5322,
											"end": 5349,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5352,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 5352,
											"end": 5399,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5376,
											"end": 5399,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5352,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 5352,
											"end": 5399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5352,
											"end": 5399,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 5352,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5322,
											"end": 5399,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5322,
											"end": 5399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5418,
											"end": 5424,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5413,
											"end": 5593,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 5413,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5430,
											"end": 5446,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5430,
											"end": 5453,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5428,
											"end": 5453,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5428,
											"end": 5453,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5593,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 5413,
											"end": 5593,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5507,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5491,
											"end": 5521,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5521,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 5522,
											"end": 5532,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5534,
											"end": 5550,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5551,
											"end": 5552,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5534,
											"end": 5553,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5534,
											"end": 5553,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5534,
											"end": 5553,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5534,
											"end": 5553,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5534,
											"end": 5553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 5534,
											"end": 5553,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5534,
											"end": 5553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 5534,
											"end": 5553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 5534,
											"end": 5553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5534,
											"end": 5553,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 5534,
											"end": 5553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5534,
											"end": 5553,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5534,
											"end": 5553,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5534,
											"end": 5553,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5534,
											"end": 5553,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5534,
											"end": 5553,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5534,
											"end": 5553,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5534,
											"end": 5553,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5534,
											"end": 5553,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5534,
											"end": 5553,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5534,
											"end": 5553,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8049,
											"end": 8064,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8049,
											"end": 8064,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8049,
											"end": 8064,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8065,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5534,
											"end": 5553,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5534,
											"end": 5553,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8081,
											"end": 8099,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8081,
											"end": 8099,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8081,
											"end": 8099,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8074,
											"end": 8117,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8133,
											"end": 8151,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8133,
											"end": 8151,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8133,
											"end": 8151,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8126,
											"end": 8160,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8126,
											"end": 8160,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8126,
											"end": 8160,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 5491,
											"end": 5578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 5491,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5455,
											"end": 5458,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5455,
											"end": 5458,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 5413,
											"end": 5593,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5593,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 5413,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5613,
											"end": 5622,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5606,
											"end": 5636,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5636,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 5637,
											"end": 5647,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5657,
											"end": 5661,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 5673,
											"end": 5696,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 5673,
											"end": 5696,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5672,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 5665,
											"end": 5696,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5696,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 5665,
											"end": 5696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5665,
											"end": 5696,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 5665,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8049,
											"end": 8064,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8049,
											"end": 8064,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8049,
											"end": 8064,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8065,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8101,
											"end": 8116,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8101,
											"end": 8116,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8101,
											"end": 8116,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8101,
											"end": 8116,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8081,
											"end": 8099,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 8081,
											"end": 8099,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8081,
											"end": 8099,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8074,
											"end": 8117,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8133,
											"end": 8151,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 8133,
											"end": 8151,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8133,
											"end": 8151,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8126,
											"end": 8160,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 7966,
											"end": 7984,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 5606,
											"end": 5698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 5606,
											"end": 5698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5740,
											"end": 5763,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 5740,
											"end": 5763,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 5732,
											"end": 5763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 5739,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 5732,
											"end": 5763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5732,
											"end": 5763,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 5732,
											"end": 5763,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5727,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 5712,
											"end": 5727,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5712,
											"end": 5764,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5764,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5764,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 5712,
											"end": 5764,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5764,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 5712,
											"end": 5764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5764,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 5712,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5764,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5764,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5764,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5812,
											"end": 5835,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 5812,
											"end": 5835,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5804,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 5804,
											"end": 5835,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5804,
											"end": 5811,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5804,
											"end": 5835,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 5804,
											"end": 5835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5804,
											"end": 5835,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 5804,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5789,
											"end": 5799,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5778,
											"end": 5800,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5778,
											"end": 5800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5778,
											"end": 5800,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5778,
											"end": 5788,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 5778,
											"end": 5800,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5778,
											"end": 5800,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5778,
											"end": 5800,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5778,
											"end": 5800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5778,
											"end": 5800,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5778,
											"end": 5836,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 5935,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 5912,
											"end": 5935,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5904,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 5904,
											"end": 5935,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5904,
											"end": 5911,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5904,
											"end": 5935,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 5904,
											"end": 5935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5904,
											"end": 5935,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 5904,
											"end": 5935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 5880,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5881,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5850,
											"end": 5881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5881,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5881,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5869,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 5850,
											"end": 5881,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5850,
											"end": 5881,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5881,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5850,
											"end": 5881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5881,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5881,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5899,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5899,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 5850,
											"end": 5899,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 5898,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 5898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 5850,
											"end": 5899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5899,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 5850,
											"end": 5899,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5899,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5899,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5899,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5850,
											"end": 5899,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5899,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5850,
											"end": 5899,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5899,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5899,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5899,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5899,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5899,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5899,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5850,
											"end": 5936,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5936,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5936,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 5850,
											"end": 5936,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5936,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 5850,
											"end": 5936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5936,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 5850,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5936,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5936,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5936,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6001,
											"end": 6024,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 6001,
											"end": 6024,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5993,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 5993,
											"end": 6024,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5993,
											"end": 6000,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5993,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 5993,
											"end": 6024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5993,
											"end": 6024,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 5993,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5966,
											"end": 5976,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 5977,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5950,
											"end": 5977,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 5977,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 5977,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 5965,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5950,
											"end": 5977,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5950,
											"end": 5977,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 5977,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 5977,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 5977,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5950,
											"end": 5977,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 5977,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 5977,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5950,
											"end": 5988,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 5988,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 5988,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 5988,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 5988,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 5988,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 5988,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 5988,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 5988,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 6025,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 6025,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 5988,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 5988,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 5977,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 5950,
											"end": 6025,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 6025,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 6025,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 5950,
											"end": 6025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 6025,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 5950,
											"end": 6025,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 6025,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 6025,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5950,
											"end": 6025,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6074,
											"end": 6097,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 6074,
											"end": 6097,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6099,
											"name": "PUSH",
											"source": 7,
											"value": "CC87AB2ABFE87B272AF9B77691E40B3D9186A0431F3D41A8E06D39614F460722"
										},
										{
											"begin": 6044,
											"end": 6099,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6054,
											"end": 6064,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6054,
											"end": 6064,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 6066,
											"end": 6097,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6073,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 6066,
											"end": 6097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6066,
											"end": 6097,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 6066,
											"end": 6097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6099,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6044,
											"end": 6099,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6099,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6117,
											"end": 6149,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6117,
											"end": 6149,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6117,
											"end": 6149,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6150,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6099,
											"end": 6150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6181,
											"end": 6183,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6193,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6193,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6193,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6072,
											"end": 6090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6044,
											"end": 6099,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6044,
											"end": 6099,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6099,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6099,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6099,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6099,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6099,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 5183,
											"end": 6110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4714,
											"end": 6110,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 4714,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 6120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 6120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 6120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4406,
											"end": 6120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8334,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 8183,
											"end": 8334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8303,
											"end": 8326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 8303,
											"end": 8326,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 8260,
											"end": 8327,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8260,
											"end": 8290,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8290,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8290,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8291,
											"end": 8301,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 8291,
											"end": 8301,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 8260,
											"end": 8327,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8260,
											"end": 8327,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 8260,
											"end": 8327,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8334,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1953,
											"end": 1986,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1953,
											"end": 1986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2960,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2942,
											"end": 2960,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2823,
											"end": 3026,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3519,
											"end": 3908,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 3519,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3577,
											"end": 3584,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3627,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3652,
											"end": 3694,
											"name": "PUSH",
											"source": 7,
											"value": "D0D5E3DB44DE05E9F294BB0A3BEEAF030DE24ADA"
										},
										{
											"begin": 3596,
											"end": 3695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3596,
											"end": 3695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3708,
											"end": 3721,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3740,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3731,
											"end": 3756,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3756,
											"name": "PUSH",
											"source": 7,
											"value": "FEAF968C"
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 3731,
											"end": 3758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 3731,
											"end": 3758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3705,
											"end": 3758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3786,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3776,
											"end": 3786,
											"name": "SGT",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 3768,
											"end": 3820,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3820,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3768,
											"end": 3820,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3768,
											"end": 3820,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3820,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9317,
											"end": 9319,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3768,
											"end": 3820,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3768,
											"end": 3820,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3820,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9299,
											"end": 9320,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9356,
											"end": 9358,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 9336,
											"end": 9354,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9336,
											"end": 9354,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9336,
											"end": 9354,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9329,
											"end": 9359,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9395,
											"end": 9426,
											"name": "PUSH",
											"source": 8,
											"value": "4E65676174697665204D61746963207072696365207265636569766564000000"
										},
										{
											"begin": 9375,
											"end": 9393,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 9375,
											"end": 9393,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9375,
											"end": 9393,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9368,
											"end": 9427,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9444,
											"end": 9462,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 9444,
											"end": 9462,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3768,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 9115,
											"end": 9468,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3768,
											"end": 3820,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 3768,
											"end": 3820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3841,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3873,
											"end": 3879,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3859,
											"end": 3862,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3846,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 3846,
											"end": 3853,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3856,
											"end": 3857,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3846,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 3846,
											"end": 3857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3857,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 3846,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3845,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 3845,
											"end": 3862,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3845,
											"end": 3862,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3845,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 3845,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3845,
											"end": 3862,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 3845,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3844,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 3844,
											"end": 3881,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3844,
											"end": 3881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3844,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 3844,
											"end": 3881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3844,
											"end": 3881,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 3844,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3830,
											"end": 3881,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3519,
											"end": 3908,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2960,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2942,
											"end": 2960,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 2823,
											"end": 3026,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6117,
											"end": 6149,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6117,
											"end": 6149,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6099,
											"end": 6150,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6166,
											"end": 6184,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6193,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6193,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6193,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6072,
											"end": 6090,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 6072,
											"end": 6090,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6072,
											"end": 6090,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6072,
											"end": 6090,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 1,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2987,
											"end": 3019,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2987,
											"end": 3019,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2960,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2942,
											"end": 2960,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 2823,
											"end": 3026,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CD786059"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2960,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2942,
											"end": 2960,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2823,
											"end": 3026,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 5,
											"value": "330"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "332"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 5,
											"value": "341"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 5,
											"value": "340"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 5,
											"value": "344"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2987,
											"end": 3019,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2987,
											"end": 3019,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2969,
											"end": 3020,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2942,
											"end": 2960,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 2942,
											"end": 2960,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 2823,
											"end": 3026,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 5,
											"value": "345"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "329"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 5,
											"value": "342"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "327"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 383,
											"end": 510,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 383,
											"end": 510,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 444,
											"end": 454,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 439,
											"end": 442,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 435,
											"end": 455,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 432,
											"end": 433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 456,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 475,
											"end": 479,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 472,
											"end": 473,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 465,
											"end": 480,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 499,
											"end": 503,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 496,
											"end": 497,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 504,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 1234,
											"name": "tag",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 515,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 558,
											"end": 563,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 611,
											"end": 614,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 604,
											"end": 608,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 596,
											"end": 602,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 592,
											"end": 609,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 588,
											"end": 615,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 578,
											"end": 633,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 578,
											"end": 633,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 629,
											"end": 630,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 626,
											"end": 627,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 619,
											"end": 631,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 578,
											"end": 633,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 578,
											"end": 633,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 665,
											"end": 671,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 652,
											"end": 672,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 691,
											"end": 709,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 728,
											"end": 730,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 724,
											"end": 726,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 721,
											"end": 731,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 718,
											"end": 754,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 718,
											"end": 754,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 718,
											"end": 754,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 734,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 734,
											"end": 752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 734,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "366"
										},
										{
											"begin": 734,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 809,
											"end": 811,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 803,
											"end": 812,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 777,
											"end": 779,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 863,
											"end": 876,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 863,
											"end": 876,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 859,
											"end": 881,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 859,
											"end": 881,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 859,
											"end": 881,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 883,
											"end": 885,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 855,
											"end": 886,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 851,
											"end": 891,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 839,
											"end": 892,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 839,
											"end": 892,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 839,
											"end": 892,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 907,
											"end": 925,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 907,
											"end": 925,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 907,
											"end": 925,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 927,
											"end": 949,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 927,
											"end": 949,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 927,
											"end": 949,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 904,
											"end": 950,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 901,
											"end": 973,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 901,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 901,
											"end": 973,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 953,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 953,
											"end": 971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 953,
											"end": 971,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 993,
											"end": 1003,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 982,
											"end": 1004,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1028,
											"end": 1030,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1020,
											"end": 1026,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1013,
											"end": 1031,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1074,
											"end": 1077,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1067,
											"end": 1071,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1064,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1054,
											"end": 1060,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 1050,
											"end": 1065,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1072,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1043,
											"end": 1078,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1040,
											"end": 1095,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1040,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 1040,
											"end": 1095,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1091,
											"end": 1092,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1089,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1081,
											"end": 1093,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1040,
											"end": 1095,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 1040,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1155,
											"end": 1157,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1148,
											"end": 1152,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1136,
											"end": 1153,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1129,
											"end": 1133,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1134,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1104,
											"end": 1158,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 1202,
											"end": 1203,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1195,
											"end": 1199,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1190,
											"end": 1192,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1182,
											"end": 1188,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1178,
											"end": 1193,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1174,
											"end": 1200,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1167,
											"end": 1204,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1222,
											"end": 1228,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1228,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 515,
											"end": 1234,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 515,
											"end": 1234,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 515,
											"end": 1234,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 515,
											"end": 1234,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 515,
											"end": 1234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1239,
											"end": 1778,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 1239,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1349,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1351,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1365,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1412,
											"end": 1415,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 1400,
											"end": 1409,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1391,
											"end": 1398,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1387,
											"end": 1410,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1416,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1433,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 1380,
											"end": 1433,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1431,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1380,
											"end": 1433,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 1380,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 1471,
											"end": 1480,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 1452,
											"end": 1481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1452,
											"end": 1481,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 1452,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1442,
											"end": 1481,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1442,
											"end": 1481,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1528,
											"end": 1530,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1517,
											"end": 1526,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1513,
											"end": 1531,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1500,
											"end": 1532,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1490,
											"end": 1532,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1490,
											"end": 1532,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1551,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 1585,
											"end": 1587,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1583,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1570,
											"end": 1588,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1551,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 1551,
											"end": 1589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1551,
											"end": 1589,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 1551,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1541,
											"end": 1589,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1541,
											"end": 1589,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1640,
											"end": 1642,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1629,
											"end": 1638,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1625,
											"end": 1643,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1612,
											"end": 1644,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1667,
											"end": 1685,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1659,
											"end": 1665,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1656,
											"end": 1686,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1653,
											"end": 1703,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1653,
											"end": 1703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 1653,
											"end": 1703,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1699,
											"end": 1700,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1697,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1689,
											"end": 1701,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1653,
											"end": 1703,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 1653,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1722,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 1764,
											"end": 1771,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1753,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 1740,
											"end": 1762,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1722,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 1722,
											"end": 1772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1722,
											"end": 1772,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 1722,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1712,
											"end": 1772,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1712,
											"end": 1772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1712,
											"end": 1772,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1239,
											"end": 1778,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1239,
											"end": 1778,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 1239,
											"end": 1778,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1239,
											"end": 1778,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 1239,
											"end": 1778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1239,
											"end": 1778,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1239,
											"end": 1778,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1239,
											"end": 1778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1783,
											"end": 2043,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 1783,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1851,
											"end": 1857,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1865,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1912,
											"end": 1914,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 1909,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1891,
											"end": 1898,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1887,
											"end": 1910,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1883,
											"end": 1915,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 1932,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 1880,
											"end": 1932,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1925,
											"end": 1926,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1918,
											"end": 1930,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1880,
											"end": 1932,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 1880,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1951,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1951,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 1951,
											"end": 1980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1951,
											"end": 1980,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 1951,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1941,
											"end": 1980,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1941,
											"end": 1980,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1999,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 2033,
											"end": 2035,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2022,
											"end": 2031,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2018,
											"end": 2036,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1999,
											"end": 2037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 1999,
											"end": 2037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1999,
											"end": 2037,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 1999,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1989,
											"end": 2037,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1989,
											"end": 2037,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1783,
											"end": 2043,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1783,
											"end": 2043,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1783,
											"end": 2043,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1783,
											"end": 2043,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1783,
											"end": 2043,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1783,
											"end": 2043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2230,
											"end": 2626,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 2230,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2308,
											"end": 2314,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2322,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2371,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2357,
											"end": 2366,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2348,
											"end": 2355,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2344,
											"end": 2367,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2340,
											"end": 2372,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2337,
											"end": 2389,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2337,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 2337,
											"end": 2389,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2385,
											"end": 2386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2382,
											"end": 2383,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2375,
											"end": 2387,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2337,
											"end": 2389,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 2337,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2434,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2412,
											"end": 2435,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2458,
											"end": 2476,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2450,
											"end": 2456,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2447,
											"end": 2477,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2494,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 2444,
											"end": 2494,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2490,
											"end": 2491,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2487,
											"end": 2488,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2480,
											"end": 2492,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2444,
											"end": 2494,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 2444,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 2555,
											"end": 2562,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2546,
											"end": 2552,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2535,
											"end": 2544,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2531,
											"end": 2553,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 2513,
											"end": 2563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2513,
											"end": 2563,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 2513,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2563,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2563,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2503,
											"end": 2563,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2582,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 2616,
											"end": 2618,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2605,
											"end": 2614,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2601,
											"end": 2619,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2582,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 2582,
											"end": 2620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3495,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 3031,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3118,
											"end": 3124,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3126,
											"end": 3132,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3134,
											"end": 3140,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3187,
											"end": 3189,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3175,
											"end": 3184,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3162,
											"end": 3185,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3158,
											"end": 3190,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3207,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 3155,
											"end": 3207,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3203,
											"end": 3204,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3200,
											"end": 3201,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3193,
											"end": 3205,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3155,
											"end": 3207,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 3155,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 3245,
											"end": 3254,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3255,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 3226,
											"end": 3255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3226,
											"end": 3255,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 3226,
											"end": 3255,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3255,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3216,
											"end": 3255,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3302,
											"end": 3304,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3291,
											"end": 3300,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3274,
											"end": 3306,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3264,
											"end": 3306,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3264,
											"end": 3306,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3357,
											"end": 3359,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3346,
											"end": 3355,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3329,
											"end": 3361,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3373,
											"end": 3403,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3420,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 3370,
											"end": 3420,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3416,
											"end": 3417,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3413,
											"end": 3414,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3406,
											"end": 3418,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3370,
											"end": 3420,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 3370,
											"end": 3420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3439,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3472,
											"end": 3478,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3461,
											"end": 3470,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 3457,
											"end": 3479,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3439,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 3439,
											"end": 3489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3439,
											"end": 3489,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 3439,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3429,
											"end": 3489,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3429,
											"end": 3489,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3429,
											"end": 3489,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3495,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3495,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3495,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3495,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3031,
											"end": 3495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3500,
											"end": 3680,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 3500,
											"end": 3680,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3559,
											"end": 3565,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3614,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3600,
											"end": 3609,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3591,
											"end": 3598,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3587,
											"end": 3610,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3583,
											"end": 3615,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3580,
											"end": 3632,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3580,
											"end": 3632,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 3580,
											"end": 3632,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3628,
											"end": 3629,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3625,
											"end": 3626,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3618,
											"end": 3630,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3580,
											"end": 3632,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 3580,
											"end": 3632,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3651,
											"end": 3674,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3651,
											"end": 3674,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3500,
											"end": 3680,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3500,
											"end": 3680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 4081,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3685,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3763,
											"end": 3769,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3777,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3824,
											"end": 3826,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3812,
											"end": 3821,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3803,
											"end": 3810,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3799,
											"end": 3822,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3795,
											"end": 3827,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3792,
											"end": 3844,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3792,
											"end": 3844,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 3792,
											"end": 3844,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3840,
											"end": 3841,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3837,
											"end": 3838,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3830,
											"end": 3842,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3792,
											"end": 3844,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 3792,
											"end": 3844,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 3882,
											"end": 3891,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "350"
										},
										{
											"begin": 3863,
											"end": 3892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 3863,
											"end": 3892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3853,
											"end": 3892,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3853,
											"end": 3892,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3943,
											"end": 3945,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3932,
											"end": 3941,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3928,
											"end": 3946,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3915,
											"end": 3947,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 3970,
											"end": 3988,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3962,
											"end": 3968,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 3989,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3956,
											"end": 4006,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3956,
											"end": 4006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 3956,
											"end": 4006,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4003,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4000,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3992,
											"end": 4004,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 3956,
											"end": 4006,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 3956,
											"end": 4006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 4067,
											"end": 4074,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4058,
											"end": 4064,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4047,
											"end": 4056,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4043,
											"end": 4065,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "352"
										},
										{
											"begin": 4025,
											"end": 4075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4025,
											"end": 4075,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 4025,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4015,
											"end": 4075,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4015,
											"end": 4075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4015,
											"end": 4075,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 4081,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 4081,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 4081,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 4081,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 4081,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3685,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4443,
											"end": 4627,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 4443,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4513,
											"end": 4519,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4566,
											"end": 4568,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4554,
											"end": 4563,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4545,
											"end": 4552,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4541,
											"end": 4564,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4537,
											"end": 4569,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 4534,
											"end": 4586,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4534,
											"end": 4586,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 4534,
											"end": 4586,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4582,
											"end": 4583,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4580,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4572,
											"end": 4584,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4534,
											"end": 4586,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 4534,
											"end": 4586,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4605,
											"end": 4621,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4605,
											"end": 4621,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4443,
											"end": 4627,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4443,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4981,
											"end": 5108,
											"name": "tag",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 4981,
											"end": 5108,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5042,
											"end": 5052,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 5037,
											"end": 5040,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 5033,
											"end": 5053,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 5030,
											"end": 5031,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5023,
											"end": 5054,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5073,
											"end": 5077,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 5070,
											"end": 5071,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5063,
											"end": 5078,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5097,
											"end": 5101,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5094,
											"end": 5095,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5087,
											"end": 5102,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5113,
											"end": 5241,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 5113,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5189,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5189,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5180,
											"end": 5189,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5201,
											"end": 5212,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5201,
											"end": 5212,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5201,
											"end": 5212,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5198,
											"end": 5235,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5198,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 5198,
											"end": 5235,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5215,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 5215,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 5215,
											"end": 5233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5246,
											"end": 5496,
											"name": "tag",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 5246,
											"end": 5496,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5331,
											"end": 5332,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5454,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 5341,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5361,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5352,
											"end": 5353,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5349,
											"end": 5362,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5454,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 5341,
											"end": 5454,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5431,
											"end": 5442,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5431,
											"end": 5442,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5431,
											"end": 5442,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5412,
											"end": 5423,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5412,
											"end": 5423,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5412,
											"end": 5423,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5405,
											"end": 5444,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5377,
											"end": 5379,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5370,
											"end": 5380,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5454,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 5341,
											"end": 5454,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5341,
											"end": 5454,
											"name": "tag",
											"source": 8,
											"value": "411"
										},
										{
											"begin": 5341,
											"end": 5454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5488,
											"end": 5489,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5470,
											"end": 5486,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5470,
											"end": 5486,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5463,
											"end": 5490,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5246,
											"end": 5496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5501,
											"end": 5790,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 5501,
											"end": 5790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5632,
											"end": 5635,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5670,
											"end": 5676,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5664,
											"end": 5677,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5740,
											"end": 5743,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5733,
											"end": 5737,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5725,
											"end": 5731,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5721,
											"end": 5738,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "354"
										},
										{
											"begin": 5686,
											"end": 5752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5686,
											"end": 5752,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 5686,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 5784,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 5784,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 5784,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 5784,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5768,
											"end": 5784,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5501,
											"end": 5790,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5501,
											"end": 5790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5795,
											"end": 5920,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 5795,
											"end": 5920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5860,
											"end": 5869,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5860,
											"end": 5869,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5860,
											"end": 5869,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5881,
											"end": 5891,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5881,
											"end": 5891,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5881,
											"end": 5891,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5878,
											"end": 5914,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5878,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 5878,
											"end": 5914,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 5894,
											"end": 5912,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 5894,
											"end": 5912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6204,
											"end": 6372,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 6204,
											"end": 6372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6277,
											"end": 6286,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6277,
											"end": 6286,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6277,
											"end": 6286,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 6308,
											"end": 6317,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6308,
											"end": 6317,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6325,
											"end": 6340,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6325,
											"end": 6340,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6325,
											"end": 6340,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6319,
											"end": 6341,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6319,
											"end": 6341,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 6305,
											"end": 6342,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 6295,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 6295,
											"end": 6366,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6346,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 6346,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "353"
										},
										{
											"begin": 6346,
											"end": 6364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6377,
											"end": 6594,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 6377,
											"end": 6594,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6417,
											"end": 6418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6443,
											"end": 6444,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6433,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 6433,
											"end": 6565,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6487,
											"end": 6497,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 6482,
											"end": 6485,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 6478,
											"end": 6498,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 6475,
											"end": 6476,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6468,
											"end": 6499,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6522,
											"end": 6526,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 6519,
											"end": 6520,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6512,
											"end": 6527,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6550,
											"end": 6554,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6547,
											"end": 6548,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6540,
											"end": 6555,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6433,
											"end": 6565,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 6433,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6579,
											"end": 6588,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 6579,
											"end": 6588,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6377,
											"end": 6594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6726,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 6599,
											"end": 6726,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6660,
											"end": 6670,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B71"
										},
										{
											"begin": 6655,
											"end": 6658,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 6651,
											"end": 6671,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 6648,
											"end": 6649,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6641,
											"end": 6672,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6691,
											"end": 6695,
											"name": "PUSH",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 6688,
											"end": 6689,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6681,
											"end": 6696,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6715,
											"end": 6719,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6712,
											"end": 6713,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6705,
											"end": 6720,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8171,
											"end": 8448,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 8171,
											"end": 8448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8238,
											"end": 8244,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8291,
											"end": 8293,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8279,
											"end": 8288,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8270,
											"end": 8277,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8266,
											"end": 8289,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8262,
											"end": 8294,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8259,
											"end": 8311,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8259,
											"end": 8311,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 8259,
											"end": 8311,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8307,
											"end": 8308,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8304,
											"end": 8305,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8297,
											"end": 8309,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8259,
											"end": 8311,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 8259,
											"end": 8311,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8339,
											"end": 8348,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8333,
											"end": 8349,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8392,
											"end": 8397,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8385,
											"end": 8398,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8378,
											"end": 8399,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8371,
											"end": 8376,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8368,
											"end": 8400,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8358,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 8358,
											"end": 8418,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8415,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8411,
											"end": 8412,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8404,
											"end": 8416,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8453,
											"end": 8632,
											"name": "tag",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 8453,
											"end": 8632,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8531,
											"end": 8544,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8531,
											"end": 8544,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8584,
											"end": 8606,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8573,
											"end": 8607,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8573,
											"end": 8607,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8563,
											"end": 8608,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8563,
											"end": 8608,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8553,
											"end": 8626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 8553,
											"end": 8626,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8622,
											"end": 8623,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8619,
											"end": 8620,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8612,
											"end": 8624,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8637,
											"end": 9110,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 8637,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8740,
											"end": 8746,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8748,
											"end": 8754,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8756,
											"end": 8762,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8764,
											"end": 8770,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8772,
											"end": 8778,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8825,
											"end": 8828,
											"name": "PUSH",
											"source": 8,
											"value": "A0"
										},
										{
											"begin": 8813,
											"end": 8822,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8804,
											"end": 8811,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8800,
											"end": 8823,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8796,
											"end": 8829,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8793,
											"end": 8846,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8793,
											"end": 8846,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 8793,
											"end": 8846,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8842,
											"end": 8843,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8839,
											"end": 8840,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8832,
											"end": 8844,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8793,
											"end": 8846,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 8793,
											"end": 8846,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8865,
											"end": 8904,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 8894,
											"end": 8903,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8865,
											"end": 8904,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 8865,
											"end": 8904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8865,
											"end": 8904,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 8865,
											"end": 8904,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8855,
											"end": 8904,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 8855,
											"end": 8904,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8944,
											"end": 8946,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8933,
											"end": 8942,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8929,
											"end": 8947,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8923,
											"end": 8948,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8913,
											"end": 8948,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8913,
											"end": 8948,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8988,
											"end": 8990,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8977,
											"end": 8986,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8973,
											"end": 8991,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8967,
											"end": 8992,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8957,
											"end": 8992,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8957,
											"end": 8992,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9032,
											"end": 9034,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 9021,
											"end": 9030,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 9017,
											"end": 9035,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9011,
											"end": 9036,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 9036,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9001,
											"end": 9036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9055,
											"end": 9104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 9099,
											"end": 9102,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 9088,
											"end": 9097,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 9084,
											"end": 9103,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9055,
											"end": 9104,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "355"
										},
										{
											"begin": 9055,
											"end": 9104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9055,
											"end": 9104,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 9055,
											"end": 9104,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9045,
											"end": 9104,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9045,
											"end": 9104,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8637,
											"end": 9110,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8637,
											"end": 9110,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 8637,
											"end": 9110,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8637,
											"end": 9110,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8637,
											"end": 9110,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 8637,
											"end": 9110,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8637,
											"end": 9110,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8637,
											"end": 9110,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8637,
											"end": 9110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Liberswap/SwappingContract_2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Owner()": "b4a99a4e",
							"WhiteList(address)": "6bc20157",
							"checkUser(address,address)": "373cf202",
							"currentHoldings()": "9c2c67c9",
							"getMaticPrice(uint256)": "f38e762b",
							"holdingOfTokens(address)": "a4329677",
							"holdingOf_DAI(address)": "a7f696cf",
							"holdingOf_USDC(address)": "70181206",
							"holdingOf_USDM(address)": "fca0a3d2",
							"holdingOf_USDT(address)": "a3150978",
							"overColleteralFeeAmount()": "2dd91a4c",
							"owner()": "8da5cb5b",
							"removeFromWhiteList(address)": "01bf6648",
							"renounceOwnership()": "715018a6",
							"substrateSwapTokens(address,uint256,address,string)": "1a06e66e",
							"swapTokens(address,uint256,string)": "cb8ff545",
							"transferOwnership(address)": "f2fde38b",
							"userAmount(address)": "e1ad418e",
							"userTokenAmount(address,address)": "1f1a675d",
							"userTotalSubstrateSwapAmount(string,address)": "3422a7e0",
							"userTotalSwapAmount(address,string)": "fd03fe90",
							"whilistedAddress(uint256)": "f09f0aac",
							"whiteList(address)": "372c12b1",
							"withdrawBalanceTokens(address)": "cdb43478"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Hold_USDM_Token\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"substrateSwapToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"swapToken\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"WhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"UserAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"TokenAddress\",\"type\":\"address\"}],\"name\":\"checkUser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentHoldings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getMaticPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ethToken\",\"type\":\"address\"}],\"name\":\"holdingOfTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"holdings\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"holdingOf_DAI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"holdings\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"holdingOf_USDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"holdings\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"holdingOf_USDM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"holdings\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"holdingOf_USDT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"holdings\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"overColleteralFeeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeFromWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ethToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"substrateAddress\",\"type\":\"string\"}],\"name\":\"substrateSwapTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ethToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"substrateAddress\",\"type\":\"string\"}],\"name\":\"swapTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"UserAddress\",\"type\":\"address\"}],\"name\":\"userAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"UserAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"TokenAddress\",\"type\":\"address\"}],\"name\":\"userTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"SubstrateAddress\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"Owner\",\"type\":\"address\"}],\"name\":\"userTotalSubstrateSwapAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"Amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"UserAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"userTotalSwapAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"Amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"whilistedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ethToken\",\"type\":\"address\"}],\"name\":\"withdrawBalanceTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"LiberSwap Team\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"WhiteList(address)\":{\"details\":\"Adds an address to the whitelist. Only the owner of the contract can call this function. Emits an event once an address is successfully whitelisted. \",\"params\":{\"_address\":\"The address to be added to the whitelist.\"}},\"holdingOfTokens(address)\":{\"details\":\"Returns the balance of a specific ERC20 token held by this contract.\",\"params\":{\"_ethToken\":\"The address of the ERC20 token.\"},\"returns\":{\"holdings\":\"The amount of the specified tokens held by this contract.\"}},\"holdingOf_DAI(address)\":{\"details\":\"Returns the DAI token balance of this contract.\",\"returns\":{\"holdings\":\"The amount of DAI tokens held by this contract.\"}},\"holdingOf_USDC(address)\":{\"details\":\"Returns the USDC token balance of this contract.\",\"returns\":{\"holdings\":\"The amount of USDC tokens held by this contract.\"}},\"holdingOf_USDM(address)\":{\"details\":\"Returns the USDM token balance of this contract.\",\"returns\":{\"holdings\":\"The amount of USDM tokens held by this contract.\"}},\"holdingOf_USDT(address)\":{\"details\":\"Returns the USDT token balance of this contract.\",\"returns\":{\"holdings\":\"The amount of USDT tokens held by this contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeFromWhiteList(address)\":{\"details\":\"Removes an address from the whitelist. Only the owner can call this function.\",\"params\":{\"_address\":\"The address to be removed from the whitelist.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"substrateSwapTokens(address,uint256,address,string)\":{\"details\":\"Allows users to swap tokens back from the contract or distribute a fee among whitelisted addresses before sending back the tokens. If the token being swapped back is USDM, it is directly transferred to the sender. For other tokens, a 0.3% fee is distributed among all whitelisted addresses before sending the remaining tokens back to the sender. \",\"params\":{\"_amount\":\"The amount of the token to be swapped back.\",\"_ethToken\":\"The address of the ERC20 token to be swapped back.\"}},\"swapTokens(address,uint256,string)\":{\"details\":\"Allows users to swap tokens by transferring them to the contract or distribute a fee among whitelisted addresses. If the token being swapped is USDM, it is simply collected by the contract. For other tokens, a 0.3% fee is distributed among all whitelisted addresses, and the rest is collected by the contract. \",\"params\":{\"_amount\":\"The amount of the token to be swapped.\",\"_ethToken\":\"The address of the ERC20 token to be swapped.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawBalanceTokens(address)\":{\"params\":{\"_ethToken\":\"The address of the ERC20 token to be swapped back. Only owner can withdaraw the Overcolleteral fee.\"}}},\"title\":\"TokenSwap contract for swapping tokens, inheriting from Ownable for access control\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contarct is based on swaping the usd tokens to substrate and vice versa  \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Liberswap/SwappingContract_2.sol\":\"TokenSwap\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"contracts/Liberswap/SwappingContract_2.sol\":{\"keccak256\":\"0x72af300911f8817b94ed7c7975abb256c7749a10eeaef0598c56d56f9230e08e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9bc7d7d4fb57b3b3857459f593ceca76d2948c179e24c4303cf5764f44d6971b\",\"dweb:/ipfs/QmZPWh9XcwutK8KLHEqohcccEgmLz9CZYrPfcNqY5zkwCp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 54,
								"contract": "contracts/Liberswap/SwappingContract_2.sol:TokenSwap",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 887,
								"contract": "contracts/Liberswap/SwappingContract_2.sol:TokenSwap",
								"label": "Owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 921,
								"contract": "contracts/Liberswap/SwappingContract_2.sol:TokenSwap",
								"label": "whiteList",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 924,
								"contract": "contracts/Liberswap/SwappingContract_2.sol:TokenSwap",
								"label": "whilistedAddress",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 930,
								"contract": "contracts/Liberswap/SwappingContract_2.sol:TokenSwap",
								"label": "userTokenAmount",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 936,
								"contract": "contracts/Liberswap/SwappingContract_2.sol:TokenSwap",
								"label": "checkUser",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 940,
								"contract": "contracts/Liberswap/SwappingContract_2.sol:TokenSwap",
								"label": "userAmount",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 946,
								"contract": "contracts/Liberswap/SwappingContract_2.sol:TokenSwap",
								"label": "userTotalSwapAmount",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))"
							},
							{
								"astId": 952,
								"contract": "contracts/Liberswap/SwappingContract_2.sol:TokenSwap",
								"label": "userTotalSubstrateSwapAmount",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_string_memory_ptr,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 954,
								"contract": "contracts/Liberswap/SwappingContract_2.sol:TokenSwap",
								"label": "currentHoldings",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 956,
								"contract": "contracts/Liberswap/SwappingContract_2.sol:TokenSwap",
								"label": "overColleteralFeeAmount",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(string => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_string_memory_ptr,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_string_memory_ptr,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_string_memory_ptr,t_uint256)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contarct is based on swaping the usd tokens to substrate and vice versa  ",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "294:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "337:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "368:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "387:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:0"
									},
									"scope": 45,
									"src": "267:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "527:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "546:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:0"
									},
									"scope": 45,
									"src": "434:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							872
						],
						"Ownable": [
							193
						]
					},
					"id": 194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 194,
							"sourceUnit": 873,
							"src": "128:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 48,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 872,
										"src": "136:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 51,
										"name": "Context",
										"nameLocations": [
											"692:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 872,
										"src": "692:7:1"
									},
									"id": 52,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:1"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 50,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:1",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 193,
							"linearizedBaseContracts": [
								193,
								872
							],
							"name": "Ownable",
							"nameLocation": "681:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 54,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 193,
									"src": "706:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 53,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:1",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 59,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "858:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:1"
									},
									"src": "825:50:1"
								},
								{
									"documentation": {
										"id": 60,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:1",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 64,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "994:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:1"
									},
									"src": "968:41:1"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 70,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1042:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1073:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:1"
									},
									"src": "1015:84:1"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1259:153:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 76,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "1273:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 77,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 80,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 90,
												"nodeType": "IfStatement",
												"src": "1269:95:1",
												"trueBody": {
													"id": 89,
													"nodeType": "Block",
													"src": "1301:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 85,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 84,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 83,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 82,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "1322:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 88,
															"nodeType": "RevertStatement",
															"src": "1315:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 92,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "1392:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 91,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "1373:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:1"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:1",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 96,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1237:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:1"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:1"
									},
									"scope": 193,
									"src": "1225:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "1521:41:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 99,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "1531:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 101,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:1"
											},
											{
												"id": 102,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:1"
											}
										]
									},
									"documentation": {
										"id": 97,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:1",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 104,
									"name": "onlyOwner",
									"nameLocation": "1509:9:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:1"
									},
									"src": "1500:62:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "1693:30:1",
										"statements": [
											{
												"expression": {
													"id": 110,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "1710:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 109,
												"id": 111,
												"nodeType": "Return",
												"src": "1703:13:1"
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:1",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "1684:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:1"
									},
									"scope": 193,
									"src": "1638:85:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 129,
										"nodeType": "Block",
										"src": "1841:117:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 117,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1855:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 119,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "1866:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 128,
												"nodeType": "IfStatement",
												"src": "1851:101:1",
												"trueBody": {
													"id": 127,
													"nodeType": "Block",
													"src": "1880:72:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 123,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 862,
																			"src": "1928:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 122,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "1901:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 126,
															"nodeType": "RevertStatement",
															"src": "1894:47:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:1",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:1"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:1"
									},
									"scope": 193,
									"src": "1796:162:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 143,
										"nodeType": "Block",
										"src": "2347:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 137,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 136,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2357:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 142,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:1",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 144,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 134,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 133,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "2337:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:1"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:1"
									},
									"scope": 193,
									"src": "2293:101:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "2613:145:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 152,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "2627:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 153,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 166,
												"nodeType": "IfStatement",
												"src": "2623:91:1",
												"trueBody": {
													"id": 165,
													"nodeType": "Block",
													"src": "2651:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 159,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 158,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 64,
																	"src": "2672:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 164,
															"nodeType": "RevertStatement",
															"src": "2665:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 168,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "2742:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 167,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "2723:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:1"
											}
										]
									},
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 150,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 149,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "2603:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "2570:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:1"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:1"
									},
									"scope": 193,
									"src": "2543:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "2975:124:1",
										"statements": [
											{
												"assignments": [
													179
												],
												"declarations": [
													{
														"constant": false,
														"id": 179,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:1",
														"nodeType": "VariableDeclaration",
														"scope": 191,
														"src": "2985:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 178,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 181,
												"initialValue": {
													"id": 180,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 54,
													"src": "3004:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:1"
											},
											{
												"expression": {
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 182,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "3020:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 183,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "3029:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 187,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "3073:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 188,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "3083:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 186,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 70,
														"src": "3052:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "EmitStatement",
												"src": "3047:45:1"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2940:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:1"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:1"
									},
									"scope": 193,
									"src": "2912:187:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 194,
							"src": "663:2438:1",
							"usedErrors": [
								59,
								64
							],
							"usedEvents": [
								70
							]
						}
					],
					"src": "102:3000:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							271
						]
					},
					"id": 272,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 195,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 196,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 271,
							"linearizedBaseContracts": [
								271
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 205,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 214,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 220,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 271,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 271,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 271,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 248,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 271,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 258,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 255,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 271,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 270,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 267,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 271,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 272,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								205,
								214
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							307
						]
					},
					"id": 308,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 273,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 274,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:3",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 307,
							"linearizedBaseContracts": [
								307
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:3",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "3022:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "3045:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "3070:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "3093:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "3119:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 284,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "3136:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 286,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "3155:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 288,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:3"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:3"
									},
									"scope": 307,
									"src": "2997:183:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:3",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 300,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3501:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:3"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "3539:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:3"
									},
									"scope": 307,
									"src": "3485:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:3",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:3"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "3791:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:3"
									},
									"scope": 307,
									"src": "3740:60:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 308,
							"src": "2113:1689:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							850
						],
						"IERC20": [
							271
						],
						"IERC20Permit": [
							307
						],
						"SafeERC20": [
							597
						]
					},
					"id": 598,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 309,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 311,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 598,
							"sourceUnit": 272,
							"src": "141:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 310,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 271,
										"src": "149:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 313,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 598,
							"sourceUnit": 308,
							"src": "179:60:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 312,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 307,
										"src": "187:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 315,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 598,
							"sourceUnit": 851,
							"src": "240:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 314,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 850,
										"src": "248:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 316,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 597,
							"linearizedBaseContracts": [
								597
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 319,
									"libraryName": {
										"id": 317,
										"name": "Address",
										"nameLocations": [
											"781:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 850,
										"src": "781:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:4",
									"typeName": {
										"id": 318,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:4",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 324,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 324,
												"src": "907:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:4"
									},
									"src": "876:46:4"
								},
								{
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:4",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 333,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "1043:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "1060:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "1086:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:4"
									},
									"src": "1004:109:4"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "1375:88:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 345,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "1405:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$271",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 348,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 337,
																		"src": "1427:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$271",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 238,
																	"src": "1427:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 350,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 339,
																			"src": "1444:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 351,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 341,
																			"src": "1448:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 352,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 346,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 353,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$271",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 344,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "1385:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$271_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:4"
											}
										]
									},
									"documentation": {
										"id": 334,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:4",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1325:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$271",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 336,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 335,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 271,
														"src": "1325:6:4"
													},
													"referencedDeclaration": 271,
													"src": "1325:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$271",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1339:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1351:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:4"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:4"
									},
									"scope": 597,
									"src": "1303:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 383,
										"nodeType": "Block",
										"src": "1792:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 371,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 361,
															"src": "1822:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$271",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 374,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 361,
																		"src": "1844:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$271",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:4",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 270,
																	"src": "1844:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 376,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 363,
																			"src": "1865:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 377,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 365,
																			"src": "1871:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 378,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 367,
																			"src": "1875:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 379,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 372,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$271",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 370,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "1802:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$271_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:4"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:4",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1728:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$271",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 360,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 359,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 271,
														"src": "1728:6:4"
													},
													"referencedDeclaration": 271,
													"src": "1728:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$271",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1742:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1756:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 384,
												"src": "1768:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:4"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:4"
									},
									"scope": 597,
									"src": "1702:188:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "2167:139:4",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 414,
														"src": "2177:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 395,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 405,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 401,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$597",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$597",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 399,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "2231:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 397,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "2200:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$271",
																"typeString": "contract IERC20"
															}
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:4",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 248,
														"src": "2200:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 407,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "2262:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$271",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 408,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "2269:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 409,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 396,
																"src": "2278:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 410,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 392,
																"src": "2293:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$271",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 406,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "2249:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$271_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 413,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:4"
											}
										]
									},
									"documentation": {
										"id": 385,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:4",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "2112:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$271",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 387,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 386,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 271,
														"src": "2112:6:4"
													},
													"referencedDeclaration": 271,
													"src": "2112:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$271",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "2126:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "2143:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:4"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:4"
									},
									"scope": 597,
									"src": "2081:225:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "2607:370:4",
										"statements": [
											{
												"id": 456,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:4",
												"statements": [
													{
														"assignments": [
															427
														],
														"declarations": [
															{
																"constant": false,
																"id": 427,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:4",
																"nodeType": "VariableDeclaration",
																"scope": 456,
																"src": "2641:24:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 426,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 436,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 432,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$597",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$597",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 431,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 430,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 434,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "2699:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 428,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "2668:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$271",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 248,
																"src": "2668:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 437,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 427,
																"src": "2725:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 438,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "2744:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 447,
														"nodeType": "IfStatement",
														"src": "2721:160:4",
														"trueBody": {
															"id": 446,
															"nodeType": "Block",
															"src": "2763:118:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 441,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 421,
																				"src": "2821:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 442,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 427,
																				"src": "2830:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 443,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 423,
																				"src": "2848:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 440,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 333,
																			"src": "2788:32:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 445,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:4"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 449,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "2907:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$271",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 450,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 421,
																	"src": "2914:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 451,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 427,
																		"src": "2923:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 452,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "2942:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$271",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 448,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "2894:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$271_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 455,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:4",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2540:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$271",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 418,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 417,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 271,
														"src": "2540:6:4"
													},
													"referencedDeclaration": 271,
													"src": "2540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$271",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2554:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2571:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:4"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:4"
									},
									"scope": 597,
									"src": "2509:468:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "3373:303:4",
										"statements": [
											{
												"assignments": [
													470
												],
												"declarations": [
													{
														"constant": false,
														"id": 470,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 504,
														"src": "3383:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 469,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 479,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 473,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "3426:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$271",
																	"typeString": "contract IERC20"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:4",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 258,
															"src": "3426:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 475,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 464,
																	"src": "3442:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 476,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 466,
																	"src": "3451:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 477,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 471,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 472,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:4",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:4"
											},
											{
												"condition": {
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:4",
													"subExpression": {
														"arguments": [
															{
																"id": 481,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "3498:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$271",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 482,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 470,
																"src": "3505:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$271",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 480,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "3474:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$271_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 503,
												"nodeType": "IfStatement",
												"src": "3469:201:4",
												"trueBody": {
													"id": 502,
													"nodeType": "Block",
													"src": "3520:150:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 486,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "3554:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$271",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 489,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 462,
																					"src": "3576:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$271",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 490,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 258,
																				"src": "3576:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 491,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 464,
																						"src": "3592:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 492,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 493,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 487,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:4",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$271",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 485,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 547,
																	"src": "3534:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$271_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 496,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 498,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 462,
																		"src": "3639:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$271",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 499,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 470,
																		"src": "3646:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$271",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 497,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 547,
																	"src": "3619:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$271_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 501,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:4",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "3318:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$271",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 461,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 460,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 271,
														"src": "3318:6:4"
													},
													"referencedDeclaration": 271,
													"src": "3318:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$271",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "3332:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "3349:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:4"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:4"
									},
									"scope": 597,
									"src": "3296:380:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 546,
										"nodeType": "Block",
										"src": "4129:559:4",
										"statements": [
											{
												"assignments": [
													515
												],
												"declarations": [
													{
														"constant": false,
														"id": 515,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 546,
														"src": "4478:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 514,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 523,
												"initialValue": {
													"arguments": [
														{
															"id": 521,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "4532:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 518,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "4512:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$271",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$271",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:4",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 671,
														"src": "4504:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 524,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "4551:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 530,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 515,
																	"src": "4589:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 531,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:4",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 533,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 528,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:4",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 545,
												"nodeType": "IfStatement",
												"src": "4547:135:4",
												"trueBody": {
													"id": 544,
													"nodeType": "Block",
													"src": "4610:72:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 540,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 509,
																				"src": "4664:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$271",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$271",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 538,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 537,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 324,
																	"src": "4631:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 543,
															"nodeType": "RevertStatement",
															"src": "4624:47:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4088:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$271",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 508,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 507,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 271,
														"src": "4088:6:4"
													},
													"referencedDeclaration": 271,
													"src": "4088:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$271",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "4102:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 510,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:4"
									},
									"returnParameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:4"
									},
									"scope": 597,
									"src": "4059:629:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "5278:489:4",
										"statements": [
											{
												"assignments": [
													559,
													561
												],
												"declarations": [
													{
														"constant": false,
														"id": 559,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 595,
														"src": "5574:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 558,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 561,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 595,
														"src": "5588:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 560,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 569,
												"initialValue": {
													"arguments": [
														{
															"id": 567,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "5635:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 564,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "5623:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$271",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$271",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 562,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:4",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 570,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "5657:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 571,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 561,
																				"src": "5669:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:4",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 577,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 561,
																				"src": "5706:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 579,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 578,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 580,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 575,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:4",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 583,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 587,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 551,
																			"src": "5738:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$271",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$271",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 585,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:4",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 557,
												"id": 594,
												"nodeType": "Return",
												"src": "5650:110:4"
											}
										]
									},
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "5222:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$271",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 550,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 549,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 271,
														"src": "5222:6:4"
													},
													"referencedDeclaration": 271,
													"src": "5222:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$271",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "5236:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 552,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:4"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "5272:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 555,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:4"
									},
									"scope": 597,
									"src": "5189:578:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 598,
							"src": "751:5018:4",
							"usedErrors": [
								324,
								333
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							850
						]
					},
					"id": 851,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 599,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 600,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 850,
							"linearizedBaseContracts": [
								850
							],
							"name": "Address",
							"nameLocation": "203:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:5",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 605,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "349:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:5"
									},
									"src": "316:50:5"
								},
								{
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:5",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 610,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "475:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:5"
									},
									"src": "452:39:5"
								},
								{
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:5",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 613,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:5"
									},
									"src": "591:24:5"
								},
								{
									"body": {
										"id": 653,
										"nodeType": "Block",
										"src": "1602:260:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 623,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$850",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$850",
																		"typeString": "library Address"
																	}
																],
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 621,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 626,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "1640:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 636,
												"nodeType": "IfStatement",
												"src": "1612:109:5",
												"trueBody": {
													"id": 635,
													"nodeType": "Block",
													"src": "1648:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 631,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$850",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$850",
																					"typeString": "library Address"
																				}
																			],
																			"id": 630,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 629,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 628,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 605,
																	"src": "1669:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 634,
															"nodeType": "RevertStatement",
															"src": "1662:48:5"
														}
													]
												}
											},
											{
												"assignments": [
													638,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 638,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 653,
														"src": "1732:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 637,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 645,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 639,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 616,
																"src": "1750:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 641,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 618,
																"src": "1772:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:5"
											},
											{
												"condition": {
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:5",
													"subExpression": {
														"id": 646,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "1798:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 652,
												"nodeType": "IfStatement",
												"src": "1793:63:5",
												"trueBody": {
													"id": 651,
													"nodeType": "Block",
													"src": "1807:49:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 648,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "1828:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 650,
															"nodeType": "RevertStatement",
															"src": "1821:24:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "1550:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "1577:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:5"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:5"
									},
									"scope": 850,
									"src": "1531:331:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "2794:62:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 665,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "2833:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "2841:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 664,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "2811:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 663,
												"id": 669,
												"nodeType": "Return",
												"src": "2804:45:5"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "2727:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "2743:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 658,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:5"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "2780:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 661,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:5"
									},
									"scope": 850,
									"src": "2705:151:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "3293:279:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 685,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$850",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$850",
																		"typeString": "library Address"
																	}
																],
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 683,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 688,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "3331:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 698,
												"nodeType": "IfStatement",
												"src": "3303:108:5",
												"trueBody": {
													"id": 697,
													"nodeType": "Block",
													"src": "3338:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 693,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$850",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$850",
																					"typeString": "library Address"
																				}
																			],
																			"id": 692,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 691,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 694,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 690,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 605,
																	"src": "3359:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 696,
															"nodeType": "RevertStatement",
															"src": "3352:48:5"
														}
													]
												}
											},
											{
												"assignments": [
													700,
													702
												],
												"declarations": [
													{
														"constant": false,
														"id": 700,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 716,
														"src": "3421:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 699,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 702,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 716,
														"src": "3435:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 701,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 709,
												"initialValue": {
													"arguments": [
														{
															"id": 707,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "3488:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 703,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 674,
																"src": "3462:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 705,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "3481:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 711,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "3537:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 712,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "3545:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 713,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "3554:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 710,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "3510:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 682,
												"id": 715,
												"nodeType": "Return",
												"src": "3503:62:5"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "3211:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "3227:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 675,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "3246:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:5"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "3279:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 680,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:5"
									},
									"scope": 850,
									"src": "3180:392:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "3811:154:5",
										"statements": [
											{
												"assignments": [
													728,
													730
												],
												"declarations": [
													{
														"constant": false,
														"id": 728,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 742,
														"src": "3822:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 727,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 730,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 742,
														"src": "3836:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 729,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 735,
												"initialValue": {
													"arguments": [
														{
															"id": 733,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "3881:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 731,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "3863:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 737,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "3930:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 738,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "3938:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 739,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 730,
															"src": "3947:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 736,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "3903:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 726,
												"id": 741,
												"nodeType": "Return",
												"src": "3896:62:5"
											}
										]
									},
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "3739:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "3755:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 721,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:5"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "3797:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 724,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:5"
									},
									"scope": 850,
									"src": "3711:254:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "4203:156:5",
										"statements": [
											{
												"assignments": [
													754,
													756
												],
												"declarations": [
													{
														"constant": false,
														"id": 754,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 768,
														"src": "4214:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 753,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 756,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 768,
														"src": "4228:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 755,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 761,
												"initialValue": {
													"arguments": [
														{
															"id": 759,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "4275:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 757,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "4255:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 763,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "4324:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "4332:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 765,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "4341:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 762,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 809,
														"src": "4297:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 752,
												"id": 767,
												"nodeType": "Return",
												"src": "4290:62:5"
											}
										]
									},
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "4136:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "4152:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 747,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:5"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 769,
												"src": "4189:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 750,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:5"
									},
									"scope": 850,
									"src": "4106:253:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 808,
										"nodeType": "Block",
										"src": "4783:424:5",
										"statements": [
											{
												"condition": {
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:5",
													"subExpression": {
														"id": 781,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "4798:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 806,
													"nodeType": "Block",
													"src": "4857:344:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 788,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 776,
																			"src": "5045:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 790,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 792,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 772,
																				"src": "5071:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 793,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 794,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 803,
															"nodeType": "IfStatement",
															"src": "5041:119:5",
															"trueBody": {
																"id": 802,
																"nodeType": "Block",
																"src": "5096:64:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 799,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 772,
																					"src": "5138:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 798,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 610,
																				"src": "5121:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 800,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 801,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 804,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 776,
																"src": "5180:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 780,
															"id": 805,
															"nodeType": "Return",
															"src": "5173:17:5"
														}
													]
												},
												"id": 807,
												"nodeType": "IfStatement",
												"src": "4793:408:5",
												"trueBody": {
													"id": 787,
													"nodeType": "Block",
													"src": "4807:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 784,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 776,
																		"src": "4829:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 783,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 849,
																	"src": "4821:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 786,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 770,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "4670:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "4694:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 773,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "4716:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 775,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:5"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 809,
												"src": "4769:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 778,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:5"
									},
									"scope": 850,
									"src": "4625:582:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 830,
										"nodeType": "Block",
										"src": "5509:122:5",
										"statements": [
											{
												"condition": {
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:5",
													"subExpression": {
														"id": 819,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "5524:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 828,
													"nodeType": "Block",
													"src": "5583:42:5",
													"statements": [
														{
															"expression": {
																"id": 826,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 814,
																"src": "5604:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 818,
															"id": 827,
															"nodeType": "Return",
															"src": "5597:17:5"
														}
													]
												},
												"id": 829,
												"nodeType": "IfStatement",
												"src": "5519:106:5",
												"trueBody": {
													"id": 825,
													"nodeType": "Block",
													"src": "5533:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 822,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 814,
																		"src": "5555:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 821,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 849,
																	"src": "5547:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 824,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 810,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:5",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "5433:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 811,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "5447:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:5"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "5495:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 816,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:5"
									},
									"scope": 850,
									"src": "5407:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 848,
										"nodeType": "Block",
										"src": "5798:461:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 837,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "5874:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 846,
													"nodeType": "Block",
													"src": "6204:49:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 843,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "6225:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 845,
															"nodeType": "RevertStatement",
															"src": "6218:24:5"
														}
													]
												},
												"id": 847,
												"nodeType": "IfStatement",
												"src": "5870:383:5",
												"trueBody": {
													"id": 842,
													"nodeType": "Block",
													"src": "5897:301:5",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:5",
																"nodeType": "YulBlock",
																"src": "6055:133:5",
																"statements": [
																	{
																		"nativeSrc": "6073:40:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:5"
																			},
																			"nativeSrc": "6096:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:5",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:5",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:5",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:5"
																					},
																					"nativeSrc": "6137:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:5",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:5"
																			},
																			"nativeSrc": "6130:44:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:5"
																		},
																		"nativeSrc": "6130:44:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:5"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 834,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 834,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:5",
																	"valueSize": 1
																}
															],
															"id": 841,
															"nodeType": "InlineAssembly",
															"src": "6046:142:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:5",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "5760:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 833,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:5"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:5"
									},
									"scope": 850,
									"src": "5743:516:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 851,
							"src": "195:6066:5",
							"usedErrors": [
								605,
								610,
								613
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							872
						]
					},
					"id": 873,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 852,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 853,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 872,
							"linearizedBaseContracts": [
								872
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 858,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 857,
												"id": 860,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 872,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 870,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 867,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 866,
												"id": 869,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 864,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 872,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 873,
							"src": "624:235:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:6"
				},
				"id": 6
			},
			"contracts/Liberswap/SwappingContract_2.sol": {
				"ast": {
					"absolutePath": "contracts/Liberswap/SwappingContract_2.sol",
					"exportedSymbols": {
						"Address": [
							850
						],
						"AggregatorV3Interface": [
							45
						],
						"Context": [
							872
						],
						"IERC20": [
							271
						],
						"IERC20Permit": [
							307
						],
						"Ownable": [
							193
						],
						"SafeERC20": [
							597
						],
						"TokenSwap": [
							1562
						]
					},
					"id": 1563,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 874,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 875,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1563,
							"sourceUnit": 272,
							"src": "131:56:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 876,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1563,
							"sourceUnit": 598,
							"src": "188:65:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 877,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1563,
							"sourceUnit": 194,
							"src": "254:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 878,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1563,
							"sourceUnit": 46,
							"src": "307:76:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 880,
										"name": "Ownable",
										"nameLocations": [
											"613:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 193,
										"src": "613:7:7"
									},
									"id": 881,
									"nodeType": "InheritanceSpecifier",
									"src": "613:7:7"
								}
							],
							"canonicalName": "TokenSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 879,
								"nodeType": "StructuredDocumentation",
								"src": "385:206:7",
								"text": "@title TokenSwap contract for swapping tokens, inheriting from Ownable for access control\n @author LiberSwap Team\n @notice Contarct is based on swaping the usd tokens to substrate and vice versa  "
							},
							"fullyImplemented": true,
							"id": 1562,
							"linearizedBaseContracts": [
								1562,
								193,
								872
							],
							"name": "TokenSwap",
							"nameLocation": "600:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 885,
									"libraryName": {
										"id": 882,
										"name": "SafeERC20",
										"nameLocations": [
											"633:9:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 597,
										"src": "633:9:7"
									},
									"nodeType": "UsingForDirective",
									"src": "627:27:7",
									"typeName": {
										"id": 884,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 883,
											"name": "IERC20",
											"nameLocations": [
												"647:6:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 271,
											"src": "647:6:7"
										},
										"referencedDeclaration": 271,
										"src": "647:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$271",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "b4a99a4e",
									"id": 887,
									"mutability": "mutable",
									"name": "Owner",
									"nameLocation": "750:5:7",
									"nodeType": "VariableDeclaration",
									"scope": 1562,
									"src": "735:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 886,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "735:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "cc87ab2abfe87b272af9b77691e40b3d9186a0431f3d41a8e06d39614f460722",
									"id": 893,
									"name": "swapToken",
									"nameLocation": "900:9:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "918:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "910:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "931:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "926:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "926:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "909:29:7"
									},
									"src": "894:45:7"
								},
								{
									"anonymous": false,
									"eventSelector": "cf53ae9736a409c662fa8b1187549847acd41beb1b89fd026293fc2e19adaca7",
									"id": 899,
									"name": "substrateSwapToken",
									"nameLocation": "950:18:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "977:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "969:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "990:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "985:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "985:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:29:7"
									},
									"src": "944:54:7"
								},
								{
									"anonymous": false,
									"eventSelector": "e90fdaf1ebe9ad8ab1edd544a94c7381925e8933ec126ac9066cdcc01473cd82",
									"id": 905,
									"name": "Hold_USDM_Token",
									"nameLocation": "1009:15:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1033:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "1025:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1046:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "1041:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1041:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1024:29:7"
									},
									"src": "1003:51:7"
								},
								{
									"constant": true,
									"id": 908,
									"mutability": "constant",
									"name": "usdt",
									"nameLocation": "1150:4:7",
									"nodeType": "VariableDeclaration",
									"scope": 1562,
									"src": "1133:66:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 906,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1133:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307861353031346541363237416332324136336632426633623436653236643430386537326635356331",
										"id": 907,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1157:42:7",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xa5014eA627Ac22A63f2Bf3b46e26d408e72f55c1"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 911,
									"mutability": "constant",
									"name": "usdc",
									"nameLocation": "1222:4:7",
									"nodeType": "VariableDeclaration",
									"scope": 1562,
									"src": "1205:66:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 909,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1205:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307839393531333432443939343030313436383530364446383846373141353832383637423530646434",
										"id": 910,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1229:42:7",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x9951342D994001468506DF88F71A582867B50dd4"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 914,
									"mutability": "constant",
									"name": "dai",
									"nameLocation": "1294:3:7",
									"nodeType": "VariableDeclaration",
									"scope": 1562,
									"src": "1277:65:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 912,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1277:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837374631343663613239343332393443433533653663334235393830423537326339363161653233",
										"id": 913,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1300:42:7",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x77F146ca2943294CC53e6c3B5980B572c961ae23"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 917,
									"mutability": "constant",
									"name": "usdm",
									"nameLocation": "1365:4:7",
									"nodeType": "VariableDeclaration",
									"scope": 1562,
									"src": "1348:66:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 915,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1348:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307834623361353134446437313835303237376242613832343931663236644143444630383963623638",
										"id": 916,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1372:42:7",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x4b3a514Dd71850277bBa82491f26dACDF089cb68"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "372c12b1",
									"id": 921,
									"mutability": "mutable",
									"name": "whiteList",
									"nameLocation": "1876:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1562,
									"src": "1844:41:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 920,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 918,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1852:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1844:24:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 919,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1863:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f09f0aac",
									"id": 924,
									"mutability": "mutable",
									"name": "whilistedAddress",
									"nameLocation": "1970:16:7",
									"nodeType": "VariableDeclaration",
									"scope": 1562,
									"src": "1953:33:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 922,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1953:7:7",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 923,
										"nodeType": "ArrayTypeName",
										"src": "1953:9:7",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1f1a675d",
									"id": 930,
									"mutability": "mutable",
									"name": "userTokenAmount",
									"nameLocation": "2134:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1562,
									"src": "2055:94:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 929,
										"keyName": "UserAddress",
										"keyNameLocation": "2072:11:7",
										"keyType": {
											"id": 925,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2064:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2055:71:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 928,
											"keyName": "TokenAddress",
											"keyNameLocation": "2103:12:7",
											"keyType": {
												"id": 926,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2095:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2086:39:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 927,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2120:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "373cf202",
									"id": 936,
									"mutability": "mutable",
									"name": "checkUser",
									"nameLocation": "2234:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1562,
									"src": "2155:88:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 935,
										"keyName": "UserAddress",
										"keyNameLocation": "2172:11:7",
										"keyType": {
											"id": 931,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2164:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2155:71:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 934,
											"keyName": "TokenAddress",
											"keyNameLocation": "2203:12:7",
											"keyType": {
												"id": 932,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2195:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2186:39:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 933,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2220:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e1ad418e",
									"id": 940,
									"mutability": "mutable",
									"name": "userAmount",
									"nameLocation": "2294:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1562,
									"src": "2249:55:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 939,
										"keyName": "UserAddress",
										"keyNameLocation": "2266:11:7",
										"keyType": {
											"id": 937,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2258:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2249:37:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 938,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "2281:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fd03fe90",
									"id": 946,
									"mutability": "mutable",
									"name": "userTotalSwapAmount",
									"nameLocation": "2462:19:7",
									"nodeType": "VariableDeclaration",
									"scope": 1562,
									"src": "2390:91:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(string => uint256))"
									},
									"typeName": {
										"id": 945,
										"keyName": "UserAddress",
										"keyNameLocation": "2407:11:7",
										"keyType": {
											"id": 941,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2399:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2390:64:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(string => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 944,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 942,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "2431:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"nodeType": "Mapping",
											"src": "2423:30:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
												"typeString": "mapping(string => uint256)"
											},
											"valueName": "Amount",
											"valueNameLocation": "2446:6:7",
											"valueType": {
												"id": 943,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2441:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3422a7e0",
									"id": 952,
									"mutability": "mutable",
									"name": "userTotalSubstrateSwapAmount",
									"nameLocation": "2650:28:7",
									"nodeType": "VariableDeclaration",
									"scope": 1562,
									"src": "2567:111:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(string => mapping(address => uint256))"
									},
									"typeName": {
										"id": 951,
										"keyName": "SubstrateAddress",
										"keyNameLocation": "2583:16:7",
										"keyType": {
											"id": 947,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "2576:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "2567:75:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(string => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 950,
											"keyName": "Owner",
											"keyNameLocation": "2620:5:7",
											"keyType": {
												"id": 948,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2612:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2604:37:7",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "Amount",
											"valueNameLocation": "2634:6:7",
											"valueType": {
												"id": 949,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "2629:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9c2c67c9",
									"id": 954,
									"mutability": "mutable",
									"name": "currentHoldings",
									"nameLocation": "2755:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1562,
									"src": "2743:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 953,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2743:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2dd91a4c",
									"id": 956,
									"mutability": "mutable",
									"name": "overColleteralFeeAmount",
									"nameLocation": "2846:23:7",
									"nodeType": "VariableDeclaration",
									"scope": 1562,
									"src": "2834:35:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 955,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2834:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 968,
										"nodeType": "Block",
										"src": "2993:37:7",
										"statements": [
											{
												"expression": {
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 964,
														"name": "Owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "3003:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 965,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "3011:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3003:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "3003:20:7"
											}
										]
									},
									"id": 969,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 961,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 958,
													"src": "2979:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 962,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 960,
												"name": "Ownable",
												"nameLocations": [
													"2971:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 193,
												"src": "2971:7:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2971:21:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2957:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "2949:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2948:22:7"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2993:0:7"
									},
									"scope": 1562,
									"src": "2937:93:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 997,
										"nodeType": "Block",
										"src": "3352:162:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3370:20:7",
															"subExpression": {
																"baseExpression": {
																	"id": 978,
																	"name": "whiteList",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "3371:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 980,
																"indexExpression": {
																	"id": 979,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 972,
																	"src": "3381:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3371:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973204164647265737320697320616c72656164792057686974654c697374656421",
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3391:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_69cc1d0091f450c9f1b40951e04a8e02ae8a28f18820a3d492d53b3c2bca82f7",
																"typeString": "literal_string \"This Address is already WhiteListed!\""
															},
															"value": "This Address is already WhiteListed!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_69cc1d0091f450c9f1b40951e04a8e02ae8a28f18820a3d492d53b3c2bca82f7",
																"typeString": "literal_string \"This Address is already WhiteListed!\""
															}
														],
														"id": 977,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3362:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3362:68:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 984,
												"nodeType": "ExpressionStatement",
												"src": "3362:68:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 988,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "3462:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 985,
															"name": "whilistedAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "3440:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3457:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3440:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3440:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "3440:31:7"
											},
											{
												"expression": {
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 991,
															"name": "whiteList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "3481:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 993,
														"indexExpression": {
															"id": 992,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 972,
															"src": "3491:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3481:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 994,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3503:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3481:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "3481:26:7"
											}
										]
									},
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "3035:259:7",
										"text": " @dev Adds an address to the whitelist.\n Only the owner of the contract can call this function.\n Emits an event once an address is successfully whitelisted.\n \n @param _address The address to be added to the whitelist."
									},
									"functionSelector": "6bc20157",
									"id": 998,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 975,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 974,
												"name": "onlyOwner",
												"nameLocations": [
													"3343:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "3343:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3343:9:7"
										}
									],
									"name": "WhiteList",
									"nameLocation": "3308:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "3326:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 998,
												"src": "3318:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:18:7"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3352:0:7"
									},
									"scope": 1562,
									"src": "3299:215:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1043,
										"nodeType": "Block",
										"src": "3586:322:7",
										"statements": [
											{
												"assignments": [
													1007
												],
												"declarations": [
													{
														"constant": false,
														"id": 1007,
														"mutability": "mutable",
														"name": "priceFeed",
														"nameLocation": "3618:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1043,
														"src": "3596:31:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"id": 1006,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1005,
																"name": "AggregatorV3Interface",
																"nameLocations": [
																	"3596:21:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 45,
																"src": "3596:21:7"
															},
															"referencedDeclaration": 45,
															"src": "3596:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1011,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "307864304435653344423434444530354539463239344242306133624545614630333044453234416461",
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3652:42:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1008,
														"name": "AggregatorV3Interface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "3630:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
															"typeString": "type(contract AggregatorV3Interface)"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3630:65:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3596:99:7"
											},
											{
												"assignments": [
													null,
													1013,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1013,
														"mutability": "mutable",
														"name": "answer",
														"nameLocation": "3715:6:7",
														"nodeType": "VariableDeclaration",
														"scope": 1043,
														"src": "3708:13:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1012,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "3708:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1017,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1014,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "3731:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3741:15:7",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "3731:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3731:27:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3705:53:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1019,
																"name": "answer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1013,
																"src": "3776:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3785:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3776:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e65676174697665204d61746963207072696365207265636569766564",
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3788:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_141490049d64491bad25101e25b612b24d846247901441fd85fdb93962f4e9d5",
																"typeString": "literal_string \"Negative Matic price received\""
															},
															"value": "Negative Matic price received"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_141490049d64491bad25101e25b612b24d846247901441fd85fdb93962f4e9d5",
																"typeString": "literal_string \"Negative Matic price received\""
															}
														],
														"id": 1018,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3768:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3768:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "3768:52:7"
											},
											{
												"assignments": [
													1026
												],
												"declarations": [
													{
														"constant": false,
														"id": 1026,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "3838:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1043,
														"src": "3830:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1025,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3830:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1040,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1027,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1000,
																				"src": "3846:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "35",
																				"id": 1028,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3856:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_5_by_1",
																					"typeString": "int_const 5"
																				},
																				"value": "5"
																			},
																			"src": "3846:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1030,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3845:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3859:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "3845:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1033,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3844:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"arguments": [
																	{
																		"id": 1036,
																		"name": "answer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "3873:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3865:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1034,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3865:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3865:15:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1038,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3864:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3844:37:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3830:51:7"
											},
											{
												"expression": {
													"id": 1041,
													"name": "fee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1026,
													"src": "3898:3:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1004,
												"id": 1042,
												"nodeType": "Return",
												"src": "3891:10:7"
											}
										]
									},
									"functionSelector": "f38e762b",
									"id": 1044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getMaticPrice",
									"nameLocation": "3528:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3547:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "3542:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3542:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3541:14:7"
									},
									"returnParameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "3577:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3577:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3576:9:7"
									},
									"scope": 1562,
									"src": "3519:389:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1277,
										"nodeType": "Block",
										"src": "4506:1614:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1059,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4552:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4556:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4552:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1063,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4572:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenSwap_$1562",
																					"typeString": "contract TokenSwap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenSwap_$1562",
																					"typeString": "contract TokenSwap"
																				}
																			],
																			"id": 1062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4564:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1061,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4564:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4564:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1056,
																				"name": "_ethToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1047,
																				"src": "4531:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1055,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 271,
																			"src": "4524:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$271_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4524:17:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$271",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4542:9:7",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 248,
																	"src": "4524:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4524:54:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1066,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "4582:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4524:65:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c6f77616e6365206e6f7420736574",
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4591:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b7f5bbf01babd612ff41adb253311ab3eccd8d56664e3b6ae54fa2e62b1bbfb0",
																"typeString": "literal_string \"Allowance not set\""
															},
															"value": "Allowance not set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b7f5bbf01babd612ff41adb253311ab3eccd8d56664e3b6ae54fa2e62b1bbfb0",
																"typeString": "literal_string \"Allowance not set\""
															}
														],
														"id": 1054,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4516:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4516:95:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "4516:95:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1076,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4657:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1077,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4661:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4657:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1073,
																				"name": "_ethToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1047,
																				"src": "4636:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1072,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 271,
																			"src": "4629:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$271_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4629:17:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$271",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4647:9:7",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 228,
																	"src": "4629:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4629:39:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1079,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "4672:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4629:50:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4681:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1071,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4621:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4621:83:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1083,
												"nodeType": "ExpressionStatement",
												"src": "4621:83:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1084,
														"name": "_ethToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "4717:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1085,
														"name": "usdm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "4730:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4717:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1275,
													"nodeType": "Block",
													"src": "5183:927:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1160,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1049,
																					"src": "5237:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1159,
																				"name": "getMaticPrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1044,
																				"src": "5223:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) view returns (uint256)"
																				}
																			},
																			"id": 1161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5223:22:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1162,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5246:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1163,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5250:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "5246:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "5223:28:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1155,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 113,
																					"src": "5205:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1156,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5205:7:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5197:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 1153,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5197:8:7",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5197:16:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 1158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5214:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "5197:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5197:55:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1167,
															"nodeType": "ExpressionStatement",
															"src": "5197:55:7"
														},
														{
															"expression": {
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1168,
																	"name": "overColleteralFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "5266:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1171,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1169,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1049,
																					"src": "5293:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "33",
																					"id": 1170,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5301:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_3_by_1",
																						"typeString": "int_const 3"
																					},
																					"value": "3"
																				},
																				"src": "5293:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1172,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5292:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31303030",
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5304:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000_by_1",
																			"typeString": "int_const 1000"
																		},
																		"value": "1000"
																	},
																	"src": "5292:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5266:42:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1176,
															"nodeType": "ExpressionStatement",
															"src": "5266:42:7"
														},
														{
															"assignments": [
																1178
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1178,
																	"mutability": "mutable",
																	"name": "eachWhilitedAddressFee",
																	"nameLocation": "5327:22:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1275,
																	"src": "5322:27:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1177,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "5322:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1183,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1179,
																	"name": "overColleteralFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "5352:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"expression": {
																		"id": 1180,
																		"name": "whilistedAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "5376:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5393:6:7",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5376:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5352:47:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5322:77:7"
														},
														{
															"body": {
																"id": 1207,
																"nodeType": "Block",
																"src": "5473:120:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1199,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "5522:3:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1200,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5526:6:7",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "5522:10:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"baseExpression": {
																						"id": 1201,
																						"name": "whilistedAddress",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 924,
																						"src": "5534:16:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_storage",
																							"typeString": "address[] storage ref"
																						}
																					},
																					"id": 1203,
																					"indexExpression": {
																						"id": 1202,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1185,
																						"src": "5551:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5534:19:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1204,
																					"name": "eachWhilitedAddressFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1178,
																					"src": "5555:22:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1196,
																							"name": "_ethToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1047,
																							"src": "5498:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1195,
																						"name": "IERC20",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 271,
																						"src": "5491:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20_$271_$",
																							"typeString": "type(contract IERC20)"
																						}
																					},
																					"id": 1197,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5491:17:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$271",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1198,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5509:12:7",
																				"memberName": "transferFrom",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 270,
																				"src": "5491:30:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5491:87:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1206,
																		"nodeType": "ExpressionStatement",
																		"src": "5491:87:7"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1188,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1185,
																	"src": "5428:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1189,
																		"name": "whilistedAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "5430:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5447:6:7",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5430:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5428:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1208,
															"initializationExpression": {
																"assignments": [
																	1185
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1185,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "5423:1:7",
																		"nodeType": "VariableDeclaration",
																		"scope": 1208,
																		"src": "5418:6:7",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1184,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "5418:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1187,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5425:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "5418:8:7"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 1193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "5455:3:7",
																	"subExpression": {
																		"id": 1192,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1185,
																		"src": "5455:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1194,
																"nodeType": "ExpressionStatement",
																"src": "5455:3:7"
															},
															"nodeType": "ForStatement",
															"src": "5413:180:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1213,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5637:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5641:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5637:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1217,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5657:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenSwap_$1562",
																					"typeString": "contract TokenSwap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenSwap_$1562",
																					"typeString": "contract TokenSwap"
																				}
																			],
																			"id": 1216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5649:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1215,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5649:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5649:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1221,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1219,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1049,
																					"src": "5665:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1220,
																					"name": "overColleteralFeeAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 956,
																					"src": "5673:23:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5665:31:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1222,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5664:33:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1210,
																				"name": "_ethToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1047,
																				"src": "5613:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1209,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 271,
																			"src": "5606:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$271_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5606:17:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$271",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5624:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 270,
																	"src": "5606:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5606:92:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1224,
															"nodeType": "ExpressionStatement",
															"src": "5606:92:7"
														},
														{
															"expression": {
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1225,
																	"name": "currentHoldings",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "5712:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1226,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "5732:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1227,
																				"name": "overColleteralFeeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 956,
																				"src": "5740:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5732:31:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1229,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5731:33:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5712:52:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1231,
															"nodeType": "ExpressionStatement",
															"src": "5712:52:7"
														},
														{
															"expression": {
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1232,
																		"name": "userAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "5778:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1235,
																	"indexExpression": {
																		"expression": {
																			"id": 1233,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5789:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5793:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5789:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5778:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1236,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "5804:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1237,
																				"name": "overColleteralFeeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 956,
																				"src": "5812:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5804:31:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1239,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5803:33:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5778:58:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1241,
															"nodeType": "ExpressionStatement",
															"src": "5778:58:7"
														},
														{
															"expression": {
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1242,
																			"name": "userTotalSwapAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 946,
																			"src": "5850:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(string memory => uint256))"
																			}
																		},
																		"id": 1246,
																		"indexExpression": {
																			"expression": {
																				"id": 1243,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5870:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5874:6:7",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5870:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5850:31:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																			"typeString": "mapping(string memory => uint256)"
																		}
																	},
																	"id": 1247,
																	"indexExpression": {
																		"id": 1245,
																		"name": "substrateAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1051,
																		"src": "5882:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5850:49:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1248,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "5904:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1249,
																				"name": "overColleteralFeeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 956,
																				"src": "5912:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5904:31:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1251,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5903:33:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5850:86:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1253,
															"nodeType": "ExpressionStatement",
															"src": "5850:86:7"
														},
														{
															"expression": {
																"id": 1264,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1254,
																			"name": "userTokenAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 930,
																			"src": "5950:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1258,
																		"indexExpression": {
																			"expression": {
																				"id": 1255,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5966:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1256,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5970:6:7",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5966:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5950:27:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1259,
																	"indexExpression": {
																		"id": 1257,
																		"name": "_ethToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1047,
																		"src": "5978:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5950:38:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1262,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1260,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "5993:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1261,
																				"name": "overColleteralFeeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 956,
																				"src": "6001:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5993:31:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1263,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5992:33:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5950:75:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1265,
															"nodeType": "ExpressionStatement",
															"src": "5950:75:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1267,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6054:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6058:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6054:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1271,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1269,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1049,
																					"src": "6066:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1270,
																					"name": "overColleteralFeeAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 956,
																					"src": "6074:23:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6066:31:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1272,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6065:33:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1266,
																	"name": "swapToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "6044:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6044:55:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1274,
															"nodeType": "EmitStatement",
															"src": "6039:60:7"
														}
													]
												},
												"id": 1276,
												"nodeType": "IfStatement",
												"src": "4714:1396:7",
												"trueBody": {
													"id": 1152,
													"nodeType": "Block",
													"src": "4735:435:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1094,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1049,
																					"src": "4789:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1093,
																				"name": "getMaticPrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1044,
																				"src": "4775:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) view returns (uint256)"
																				}
																			},
																			"id": 1095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4775:22:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1098,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1096,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4798:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1097,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4802:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "4798:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "4775:28:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1089,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 113,
																					"src": "4757:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1090,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4757:7:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4749:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 1087,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4749:8:7",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4749:16:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4766:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "4749:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4749:55:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1101,
															"nodeType": "ExpressionStatement",
															"src": "4749:55:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1106,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4849:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4853:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4849:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1110,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4869:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenSwap_$1562",
																					"typeString": "contract TokenSwap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenSwap_$1562",
																					"typeString": "contract TokenSwap"
																				}
																			],
																			"id": 1109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4861:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1108,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4861:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4861:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 1112,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "4877:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1113,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4876:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1103,
																				"name": "_ethToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1047,
																				"src": "4825:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1102,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 271,
																			"src": "4818:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$271_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4818:17:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$271",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4836:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 270,
																	"src": "4818:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 1114,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4818:68:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1115,
															"nodeType": "ExpressionStatement",
															"src": "4818:68:7"
														},
														{
															"expression": {
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1116,
																	"name": "currentHoldings",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "4900:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"components": [
																		{
																			"id": 1117,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1049,
																			"src": "4920:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1118,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4919:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4900:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1120,
															"nodeType": "ExpressionStatement",
															"src": "4900:28:7"
														},
														{
															"expression": {
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1121,
																		"name": "userAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "4942:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1124,
																	"indexExpression": {
																		"expression": {
																			"id": 1122,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4953:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4957:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4953:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4942:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1125,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "4967:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4942:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1127,
															"nodeType": "ExpressionStatement",
															"src": "4942:32:7"
														},
														{
															"expression": {
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1128,
																			"name": "userTotalSwapAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 946,
																			"src": "4988:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(string memory => uint256))"
																			}
																		},
																		"id": 1132,
																		"indexExpression": {
																			"expression": {
																				"id": 1129,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5008:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1130,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5012:6:7",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5008:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4988:31:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																			"typeString": "mapping(string memory => uint256)"
																		}
																	},
																	"id": 1133,
																	"indexExpression": {
																		"id": 1131,
																		"name": "substrateAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1051,
																		"src": "5020:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4988:49:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1134,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "5041:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4988:60:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1136,
															"nodeType": "ExpressionStatement",
															"src": "4988:60:7"
														},
														{
															"expression": {
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1137,
																			"name": "userTokenAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 930,
																			"src": "5062:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1141,
																		"indexExpression": {
																			"expression": {
																				"id": 1138,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5078:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5082:6:7",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5078:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5062:27:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1142,
																	"indexExpression": {
																		"id": 1140,
																		"name": "_ethToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1047,
																		"src": "5090:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5062:38:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1143,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "5104:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5062:49:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1145,
															"nodeType": "ExpressionStatement",
															"src": "5062:49:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1147,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5140:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5144:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5140:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1149,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1049,
																		"src": "5151:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1146,
																	"name": "swapToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "5130:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5130:29:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1151,
															"nodeType": "EmitStatement",
															"src": "5125:34:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1045,
										"nodeType": "StructuredDocumentation",
										"src": "3914:486:7",
										"text": " @dev Allows users to swap tokens by transferring them to the contract or distribute a fee among whitelisted addresses.\n If the token being swapped is USDM, it is simply collected by the contract.\n For other tokens, a 0.3% fee is distributed among all whitelisted addresses, and the rest is collected by the contract.\n \n @param _ethToken The address of the ERC20 token to be swapped.\n @param _amount The amount of the token to be swapped."
									},
									"functionSelector": "cb8ff545",
									"id": 1278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokens",
									"nameLocation": "4415:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "_ethToken",
												"nameLocation": "4434:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "4426:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4426:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4452:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "4444:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4444:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "substrateAddress",
												"nameLocation": "4474:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "4460:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1050,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4460:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4425:66:7"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4506:0:7"
									},
									"scope": 1562,
									"src": "4406:1714:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1444,
										"nodeType": "Block",
										"src": "6776:1255:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1297,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "6830:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenSwap_$1562",
																					"typeString": "contract TokenSwap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenSwap_$1562",
																					"typeString": "contract TokenSwap"
																				}
																			],
																			"id": 1296,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6822:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1295,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6822:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6822:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1292,
																				"name": "_ethToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1281,
																				"src": "6801:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1291,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 271,
																			"src": "6794:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$271_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6794:17:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$271",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6812:9:7",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 228,
																	"src": "6794:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6794:42:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1300,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1283,
																"src": "6840:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6794:53:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6849:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6786:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6786:86:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1304,
												"nodeType": "ExpressionStatement",
												"src": "6786:86:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1305,
														"name": "_ethToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1281,
														"src": "6885:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1306,
														"name": "usdm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "6898:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6885:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1442,
													"nodeType": "Block",
													"src": "7238:787:7",
													"statements": [
														{
															"expression": {
																"id": 1356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1349,
																	"name": "overColleteralFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "7253:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1352,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1350,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1283,
																					"src": "7280:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "33",
																					"id": 1351,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7288:1:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_3_by_1",
																						"typeString": "int_const 3"
																					},
																					"value": "3"
																				},
																				"src": "7280:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1353,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7279:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31303030",
																		"id": 1354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7291:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000_by_1",
																			"typeString": "int_const 1000"
																		},
																		"value": "1000"
																	},
																	"src": "7279:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7253:42:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1357,
															"nodeType": "ExpressionStatement",
															"src": "7253:42:7"
														},
														{
															"assignments": [
																1359
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1359,
																	"mutability": "mutable",
																	"name": "eachWhilitedAddressFee",
																	"nameLocation": "7314:22:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1442,
																	"src": "7309:27:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1358,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "7309:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1364,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1360,
																	"name": "overColleteralFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "7339:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"expression": {
																		"id": 1361,
																		"name": "whilistedAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "7363:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7380:6:7",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7363:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7339:47:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7309:77:7"
														},
														{
															"body": {
																"id": 1386,
																"nodeType": "Block",
																"src": "7460:107:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 1380,
																						"name": "whilistedAddress",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 924,
																						"src": "7509:16:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_storage",
																							"typeString": "address[] storage ref"
																						}
																					},
																					"id": 1382,
																					"indexExpression": {
																						"id": 1381,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1366,
																						"src": "7526:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "7509:19:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1383,
																					"name": "eachWhilitedAddressFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1359,
																					"src": "7529:22:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1377,
																							"name": "_ethToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1281,
																							"src": "7485:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1376,
																						"name": "IERC20",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 271,
																						"src": "7478:6:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20_$271_$",
																							"typeString": "type(contract IERC20)"
																						}
																					},
																					"id": 1378,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7478:17:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$271",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1379,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7496:12:7",
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 357,
																				"src": "7478:30:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$271_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$271_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 1384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7478:74:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1385,
																		"nodeType": "ExpressionStatement",
																		"src": "7478:74:7"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1369,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1366,
																	"src": "7415:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1370,
																		"name": "whilistedAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "7417:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7434:6:7",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7417:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7415:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1387,
															"initializationExpression": {
																"assignments": [
																	1366
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1366,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "7410:1:7",
																		"nodeType": "VariableDeclaration",
																		"scope": 1387,
																		"src": "7405:6:7",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1365,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "7405:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1368,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7412:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "7405:8:7"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 1374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "7442:3:7",
																	"subExpression": {
																		"id": 1373,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1366,
																		"src": "7442:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1375,
																"nodeType": "ExpressionStatement",
																"src": "7442:3:7"
															},
															"nodeType": "ForStatement",
															"src": "7400:167:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1392,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "7611:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1395,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1393,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1283,
																					"src": "7616:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1394,
																					"name": "overColleteralFeeAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 956,
																					"src": "7624:23:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7616:31:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1396,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7615:33:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1389,
																				"name": "_ethToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1281,
																				"src": "7587:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1388,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 271,
																			"src": "7580:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$271_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7580:17:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$271",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7598:12:7",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 357,
																	"src": "7580:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$271_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$271_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7580:69:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1398,
															"nodeType": "ExpressionStatement",
															"src": "7580:69:7"
														},
														{
															"expression": {
																"id": 1404,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1399,
																	"name": "currentHoldings",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "7663:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1400,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1283,
																				"src": "7683:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1401,
																				"name": "overColleteralFeeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 956,
																				"src": "7691:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7683:31:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1403,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7682:33:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7663:52:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1405,
															"nodeType": "ExpressionStatement",
															"src": "7663:52:7"
														},
														{
															"expression": {
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1406,
																		"name": "userAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "7729:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1408,
																	"indexExpression": {
																		"id": 1407,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "7740:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7729:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1409,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1283,
																				"src": "7748:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1410,
																				"name": "overColleteralFeeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 956,
																				"src": "7756:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7748:31:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1412,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7747:33:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7729:51:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1414,
															"nodeType": "ExpressionStatement",
															"src": "7729:51:7"
														},
														{
															"expression": {
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1415,
																			"name": "userTotalSubstrateSwapAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 952,
																			"src": "7794:28:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(string memory => mapping(address => uint256))"
																			}
																		},
																		"id": 1418,
																		"indexExpression": {
																			"id": 1416,
																			"name": "substrateAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1287,
																			"src": "7823:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7794:46:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1419,
																	"indexExpression": {
																		"id": 1417,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "7841:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7794:51:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1420,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "7849:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7794:62:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1422,
															"nodeType": "ExpressionStatement",
															"src": "7794:62:7"
														},
														{
															"expression": {
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1423,
																			"name": "userTokenAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 930,
																			"src": "7870:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1426,
																		"indexExpression": {
																			"id": 1424,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1285,
																			"src": "7886:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7870:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1427,
																	"indexExpression": {
																		"id": 1425,
																		"name": "_ethToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1281,
																		"src": "7891:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7870:31:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1430,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1428,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1283,
																				"src": "7906:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1429,
																				"name": "overColleteralFeeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 956,
																				"src": "7914:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7906:31:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1431,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7905:33:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7870:68:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1433,
															"nodeType": "ExpressionStatement",
															"src": "7870:68:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1435,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "7976:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1438,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1436,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1283,
																					"src": "7981:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1437,
																					"name": "overColleteralFeeAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 956,
																					"src": "7989:23:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7981:31:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1439,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7980:33:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1434,
																	"name": "substrateSwapToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 899,
																	"src": "7957:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7957:57:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1441,
															"nodeType": "EmitStatement",
															"src": "7952:62:7"
														}
													]
												},
												"id": 1443,
												"nodeType": "IfStatement",
												"src": "6882:1143:7",
												"trueBody": {
													"id": 1348,
													"nodeType": "Block",
													"src": "6903:322:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1312,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "6948:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1313,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1283,
																		"src": "6952:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1309,
																				"name": "_ethToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1281,
																				"src": "6924:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1308,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 271,
																			"src": "6917:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$271_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6917:17:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$271",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1311,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6935:12:7",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 357,
																	"src": "6917:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$271_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$271_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6917:43:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1315,
															"nodeType": "ExpressionStatement",
															"src": "6917:43:7"
														},
														{
															"expression": {
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1316,
																	"name": "currentHoldings",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "6974:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"components": [
																		{
																			"id": 1317,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1283,
																			"src": "6994:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1318,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6993:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6974:28:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1320,
															"nodeType": "ExpressionStatement",
															"src": "6974:28:7"
														},
														{
															"expression": {
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1321,
																		"name": "userAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 940,
																		"src": "7016:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1323,
																	"indexExpression": {
																		"id": 1322,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "7027:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7016:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1324,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "7034:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7016:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1326,
															"nodeType": "ExpressionStatement",
															"src": "7016:25:7"
														},
														{
															"expression": {
																"id": 1333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1327,
																			"name": "userTotalSubstrateSwapAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 952,
																			"src": "7055:28:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(string memory => mapping(address => uint256))"
																			}
																		},
																		"id": 1330,
																		"indexExpression": {
																			"id": 1328,
																			"name": "substrateAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1287,
																			"src": "7084:16:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7055:46:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1331,
																	"indexExpression": {
																		"id": 1329,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "7102:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7055:51:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1332,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "7110:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7055:62:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1334,
															"nodeType": "ExpressionStatement",
															"src": "7055:62:7"
														},
														{
															"expression": {
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1335,
																			"name": "userTokenAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 930,
																			"src": "7131:15:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1338,
																		"indexExpression": {
																			"id": 1336,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1285,
																			"src": "7147:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7131:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1339,
																	"indexExpression": {
																		"id": 1337,
																		"name": "_ethToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1281,
																		"src": "7152:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7131:31:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1340,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "7166:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7131:42:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1342,
															"nodeType": "ExpressionStatement",
															"src": "7131:42:7"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1344,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1285,
																		"src": "7202:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1345,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1283,
																		"src": "7206:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1343,
																	"name": "swapToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "7192:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7192:22:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1347,
															"nodeType": "EmitStatement",
															"src": "7187:27:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "6125:532:7",
										"text": " @dev Allows users to swap tokens back from the contract or distribute a fee among whitelisted addresses before sending back the tokens.\n If the token being swapped back is USDM, it is directly transferred to the sender.\n For other tokens, a 0.3% fee is distributed among all whitelisted addresses before sending the remaining tokens back to the sender.\n \n @param _ethToken The address of the ERC20 token to be swapped back.\n @param _amount The amount of the token to be swapped back."
									},
									"functionSelector": "1a06e66e",
									"id": 1445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "substrateSwapTokens",
									"nameLocation": "6671:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "_ethToken",
												"nameLocation": "6699:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "6691:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6691:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "6717:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "6709:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6709:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "6733:3:7",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "6725:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6725:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "substrateAddress",
												"nameLocation": "6751:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "6737:30:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1286,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6737:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6690:78:7"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6776:0:7"
									},
									"scope": 1562,
									"src": "6662:1369:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "8250:84:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1457,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8291:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8295:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8291:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1459,
															"name": "overColleteralFeeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "8303:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1454,
																	"name": "_ethToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1448,
																	"src": "8267:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1453,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "8260:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$271_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8260:17:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$271",
																"typeString": "contract IERC20"
															}
														},
														"id": 1456,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8278:12:7",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "8260:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$271_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$271_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8260:67:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1461,
												"nodeType": "ExpressionStatement",
												"src": "8260:67:7"
											}
										]
									},
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "8036:142:7",
										"text": " @param _ethToken The address of the ERC20 token to be swapped back.\n Only owner can withdaraw the Overcolleteral fee."
									},
									"functionSelector": "cdb43478",
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1451,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1450,
												"name": "onlyOwner",
												"nameLocations": [
													"8240:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "8240:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "8240:9:7"
										}
									],
									"name": "withdrawBalanceTokens",
									"nameLocation": "8192:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "_ethToken",
												"nameLocation": "8222:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1463,
												"src": "8214:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8214:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8213:19:7"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8250:0:7"
									},
									"scope": 1562,
									"src": "8183:151:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "8578:114:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1472,
																"name": "whiteList",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "8596:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1474,
															"indexExpression": {
																"id": 1473,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "8606:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8596:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973204164647265737320646f6573206e6f7420657869737421",
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8617:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_96f12f93478a3768b4b822c9ec935962a88f68f145f33917ac63ab3e2a411fe3",
																"typeString": "literal_string \"This Address does not exist!\""
															},
															"value": "This Address does not exist!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_96f12f93478a3768b4b822c9ec935962a88f68f145f33917ac63ab3e2a411fe3",
																"typeString": "literal_string \"This Address does not exist!\""
															}
														],
														"id": 1471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8588:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8588:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "8588:60:7"
											},
											{
												"expression": {
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1478,
															"name": "whiteList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "8658:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1480,
														"indexExpression": {
															"id": 1479,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "8668:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8658:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8680:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "8658:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "8658:27:7"
											}
										]
									},
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "8339:170:7",
										"text": " @dev Removes an address from the whitelist. Only the owner can call this function.\n @param _address The address to be removed from the whitelist."
									},
									"functionSelector": "01bf6648",
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1469,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1468,
												"name": "onlyOwner",
												"nameLocations": [
													"8568:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 104,
												"src": "8568:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "8568:9:7"
										}
									],
									"name": "removeFromWhiteList",
									"nameLocation": "8523:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "8551:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "8543:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8543:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8542:18:7"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8578:0:7"
									},
									"scope": 1562,
									"src": "8514:178:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1499,
										"nodeType": "Block",
										"src": "8924:103:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1493,
															"name": "userTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "8941:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1495,
														"indexExpression": {
															"id": 1494,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "8957:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8941:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1497,
													"indexExpression": {
														"id": 1496,
														"name": "usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "8965:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8941:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1492,
												"id": 1498,
												"nodeType": "Return",
												"src": "8934:36:7"
											}
										]
									},
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "8698:145:7",
										"text": " @dev Returns the USDT token balance of this contract.\n @return holdings The amount of USDT tokens held by this contract."
									},
									"functionSelector": "a3150978",
									"id": 1500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "holdingOf_USDT",
									"nameLocation": "8857:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "8880:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "8872:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8872:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8871:16:7"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "holdings",
												"nameLocation": "8914:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1500,
												"src": "8909:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8909:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8908:15:7"
									},
									"scope": 1562,
									"src": "8848:179:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1514,
										"nodeType": "Block",
										"src": "9256:101:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1508,
															"name": "userTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "9273:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1510,
														"indexExpression": {
															"id": 1509,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1503,
															"src": "9289:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9273:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1512,
													"indexExpression": {
														"id": 1511,
														"name": "dai",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "9297:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9273:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1507,
												"id": 1513,
												"nodeType": "Return",
												"src": "9266:35:7"
											}
										]
									},
									"documentation": {
										"id": 1501,
										"nodeType": "StructuredDocumentation",
										"src": "9033:143:7",
										"text": " @dev Returns the DAI token balance of this contract.\n @return holdings The amount of DAI tokens held by this contract."
									},
									"functionSelector": "a7f696cf",
									"id": 1515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "holdingOf_DAI",
									"nameLocation": "9190:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1503,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "9212:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "9204:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9204:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9203:16:7"
									},
									"returnParameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "holdings",
												"nameLocation": "9246:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "9241:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1505,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9241:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9240:15:7"
									},
									"scope": 1562,
									"src": "9181:176:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1529,
										"nodeType": "Block",
										"src": "9589:103:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1523,
															"name": "userTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "9606:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1525,
														"indexExpression": {
															"id": 1524,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1518,
															"src": "9622:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9606:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1527,
													"indexExpression": {
														"id": 1526,
														"name": "usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "9630:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9606:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1522,
												"id": 1528,
												"nodeType": "Return",
												"src": "9599:36:7"
											}
										]
									},
									"documentation": {
										"id": 1516,
										"nodeType": "StructuredDocumentation",
										"src": "9363:145:7",
										"text": " @dev Returns the USDC token balance of this contract.\n @return holdings The amount of USDC tokens held by this contract."
									},
									"functionSelector": "70181206",
									"id": 1530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "holdingOf_USDC",
									"nameLocation": "9522:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "9545:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "9537:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9537:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9536:16:7"
									},
									"returnParameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "holdings",
												"nameLocation": "9579:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1530,
												"src": "9574:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9574:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9573:15:7"
									},
									"scope": 1562,
									"src": "9513:179:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1544,
										"nodeType": "Block",
										"src": "9924:103:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1538,
															"name": "userTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "9941:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1540,
														"indexExpression": {
															"id": 1539,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "9957:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9941:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1542,
													"indexExpression": {
														"id": 1541,
														"name": "usdm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "9965:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9941:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1537,
												"id": 1543,
												"nodeType": "Return",
												"src": "9934:36:7"
											}
										]
									},
									"documentation": {
										"id": 1531,
										"nodeType": "StructuredDocumentation",
										"src": "9698:145:7",
										"text": " @dev Returns the USDM token balance of this contract.\n @return holdings The amount of USDM tokens held by this contract."
									},
									"functionSelector": "fca0a3d2",
									"id": 1545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "holdingOf_USDM",
									"nameLocation": "9857:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "9880:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "9872:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9872:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9871:16:7"
									},
									"returnParameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "holdings",
												"nameLocation": "9914:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "9909:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1535,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "9909:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9908:15:7"
									},
									"scope": 1562,
									"src": "9848:179:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1560,
										"nodeType": "Block",
										"src": "10348:124:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1553,
															"name": "userTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "10365:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1556,
														"indexExpression": {
															"expression": {
																"id": 1554,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10381:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10385:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10381:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10365:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1558,
													"indexExpression": {
														"id": 1557,
														"name": "_ethToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1548,
														"src": "10393:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10365:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1552,
												"id": 1559,
												"nodeType": "Return",
												"src": "10358:45:7"
											}
										]
									},
									"documentation": {
										"id": 1546,
										"nodeType": "StructuredDocumentation",
										"src": "10033:230:7",
										"text": " @dev Returns the balance of a specific ERC20 token held by this contract.\n @param _ethToken The address of the ERC20 token.\n @return holdings The amount of the specified tokens held by this contract."
									},
									"functionSelector": "a4329677",
									"id": 1561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "holdingOfTokens",
									"nameLocation": "10277:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "_ethToken",
												"nameLocation": "10301:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "10293:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10293:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10292:19:7"
									},
									"returnParameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "holdings",
												"nameLocation": "10338:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1561,
												"src": "10333:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1550,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10333:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10332:15:7"
									},
									"scope": 1562,
									"src": "10268:204:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1563,
							"src": "591:9884:7",
							"usedErrors": [
								59,
								64,
								324,
								605,
								610,
								613
							],
							"usedEvents": [
								70,
								893,
								899,
								905
							]
						}
					],
					"src": "32:10443:7"
				},
				"id": 7
			}
		}
	}
}