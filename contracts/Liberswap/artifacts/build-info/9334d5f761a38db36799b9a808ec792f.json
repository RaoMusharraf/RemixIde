{
	"id": "9334d5f761a38db36799b9a808ec792f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Liberswap/swaping.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract TokenSwap is Ownable {\n    using SafeERC20 for IERC20;\n    address public feeOwner;\n    event swapToken(address sender,uint amount);\n    event swapSubstrateToken(address sender,uint amount);\n    event Hold_USDM_Token(address sender,uint amount);\n    address constant usdt =  0x1059dc58FeE94Fd0caF8A5c9a9b936843F0c5329;\n    address constant usdc = 0x07B25CC8082ABc65C70b9e5f00b7f3b8FcF6814B;\n    address constant dai = 0x2DF4FAecE2eA8b8FB5eFa8e022eDec520c2f0FA4;\n    address constant usdm = 0xe9A05AFaC6e76749462f6537Fed148F34A92c0f7;\n    // address constant usdc = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;\n    // address constant dai = 0x6B175474E89094C44Da98b954EedeAC495271d0F;\n    // address constant usdm = 0x59D9356E565Ab3A36dD77763Fc0d87fEaf85508C;\n    // address constant usdt = 0xdAC17F958D2ee523a2206206994597C13D831ec7;\n\n    mapping(address => bool) public whiteList;\n    address[] public whilistedAddress;\n    mapping (address => uint) public userAmount;\n    uint public currentHoldings;\n\n    constructor(address initialOwner) Ownable(initialOwner)  {\n        feeOwner = initialOwner;\n    }\n\n    function WhiteList(address _address) public onlyOwner{\n        require(!whiteList[_address],\"This Address is already WhiteListed!\");\n        whilistedAddress.push(_address);\n        whiteList[_address] = true;\n    }\n\n    function swapTokens(address _ethToken,uint256 _amount) public {\n        require(_ethToken == usdm || _ethToken == usdc || _ethToken == dai || _ethToken == usdt,\"Accept only (USDM,DIA,USDT,USDC) Tokens\");\n        require(IERC20(_ethToken).allowance(msg.sender, address(this)) >= _amount, \"Allowance not set\");\n        require(IERC20(_ethToken).balanceOf(msg.sender) >= _amount, \"Insufficient balance\");\n\n        if(_ethToken == usdm){\n            IERC20(_ethToken).transferFrom(msg.sender, address(this), (_amount));\n            currentHoldings += (_amount);\n            userAmount[msg.sender] = _amount;\n            emit swapToken(msg.sender,_amount);\n        }\n        else{\n            uint FeeAmount = (_amount*3)/1000;\n            uint eachWhilitedAddressFee = FeeAmount/whilistedAddress.length;\n            for (uint i=0; i<whilistedAddress.length; i++) \n            {\n                IERC20(_ethToken).transferFrom(msg.sender, whilistedAddress[i], eachWhilitedAddressFee);\n            }\n            IERC20(_ethToken).transferFrom(msg.sender, address(this), (_amount-FeeAmount));\n            currentHoldings += (_amount-FeeAmount);\n            userAmount[msg.sender] = (_amount-FeeAmount);\n            emit swapToken(msg.sender,(_amount-FeeAmount));\n        }\n        // substrateToken.mint(msg.sender, _amount);\n    }\n    function withdrawBalanceTokens(address _ethToken,uint256 _amount) public onlyOwner{\n        IERC20(_ethToken).safeTransfer(msg.sender,_amount);\n        emit swapSubstrateToken(msg.sender,_amount);\n    }\n\n    function removeFromWhiteList(address _address) public onlyOwner{\n        require(whiteList[_address],\"This Address is not exist!\");\n        whiteList[_address] = false;\n    }\n \n    function holdingOfTokens(address _ethToken) public view returns (uint holdings){\n        return IERC20(_ethToken).balanceOf(address(this));\n    }\n    // function holdingOfOwnTokens(address ownTokenAddress,address _ethToken) public view returns (uint holdings){\n    //     return IERC20(_ethToken).balanceOf(ownTokenAddress);\n    // }\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xD84D22D1835A3CA1124D5EF32EE0684F33800771 DUP1 0xC5 0xEA PUSH32 0xE8765448DE492764736F6C634300081600330000000000000000000000000000 ",
							"sourceMap": "751:5018:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0xD84D22D1835A3CA1124D5EF32EE0684F33800771 DUP1 0xC5 0xEA PUSH32 0xE8765448DE492764736F6C634300081600330000000000000000000000000000 ",
							"sourceMap": "751:5018:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122073d84d22d1835a3ca1124d5ef32ee0684f3380077180c5ea7fe8765448de492764736f6c63430008160033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Liberswap/swaping.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xC4 0xE3 MSTORE SELFBALANCE MSTORE 0xC 0xDD DUP6 0xD4 POP SELFBALANCE CALLCODE DUP8 PUSH32 0x29A37F5EEC48FFFAA17CB54307A6A87D8464736F6C6343000816003300000000 ",
							"sourceMap": "195:6066:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xC4 0xE3 MSTORE SELFBALANCE MSTORE 0xC 0xDD DUP6 0xD4 POP SELFBALANCE CALLCODE DUP8 PUSH32 0x29A37F5EEC48FFFAA17CB54307A6A87D8464736F6C6343000816003300000000 ",
							"sourceMap": "195:6066:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4c4e35247520cdd85d45047f2877f29a37f5eec48fffaa17cb54307a6a87d8464736f6c63430008160033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Liberswap/swaping.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Liberswap/swaping.sol": {
				"TokenSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Hold_USDM_Token",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "swapSubstrateToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "swapToken",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "WhiteList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentHoldings",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ethToken",
									"type": "address"
								}
							],
							"name": "holdingOfTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "holdings",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "removeFromWhiteList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ethToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "swapTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "whilistedAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whiteList",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ethToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdrawBalanceTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Liberswap/swaping.sol\":234:3626  contract TokenSwap is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Liberswap/swaping.sol\":1250:1347  constructor(address initialOwner) Ownable(initialOwner)  {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Liberswap/swaping.sol\":1292:1304  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/Liberswap/swaping.sol\":1328:1340  initialOwner */\n  dup1\n    /* \"contracts/Liberswap/swaping.sol\":1317:1325  feeOwner */\n  0x01\n  0x00\n    /* \"contracts/Liberswap/swaping.sol\":1317:1340  feeOwner = initialOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Liberswap/swaping.sol\":1250:1347  constructor(address initialOwner) Ownable(initialOwner)  {... */\n  pop\n    /* \"contracts/Liberswap/swaping.sol\":234:3626  contract TokenSwap is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_37\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":932:1051   */\ntag_36:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_38\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1320   */\ntag_22:\n    /* \"#utility.yul\":1289:1313   */\n  tag_40\n    /* \"#utility.yul\":1307:1312   */\n  dup2\n    /* \"#utility.yul\":1289:1313   */\n  tag_19\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":1284:1287   */\n  dup3\n    /* \"#utility.yul\":1277:1314   */\n  mstore\n    /* \"#utility.yul\":1202:1320   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1326:1548   */\ntag_9:\n    /* \"#utility.yul\":1419:1423   */\n  0x00\n    /* \"#utility.yul\":1457:1459   */\n  0x20\n    /* \"#utility.yul\":1446:1455   */\n  dup3\n    /* \"#utility.yul\":1442:1460   */\n  add\n    /* \"#utility.yul\":1434:1460   */\n  swap1\n  pop\n    /* \"#utility.yul\":1470:1541   */\n  tag_42\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1527:1536   */\n  dup4\n    /* \"#utility.yul\":1523:1540   */\n  add\n    /* \"#utility.yul\":1514:1520   */\n  dup5\n    /* \"#utility.yul\":1470:1541   */\n  tag_22\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1326:1548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Liberswap/swaping.sol\":234:3626  contract TokenSwap is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Liberswap/swaping.sol\":234:3626  contract TokenSwap is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9c2c67c9\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xb9818be1\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xb9818be1\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xe1ad418e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf09f0aac\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x9c2c67c9\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa114398d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa4329677\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x01bf6648\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x372c12b1\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4f1bd9ca\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6bc20157\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Liberswap/swaping.sol\":3110:3284  function removeFromWhiteList(address _address) public onlyOwner{... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      stop\n        /* \"contracts/Liberswap/swaping.sol\":1081:1122  mapping(address => bool) public whiteList */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Liberswap/swaping.sol\":2902:3104  function withdrawBalanceTokens(address _ethToken,uint256 _amount) public onlyOwner{... */\n    tag_5:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contracts/Liberswap/swaping.sol\":1353:1568  function WhiteList(address _address) public onlyOwner{... */\n    tag_6:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_32:\n      tag_33\n      jump\t// in\n    tag_31:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_8:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Liberswap/swaping.sol\":1216:1243  uint public currentHoldings */\n    tag_9:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Liberswap/swaping.sol\":1574:2897  function swapTokens(address _ethToken,uint256 _amount) public {... */\n    tag_10:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"contracts/Liberswap/swaping.sol\":3291:3436  function holdingOfTokens(address _ethToken) public view returns (uint holdings){... */\n    tag_11:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Liberswap/swaping.sol\":302:325  address public feeOwner */\n    tag_12:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Liberswap/swaping.sol\":1167:1210  mapping (address => uint) public userAmount */\n    tag_13:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Liberswap/swaping.sol\":1128:1161  address[] public whilistedAddress */\n    tag_14:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/Liberswap/swaping.sol\":3110:3284  function removeFromWhiteList(address _address) public onlyOwner{... */\n    tag_21:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_67\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_67:\n        /* \"contracts/Liberswap/swaping.sol\":3191:3200  whiteList */\n      0x02\n        /* \"contracts/Liberswap/swaping.sol\":3191:3210  whiteList[_address] */\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":3201:3209  _address */\n      dup3\n        /* \"contracts/Liberswap/swaping.sol\":3191:3210  whiteList[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Liberswap/swaping.sol\":3183:3240  require(whiteList[_address],\"This Address is not exist!\") */\n      tag_70\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_71\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_70:\n        /* \"contracts/Liberswap/swaping.sol\":3272:3277  false */\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":3250:3259  whiteList */\n      0x02\n        /* \"contracts/Liberswap/swaping.sol\":3250:3269  whiteList[_address] */\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":3260:3268  _address */\n      dup4\n        /* \"contracts/Liberswap/swaping.sol\":3250:3269  whiteList[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":3250:3277  whiteList[_address] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":3110:3284  function removeFromWhiteList(address _address) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/swaping.sol\":1081:1122  mapping(address => bool) public whiteList */\n    tag_24:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Liberswap/swaping.sol\":2902:3104  function withdrawBalanceTokens(address _ethToken,uint256 _amount) public onlyOwner{... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_74\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_74:\n        /* \"contracts/Liberswap/swaping.sol\":2994:3044  IERC20(_ethToken).safeTransfer(msg.sender,_amount) */\n      tag_76\n        /* \"contracts/Liberswap/swaping.sol\":3025:3035  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":3036:3043  _amount */\n      dup3\n        /* \"contracts/Liberswap/swaping.sol\":3001:3010  _ethToken */\n      dup5\n        /* \"contracts/Liberswap/swaping.sol\":2994:3024  IERC20(_ethToken).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_77\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":2994:3044  IERC20(_ethToken).safeTransfer(msg.sender,_amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_76:\n        /* \"contracts/Liberswap/swaping.sol\":3059:3097  swapSubstrateToken(msg.sender,_amount) */\n      0x92ba58c57c335232a5e63d6dbabcefcee8074c3d8909bc7f8e63dd6e434b280d\n        /* \"contracts/Liberswap/swaping.sol\":3078:3088  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":3089:3096  _amount */\n      dup3\n        /* \"contracts/Liberswap/swaping.sol\":3059:3097  swapSubstrateToken(msg.sender,_amount) */\n      mload(0x40)\n      tag_78\n      swap3\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Liberswap/swaping.sol\":2902:3104  function withdrawBalanceTokens(address _ethToken,uint256 _amount) public onlyOwner{... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/swaping.sol\":1353:1568  function WhiteList(address _address) public onlyOwner{... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_81:\n        /* \"contracts/Liberswap/swaping.sol\":1425:1434  whiteList */\n      0x02\n        /* \"contracts/Liberswap/swaping.sol\":1425:1444  whiteList[_address] */\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":1435:1443  _address */\n      dup3\n        /* \"contracts/Liberswap/swaping.sol\":1425:1444  whiteList[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Liberswap/swaping.sol\":1424:1444  !whiteList[_address] */\n      iszero\n        /* \"contracts/Liberswap/swaping.sol\":1416:1484  require(!whiteList[_address],\"This Address is already WhiteListed!\") */\n      tag_83\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_84\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_83:\n        /* \"contracts/Liberswap/swaping.sol\":1494:1510  whilistedAddress */\n      0x03\n        /* \"contracts/Liberswap/swaping.sol\":1516:1524  _address */\n      dup2\n        /* \"contracts/Liberswap/swaping.sol\":1494:1525  whilistedAddress.push(_address) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":1557:1561  true */\n      0x01\n        /* \"contracts/Liberswap/swaping.sol\":1535:1544  whiteList */\n      0x02\n        /* \"contracts/Liberswap/swaping.sol\":1535:1554  whiteList[_address] */\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":1545:1553  _address */\n      dup4\n        /* \"contracts/Liberswap/swaping.sol\":1535:1554  whiteList[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":1535:1561  whiteList[_address] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":1353:1568  function WhiteList(address _address) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_88\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Liberswap/swaping.sol\":1216:1243  uint public currentHoldings */\n    tag_41:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/Liberswap/swaping.sol\":1574:2897  function swapTokens(address _ethToken,uint256 _amount) public {... */\n    tag_46:\n        /* \"contracts/Liberswap/swaping.sol\":733:775  0xe9A05AFaC6e76749462f6537Fed148F34A92c0f7 */\n      0xe9a05afac6e76749462f6537fed148f34a92c0f7\n        /* \"contracts/Liberswap/swaping.sol\":1654:1671  _ethToken == usdm */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Liberswap/swaping.sol\":1654:1663  _ethToken */\n      dup3\n        /* \"contracts/Liberswap/swaping.sol\":1654:1671  _ethToken == usdm */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Liberswap/swaping.sol\":1654:1692  _ethToken == usdm || _ethToken == usdc */\n      dup1\n      tag_94\n      jumpi\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":590:632  0x07B25CC8082ABc65C70b9e5f00b7f3b8FcF6814B */\n      0x07b25cc8082abc65c70b9e5f00b7f3b8fcf6814b\n        /* \"contracts/Liberswap/swaping.sol\":1675:1692  _ethToken == usdc */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Liberswap/swaping.sol\":1675:1684  _ethToken */\n      dup3\n        /* \"contracts/Liberswap/swaping.sol\":1675:1692  _ethToken == usdc */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Liberswap/swaping.sol\":1654:1692  _ethToken == usdm || _ethToken == usdc */\n    tag_94:\n        /* \"contracts/Liberswap/swaping.sol\":1654:1712  _ethToken == usdm || _ethToken == usdc || _ethToken == dai */\n      dup1\n      tag_95\n      jumpi\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":661:703  0x2DF4FAecE2eA8b8FB5eFa8e022eDec520c2f0FA4 */\n      0x2df4faece2ea8b8fb5efa8e022edec520c2f0fa4\n        /* \"contracts/Liberswap/swaping.sol\":1696:1712  _ethToken == dai */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Liberswap/swaping.sol\":1696:1705  _ethToken */\n      dup3\n        /* \"contracts/Liberswap/swaping.sol\":1696:1712  _ethToken == dai */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Liberswap/swaping.sol\":1654:1712  _ethToken == usdm || _ethToken == usdc || _ethToken == dai */\n    tag_95:\n        /* \"contracts/Liberswap/swaping.sol\":1654:1733  _ethToken == usdm || _ethToken == usdc || _ethToken == dai || _ethToken == usdt */\n      dup1\n      tag_96\n      jumpi\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":518:560  0x1059dc58FeE94Fd0caF8A5c9a9b936843F0c5329 */\n      0x1059dc58fee94fd0caf8a5c9a9b936843f0c5329\n        /* \"contracts/Liberswap/swaping.sol\":1716:1733  _ethToken == usdt */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Liberswap/swaping.sol\":1716:1725  _ethToken */\n      dup3\n        /* \"contracts/Liberswap/swaping.sol\":1716:1733  _ethToken == usdt */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Liberswap/swaping.sol\":1654:1733  _ethToken == usdm || _ethToken == usdc || _ethToken == dai || _ethToken == usdt */\n    tag_96:\n        /* \"contracts/Liberswap/swaping.sol\":1646:1776  require(_ethToken == usdm || _ethToken == usdc || _ethToken == dai || _ethToken == usdt,\"Accept only (USDM,DIA,USDT,USDC) Tokens\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"contracts/Liberswap/swaping.sol\":1852:1859  _amount */\n      dup1\n        /* \"contracts/Liberswap/swaping.sol\":1801:1810  _ethToken */\n      dup3\n        /* \"contracts/Liberswap/swaping.sol\":1794:1821  IERC20(_ethToken).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contracts/Liberswap/swaping.sol\":1822:1832  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":1842:1846  this */\n      address\n        /* \"contracts/Liberswap/swaping.sol\":1794:1848  IERC20(_ethToken).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap3\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"contracts/Liberswap/swaping.sol\":1794:1859  IERC20(_ethToken).allowance(msg.sender, address(this)) >= _amount */\n      lt\n      iszero\n        /* \"contracts/Liberswap/swaping.sol\":1786:1881  require(IERC20(_ethToken).allowance(msg.sender, address(this)) >= _amount, \"Allowance not set\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"contracts/Liberswap/swaping.sol\":1942:1949  _amount */\n      dup1\n        /* \"contracts/Liberswap/swaping.sol\":1906:1915  _ethToken */\n      dup3\n        /* \"contracts/Liberswap/swaping.sol\":1899:1926  IERC20(_ethToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Liberswap/swaping.sol\":1927:1937  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":1899:1938  IERC20(_ethToken).balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_109:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_112:\n        /* \"contracts/Liberswap/swaping.sol\":1899:1949  IERC20(_ethToken).balanceOf(msg.sender) >= _amount */\n      lt\n      iszero\n        /* \"contracts/Liberswap/swaping.sol\":1891:1974  require(IERC20(_ethToken).balanceOf(msg.sender) >= _amount, \"Insufficient balance\") */\n      tag_113\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_113:\n        /* \"contracts/Liberswap/swaping.sol\":733:775  0xe9A05AFaC6e76749462f6537Fed148F34A92c0f7 */\n      0xe9a05afac6e76749462f6537fed148f34a92c0f7\n        /* \"contracts/Liberswap/swaping.sol\":1988:2005  _ethToken == usdm */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Liberswap/swaping.sol\":1988:1997  _ethToken */\n      dup3\n        /* \"contracts/Liberswap/swaping.sol\":1988:2005  _ethToken == usdm */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Liberswap/swaping.sol\":1985:2838  if(_ethToken == usdm){... */\n      tag_116\n      jumpi\n        /* \"contracts/Liberswap/swaping.sol\":2027:2036  _ethToken */\n      dup2\n        /* \"contracts/Liberswap/swaping.sol\":2020:2050  IERC20(_ethToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Liberswap/swaping.sol\":2051:2061  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":2071:2075  this */\n      address\n        /* \"contracts/Liberswap/swaping.sol\":2079:2086  _amount */\n      dup5\n        /* \"contracts/Liberswap/swaping.sol\":2020:2088  IERC20(_ethToken).transferFrom(msg.sender, address(this), (_amount)) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":2122:2129  _amount */\n      dup1\n        /* \"contracts/Liberswap/swaping.sol\":2102:2117  currentHoldings */\n      0x05\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":2102:2130  currentHoldings += (_amount) */\n      dup3\n      dup3\n      sload\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":2169:2176  _amount */\n      dup1\n        /* \"contracts/Liberswap/swaping.sol\":2144:2154  userAmount */\n      0x04\n        /* \"contracts/Liberswap/swaping.sol\":2144:2166  userAmount[msg.sender] */\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":2155:2165  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":2144:2166  userAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Liberswap/swaping.sol\":2144:2176  userAmount[msg.sender] = _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":2195:2224  swapToken(msg.sender,_amount) */\n      0xcc87ab2abfe87b272af9b77691e40b3d9186a0431f3d41a8e06d39614f460722\n        /* \"contracts/Liberswap/swaping.sol\":2205:2215  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":2216:2223  _amount */\n      dup3\n        /* \"contracts/Liberswap/swaping.sol\":2195:2224  swapToken(msg.sender,_amount) */\n      mload(0x40)\n      tag_125\n      swap3\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Liberswap/swaping.sol\":1985:2838  if(_ethToken == usdm){... */\n      jump(tag_126)\n    tag_116:\n        /* \"contracts/Liberswap/swaping.sol\":2262:2276  uint FeeAmount */\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":2291:2295  1000 */\n      0x03e8\n        /* \"contracts/Liberswap/swaping.sol\":2288:2289  3 */\n      0x03\n        /* \"contracts/Liberswap/swaping.sol\":2280:2287  _amount */\n      dup4\n        /* \"contracts/Liberswap/swaping.sol\":2280:2289  _amount*3 */\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"contracts/Liberswap/swaping.sol\":2279:2295  (_amount*3)/1000 */\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n        /* \"contracts/Liberswap/swaping.sol\":2262:2295  uint FeeAmount = (_amount*3)/1000 */\n      swap1\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":2309:2336  uint eachWhilitedAddressFee */\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":2349:2365  whilistedAddress */\n      0x03\n        /* \"contracts/Liberswap/swaping.sol\":2349:2372  whilistedAddress.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":2339:2348  FeeAmount */\n      dup3\n        /* \"contracts/Liberswap/swaping.sol\":2339:2372  FeeAmount/whilistedAddress.length */\n      tag_131\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_131:\n        /* \"contracts/Liberswap/swaping.sol\":2309:2372  uint eachWhilitedAddressFee = FeeAmount/whilistedAddress.length */\n      swap1\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":2391:2397  uint i */\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":2386:2566  for (uint i=0; i<whilistedAddress.length; i++) ... */\n    tag_132:\n        /* \"contracts/Liberswap/swaping.sol\":2403:2419  whilistedAddress */\n      0x03\n        /* \"contracts/Liberswap/swaping.sol\":2403:2426  whilistedAddress.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":2401:2402  i */\n      dup2\n        /* \"contracts/Liberswap/swaping.sol\":2401:2426  i<whilistedAddress.length */\n      lt\n        /* \"contracts/Liberswap/swaping.sol\":2386:2566  for (uint i=0; i<whilistedAddress.length; i++) ... */\n      iszero\n      tag_133\n      jumpi\n        /* \"contracts/Liberswap/swaping.sol\":2471:2480  _ethToken */\n      dup5\n        /* \"contracts/Liberswap/swaping.sol\":2464:2494  IERC20(_ethToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Liberswap/swaping.sol\":2495:2505  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":2507:2523  whilistedAddress */\n      0x03\n        /* \"contracts/Liberswap/swaping.sol\":2524:2525  i */\n      dup5\n        /* \"contracts/Liberswap/swaping.sol\":2507:2526  whilistedAddress[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_135\n      jumpi\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n    tag_135:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Liberswap/swaping.sol\":2528:2550  eachWhilitedAddressFee */\n      dup6\n        /* \"contracts/Liberswap/swaping.sol\":2464:2551  IERC20(_ethToken).transferFrom(msg.sender, whilistedAddress[i], eachWhilitedAddressFee) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_139:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_142:\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":2428:2431  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":2386:2566  for (uint i=0; i<whilistedAddress.length; i++) ... */\n      jump(tag_132)\n    tag_133:\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":2586:2595  _ethToken */\n      dup4\n        /* \"contracts/Liberswap/swaping.sol\":2579:2609  IERC20(_ethToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Liberswap/swaping.sol\":2610:2620  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":2630:2634  this */\n      address\n        /* \"contracts/Liberswap/swaping.sol\":2646:2655  FeeAmount */\n      dup6\n        /* \"contracts/Liberswap/swaping.sol\":2638:2645  _amount */\n      dup8\n        /* \"contracts/Liberswap/swaping.sol\":2638:2655  _amount-FeeAmount */\n      tag_143\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n        /* \"contracts/Liberswap/swaping.sol\":2579:2657  IERC20(_ethToken).transferFrom(msg.sender, address(this), (_amount-FeeAmount)) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_145:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_147\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_148:\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":2699:2708  FeeAmount */\n      dup2\n        /* \"contracts/Liberswap/swaping.sol\":2691:2698  _amount */\n      dup4\n        /* \"contracts/Liberswap/swaping.sol\":2691:2708  _amount-FeeAmount */\n      tag_149\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_149:\n        /* \"contracts/Liberswap/swaping.sol\":2671:2686  currentHoldings */\n      0x05\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":2671:2709  currentHoldings += (_amount-FeeAmount) */\n      dup3\n      dup3\n      sload\n      tag_150\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_150:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":2757:2766  FeeAmount */\n      dup2\n        /* \"contracts/Liberswap/swaping.sol\":2749:2756  _amount */\n      dup4\n        /* \"contracts/Liberswap/swaping.sol\":2749:2766  _amount-FeeAmount */\n      tag_151\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_151:\n        /* \"contracts/Liberswap/swaping.sol\":2723:2733  userAmount */\n      0x04\n        /* \"contracts/Liberswap/swaping.sol\":2723:2745  userAmount[msg.sender] */\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":2734:2744  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":2723:2745  userAmount[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Liberswap/swaping.sol\":2723:2767  userAmount[msg.sender] = (_amount-FeeAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":2786:2827  swapToken(msg.sender,(_amount-FeeAmount)) */\n      0xcc87ab2abfe87b272af9b77691e40b3d9186a0431f3d41a8e06d39614f460722\n        /* \"contracts/Liberswap/swaping.sol\":2796:2806  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":2816:2825  FeeAmount */\n      dup4\n        /* \"contracts/Liberswap/swaping.sol\":2808:2815  _amount */\n      dup6\n        /* \"contracts/Liberswap/swaping.sol\":2808:2825  _amount-FeeAmount */\n      tag_152\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_152:\n        /* \"contracts/Liberswap/swaping.sol\":2786:2827  swapToken(msg.sender,(_amount-FeeAmount)) */\n      mload(0x40)\n      tag_153\n      swap3\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Liberswap/swaping.sol\":2248:2838  {... */\n      pop\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":1985:2838  if(_ethToken == usdm){... */\n    tag_126:\n        /* \"contracts/Liberswap/swaping.sol\":1574:2897  function swapTokens(address _ethToken,uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/swaping.sol\":3291:3436  function holdingOfTokens(address _ethToken) public view returns (uint holdings){... */\n    tag_49:\n        /* \"contracts/Liberswap/swaping.sol\":3356:3369  uint holdings */\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":3394:3403  _ethToken */\n      dup2\n        /* \"contracts/Liberswap/swaping.sol\":3387:3414  IERC20(_ethToken).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Liberswap/swaping.sol\":3423:3427  this */\n      address\n        /* \"contracts/Liberswap/swaping.sol\":3387:3429  IERC20(_ethToken).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_155\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_155:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_158:\n        /* \"contracts/Liberswap/swaping.sol\":3380:3429  return IERC20(_ethToken).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":3291:3436  function holdingOfTokens(address _ethToken) public view returns (uint holdings){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/swaping.sol\":302:325  address public feeOwner */\n    tag_52:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Liberswap/swaping.sol\":1167:1210  mapping (address => uint) public userAmount */\n    tag_56:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Liberswap/swaping.sol\":1128:1161  address[] public whilistedAddress */\n    tag_61:\n      0x03\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_172\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_176\n      swap3\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_182\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_183\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_184\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_185\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_188\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_189\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_191\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_193\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_197\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_196)\n    tag_197:\n      0x60\n      swap2\n      pop\n    tag_196:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_198\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_199\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_199:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_201\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_202\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_203\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_204)\n    tag_201:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_205\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_205:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_206\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_200)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_200:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_212:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_214:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_215:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_251\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_214\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_216:\n        /* \"#utility.yul\":641:665   */\n      tag_253\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_215\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_254\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_254:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_217:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_256\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_216\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_20:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_259\n      tag_212\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":917:1036   */\n    tag_258:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_260\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_217\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_218:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1381   */\n    tag_219:\n        /* \"#utility.yul\":1353:1374   */\n      tag_263\n        /* \"#utility.yul\":1368:1373   */\n      dup2\n        /* \"#utility.yul\":1353:1374   */\n      tag_218\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":1348:1351   */\n      dup3\n        /* \"#utility.yul\":1341:1375   */\n      mstore\n        /* \"#utility.yul\":1272:1381   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1387:1597   */\n    tag_26:\n        /* \"#utility.yul\":1474:1478   */\n      0x00\n        /* \"#utility.yul\":1512:1514   */\n      0x20\n        /* \"#utility.yul\":1501:1510   */\n      dup3\n        /* \"#utility.yul\":1497:1515   */\n      add\n        /* \"#utility.yul\":1489:1515   */\n      swap1\n      pop\n        /* \"#utility.yul\":1525:1590   */\n      tag_265\n        /* \"#utility.yul\":1587:1588   */\n      0x00\n        /* \"#utility.yul\":1576:1585   */\n      dup4\n        /* \"#utility.yul\":1572:1589   */\n      add\n        /* \"#utility.yul\":1563:1569   */\n      dup5\n        /* \"#utility.yul\":1525:1590   */\n      tag_219\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":1387:1597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1603:1680   */\n    tag_220:\n        /* \"#utility.yul\":1640:1647   */\n      0x00\n        /* \"#utility.yul\":1669:1674   */\n      dup2\n        /* \"#utility.yul\":1658:1674   */\n      swap1\n      pop\n        /* \"#utility.yul\":1603:1680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1686:1808   */\n    tag_221:\n        /* \"#utility.yul\":1759:1783   */\n      tag_268\n        /* \"#utility.yul\":1777:1782   */\n      dup2\n        /* \"#utility.yul\":1759:1783   */\n      tag_220\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":1752:1757   */\n      dup2\n        /* \"#utility.yul\":1749:1784   */\n      eq\n        /* \"#utility.yul\":1739:1802   */\n      tag_269\n      jumpi\n        /* \"#utility.yul\":1798:1799   */\n      0x00\n        /* \"#utility.yul\":1795:1796   */\n      dup1\n        /* \"#utility.yul\":1788:1800   */\n      revert\n        /* \"#utility.yul\":1739:1802   */\n    tag_269:\n        /* \"#utility.yul\":1686:1808   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1814:1953   */\n    tag_222:\n        /* \"#utility.yul\":1860:1865   */\n      0x00\n        /* \"#utility.yul\":1898:1904   */\n      dup2\n        /* \"#utility.yul\":1885:1905   */\n      calldataload\n        /* \"#utility.yul\":1876:1905   */\n      swap1\n      pop\n        /* \"#utility.yul\":1914:1947   */\n      tag_271\n        /* \"#utility.yul\":1941:1946   */\n      dup2\n        /* \"#utility.yul\":1914:1947   */\n      tag_221\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":1814:1953   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1959:2433   */\n    tag_29:\n        /* \"#utility.yul\":2027:2033   */\n      0x00\n        /* \"#utility.yul\":2035:2041   */\n      dup1\n        /* \"#utility.yul\":2084:2086   */\n      0x40\n        /* \"#utility.yul\":2072:2081   */\n      dup4\n        /* \"#utility.yul\":2063:2070   */\n      dup6\n        /* \"#utility.yul\":2059:2082   */\n      sub\n        /* \"#utility.yul\":2055:2087   */\n      slt\n        /* \"#utility.yul\":2052:2171   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":2090:2169   */\n      tag_274\n      tag_212\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":2052:2171   */\n    tag_273:\n        /* \"#utility.yul\":2210:2211   */\n      0x00\n        /* \"#utility.yul\":2235:2288   */\n      tag_275\n        /* \"#utility.yul\":2280:2287   */\n      dup6\n        /* \"#utility.yul\":2271:2277   */\n      dup3\n        /* \"#utility.yul\":2260:2269   */\n      dup7\n        /* \"#utility.yul\":2256:2278   */\n      add\n        /* \"#utility.yul\":2235:2288   */\n      tag_217\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":2225:2288   */\n      swap3\n      pop\n        /* \"#utility.yul\":2181:2298   */\n      pop\n        /* \"#utility.yul\":2337:2339   */\n      0x20\n        /* \"#utility.yul\":2363:2416   */\n      tag_276\n        /* \"#utility.yul\":2408:2415   */\n      dup6\n        /* \"#utility.yul\":2399:2405   */\n      dup3\n        /* \"#utility.yul\":2388:2397   */\n      dup7\n        /* \"#utility.yul\":2384:2406   */\n      add\n        /* \"#utility.yul\":2363:2416   */\n      tag_222\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":2353:2416   */\n      swap2\n      pop\n        /* \"#utility.yul\":2308:2426   */\n      pop\n        /* \"#utility.yul\":1959:2433   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2439:2557   */\n    tag_223:\n        /* \"#utility.yul\":2526:2550   */\n      tag_278\n        /* \"#utility.yul\":2544:2549   */\n      dup2\n        /* \"#utility.yul\":2526:2550   */\n      tag_215\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":2521:2524   */\n      dup3\n        /* \"#utility.yul\":2514:2551   */\n      mstore\n        /* \"#utility.yul\":2439:2557   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2563:2785   */\n    tag_39:\n        /* \"#utility.yul\":2656:2660   */\n      0x00\n        /* \"#utility.yul\":2694:2696   */\n      0x20\n        /* \"#utility.yul\":2683:2692   */\n      dup3\n        /* \"#utility.yul\":2679:2697   */\n      add\n        /* \"#utility.yul\":2671:2697   */\n      swap1\n      pop\n        /* \"#utility.yul\":2707:2778   */\n      tag_280\n        /* \"#utility.yul\":2775:2776   */\n      0x00\n        /* \"#utility.yul\":2764:2773   */\n      dup4\n        /* \"#utility.yul\":2760:2777   */\n      add\n        /* \"#utility.yul\":2751:2757   */\n      dup5\n        /* \"#utility.yul\":2707:2778   */\n      tag_223\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":2563:2785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2791:2909   */\n    tag_224:\n        /* \"#utility.yul\":2878:2902   */\n      tag_282\n        /* \"#utility.yul\":2896:2901   */\n      dup2\n        /* \"#utility.yul\":2878:2902   */\n      tag_220\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":2873:2876   */\n      dup3\n        /* \"#utility.yul\":2866:2903   */\n      mstore\n        /* \"#utility.yul\":2791:2909   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2915:3137   */\n    tag_43:\n        /* \"#utility.yul\":3008:3012   */\n      0x00\n        /* \"#utility.yul\":3046:3048   */\n      0x20\n        /* \"#utility.yul\":3035:3044   */\n      dup3\n        /* \"#utility.yul\":3031:3049   */\n      add\n        /* \"#utility.yul\":3023:3049   */\n      swap1\n      pop\n        /* \"#utility.yul\":3059:3130   */\n      tag_284\n        /* \"#utility.yul\":3127:3128   */\n      0x00\n        /* \"#utility.yul\":3116:3125   */\n      dup4\n        /* \"#utility.yul\":3112:3129   */\n      add\n        /* \"#utility.yul\":3103:3109   */\n      dup5\n        /* \"#utility.yul\":3059:3130   */\n      tag_224\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":2915:3137   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3143:3472   */\n    tag_60:\n        /* \"#utility.yul\":3202:3208   */\n      0x00\n        /* \"#utility.yul\":3251:3253   */\n      0x20\n        /* \"#utility.yul\":3239:3248   */\n      dup3\n        /* \"#utility.yul\":3230:3237   */\n      dup5\n        /* \"#utility.yul\":3226:3249   */\n      sub\n        /* \"#utility.yul\":3222:3254   */\n      slt\n        /* \"#utility.yul\":3219:3338   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":3257:3336   */\n      tag_287\n      tag_212\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3219:3338   */\n    tag_286:\n        /* \"#utility.yul\":3377:3378   */\n      0x00\n        /* \"#utility.yul\":3402:3455   */\n      tag_288\n        /* \"#utility.yul\":3447:3454   */\n      dup5\n        /* \"#utility.yul\":3438:3444   */\n      dup3\n        /* \"#utility.yul\":3427:3436   */\n      dup6\n        /* \"#utility.yul\":3423:3445   */\n      add\n        /* \"#utility.yul\":3402:3455   */\n      tag_222\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":3392:3455   */\n      swap2\n      pop\n        /* \"#utility.yul\":3348:3465   */\n      pop\n        /* \"#utility.yul\":3143:3472   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3478:3647   */\n    tag_225:\n        /* \"#utility.yul\":3562:3573   */\n      0x00\n        /* \"#utility.yul\":3596:3602   */\n      dup3\n        /* \"#utility.yul\":3591:3594   */\n      dup3\n        /* \"#utility.yul\":3584:3603   */\n      mstore\n        /* \"#utility.yul\":3636:3640   */\n      0x20\n        /* \"#utility.yul\":3631:3634   */\n      dup3\n        /* \"#utility.yul\":3627:3641   */\n      add\n        /* \"#utility.yul\":3612:3641   */\n      swap1\n      pop\n        /* \"#utility.yul\":3478:3647   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3653:3829   */\n    tag_226:\n        /* \"#utility.yul\":3793:3821   */\n      0x546869732041646472657373206973206e6f7420657869737421000000000000\n        /* \"#utility.yul\":3789:3790   */\n      0x00\n        /* \"#utility.yul\":3781:3787   */\n      dup3\n        /* \"#utility.yul\":3777:3791   */\n      add\n        /* \"#utility.yul\":3770:3822   */\n      mstore\n        /* \"#utility.yul\":3653:3829   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3835:4201   */\n    tag_227:\n        /* \"#utility.yul\":3977:3980   */\n      0x00\n        /* \"#utility.yul\":3998:4065   */\n      tag_292\n        /* \"#utility.yul\":4062:4064   */\n      0x1a\n        /* \"#utility.yul\":4057:4060   */\n      dup4\n        /* \"#utility.yul\":3998:4065   */\n      tag_225\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":3991:4065   */\n      swap2\n      pop\n        /* \"#utility.yul\":4074:4167   */\n      tag_293\n        /* \"#utility.yul\":4163:4166   */\n      dup3\n        /* \"#utility.yul\":4074:4167   */\n      tag_226\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":4192:4194   */\n      0x20\n        /* \"#utility.yul\":4187:4190   */\n      dup3\n        /* \"#utility.yul\":4183:4195   */\n      add\n        /* \"#utility.yul\":4176:4195   */\n      swap1\n      pop\n        /* \"#utility.yul\":3835:4201   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4207:4626   */\n    tag_72:\n        /* \"#utility.yul\":4373:4377   */\n      0x00\n        /* \"#utility.yul\":4411:4413   */\n      0x20\n        /* \"#utility.yul\":4400:4409   */\n      dup3\n        /* \"#utility.yul\":4396:4414   */\n      add\n        /* \"#utility.yul\":4388:4414   */\n      swap1\n      pop\n        /* \"#utility.yul\":4460:4469   */\n      dup2\n        /* \"#utility.yul\":4454:4458   */\n      dup2\n        /* \"#utility.yul\":4450:4470   */\n      sub\n        /* \"#utility.yul\":4446:4447   */\n      0x00\n        /* \"#utility.yul\":4435:4444   */\n      dup4\n        /* \"#utility.yul\":4431:4448   */\n      add\n        /* \"#utility.yul\":4424:4471   */\n      mstore\n        /* \"#utility.yul\":4488:4619   */\n      tag_295\n        /* \"#utility.yul\":4614:4618   */\n      dup2\n        /* \"#utility.yul\":4488:4619   */\n      tag_227\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":4480:4619   */\n      swap1\n      pop\n        /* \"#utility.yul\":4207:4626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4632:4964   */\n    tag_79:\n        /* \"#utility.yul\":4753:4757   */\n      0x00\n        /* \"#utility.yul\":4791:4793   */\n      0x40\n        /* \"#utility.yul\":4780:4789   */\n      dup3\n        /* \"#utility.yul\":4776:4794   */\n      add\n        /* \"#utility.yul\":4768:4794   */\n      swap1\n      pop\n        /* \"#utility.yul\":4804:4875   */\n      tag_297\n        /* \"#utility.yul\":4872:4873   */\n      0x00\n        /* \"#utility.yul\":4861:4870   */\n      dup4\n        /* \"#utility.yul\":4857:4874   */\n      add\n        /* \"#utility.yul\":4848:4854   */\n      dup6\n        /* \"#utility.yul\":4804:4875   */\n      tag_223\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":4885:4957   */\n      tag_298\n        /* \"#utility.yul\":4953:4955   */\n      0x20\n        /* \"#utility.yul\":4942:4951   */\n      dup4\n        /* \"#utility.yul\":4938:4956   */\n      add\n        /* \"#utility.yul\":4929:4935   */\n      dup5\n        /* \"#utility.yul\":4885:4957   */\n      tag_224\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":4632:4964   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4970:5193   */\n    tag_228:\n        /* \"#utility.yul\":5110:5144   */\n      0x54686973204164647265737320697320616c72656164792057686974654c6973\n        /* \"#utility.yul\":5106:5107   */\n      0x00\n        /* \"#utility.yul\":5098:5104   */\n      dup3\n        /* \"#utility.yul\":5094:5108   */\n      add\n        /* \"#utility.yul\":5087:5145   */\n      mstore\n        /* \"#utility.yul\":5179:5185   */\n      0x7465642100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5174:5176   */\n      0x20\n        /* \"#utility.yul\":5166:5172   */\n      dup3\n        /* \"#utility.yul\":5162:5177   */\n      add\n        /* \"#utility.yul\":5155:5186   */\n      mstore\n        /* \"#utility.yul\":4970:5193   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5199:5565   */\n    tag_229:\n        /* \"#utility.yul\":5341:5344   */\n      0x00\n        /* \"#utility.yul\":5362:5429   */\n      tag_301\n        /* \"#utility.yul\":5426:5428   */\n      0x24\n        /* \"#utility.yul\":5421:5424   */\n      dup4\n        /* \"#utility.yul\":5362:5429   */\n      tag_225\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":5355:5429   */\n      swap2\n      pop\n        /* \"#utility.yul\":5438:5531   */\n      tag_302\n        /* \"#utility.yul\":5527:5530   */\n      dup3\n        /* \"#utility.yul\":5438:5531   */\n      tag_228\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":5556:5558   */\n      0x40\n        /* \"#utility.yul\":5551:5554   */\n      dup3\n        /* \"#utility.yul\":5547:5559   */\n      add\n        /* \"#utility.yul\":5540:5559   */\n      swap1\n      pop\n        /* \"#utility.yul\":5199:5565   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5571:5990   */\n    tag_85:\n        /* \"#utility.yul\":5737:5741   */\n      0x00\n        /* \"#utility.yul\":5775:5777   */\n      0x20\n        /* \"#utility.yul\":5764:5773   */\n      dup3\n        /* \"#utility.yul\":5760:5778   */\n      add\n        /* \"#utility.yul\":5752:5778   */\n      swap1\n      pop\n        /* \"#utility.yul\":5824:5833   */\n      dup2\n        /* \"#utility.yul\":5818:5822   */\n      dup2\n        /* \"#utility.yul\":5814:5834   */\n      sub\n        /* \"#utility.yul\":5810:5811   */\n      0x00\n        /* \"#utility.yul\":5799:5808   */\n      dup4\n        /* \"#utility.yul\":5795:5812   */\n      add\n        /* \"#utility.yul\":5788:5835   */\n      mstore\n        /* \"#utility.yul\":5852:5983   */\n      tag_304\n        /* \"#utility.yul\":5978:5982   */\n      dup2\n        /* \"#utility.yul\":5852:5983   */\n      tag_229\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":5844:5983   */\n      swap1\n      pop\n        /* \"#utility.yul\":5571:5990   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5996:6222   */\n    tag_230:\n        /* \"#utility.yul\":6136:6170   */\n      0x416363657074206f6e6c7920285553444d2c4449412c555344542c5553444329\n        /* \"#utility.yul\":6132:6133   */\n      0x00\n        /* \"#utility.yul\":6124:6130   */\n      dup3\n        /* \"#utility.yul\":6120:6134   */\n      add\n        /* \"#utility.yul\":6113:6171   */\n      mstore\n        /* \"#utility.yul\":6205:6214   */\n      0x20546f6b656e7300000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6200:6202   */\n      0x20\n        /* \"#utility.yul\":6192:6198   */\n      dup3\n        /* \"#utility.yul\":6188:6203   */\n      add\n        /* \"#utility.yul\":6181:6215   */\n      mstore\n        /* \"#utility.yul\":5996:6222   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6228:6594   */\n    tag_231:\n        /* \"#utility.yul\":6370:6373   */\n      0x00\n        /* \"#utility.yul\":6391:6458   */\n      tag_307\n        /* \"#utility.yul\":6455:6457   */\n      0x27\n        /* \"#utility.yul\":6450:6453   */\n      dup4\n        /* \"#utility.yul\":6391:6458   */\n      tag_225\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":6384:6458   */\n      swap2\n      pop\n        /* \"#utility.yul\":6467:6560   */\n      tag_308\n        /* \"#utility.yul\":6556:6559   */\n      dup3\n        /* \"#utility.yul\":6467:6560   */\n      tag_230\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6580:6583   */\n      dup3\n        /* \"#utility.yul\":6576:6588   */\n      add\n        /* \"#utility.yul\":6569:6588   */\n      swap1\n      pop\n        /* \"#utility.yul\":6228:6594   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6600:7019   */\n    tag_99:\n        /* \"#utility.yul\":6766:6770   */\n      0x00\n        /* \"#utility.yul\":6804:6806   */\n      0x20\n        /* \"#utility.yul\":6793:6802   */\n      dup3\n        /* \"#utility.yul\":6789:6807   */\n      add\n        /* \"#utility.yul\":6781:6807   */\n      swap1\n      pop\n        /* \"#utility.yul\":6853:6862   */\n      dup2\n        /* \"#utility.yul\":6847:6851   */\n      dup2\n        /* \"#utility.yul\":6843:6863   */\n      sub\n        /* \"#utility.yul\":6839:6840   */\n      0x00\n        /* \"#utility.yul\":6828:6837   */\n      dup4\n        /* \"#utility.yul\":6824:6841   */\n      add\n        /* \"#utility.yul\":6817:6864   */\n      mstore\n        /* \"#utility.yul\":6881:7012   */\n      tag_310\n        /* \"#utility.yul\":7007:7011   */\n      dup2\n        /* \"#utility.yul\":6881:7012   */\n      tag_231\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":6873:7012   */\n      swap1\n      pop\n        /* \"#utility.yul\":6600:7019   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7025:7357   */\n    tag_101:\n        /* \"#utility.yul\":7146:7150   */\n      0x00\n        /* \"#utility.yul\":7184:7186   */\n      0x40\n        /* \"#utility.yul\":7173:7182   */\n      dup3\n        /* \"#utility.yul\":7169:7187   */\n      add\n        /* \"#utility.yul\":7161:7187   */\n      swap1\n      pop\n        /* \"#utility.yul\":7197:7268   */\n      tag_312\n        /* \"#utility.yul\":7265:7266   */\n      0x00\n        /* \"#utility.yul\":7254:7263   */\n      dup4\n        /* \"#utility.yul\":7250:7267   */\n      add\n        /* \"#utility.yul\":7241:7247   */\n      dup6\n        /* \"#utility.yul\":7197:7268   */\n      tag_223\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":7278:7350   */\n      tag_313\n        /* \"#utility.yul\":7346:7348   */\n      0x20\n        /* \"#utility.yul\":7335:7344   */\n      dup4\n        /* \"#utility.yul\":7331:7349   */\n      add\n        /* \"#utility.yul\":7322:7328   */\n      dup5\n        /* \"#utility.yul\":7278:7350   */\n      tag_223\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":7025:7357   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7363:7506   */\n    tag_232:\n        /* \"#utility.yul\":7420:7425   */\n      0x00\n        /* \"#utility.yul\":7451:7457   */\n      dup2\n        /* \"#utility.yul\":7445:7458   */\n      mload\n        /* \"#utility.yul\":7436:7458   */\n      swap1\n      pop\n        /* \"#utility.yul\":7467:7500   */\n      tag_315\n        /* \"#utility.yul\":7494:7499   */\n      dup2\n        /* \"#utility.yul\":7467:7500   */\n      tag_221\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":7363:7506   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7512:7863   */\n    tag_105:\n        /* \"#utility.yul\":7582:7588   */\n      0x00\n        /* \"#utility.yul\":7631:7633   */\n      0x20\n        /* \"#utility.yul\":7619:7628   */\n      dup3\n        /* \"#utility.yul\":7610:7617   */\n      dup5\n        /* \"#utility.yul\":7606:7629   */\n      sub\n        /* \"#utility.yul\":7602:7634   */\n      slt\n        /* \"#utility.yul\":7599:7718   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":7637:7716   */\n      tag_318\n      tag_212\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":7599:7718   */\n    tag_317:\n        /* \"#utility.yul\":7757:7758   */\n      0x00\n        /* \"#utility.yul\":7782:7846   */\n      tag_319\n        /* \"#utility.yul\":7838:7845   */\n      dup5\n        /* \"#utility.yul\":7829:7835   */\n      dup3\n        /* \"#utility.yul\":7818:7827   */\n      dup6\n        /* \"#utility.yul\":7814:7836   */\n      add\n        /* \"#utility.yul\":7782:7846   */\n      tag_232\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":7772:7846   */\n      swap2\n      pop\n        /* \"#utility.yul\":7728:7856   */\n      pop\n        /* \"#utility.yul\":7512:7863   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7869:8036   */\n    tag_233:\n        /* \"#utility.yul\":8009:8028   */\n      0x416c6c6f77616e6365206e6f7420736574000000000000000000000000000000\n        /* \"#utility.yul\":8005:8006   */\n      0x00\n        /* \"#utility.yul\":7997:8003   */\n      dup3\n        /* \"#utility.yul\":7993:8007   */\n      add\n        /* \"#utility.yul\":7986:8029   */\n      mstore\n        /* \"#utility.yul\":7869:8036   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8042:8408   */\n    tag_234:\n        /* \"#utility.yul\":8184:8187   */\n      0x00\n        /* \"#utility.yul\":8205:8272   */\n      tag_322\n        /* \"#utility.yul\":8269:8271   */\n      0x11\n        /* \"#utility.yul\":8264:8267   */\n      dup4\n        /* \"#utility.yul\":8205:8272   */\n      tag_225\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":8198:8272   */\n      swap2\n      pop\n        /* \"#utility.yul\":8281:8374   */\n      tag_323\n        /* \"#utility.yul\":8370:8373   */\n      dup3\n        /* \"#utility.yul\":8281:8374   */\n      tag_233\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":8399:8401   */\n      0x20\n        /* \"#utility.yul\":8394:8397   */\n      dup3\n        /* \"#utility.yul\":8390:8402   */\n      add\n        /* \"#utility.yul\":8383:8402   */\n      swap1\n      pop\n        /* \"#utility.yul\":8042:8408   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8414:8833   */\n    tag_108:\n        /* \"#utility.yul\":8580:8584   */\n      0x00\n        /* \"#utility.yul\":8618:8620   */\n      0x20\n        /* \"#utility.yul\":8607:8616   */\n      dup3\n        /* \"#utility.yul\":8603:8621   */\n      add\n        /* \"#utility.yul\":8595:8621   */\n      swap1\n      pop\n        /* \"#utility.yul\":8667:8676   */\n      dup2\n        /* \"#utility.yul\":8661:8665   */\n      dup2\n        /* \"#utility.yul\":8657:8677   */\n      sub\n        /* \"#utility.yul\":8653:8654   */\n      0x00\n        /* \"#utility.yul\":8642:8651   */\n      dup4\n        /* \"#utility.yul\":8638:8655   */\n      add\n        /* \"#utility.yul\":8631:8678   */\n      mstore\n        /* \"#utility.yul\":8695:8826   */\n      tag_325\n        /* \"#utility.yul\":8821:8825   */\n      dup2\n        /* \"#utility.yul\":8695:8826   */\n      tag_234\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":8687:8826   */\n      swap1\n      pop\n        /* \"#utility.yul\":8414:8833   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8839:9009   */\n    tag_235:\n        /* \"#utility.yul\":8979:9001   */\n      0x496e73756666696369656e742062616c616e6365000000000000000000000000\n        /* \"#utility.yul\":8975:8976   */\n      0x00\n        /* \"#utility.yul\":8967:8973   */\n      dup3\n        /* \"#utility.yul\":8963:8977   */\n      add\n        /* \"#utility.yul\":8956:9002   */\n      mstore\n        /* \"#utility.yul\":8839:9009   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9015:9381   */\n    tag_236:\n        /* \"#utility.yul\":9157:9160   */\n      0x00\n        /* \"#utility.yul\":9178:9245   */\n      tag_328\n        /* \"#utility.yul\":9242:9244   */\n      0x14\n        /* \"#utility.yul\":9237:9240   */\n      dup4\n        /* \"#utility.yul\":9178:9245   */\n      tag_225\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":9171:9245   */\n      swap2\n      pop\n        /* \"#utility.yul\":9254:9347   */\n      tag_329\n        /* \"#utility.yul\":9343:9346   */\n      dup3\n        /* \"#utility.yul\":9254:9347   */\n      tag_235\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":9372:9374   */\n      0x20\n        /* \"#utility.yul\":9367:9370   */\n      dup3\n        /* \"#utility.yul\":9363:9375   */\n      add\n        /* \"#utility.yul\":9356:9375   */\n      swap1\n      pop\n        /* \"#utility.yul\":9015:9381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9387:9806   */\n    tag_115:\n        /* \"#utility.yul\":9553:9557   */\n      0x00\n        /* \"#utility.yul\":9591:9593   */\n      0x20\n        /* \"#utility.yul\":9580:9589   */\n      dup3\n        /* \"#utility.yul\":9576:9594   */\n      add\n        /* \"#utility.yul\":9568:9594   */\n      swap1\n      pop\n        /* \"#utility.yul\":9640:9649   */\n      dup2\n        /* \"#utility.yul\":9634:9638   */\n      dup2\n        /* \"#utility.yul\":9630:9650   */\n      sub\n        /* \"#utility.yul\":9626:9627   */\n      0x00\n        /* \"#utility.yul\":9615:9624   */\n      dup4\n        /* \"#utility.yul\":9611:9628   */\n      add\n        /* \"#utility.yul\":9604:9651   */\n      mstore\n        /* \"#utility.yul\":9668:9799   */\n      tag_331\n        /* \"#utility.yul\":9794:9798   */\n      dup2\n        /* \"#utility.yul\":9668:9799   */\n      tag_236\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":9660:9799   */\n      swap1\n      pop\n        /* \"#utility.yul\":9387:9806   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9812:10254   */\n    tag_118:\n        /* \"#utility.yul\":9961:9965   */\n      0x00\n        /* \"#utility.yul\":9999:10001   */\n      0x60\n        /* \"#utility.yul\":9988:9997   */\n      dup3\n        /* \"#utility.yul\":9984:10002   */\n      add\n        /* \"#utility.yul\":9976:10002   */\n      swap1\n      pop\n        /* \"#utility.yul\":10012:10083   */\n      tag_333\n        /* \"#utility.yul\":10080:10081   */\n      0x00\n        /* \"#utility.yul\":10069:10078   */\n      dup4\n        /* \"#utility.yul\":10065:10082   */\n      add\n        /* \"#utility.yul\":10056:10062   */\n      dup7\n        /* \"#utility.yul\":10012:10083   */\n      tag_223\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":10093:10165   */\n      tag_334\n        /* \"#utility.yul\":10161:10163   */\n      0x20\n        /* \"#utility.yul\":10150:10159   */\n      dup4\n        /* \"#utility.yul\":10146:10164   */\n      add\n        /* \"#utility.yul\":10137:10143   */\n      dup6\n        /* \"#utility.yul\":10093:10165   */\n      tag_223\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":10175:10247   */\n      tag_335\n        /* \"#utility.yul\":10243:10245   */\n      0x40\n        /* \"#utility.yul\":10232:10241   */\n      dup4\n        /* \"#utility.yul\":10228:10246   */\n      add\n        /* \"#utility.yul\":10219:10225   */\n      dup5\n        /* \"#utility.yul\":10175:10247   */\n      tag_224\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":9812:10254   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10260:10376   */\n    tag_237:\n        /* \"#utility.yul\":10330:10351   */\n      tag_337\n        /* \"#utility.yul\":10345:10350   */\n      dup2\n        /* \"#utility.yul\":10330:10351   */\n      tag_218\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":10323:10328   */\n      dup2\n        /* \"#utility.yul\":10320:10352   */\n      eq\n        /* \"#utility.yul\":10310:10370   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":10366:10367   */\n      0x00\n        /* \"#utility.yul\":10363:10364   */\n      dup1\n        /* \"#utility.yul\":10356:10368   */\n      revert\n        /* \"#utility.yul\":10310:10370   */\n    tag_338:\n        /* \"#utility.yul\":10260:10376   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10382:10519   */\n    tag_238:\n        /* \"#utility.yul\":10436:10441   */\n      0x00\n        /* \"#utility.yul\":10467:10473   */\n      dup2\n        /* \"#utility.yul\":10461:10474   */\n      mload\n        /* \"#utility.yul\":10452:10474   */\n      swap1\n      pop\n        /* \"#utility.yul\":10483:10513   */\n      tag_340\n        /* \"#utility.yul\":10507:10512   */\n      dup2\n        /* \"#utility.yul\":10483:10513   */\n      tag_237\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":10382:10519   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10525:10870   */\n    tag_122:\n        /* \"#utility.yul\":10592:10598   */\n      0x00\n        /* \"#utility.yul\":10641:10643   */\n      0x20\n        /* \"#utility.yul\":10629:10638   */\n      dup3\n        /* \"#utility.yul\":10620:10627   */\n      dup5\n        /* \"#utility.yul\":10616:10639   */\n      sub\n        /* \"#utility.yul\":10612:10644   */\n      slt\n        /* \"#utility.yul\":10609:10728   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":10647:10726   */\n      tag_343\n      tag_212\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":10609:10728   */\n    tag_342:\n        /* \"#utility.yul\":10767:10768   */\n      0x00\n        /* \"#utility.yul\":10792:10853   */\n      tag_344\n        /* \"#utility.yul\":10845:10852   */\n      dup5\n        /* \"#utility.yul\":10836:10842   */\n      dup3\n        /* \"#utility.yul\":10825:10834   */\n      dup6\n        /* \"#utility.yul\":10821:10843   */\n      add\n        /* \"#utility.yul\":10792:10853   */\n      tag_238\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":10782:10853   */\n      swap2\n      pop\n        /* \"#utility.yul\":10738:10863   */\n      pop\n        /* \"#utility.yul\":10525:10870   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10876:11056   */\n    tag_239:\n        /* \"#utility.yul\":10924:11001   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10921:10922   */\n      0x00\n        /* \"#utility.yul\":10914:11002   */\n      mstore\n        /* \"#utility.yul\":11021:11025   */\n      0x11\n        /* \"#utility.yul\":11018:11019   */\n      0x04\n        /* \"#utility.yul\":11011:11026   */\n      mstore\n        /* \"#utility.yul\":11045:11049   */\n      0x24\n        /* \"#utility.yul\":11042:11043   */\n      0x00\n        /* \"#utility.yul\":11035:11050   */\n      revert\n        /* \"#utility.yul\":11062:11253   */\n    tag_124:\n        /* \"#utility.yul\":11102:11105   */\n      0x00\n        /* \"#utility.yul\":11121:11141   */\n      tag_347\n        /* \"#utility.yul\":11139:11140   */\n      dup3\n        /* \"#utility.yul\":11121:11141   */\n      tag_220\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":11116:11141   */\n      swap2\n      pop\n        /* \"#utility.yul\":11155:11175   */\n      tag_348\n        /* \"#utility.yul\":11173:11174   */\n      dup4\n        /* \"#utility.yul\":11155:11175   */\n      tag_220\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":11150:11175   */\n      swap3\n      pop\n        /* \"#utility.yul\":11198:11199   */\n      dup3\n        /* \"#utility.yul\":11195:11196   */\n      dup3\n        /* \"#utility.yul\":11191:11200   */\n      add\n        /* \"#utility.yul\":11184:11200   */\n      swap1\n      pop\n        /* \"#utility.yul\":11219:11222   */\n      dup1\n        /* \"#utility.yul\":11216:11217   */\n      dup3\n        /* \"#utility.yul\":11213:11223   */\n      gt\n        /* \"#utility.yul\":11210:11246   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":11226:11244   */\n      tag_350\n      tag_239\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":11210:11246   */\n    tag_349:\n        /* \"#utility.yul\":11062:11253   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11259:11669   */\n    tag_128:\n        /* \"#utility.yul\":11299:11306   */\n      0x00\n        /* \"#utility.yul\":11322:11342   */\n      tag_352\n        /* \"#utility.yul\":11340:11341   */\n      dup3\n        /* \"#utility.yul\":11322:11342   */\n      tag_220\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":11317:11342   */\n      swap2\n      pop\n        /* \"#utility.yul\":11356:11376   */\n      tag_353\n        /* \"#utility.yul\":11374:11375   */\n      dup4\n        /* \"#utility.yul\":11356:11376   */\n      tag_220\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":11351:11376   */\n      swap3\n      pop\n        /* \"#utility.yul\":11411:11412   */\n      dup3\n        /* \"#utility.yul\":11408:11409   */\n      dup3\n        /* \"#utility.yul\":11404:11413   */\n      mul\n        /* \"#utility.yul\":11433:11463   */\n      tag_354\n        /* \"#utility.yul\":11451:11462   */\n      dup2\n        /* \"#utility.yul\":11433:11463   */\n      tag_220\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":11422:11463   */\n      swap2\n      pop\n        /* \"#utility.yul\":11612:11613   */\n      dup3\n        /* \"#utility.yul\":11603:11610   */\n      dup3\n        /* \"#utility.yul\":11599:11614   */\n      div\n        /* \"#utility.yul\":11596:11597   */\n      dup5\n        /* \"#utility.yul\":11593:11615   */\n      eq\n        /* \"#utility.yul\":11573:11574   */\n      dup4\n        /* \"#utility.yul\":11566:11575   */\n      iszero\n        /* \"#utility.yul\":11546:11629   */\n      or\n        /* \"#utility.yul\":11523:11662   */\n      tag_355\n      jumpi\n        /* \"#utility.yul\":11642:11660   */\n      tag_356\n      tag_239\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":11523:11662   */\n    tag_355:\n        /* \"#utility.yul\":11307:11669   */\n      pop\n        /* \"#utility.yul\":11259:11669   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11675:11855   */\n    tag_240:\n        /* \"#utility.yul\":11723:11800   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11720:11721   */\n      0x00\n        /* \"#utility.yul\":11713:11801   */\n      mstore\n        /* \"#utility.yul\":11820:11824   */\n      0x12\n        /* \"#utility.yul\":11817:11818   */\n      0x04\n        /* \"#utility.yul\":11810:11825   */\n      mstore\n        /* \"#utility.yul\":11844:11848   */\n      0x24\n        /* \"#utility.yul\":11841:11842   */\n      0x00\n        /* \"#utility.yul\":11834:11849   */\n      revert\n        /* \"#utility.yul\":11861:12046   */\n    tag_130:\n        /* \"#utility.yul\":11901:11902   */\n      0x00\n        /* \"#utility.yul\":11918:11938   */\n      tag_359\n        /* \"#utility.yul\":11936:11937   */\n      dup3\n        /* \"#utility.yul\":11918:11938   */\n      tag_220\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":11913:11938   */\n      swap2\n      pop\n        /* \"#utility.yul\":11952:11972   */\n      tag_360\n        /* \"#utility.yul\":11970:11971   */\n      dup4\n        /* \"#utility.yul\":11952:11972   */\n      tag_220\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":11947:11972   */\n      swap3\n      pop\n        /* \"#utility.yul\":11991:11992   */\n      dup3\n        /* \"#utility.yul\":11981:12016   */\n      tag_361\n      jumpi\n        /* \"#utility.yul\":11996:12014   */\n      tag_362\n      tag_240\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":11981:12016   */\n    tag_361:\n        /* \"#utility.yul\":12038:12039   */\n      dup3\n        /* \"#utility.yul\":12035:12036   */\n      dup3\n        /* \"#utility.yul\":12031:12040   */\n      div\n        /* \"#utility.yul\":12026:12040   */\n      swap1\n      pop\n        /* \"#utility.yul\":11861:12046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12052:12232   */\n    tag_137:\n        /* \"#utility.yul\":12100:12177   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12097:12098   */\n      0x00\n        /* \"#utility.yul\":12090:12178   */\n      mstore\n        /* \"#utility.yul\":12197:12201   */\n      0x32\n        /* \"#utility.yul\":12194:12195   */\n      0x04\n        /* \"#utility.yul\":12187:12202   */\n      mstore\n        /* \"#utility.yul\":12221:12225   */\n      0x24\n        /* \"#utility.yul\":12218:12219   */\n      0x00\n        /* \"#utility.yul\":12211:12226   */\n      revert\n        /* \"#utility.yul\":12238:12432   */\n    tag_144:\n        /* \"#utility.yul\":12278:12282   */\n      0x00\n        /* \"#utility.yul\":12298:12318   */\n      tag_365\n        /* \"#utility.yul\":12316:12317   */\n      dup3\n        /* \"#utility.yul\":12298:12318   */\n      tag_220\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":12293:12318   */\n      swap2\n      pop\n        /* \"#utility.yul\":12332:12352   */\n      tag_366\n        /* \"#utility.yul\":12350:12351   */\n      dup4\n        /* \"#utility.yul\":12332:12352   */\n      tag_220\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":12327:12352   */\n      swap3\n      pop\n        /* \"#utility.yul\":12376:12377   */\n      dup3\n        /* \"#utility.yul\":12373:12374   */\n      dup3\n        /* \"#utility.yul\":12369:12378   */\n      sub\n        /* \"#utility.yul\":12361:12378   */\n      swap1\n      pop\n        /* \"#utility.yul\":12400:12401   */\n      dup2\n        /* \"#utility.yul\":12394:12398   */\n      dup2\n        /* \"#utility.yul\":12391:12402   */\n      gt\n        /* \"#utility.yul\":12388:12425   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":12405:12423   */\n      tag_368\n      tag_239\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":12388:12425   */\n    tag_367:\n        /* \"#utility.yul\":12238:12432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12438:12536   */\n    tag_241:\n        /* \"#utility.yul\":12489:12495   */\n      0x00\n        /* \"#utility.yul\":12523:12528   */\n      dup2\n        /* \"#utility.yul\":12517:12529   */\n      mload\n        /* \"#utility.yul\":12507:12529   */\n      swap1\n      pop\n        /* \"#utility.yul\":12438:12536   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12542:12689   */\n    tag_242:\n        /* \"#utility.yul\":12643:12654   */\n      0x00\n        /* \"#utility.yul\":12680:12683   */\n      dup2\n        /* \"#utility.yul\":12665:12683   */\n      swap1\n      pop\n        /* \"#utility.yul\":12542:12689   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12695:12941   */\n    tag_243:\n        /* \"#utility.yul\":12776:12777   */\n      0x00\n        /* \"#utility.yul\":12786:12899   */\n    tag_372:\n        /* \"#utility.yul\":12800:12806   */\n      dup4\n        /* \"#utility.yul\":12797:12798   */\n      dup2\n        /* \"#utility.yul\":12794:12807   */\n      lt\n        /* \"#utility.yul\":12786:12899   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":12885:12886   */\n      dup1\n        /* \"#utility.yul\":12880:12883   */\n      dup3\n        /* \"#utility.yul\":12876:12887   */\n      add\n        /* \"#utility.yul\":12870:12888   */\n      mload\n        /* \"#utility.yul\":12866:12867   */\n      dup2\n        /* \"#utility.yul\":12861:12864   */\n      dup5\n        /* \"#utility.yul\":12857:12868   */\n      add\n        /* \"#utility.yul\":12850:12889   */\n      mstore\n        /* \"#utility.yul\":12822:12824   */\n      0x20\n        /* \"#utility.yul\":12819:12820   */\n      dup2\n        /* \"#utility.yul\":12815:12825   */\n      add\n        /* \"#utility.yul\":12810:12825   */\n      swap1\n      pop\n        /* \"#utility.yul\":12786:12899   */\n      jump(tag_372)\n    tag_374:\n        /* \"#utility.yul\":12933:12934   */\n      0x00\n        /* \"#utility.yul\":12924:12930   */\n      dup5\n        /* \"#utility.yul\":12919:12922   */\n      dup5\n        /* \"#utility.yul\":12915:12931   */\n      add\n        /* \"#utility.yul\":12908:12935   */\n      mstore\n        /* \"#utility.yul\":12757:12941   */\n      pop\n        /* \"#utility.yul\":12695:12941   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12947:13333   */\n    tag_244:\n        /* \"#utility.yul\":13051:13054   */\n      0x00\n        /* \"#utility.yul\":13079:13117   */\n      tag_376\n        /* \"#utility.yul\":13111:13116   */\n      dup3\n        /* \"#utility.yul\":13079:13117   */\n      tag_241\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":13133:13221   */\n      tag_377\n        /* \"#utility.yul\":13214:13220   */\n      dup2\n        /* \"#utility.yul\":13209:13212   */\n      dup6\n        /* \"#utility.yul\":13133:13221   */\n      tag_242\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":13126:13221   */\n      swap4\n      pop\n        /* \"#utility.yul\":13230:13295   */\n      tag_378\n        /* \"#utility.yul\":13288:13294   */\n      dup2\n        /* \"#utility.yul\":13283:13286   */\n      dup6\n        /* \"#utility.yul\":13276:13280   */\n      0x20\n        /* \"#utility.yul\":13269:13274   */\n      dup7\n        /* \"#utility.yul\":13265:13281   */\n      add\n        /* \"#utility.yul\":13230:13295   */\n      tag_243\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":13320:13326   */\n      dup1\n        /* \"#utility.yul\":13315:13318   */\n      dup5\n        /* \"#utility.yul\":13311:13327   */\n      add\n        /* \"#utility.yul\":13304:13327   */\n      swap2\n      pop\n        /* \"#utility.yul\":13055:13333   */\n      pop\n        /* \"#utility.yul\":12947:13333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13339:13610   */\n    tag_194:\n        /* \"#utility.yul\":13469:13472   */\n      0x00\n        /* \"#utility.yul\":13491:13584   */\n      tag_380\n        /* \"#utility.yul\":13580:13583   */\n      dup3\n        /* \"#utility.yul\":13571:13577   */\n      dup5\n        /* \"#utility.yul\":13491:13584   */\n      tag_244\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":13484:13584   */\n      swap2\n      pop\n        /* \"#utility.yul\":13601:13604   */\n      dup2\n        /* \"#utility.yul\":13594:13604   */\n      swap1\n      pop\n        /* \"#utility.yul\":13339:13610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220070c9c3934af60a64432fefcb4b54873a66ac300d8b398002f51e395ca2a1b8864736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_895": {
									"entryPoint": null,
									"id": 895,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 259,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 487,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 452,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1551:7",
										"nodeType": "YulBlock",
										"src": "0:1551:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "759:80:7",
													"nodeType": "YulBlock",
													"src": "759:80:7",
													"statements": [
														{
															"nativeSrc": "769:22:7",
															"nodeType": "YulAssignment",
															"src": "769:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:7"
																},
																"nativeSrc": "778:13:7",
																"nodeType": "YulFunctionCall",
																"src": "778:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:7"
																},
																"nativeSrc": "800:33:7",
																"nodeType": "YulFunctionCall",
																"src": "800:33:7"
															},
															"nativeSrc": "800:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:7",
														"nodeType": "YulTypedName",
														"src": "737:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:7",
														"nodeType": "YulTypedName",
														"src": "745:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:7",
														"nodeType": "YulTypedName",
														"src": "753:5:7",
														"type": ""
													}
												],
												"src": "696:143:7"
											},
											{
												"body": {
													"nativeSrc": "922:274:7",
													"nodeType": "YulBlock",
													"src": "922:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:7",
																"nodeType": "YulBlock",
																"src": "968:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:7"
																			},
																			"nativeSrc": "970:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:7"
																		},
																		"nativeSrc": "970:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:7"
																		},
																		"nativeSrc": "939:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:7",
																		"nodeType": "YulLiteral",
																		"src": "964:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:7"
																},
																"nativeSrc": "935:32:7",
																"nodeType": "YulFunctionCall",
																"src": "935:32:7"
															},
															"nativeSrc": "932:119:7",
															"nodeType": "YulIf",
															"src": "932:119:7"
														},
														{
															"nativeSrc": "1061:128:7",
															"nodeType": "YulBlock",
															"src": "1061:128:7",
															"statements": [
																{
																	"nativeSrc": "1076:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:7"
																				},
																				"nativeSrc": "1147:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:7"
																		},
																		"nativeSrc": "1115:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:7",
														"nodeType": "YulTypedName",
														"src": "892:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:7",
														"nodeType": "YulTypedName",
														"src": "903:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:7",
														"nodeType": "YulTypedName",
														"src": "915:6:7",
														"type": ""
													}
												],
												"src": "845:351:7"
											},
											{
												"body": {
													"nativeSrc": "1267:53:7",
													"nodeType": "YulBlock",
													"src": "1267:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1307:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1307:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1289:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "1289:17:7"
																		},
																		"nativeSrc": "1289:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1289:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1277:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:7"
																},
																"nativeSrc": "1277:37:7",
																"nodeType": "YulFunctionCall",
																"src": "1277:37:7"
															},
															"nativeSrc": "1277:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "1277:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1202:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:7",
														"nodeType": "YulTypedName",
														"src": "1255:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1262:3:7",
														"nodeType": "YulTypedName",
														"src": "1262:3:7",
														"type": ""
													}
												],
												"src": "1202:118:7"
											},
											{
												"body": {
													"nativeSrc": "1424:124:7",
													"nodeType": "YulBlock",
													"src": "1424:124:7",
													"statements": [
														{
															"nativeSrc": "1434:26:7",
															"nodeType": "YulAssignment",
															"src": "1434:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1446:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1446:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1457:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1457:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1442:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1442:3:7"
																},
																"nativeSrc": "1442:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1442:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1434:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1434:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1514:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1514:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1527:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1527:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1538:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1538:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1523:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:7"
																		},
																		"nativeSrc": "1523:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1523:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1470:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "1470:43:7"
																},
																"nativeSrc": "1470:71:7",
																"nodeType": "YulFunctionCall",
																"src": "1470:71:7"
															},
															"nativeSrc": "1470:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "1470:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1326:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1396:9:7",
														"nodeType": "YulTypedName",
														"src": "1396:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1408:6:7",
														"nodeType": "YulTypedName",
														"src": "1408:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1419:4:7",
														"nodeType": "YulTypedName",
														"src": "1419:4:7",
														"type": ""
													}
												],
												"src": "1326:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162001b5538038062001b55833981810160405281019062000036919062000229565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000aa575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a191906200026a565b60405180910390fd5b620000bb816200010360201b60201c565b508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000285565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620001f382620001c8565b9050919050565b6200020581620001e7565b811462000210575f80fd5b50565b5f815190506200022381620001fa565b92915050565b5f60208284031215620002415762000240620001c4565b5b5f620002508482850162000213565b91505092915050565b6200026481620001e7565b82525050565b5f6020820190506200027f5f83018462000259565b92915050565b6118c280620002935f395ff3fe608060405234801561000f575f80fd5b50600436106100cd575f3560e01c80639c2c67c91161008a578063b9818be111610064578063b9818be1146101e7578063e1ad418e14610205578063f09f0aac14610235578063f2fde38b14610265576100cd565b80639c2c67c91461017d578063a114398d1461019b578063a4329677146101b7576100cd565b806301bf6648146100d1578063372c12b1146100ed5780634f1bd9ca1461011d5780636bc2015714610139578063715018a6146101555780638da5cb5b1461015f575b5f80fd5b6100eb60048036038101906100e691906111e7565b610281565b005b610107600480360381019061010291906111e7565b610369565b604051610114919061122c565b60405180910390f35b61013760048036038101906101329190611278565b610386565b005b610153600480360381019061014e91906111e7565b6103f6565b005b61015d610540565b005b610167610553565b60405161017491906112c5565b60405180910390f35b61018561057a565b60405161019291906112ed565b60405180910390f35b6101b560048036038101906101b09190611278565b610580565b005b6101d160048036038101906101cc91906111e7565b610bfe565b6040516101de91906112ed565b60405180910390f35b6101ef610c7e565b6040516101fc91906112c5565b60405180910390f35b61021f600480360381019061021a91906111e7565b610ca3565b60405161022c91906112ed565b60405180910390f35b61024f600480360381019061024a9190611306565b610cb8565b60405161025c91906112c5565b60405180910390f35b61027f600480360381019061027a91906111e7565b610cf3565b005b610289610d77565b60025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610312576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103099061138b565b60405180910390fd5b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b6002602052805f5260405f205f915054906101000a900460ff1681565b61038e610d77565b6103b933828473ffffffffffffffffffffffffffffffffffffffff16610dfe9092919063ffffffff16565b7f92ba58c57c335232a5e63d6dbabcefcee8074c3d8909bc7f8e63dd6e434b280d33826040516103ea9291906113a9565b60405180910390a15050565b6103fe610d77565b60025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610488576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047f90611440565b60405180910390fd5b600381908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610548610d77565b6105515f610e7d565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60055481565b73e9a05afac6e76749462f6537fed148f34a92c0f773ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16148061060d57507307b25cc8082abc65c70b9e5f00b7f3b8fcf6814b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806106575750732df4faece2ea8b8fb5efa8e022edec520c2f0fa473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806106a15750731059dc58fee94fd0caf8a5c9a9b936843f0c532973ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b6106e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d7906114ce565b60405180910390fd5b808273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161071c9291906114ec565b602060405180830381865afa158015610737573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061075b9190611527565b101561079c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107939061159c565b60405180910390fd5b808273ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016107d691906112c5565b602060405180830381865afa1580156107f1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108159190611527565b1015610856576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084d90611604565b60405180910390fd5b73e9a05afac6e76749462f6537fed148f34a92c0f773ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109b3578173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016108da93929190611622565b6020604051808303815f875af11580156108f6573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061091a9190611681565b508060055f82825461092c91906116d9565b925050819055508060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055507fcc87ab2abfe87b272af9b77691e40b3d9186a0431f3d41a8e06d39614f46072233826040516109a69291906113a9565b60405180910390a1610bfa565b5f6103e86003836109c4919061170c565b6109ce919061177a565b90505f600380549050826109e2919061177a565b90505f5b600380549050811015610ab9578473ffffffffffffffffffffffffffffffffffffffff166323b872dd3360038481548110610a2457610a236117aa565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518463ffffffff1660e01b8152600401610a6b93929190611622565b6020604051808303815f875af1158015610a87573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610aab9190611681565b5080806001019150506109e6565b508373ffffffffffffffffffffffffffffffffffffffff166323b872dd33308587610ae491906117d7565b6040518463ffffffff1660e01b8152600401610b0293929190611622565b6020604051808303815f875af1158015610b1e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b429190611681565b508183610b4f91906117d7565b60055f828254610b5f91906116d9565b925050819055508183610b7291906117d7565b60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055507fcc87ab2abfe87b272af9b77691e40b3d9186a0431f3d41a8e06d39614f460722338385610be191906117d7565b604051610bef9291906113a9565b60405180910390a150505b5050565b5f8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c3891906112c5565b602060405180830381865afa158015610c53573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c779190611527565b9050919050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6004602052805f5260405f205f915090505481565b60038181548110610cc7575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610cfb610d77565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d6b575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d6291906112c5565b60405180910390fd5b610d7481610e7d565b50565b610d7f610f3e565b73ffffffffffffffffffffffffffffffffffffffff16610d9d610553565b73ffffffffffffffffffffffffffffffffffffffff1614610dfc57610dc0610f3e565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610df391906112c5565b60405180910390fd5b565b610e78838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610e319291906113a9565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f45565b505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f610f6f828473ffffffffffffffffffffffffffffffffffffffff16610fda90919063ffffffff16565b90505f815114158015610f93575080806020019051810190610f919190611681565b155b15610fd557826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610fcc91906112c5565b60405180910390fd5b505050565b6060610fe783835f610fef565b905092915050565b60608147101561103657306040517fcd78605900000000000000000000000000000000000000000000000000000000815260040161102d91906112c5565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff16848660405161105e9190611876565b5f6040518083038185875af1925050503d805f8114611098576040519150601f19603f3d011682016040523d82523d5f602084013e61109d565b606091505b50915091506110ad8683836110b8565b925050509392505050565b6060826110cd576110c882611145565b61113d565b5f82511480156110f357505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561113557836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161112c91906112c5565b60405180910390fd5b81905061113e565b5b9392505050565b5f815111156111575780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6111b68261118d565b9050919050565b6111c6816111ac565b81146111d0575f80fd5b50565b5f813590506111e1816111bd565b92915050565b5f602082840312156111fc576111fb611189565b5b5f611209848285016111d3565b91505092915050565b5f8115159050919050565b61122681611212565b82525050565b5f60208201905061123f5f83018461121d565b92915050565b5f819050919050565b61125781611245565b8114611261575f80fd5b50565b5f813590506112728161124e565b92915050565b5f806040838503121561128e5761128d611189565b5b5f61129b858286016111d3565b92505060206112ac85828601611264565b9150509250929050565b6112bf816111ac565b82525050565b5f6020820190506112d85f8301846112b6565b92915050565b6112e781611245565b82525050565b5f6020820190506113005f8301846112de565b92915050565b5f6020828403121561131b5761131a611189565b5b5f61132884828501611264565b91505092915050565b5f82825260208201905092915050565b7f546869732041646472657373206973206e6f74206578697374210000000000005f82015250565b5f611375601a83611331565b915061138082611341565b602082019050919050565b5f6020820190508181035f8301526113a281611369565b9050919050565b5f6040820190506113bc5f8301856112b6565b6113c960208301846112de565b9392505050565b7f54686973204164647265737320697320616c72656164792057686974654c69735f8201527f7465642100000000000000000000000000000000000000000000000000000000602082015250565b5f61142a602483611331565b9150611435826113d0565b604082019050919050565b5f6020820190508181035f8301526114578161141e565b9050919050565b7f416363657074206f6e6c7920285553444d2c4449412c555344542c55534443295f8201527f20546f6b656e7300000000000000000000000000000000000000000000000000602082015250565b5f6114b8602783611331565b91506114c38261145e565b604082019050919050565b5f6020820190508181035f8301526114e5816114ac565b9050919050565b5f6040820190506114ff5f8301856112b6565b61150c60208301846112b6565b9392505050565b5f815190506115218161124e565b92915050565b5f6020828403121561153c5761153b611189565b5b5f61154984828501611513565b91505092915050565b7f416c6c6f77616e6365206e6f74207365740000000000000000000000000000005f82015250565b5f611586601183611331565b915061159182611552565b602082019050919050565b5f6020820190508181035f8301526115b38161157a565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f6115ee601483611331565b91506115f9826115ba565b602082019050919050565b5f6020820190508181035f83015261161b816115e2565b9050919050565b5f6060820190506116355f8301866112b6565b61164260208301856112b6565b61164f60408301846112de565b949350505050565b61166081611212565b811461166a575f80fd5b50565b5f8151905061167b81611657565b92915050565b5f6020828403121561169657611695611189565b5b5f6116a38482850161166d565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6116e382611245565b91506116ee83611245565b9250828201905080821115611706576117056116ac565b5b92915050565b5f61171682611245565b915061172183611245565b925082820261172f81611245565b91508282048414831517611746576117456116ac565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61178482611245565b915061178f83611245565b92508261179f5761179e61174d565b5b828204905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f6117e182611245565b91506117ec83611245565b9250828203905081811115611804576118036116ac565b5b92915050565b5f81519050919050565b5f81905092915050565b5f5b8381101561183b578082015181840152602081019050611820565b5f8484015250505050565b5f6118508261180a565b61185a8185611814565b935061186a81856020860161181e565b80840191505092915050565b5f6118818284611846565b91508190509291505056fea2646970667358221220070c9c3934af60a64432fefcb4b54873a66ac300d8b398002f51e395ca2a1b8864736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1B55 CODESIZE SUB DUP1 PUSH3 0x1B55 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x229 JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x26A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBB DUP2 PUSH3 0x103 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x285 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x1F3 DUP3 PUSH3 0x1C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x205 DUP2 PUSH3 0x1E7 JUMP JUMPDEST DUP2 EQ PUSH3 0x210 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x223 DUP2 PUSH3 0x1FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x241 JUMPI PUSH3 0x240 PUSH3 0x1C4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x250 DUP5 DUP3 DUP6 ADD PUSH3 0x213 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x264 DUP2 PUSH3 0x1E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x27F PUSH0 DUP4 ADD DUP5 PUSH3 0x259 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18C2 DUP1 PUSH3 0x293 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C2C67C9 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB9818BE1 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB9818BE1 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xE1AD418E EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xF09F0AAC EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x265 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x9C2C67C9 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xA114398D EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xA4329677 EQ PUSH2 0x1B7 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x1BF6648 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x372C12B1 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x4F1BD9CA EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x6BC20157 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x281 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x369 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x122C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x1278 JUMP JUMPDEST PUSH2 0x386 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x3F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15D PUSH2 0x540 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x167 PUSH2 0x553 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH2 0x57A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x1278 JUMP JUMPDEST PUSH2 0x580 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0xCB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0xCF3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x289 PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x309 SWAP1 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x38E PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x3B9 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDFE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x92BA58C57C335232A5E63D6DBABCEFCEE8074C3D8909BC7F8E63DD6E434B280D CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x3EA SWAP3 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x3FE PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x488 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47F SWAP1 PUSH2 0x1440 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x548 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x551 PUSH0 PUSH2 0xE7D JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH20 0xE9A05AFAC6E76749462F6537FED148F34A92C0F7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x60D JUMPI POP PUSH20 0x7B25CC8082ABC65C70B9E5F00B7F3B8FCF6814B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x657 JUMPI POP PUSH20 0x2DF4FAECE2EA8B8FB5EFA8E022EDEC520C2F0FA4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x6A1 JUMPI POP PUSH20 0x1059DC58FEE94FD0CAF8A5C9A9B936843F0C5329 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x6E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D7 SWAP1 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71C SWAP3 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x737 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x75B SWAP2 SWAP1 PUSH2 0x1527 JUMP JUMPDEST LT ISZERO PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x793 SWAP1 PUSH2 0x159C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D6 SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7F1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x815 SWAP2 SWAP1 PUSH2 0x1527 JUMP JUMPDEST LT ISZERO PUSH2 0x856 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84D SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xE9A05AFAC6E76749462F6537FED148F34A92C0F7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9B3 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x91A SWAP2 SWAP1 PUSH2 0x1681 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x92C SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xCC87AB2ABFE87B272AF9B77691E40B3D9186A0431F3D41A8E06D39614F460722 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x9A6 SWAP3 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xBFA JUMP JUMPDEST PUSH0 PUSH2 0x3E8 PUSH1 0x3 DUP4 PUSH2 0x9C4 SWAP2 SWAP1 PUSH2 0x170C JUMP JUMPDEST PUSH2 0x9CE SWAP2 SWAP1 PUSH2 0x177A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP3 PUSH2 0x9E2 SWAP2 SWAP1 PUSH2 0x177A JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xAB9 JUMPI DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA24 JUMPI PUSH2 0xA23 PUSH2 0x17AA JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA87 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAAB SWAP2 SWAP1 PUSH2 0x1681 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x9E6 JUMP JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 DUP8 PUSH2 0xAE4 SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB02 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB1E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB42 SWAP2 SWAP1 PUSH2 0x1681 JUMP JUMPDEST POP DUP2 DUP4 PUSH2 0xB4F SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB5F SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 DUP4 PUSH2 0xB72 SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xCC87AB2ABFE87B272AF9B77691E40B3D9186A0431F3D41A8E06D39614F460722 CALLER DUP4 DUP6 PUSH2 0xBE1 SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBEF SWAP3 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC38 SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC53 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC77 SWAP2 SWAP1 PUSH2 0x1527 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xCC7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xCFB PUSH2 0xD77 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD6B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD62 SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD74 DUP2 PUSH2 0xE7D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xD7F PUSH2 0xF3E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD9D PUSH2 0x553 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDFC JUMPI PUSH2 0xDC0 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF3 SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xE78 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE31 SWAP3 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xF45 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xF6F DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFDA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xF93 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xF91 SWAP2 SWAP1 PUSH2 0x1681 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xFD5 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCC SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xFE7 DUP4 DUP4 PUSH0 PUSH2 0xFEF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1036 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102D SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x105E SWAP2 SWAP1 PUSH2 0x1876 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1098 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x109D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x10AD DUP7 DUP4 DUP4 PUSH2 0x10B8 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x10CD JUMPI PUSH2 0x10C8 DUP3 PUSH2 0x1145 JUMP JUMPDEST PUSH2 0x113D JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x10F3 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1135 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112C SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x113E JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1157 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11B6 DUP3 PUSH2 0x118D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11C6 DUP2 PUSH2 0x11AC JUMP JUMPDEST DUP2 EQ PUSH2 0x11D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11E1 DUP2 PUSH2 0x11BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11FC JUMPI PUSH2 0x11FB PUSH2 0x1189 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1209 DUP5 DUP3 DUP6 ADD PUSH2 0x11D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1226 DUP2 PUSH2 0x1212 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x123F PUSH0 DUP4 ADD DUP5 PUSH2 0x121D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1257 DUP2 PUSH2 0x1245 JUMP JUMPDEST DUP2 EQ PUSH2 0x1261 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1272 DUP2 PUSH2 0x124E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x128E JUMPI PUSH2 0x128D PUSH2 0x1189 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x129B DUP6 DUP3 DUP7 ADD PUSH2 0x11D3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12AC DUP6 DUP3 DUP7 ADD PUSH2 0x1264 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x12BF DUP2 PUSH2 0x11AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12D8 PUSH0 DUP4 ADD DUP5 PUSH2 0x12B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12E7 DUP2 PUSH2 0x1245 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1300 PUSH0 DUP4 ADD DUP5 PUSH2 0x12DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x131B JUMPI PUSH2 0x131A PUSH2 0x1189 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1328 DUP5 DUP3 DUP6 ADD PUSH2 0x1264 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546869732041646472657373206973206E6F7420657869737421000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1375 PUSH1 0x1A DUP4 PUSH2 0x1331 JUMP JUMPDEST SWAP2 POP PUSH2 0x1380 DUP3 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13A2 DUP2 PUSH2 0x1369 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13BC PUSH0 DUP4 ADD DUP6 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x13C9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12DE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x54686973204164647265737320697320616C72656164792057686974654C6973 PUSH0 DUP3 ADD MSTORE PUSH32 0x7465642100000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x142A PUSH1 0x24 DUP4 PUSH2 0x1331 JUMP JUMPDEST SWAP2 POP PUSH2 0x1435 DUP3 PUSH2 0x13D0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1457 DUP2 PUSH2 0x141E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657074206F6E6C7920285553444D2C4449412C555344542C5553444329 PUSH0 DUP3 ADD MSTORE PUSH32 0x20546F6B656E7300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14B8 PUSH1 0x27 DUP4 PUSH2 0x1331 JUMP JUMPDEST SWAP2 POP PUSH2 0x14C3 DUP3 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14E5 DUP2 PUSH2 0x14AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14FF PUSH0 DUP4 ADD DUP6 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x150C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12B6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1521 DUP2 PUSH2 0x124E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x153C JUMPI PUSH2 0x153B PUSH2 0x1189 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1549 DUP5 DUP3 DUP6 ADD PUSH2 0x1513 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C6C6F77616E6365206E6F7420736574000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1586 PUSH1 0x11 DUP4 PUSH2 0x1331 JUMP JUMPDEST SWAP2 POP PUSH2 0x1591 DUP3 PUSH2 0x1552 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15B3 DUP2 PUSH2 0x157A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15EE PUSH1 0x14 DUP4 PUSH2 0x1331 JUMP JUMPDEST SWAP2 POP PUSH2 0x15F9 DUP3 PUSH2 0x15BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x161B DUP2 PUSH2 0x15E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1635 PUSH0 DUP4 ADD DUP7 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x1642 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x164F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12DE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1660 DUP2 PUSH2 0x1212 JUMP JUMPDEST DUP2 EQ PUSH2 0x166A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x167B DUP2 PUSH2 0x1657 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1696 JUMPI PUSH2 0x1695 PUSH2 0x1189 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16A3 DUP5 DUP3 DUP6 ADD PUSH2 0x166D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x16E3 DUP3 PUSH2 0x1245 JUMP JUMPDEST SWAP2 POP PUSH2 0x16EE DUP4 PUSH2 0x1245 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1706 JUMPI PUSH2 0x1705 PUSH2 0x16AC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1716 DUP3 PUSH2 0x1245 JUMP JUMPDEST SWAP2 POP PUSH2 0x1721 DUP4 PUSH2 0x1245 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x172F DUP2 PUSH2 0x1245 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1746 JUMPI PUSH2 0x1745 PUSH2 0x16AC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1784 DUP3 PUSH2 0x1245 JUMP JUMPDEST SWAP2 POP PUSH2 0x178F DUP4 PUSH2 0x1245 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x179F JUMPI PUSH2 0x179E PUSH2 0x174D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x17E1 DUP3 PUSH2 0x1245 JUMP JUMPDEST SWAP2 POP PUSH2 0x17EC DUP4 PUSH2 0x1245 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1804 JUMPI PUSH2 0x1803 PUSH2 0x16AC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x183B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1820 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1850 DUP3 PUSH2 0x180A JUMP JUMPDEST PUSH2 0x185A DUP2 DUP6 PUSH2 0x1814 JUMP JUMPDEST SWAP4 POP PUSH2 0x186A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x181E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1881 DUP3 DUP5 PUSH2 0x1846 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0xC SWAP13 CODECOPY CALLVALUE 0xAF PUSH1 0xA6 PREVRANDAO ORIGIN INVALID 0xFC 0xB4 0xB5 BASEFEE PUSH20 0xA66AC300D8B398002F51E395CA2A1B8864736F6C PUSH4 0x43000816 STOP CALLER ",
							"sourceMap": "234:3392:6:-:0;;;1250:97;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1292:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1328:12:6::1;1317:8;;:23;;;;;;;;;;;;;;;;;;1250:97:::0;234:3392;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:118::-;1289:24;1307:5;1289:24;:::i;:::-;1284:3;1277:37;1202:118;;:::o;1326:222::-;1419:4;1457:2;1446:9;1442:18;1434:26;;1470:71;1538:1;1527:9;1523:17;1514:6;1470:71;:::i;:::-;1326:222;;;;:::o;234:3392:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@WhiteList_923": {
									"entryPoint": 1014,
									"id": 923,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_callOptionalReturn_501": {
									"entryPoint": 3909,
									"id": 501,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3447,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_816": {
									"entryPoint": 3902,
									"id": 816,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_803": {
									"entryPoint": 4421,
									"id": 803,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3709,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@currentHoldings_882": {
									"entryPoint": 1402,
									"id": 882,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeOwner_839": {
									"entryPoint": 3198,
									"id": 839,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_671": {
									"entryPoint": 4079,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_625": {
									"entryPoint": 4058,
									"id": 625,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@holdingOfTokens_1165": {
									"entryPoint": 3070,
									"id": 1165,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1363,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeFromWhiteList_1147": {
									"entryPoint": 641,
									"id": 1147,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1344,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_311": {
									"entryPoint": 3582,
									"id": 311,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@swapTokens_1101": {
									"entryPoint": 1408,
									"id": 1101,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3315,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userAmount_880": {
									"entryPoint": 3235,
									"id": 880,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_763": {
									"entryPoint": 4280,
									"id": 763,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@whilistedAddress_876": {
									"entryPoint": 3256,
									"id": 876,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@whiteList_873": {
									"entryPoint": 873,
									"id": 873,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawBalanceTokens_1126": {
									"entryPoint": 902,
									"id": 1126,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_20a881cf3f301729162087809377e251ecb8eef784f0e70bb190c0868222ecfb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_69cc1d0091f450c9f1b40951e04a8e02ae8a28f18820a3d492d53b3c2bca82f7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b7f5bbf01babd612ff41adb253311ab3eccd8d56664e3b6ae54fa2e62b1bbfb0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e4b1ff88c98651e5d7d85eb43f5a141517ae9ecbf5e440d1ab5dd743d5169ea1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 5356,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5666,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5033,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_20a881cf3f301729162087809377e251ecb8eef784f0e70bb190c0868222ecfb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_69cc1d0091f450c9f1b40951e04a8e02ae8a28f18820a3d492d53b3c2bca82f7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b7f5bbf01babd612ff41adb253311ab3eccd8d56664e3b6ae54fa2e62b1bbfb0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e4b1ff88c98651e5d7d85eb43f5a141517ae9ecbf5e440d1ab5dd743d5169ea1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 6154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6164,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4677,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6174,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 5804,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5965,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6058,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4489,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_20a881cf3f301729162087809377e251ecb8eef784f0e70bb190c0868222ecfb": {
									"entryPoint": 5214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5": {
									"entryPoint": 5562,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_69cc1d0091f450c9f1b40951e04a8e02ae8a28f18820a3d492d53b3c2bca82f7": {
									"entryPoint": 5072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b7f5bbf01babd612ff41adb253311ab3eccd8d56664e3b6ae54fa2e62b1bbfb0": {
									"entryPoint": 5458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e4b1ff88c98651e5d7d85eb43f5a141517ae9ecbf5e440d1ab5dd743d5169ea1": {
									"entryPoint": 4929,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5719,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13613:7",
										"nodeType": "YulBlock",
										"src": "0:13613:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:81:7",
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nativeSrc": "389:65:7",
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:7",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nativeSrc": "400:54:7",
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nativeSrc": "511:51:7",
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nativeSrc": "521:35:7",
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nativeSrc": "532:24:7",
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:7",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:7",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nativeSrc": "611:79:7",
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:7",
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:7",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:7",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nativeSrc": "670:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nativeSrc": "670:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nativeSrc": "641:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nativeSrc": "631:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nativeSrc": "624:43:7",
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nativeSrc": "621:63:7",
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:7",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nativeSrc": "748:87:7",
													"nodeType": "YulBlock",
													"src": "748:87:7",
													"statements": [
														{
															"nativeSrc": "758:29:7",
															"nodeType": "YulAssignment",
															"src": "758:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:7"
																},
																"nativeSrc": "767:20:7",
																"nodeType": "YulFunctionCall",
																"src": "767:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:7"
																},
																"nativeSrc": "796:33:7",
																"nodeType": "YulFunctionCall",
																"src": "796:33:7"
															},
															"nativeSrc": "796:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:7",
														"nodeType": "YulTypedName",
														"src": "726:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:7",
														"nodeType": "YulTypedName",
														"src": "734:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:7",
														"nodeType": "YulTypedName",
														"src": "742:5:7",
														"type": ""
													}
												],
												"src": "696:139:7"
											},
											{
												"body": {
													"nativeSrc": "907:263:7",
													"nodeType": "YulBlock",
													"src": "907:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:7",
																"nodeType": "YulBlock",
																"src": "953:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:7"
																			},
																			"nativeSrc": "955:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:7"
																		},
																		"nativeSrc": "955:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:7"
																		},
																		"nativeSrc": "924:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:7",
																		"nodeType": "YulLiteral",
																		"src": "949:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:7"
																},
																"nativeSrc": "920:32:7",
																"nodeType": "YulFunctionCall",
																"src": "920:32:7"
															},
															"nativeSrc": "917:119:7",
															"nodeType": "YulIf",
															"src": "917:119:7"
														},
														{
															"nativeSrc": "1046:117:7",
															"nodeType": "YulBlock",
															"src": "1046:117:7",
															"statements": [
																{
																	"nativeSrc": "1061:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:7",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:7"
																				},
																				"nativeSrc": "1121:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:7"
																		},
																		"nativeSrc": "1100:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:7",
														"nodeType": "YulTypedName",
														"src": "877:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:7",
														"nodeType": "YulTypedName",
														"src": "888:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:7",
														"nodeType": "YulTypedName",
														"src": "900:6:7",
														"type": ""
													}
												],
												"src": "841:329:7"
											},
											{
												"body": {
													"nativeSrc": "1218:48:7",
													"nodeType": "YulBlock",
													"src": "1218:48:7",
													"statements": [
														{
															"nativeSrc": "1228:32:7",
															"nodeType": "YulAssignment",
															"src": "1228:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1253:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1246:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:7"
																		},
																		"nativeSrc": "1246:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1239:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:7"
																},
																"nativeSrc": "1239:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1239:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1228:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1176:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1200:5:7",
														"nodeType": "YulTypedName",
														"src": "1200:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1210:7:7",
														"nodeType": "YulTypedName",
														"src": "1210:7:7",
														"type": ""
													}
												],
												"src": "1176:90:7"
											},
											{
												"body": {
													"nativeSrc": "1331:50:7",
													"nodeType": "YulBlock",
													"src": "1331:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1348:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1348:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1368:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1368:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1353:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "1353:14:7"
																		},
																		"nativeSrc": "1353:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1353:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1341:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:7"
																},
																"nativeSrc": "1341:34:7",
																"nodeType": "YulFunctionCall",
																"src": "1341:34:7"
															},
															"nativeSrc": "1341:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "1341:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1272:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1319:5:7",
														"nodeType": "YulTypedName",
														"src": "1319:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1326:3:7",
														"nodeType": "YulTypedName",
														"src": "1326:3:7",
														"type": ""
													}
												],
												"src": "1272:109:7"
											},
											{
												"body": {
													"nativeSrc": "1479:118:7",
													"nodeType": "YulBlock",
													"src": "1479:118:7",
													"statements": [
														{
															"nativeSrc": "1489:26:7",
															"nodeType": "YulAssignment",
															"src": "1489:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1501:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1501:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1512:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1512:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1497:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:7"
																},
																"nativeSrc": "1497:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1497:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1489:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1489:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1563:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1563:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1576:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1576:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1587:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1587:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1572:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1572:3:7"
																		},
																		"nativeSrc": "1572:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1572:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1525:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "1525:37:7"
																},
																"nativeSrc": "1525:65:7",
																"nodeType": "YulFunctionCall",
																"src": "1525:65:7"
															},
															"nativeSrc": "1525:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "1525:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1387:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1451:9:7",
														"nodeType": "YulTypedName",
														"src": "1451:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1463:6:7",
														"nodeType": "YulTypedName",
														"src": "1463:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1474:4:7",
														"nodeType": "YulTypedName",
														"src": "1474:4:7",
														"type": ""
													}
												],
												"src": "1387:210:7"
											},
											{
												"body": {
													"nativeSrc": "1648:32:7",
													"nodeType": "YulBlock",
													"src": "1648:32:7",
													"statements": [
														{
															"nativeSrc": "1658:16:7",
															"nodeType": "YulAssignment",
															"src": "1658:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "1669:5:7",
																"nodeType": "YulIdentifier",
																"src": "1669:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1658:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1658:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1603:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1630:5:7",
														"nodeType": "YulTypedName",
														"src": "1630:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1640:7:7",
														"nodeType": "YulTypedName",
														"src": "1640:7:7",
														"type": ""
													}
												],
												"src": "1603:77:7"
											},
											{
												"body": {
													"nativeSrc": "1729:79:7",
													"nodeType": "YulBlock",
													"src": "1729:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1786:16:7",
																"nodeType": "YulBlock",
																"src": "1786:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1795:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1795:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1798:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1798:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1788:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1788:6:7"
																			},
																			"nativeSrc": "1788:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1788:12:7"
																		},
																		"nativeSrc": "1788:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1788:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1752:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1752:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1777:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1777:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1759:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1759:17:7"
																				},
																				"nativeSrc": "1759:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1759:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1749:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1749:2:7"
																		},
																		"nativeSrc": "1749:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1749:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1742:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1742:6:7"
																},
																"nativeSrc": "1742:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1742:43:7"
															},
															"nativeSrc": "1739:63:7",
															"nodeType": "YulIf",
															"src": "1739:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1686:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1722:5:7",
														"nodeType": "YulTypedName",
														"src": "1722:5:7",
														"type": ""
													}
												],
												"src": "1686:122:7"
											},
											{
												"body": {
													"nativeSrc": "1866:87:7",
													"nodeType": "YulBlock",
													"src": "1866:87:7",
													"statements": [
														{
															"nativeSrc": "1876:29:7",
															"nodeType": "YulAssignment",
															"src": "1876:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1898:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1898:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1885:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1885:12:7"
																},
																"nativeSrc": "1885:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1885:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1876:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1876:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1941:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1941:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1914:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "1914:26:7"
																},
																"nativeSrc": "1914:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1914:33:7"
															},
															"nativeSrc": "1914:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1914:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1814:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1844:6:7",
														"nodeType": "YulTypedName",
														"src": "1844:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1852:3:7",
														"nodeType": "YulTypedName",
														"src": "1852:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1860:5:7",
														"nodeType": "YulTypedName",
														"src": "1860:5:7",
														"type": ""
													}
												],
												"src": "1814:139:7"
											},
											{
												"body": {
													"nativeSrc": "2042:391:7",
													"nodeType": "YulBlock",
													"src": "2042:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2088:83:7",
																"nodeType": "YulBlock",
																"src": "2088:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2090:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2090:77:7"
																			},
																			"nativeSrc": "2090:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2090:79:7"
																		},
																		"nativeSrc": "2090:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2090:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2063:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2063:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2072:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2072:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2059:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2059:3:7"
																		},
																		"nativeSrc": "2059:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2059:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2084:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2084:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2055:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2055:3:7"
																},
																"nativeSrc": "2055:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2055:32:7"
															},
															"nativeSrc": "2052:119:7",
															"nodeType": "YulIf",
															"src": "2052:119:7"
														},
														{
															"nativeSrc": "2181:117:7",
															"nodeType": "YulBlock",
															"src": "2181:117:7",
															"statements": [
																{
																	"nativeSrc": "2196:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2196:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2210:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2210:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2200:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2200:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2225:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2225:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2260:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2260:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2271:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2271:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2256:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2256:3:7"
																				},
																				"nativeSrc": "2256:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2256:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2280:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2280:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2235:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2235:20:7"
																		},
																		"nativeSrc": "2235:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2235:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2225:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2225:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2308:118:7",
															"nodeType": "YulBlock",
															"src": "2308:118:7",
															"statements": [
																{
																	"nativeSrc": "2323:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2323:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2337:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2337:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2327:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2327:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2353:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2353:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2388:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2388:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2399:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2399:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2384:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2384:3:7"
																				},
																				"nativeSrc": "2384:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2384:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2408:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2408:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2363:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2363:20:7"
																		},
																		"nativeSrc": "2363:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2363:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2353:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2353:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1959:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2004:9:7",
														"nodeType": "YulTypedName",
														"src": "2004:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2015:7:7",
														"nodeType": "YulTypedName",
														"src": "2015:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2027:6:7",
														"nodeType": "YulTypedName",
														"src": "2027:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2035:6:7",
														"nodeType": "YulTypedName",
														"src": "2035:6:7",
														"type": ""
													}
												],
												"src": "1959:474:7"
											},
											{
												"body": {
													"nativeSrc": "2504:53:7",
													"nodeType": "YulBlock",
													"src": "2504:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2521:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2521:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2544:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2544:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2526:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "2526:17:7"
																		},
																		"nativeSrc": "2526:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2526:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2514:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2514:6:7"
																},
																"nativeSrc": "2514:37:7",
																"nodeType": "YulFunctionCall",
																"src": "2514:37:7"
															},
															"nativeSrc": "2514:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "2514:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2439:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2492:5:7",
														"nodeType": "YulTypedName",
														"src": "2492:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2499:3:7",
														"nodeType": "YulTypedName",
														"src": "2499:3:7",
														"type": ""
													}
												],
												"src": "2439:118:7"
											},
											{
												"body": {
													"nativeSrc": "2661:124:7",
													"nodeType": "YulBlock",
													"src": "2661:124:7",
													"statements": [
														{
															"nativeSrc": "2671:26:7",
															"nodeType": "YulAssignment",
															"src": "2671:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2683:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2683:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2694:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2694:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2679:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2679:3:7"
																},
																"nativeSrc": "2679:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2679:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2671:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2671:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2751:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2751:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2764:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2764:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2775:1:7",
																				"nodeType": "YulLiteral",
																				"src": "2775:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2760:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2760:3:7"
																		},
																		"nativeSrc": "2760:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2760:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2707:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "2707:43:7"
																},
																"nativeSrc": "2707:71:7",
																"nodeType": "YulFunctionCall",
																"src": "2707:71:7"
															},
															"nativeSrc": "2707:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "2707:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2563:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2633:9:7",
														"nodeType": "YulTypedName",
														"src": "2633:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2645:6:7",
														"nodeType": "YulTypedName",
														"src": "2645:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2656:4:7",
														"nodeType": "YulTypedName",
														"src": "2656:4:7",
														"type": ""
													}
												],
												"src": "2563:222:7"
											},
											{
												"body": {
													"nativeSrc": "2856:53:7",
													"nodeType": "YulBlock",
													"src": "2856:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2873:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2873:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2896:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2896:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2878:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "2878:17:7"
																		},
																		"nativeSrc": "2878:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2878:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2866:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2866:6:7"
																},
																"nativeSrc": "2866:37:7",
																"nodeType": "YulFunctionCall",
																"src": "2866:37:7"
															},
															"nativeSrc": "2866:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "2866:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2791:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2844:5:7",
														"nodeType": "YulTypedName",
														"src": "2844:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2851:3:7",
														"nodeType": "YulTypedName",
														"src": "2851:3:7",
														"type": ""
													}
												],
												"src": "2791:118:7"
											},
											{
												"body": {
													"nativeSrc": "3013:124:7",
													"nodeType": "YulBlock",
													"src": "3013:124:7",
													"statements": [
														{
															"nativeSrc": "3023:26:7",
															"nodeType": "YulAssignment",
															"src": "3023:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3035:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3035:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3046:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3046:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3031:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3031:3:7"
																},
																"nativeSrc": "3031:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3031:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3023:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3023:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3103:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3103:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3116:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3116:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3127:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3127:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3112:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3112:3:7"
																		},
																		"nativeSrc": "3112:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3112:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3059:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3059:43:7"
																},
																"nativeSrc": "3059:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3059:71:7"
															},
															"nativeSrc": "3059:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3059:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2915:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2985:9:7",
														"nodeType": "YulTypedName",
														"src": "2985:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2997:6:7",
														"nodeType": "YulTypedName",
														"src": "2997:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3008:4:7",
														"nodeType": "YulTypedName",
														"src": "3008:4:7",
														"type": ""
													}
												],
												"src": "2915:222:7"
											},
											{
												"body": {
													"nativeSrc": "3209:263:7",
													"nodeType": "YulBlock",
													"src": "3209:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3255:83:7",
																"nodeType": "YulBlock",
																"src": "3255:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3257:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3257:77:7"
																			},
																			"nativeSrc": "3257:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3257:79:7"
																		},
																		"nativeSrc": "3257:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3257:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3230:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3230:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3239:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3239:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3226:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3226:3:7"
																		},
																		"nativeSrc": "3226:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3226:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3251:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3251:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3222:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3222:3:7"
																},
																"nativeSrc": "3222:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3222:32:7"
															},
															"nativeSrc": "3219:119:7",
															"nodeType": "YulIf",
															"src": "3219:119:7"
														},
														{
															"nativeSrc": "3348:117:7",
															"nodeType": "YulBlock",
															"src": "3348:117:7",
															"statements": [
																{
																	"nativeSrc": "3363:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3363:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3377:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3377:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3367:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3367:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3392:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3392:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3427:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3427:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3438:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3438:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3423:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3423:3:7"
																				},
																				"nativeSrc": "3423:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3423:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3447:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3447:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3402:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3402:20:7"
																		},
																		"nativeSrc": "3402:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3402:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3392:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3392:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3143:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3179:9:7",
														"nodeType": "YulTypedName",
														"src": "3179:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3190:7:7",
														"nodeType": "YulTypedName",
														"src": "3190:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3202:6:7",
														"nodeType": "YulTypedName",
														"src": "3202:6:7",
														"type": ""
													}
												],
												"src": "3143:329:7"
											},
											{
												"body": {
													"nativeSrc": "3574:73:7",
													"nodeType": "YulBlock",
													"src": "3574:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3591:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3591:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3596:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3596:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3584:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3584:6:7"
																},
																"nativeSrc": "3584:19:7",
																"nodeType": "YulFunctionCall",
																"src": "3584:19:7"
															},
															"nativeSrc": "3584:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "3584:19:7"
														},
														{
															"nativeSrc": "3612:29:7",
															"nodeType": "YulAssignment",
															"src": "3612:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3631:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3631:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3636:4:7",
																		"nodeType": "YulLiteral",
																		"src": "3636:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3627:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3627:3:7"
																},
																"nativeSrc": "3627:14:7",
																"nodeType": "YulFunctionCall",
																"src": "3627:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3612:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "3612:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3478:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3546:3:7",
														"nodeType": "YulTypedName",
														"src": "3546:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3551:6:7",
														"nodeType": "YulTypedName",
														"src": "3551:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3562:11:7",
														"nodeType": "YulTypedName",
														"src": "3562:11:7",
														"type": ""
													}
												],
												"src": "3478:169:7"
											},
											{
												"body": {
													"nativeSrc": "3759:70:7",
													"nodeType": "YulBlock",
													"src": "3759:70:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3781:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3781:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3789:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3789:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3777:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3777:3:7"
																		},
																		"nativeSrc": "3777:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3777:14:7"
																	},
																	{
																		"hexValue": "546869732041646472657373206973206e6f7420657869737421",
																		"kind": "string",
																		"nativeSrc": "3793:28:7",
																		"nodeType": "YulLiteral",
																		"src": "3793:28:7",
																		"type": "",
																		"value": "This Address is not exist!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3770:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3770:6:7"
																},
																"nativeSrc": "3770:52:7",
																"nodeType": "YulFunctionCall",
																"src": "3770:52:7"
															},
															"nativeSrc": "3770:52:7",
															"nodeType": "YulExpressionStatement",
															"src": "3770:52:7"
														}
													]
												},
												"name": "store_literal_in_memory_e4b1ff88c98651e5d7d85eb43f5a141517ae9ecbf5e440d1ab5dd743d5169ea1",
												"nativeSrc": "3653:176:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3751:6:7",
														"nodeType": "YulTypedName",
														"src": "3751:6:7",
														"type": ""
													}
												],
												"src": "3653:176:7"
											},
											{
												"body": {
													"nativeSrc": "3981:220:7",
													"nodeType": "YulBlock",
													"src": "3981:220:7",
													"statements": [
														{
															"nativeSrc": "3991:74:7",
															"nodeType": "YulAssignment",
															"src": "3991:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4057:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4057:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4062:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4062:2:7",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3998:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "3998:58:7"
																},
																"nativeSrc": "3998:67:7",
																"nodeType": "YulFunctionCall",
																"src": "3998:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3991:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3991:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4163:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4163:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e4b1ff88c98651e5d7d85eb43f5a141517ae9ecbf5e440d1ab5dd743d5169ea1",
																	"nativeSrc": "4074:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "4074:88:7"
																},
																"nativeSrc": "4074:93:7",
																"nodeType": "YulFunctionCall",
																"src": "4074:93:7"
															},
															"nativeSrc": "4074:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "4074:93:7"
														},
														{
															"nativeSrc": "4176:19:7",
															"nodeType": "YulAssignment",
															"src": "4176:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4187:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4187:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4192:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4192:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4183:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4183:3:7"
																},
																"nativeSrc": "4183:12:7",
																"nodeType": "YulFunctionCall",
																"src": "4183:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4176:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4176:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e4b1ff88c98651e5d7d85eb43f5a141517ae9ecbf5e440d1ab5dd743d5169ea1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3835:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3969:3:7",
														"nodeType": "YulTypedName",
														"src": "3969:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3977:3:7",
														"nodeType": "YulTypedName",
														"src": "3977:3:7",
														"type": ""
													}
												],
												"src": "3835:366:7"
											},
											{
												"body": {
													"nativeSrc": "4378:248:7",
													"nodeType": "YulBlock",
													"src": "4378:248:7",
													"statements": [
														{
															"nativeSrc": "4388:26:7",
															"nodeType": "YulAssignment",
															"src": "4388:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4400:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4400:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4411:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4411:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4396:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4396:3:7"
																},
																"nativeSrc": "4396:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4396:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4388:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4388:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4435:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4435:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4446:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4446:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4431:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4431:3:7"
																		},
																		"nativeSrc": "4431:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4431:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4454:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "4454:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4460:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4460:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4450:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4450:3:7"
																		},
																		"nativeSrc": "4450:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4450:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4424:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4424:6:7"
																},
																"nativeSrc": "4424:47:7",
																"nodeType": "YulFunctionCall",
																"src": "4424:47:7"
															},
															"nativeSrc": "4424:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "4424:47:7"
														},
														{
															"nativeSrc": "4480:139:7",
															"nodeType": "YulAssignment",
															"src": "4480:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4614:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4614:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e4b1ff88c98651e5d7d85eb43f5a141517ae9ecbf5e440d1ab5dd743d5169ea1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4488:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "4488:124:7"
																},
																"nativeSrc": "4488:131:7",
																"nodeType": "YulFunctionCall",
																"src": "4488:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4480:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4480:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e4b1ff88c98651e5d7d85eb43f5a141517ae9ecbf5e440d1ab5dd743d5169ea1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4207:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4358:9:7",
														"nodeType": "YulTypedName",
														"src": "4358:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4373:4:7",
														"nodeType": "YulTypedName",
														"src": "4373:4:7",
														"type": ""
													}
												],
												"src": "4207:419:7"
											},
											{
												"body": {
													"nativeSrc": "4758:206:7",
													"nodeType": "YulBlock",
													"src": "4758:206:7",
													"statements": [
														{
															"nativeSrc": "4768:26:7",
															"nodeType": "YulAssignment",
															"src": "4768:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4780:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4780:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4791:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4791:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4776:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4776:3:7"
																},
																"nativeSrc": "4776:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4776:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4768:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4768:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4848:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4848:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4861:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4861:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4872:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4872:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4857:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4857:3:7"
																		},
																		"nativeSrc": "4857:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4857:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4804:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4804:43:7"
																},
																"nativeSrc": "4804:71:7",
																"nodeType": "YulFunctionCall",
																"src": "4804:71:7"
															},
															"nativeSrc": "4804:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "4804:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4929:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4929:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4942:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4942:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4953:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4953:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4938:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4938:3:7"
																		},
																		"nativeSrc": "4938:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4938:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4885:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4885:43:7"
																},
																"nativeSrc": "4885:72:7",
																"nodeType": "YulFunctionCall",
																"src": "4885:72:7"
															},
															"nativeSrc": "4885:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "4885:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4632:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4722:9:7",
														"nodeType": "YulTypedName",
														"src": "4722:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4734:6:7",
														"nodeType": "YulTypedName",
														"src": "4734:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4742:6:7",
														"nodeType": "YulTypedName",
														"src": "4742:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4753:4:7",
														"nodeType": "YulTypedName",
														"src": "4753:4:7",
														"type": ""
													}
												],
												"src": "4632:332:7"
											},
											{
												"body": {
													"nativeSrc": "5076:117:7",
													"nodeType": "YulBlock",
													"src": "5076:117:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5098:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5098:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5106:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5106:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5094:3:7"
																		},
																		"nativeSrc": "5094:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5094:14:7"
																	},
																	{
																		"hexValue": "54686973204164647265737320697320616c72656164792057686974654c6973",
																		"kind": "string",
																		"nativeSrc": "5110:34:7",
																		"nodeType": "YulLiteral",
																		"src": "5110:34:7",
																		"type": "",
																		"value": "This Address is already WhiteLis"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5087:6:7"
																},
																"nativeSrc": "5087:58:7",
																"nodeType": "YulFunctionCall",
																"src": "5087:58:7"
															},
															"nativeSrc": "5087:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "5087:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5166:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5166:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5174:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5174:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5162:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5162:3:7"
																		},
																		"nativeSrc": "5162:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5162:15:7"
																	},
																	{
																		"hexValue": "74656421",
																		"kind": "string",
																		"nativeSrc": "5179:6:7",
																		"nodeType": "YulLiteral",
																		"src": "5179:6:7",
																		"type": "",
																		"value": "ted!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5155:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5155:6:7"
																},
																"nativeSrc": "5155:31:7",
																"nodeType": "YulFunctionCall",
																"src": "5155:31:7"
															},
															"nativeSrc": "5155:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "5155:31:7"
														}
													]
												},
												"name": "store_literal_in_memory_69cc1d0091f450c9f1b40951e04a8e02ae8a28f18820a3d492d53b3c2bca82f7",
												"nativeSrc": "4970:223:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5068:6:7",
														"nodeType": "YulTypedName",
														"src": "5068:6:7",
														"type": ""
													}
												],
												"src": "4970:223:7"
											},
											{
												"body": {
													"nativeSrc": "5345:220:7",
													"nodeType": "YulBlock",
													"src": "5345:220:7",
													"statements": [
														{
															"nativeSrc": "5355:74:7",
															"nodeType": "YulAssignment",
															"src": "5355:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5421:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5421:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5426:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5426:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5362:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "5362:58:7"
																},
																"nativeSrc": "5362:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5362:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5355:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5355:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5527:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5527:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_69cc1d0091f450c9f1b40951e04a8e02ae8a28f18820a3d492d53b3c2bca82f7",
																	"nativeSrc": "5438:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "5438:88:7"
																},
																"nativeSrc": "5438:93:7",
																"nodeType": "YulFunctionCall",
																"src": "5438:93:7"
															},
															"nativeSrc": "5438:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "5438:93:7"
														},
														{
															"nativeSrc": "5540:19:7",
															"nodeType": "YulAssignment",
															"src": "5540:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5551:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5551:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5556:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5556:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5547:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5547:3:7"
																},
																"nativeSrc": "5547:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5547:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5540:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5540:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_69cc1d0091f450c9f1b40951e04a8e02ae8a28f18820a3d492d53b3c2bca82f7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5199:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5333:3:7",
														"nodeType": "YulTypedName",
														"src": "5333:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5341:3:7",
														"nodeType": "YulTypedName",
														"src": "5341:3:7",
														"type": ""
													}
												],
												"src": "5199:366:7"
											},
											{
												"body": {
													"nativeSrc": "5742:248:7",
													"nodeType": "YulBlock",
													"src": "5742:248:7",
													"statements": [
														{
															"nativeSrc": "5752:26:7",
															"nodeType": "YulAssignment",
															"src": "5752:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5764:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5764:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5775:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5775:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5760:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5760:3:7"
																},
																"nativeSrc": "5760:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5760:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5752:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5752:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5799:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5799:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5810:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5810:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5795:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5795:3:7"
																		},
																		"nativeSrc": "5795:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5795:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5818:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5818:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5824:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5824:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5814:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5814:3:7"
																		},
																		"nativeSrc": "5814:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5814:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5788:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5788:6:7"
																},
																"nativeSrc": "5788:47:7",
																"nodeType": "YulFunctionCall",
																"src": "5788:47:7"
															},
															"nativeSrc": "5788:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "5788:47:7"
														},
														{
															"nativeSrc": "5844:139:7",
															"nodeType": "YulAssignment",
															"src": "5844:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5978:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5978:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_69cc1d0091f450c9f1b40951e04a8e02ae8a28f18820a3d492d53b3c2bca82f7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5852:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "5852:124:7"
																},
																"nativeSrc": "5852:131:7",
																"nodeType": "YulFunctionCall",
																"src": "5852:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5844:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5844:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_69cc1d0091f450c9f1b40951e04a8e02ae8a28f18820a3d492d53b3c2bca82f7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5571:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5722:9:7",
														"nodeType": "YulTypedName",
														"src": "5722:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5737:4:7",
														"nodeType": "YulTypedName",
														"src": "5737:4:7",
														"type": ""
													}
												],
												"src": "5571:419:7"
											},
											{
												"body": {
													"nativeSrc": "6102:120:7",
													"nodeType": "YulBlock",
													"src": "6102:120:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6124:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6124:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6132:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6132:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6120:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6120:3:7"
																		},
																		"nativeSrc": "6120:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6120:14:7"
																	},
																	{
																		"hexValue": "416363657074206f6e6c7920285553444d2c4449412c555344542c5553444329",
																		"kind": "string",
																		"nativeSrc": "6136:34:7",
																		"nodeType": "YulLiteral",
																		"src": "6136:34:7",
																		"type": "",
																		"value": "Accept only (USDM,DIA,USDT,USDC)"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6113:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6113:6:7"
																},
																"nativeSrc": "6113:58:7",
																"nodeType": "YulFunctionCall",
																"src": "6113:58:7"
															},
															"nativeSrc": "6113:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "6113:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6192:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6192:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6200:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6200:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6188:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6188:3:7"
																		},
																		"nativeSrc": "6188:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6188:15:7"
																	},
																	{
																		"hexValue": "20546f6b656e73",
																		"kind": "string",
																		"nativeSrc": "6205:9:7",
																		"nodeType": "YulLiteral",
																		"src": "6205:9:7",
																		"type": "",
																		"value": " Tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6181:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6181:6:7"
																},
																"nativeSrc": "6181:34:7",
																"nodeType": "YulFunctionCall",
																"src": "6181:34:7"
															},
															"nativeSrc": "6181:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "6181:34:7"
														}
													]
												},
												"name": "store_literal_in_memory_20a881cf3f301729162087809377e251ecb8eef784f0e70bb190c0868222ecfb",
												"nativeSrc": "5996:226:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6094:6:7",
														"nodeType": "YulTypedName",
														"src": "6094:6:7",
														"type": ""
													}
												],
												"src": "5996:226:7"
											},
											{
												"body": {
													"nativeSrc": "6374:220:7",
													"nodeType": "YulBlock",
													"src": "6374:220:7",
													"statements": [
														{
															"nativeSrc": "6384:74:7",
															"nodeType": "YulAssignment",
															"src": "6384:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6450:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6450:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6455:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6455:2:7",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6391:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "6391:58:7"
																},
																"nativeSrc": "6391:67:7",
																"nodeType": "YulFunctionCall",
																"src": "6391:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6384:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6384:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6556:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6556:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_20a881cf3f301729162087809377e251ecb8eef784f0e70bb190c0868222ecfb",
																	"nativeSrc": "6467:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "6467:88:7"
																},
																"nativeSrc": "6467:93:7",
																"nodeType": "YulFunctionCall",
																"src": "6467:93:7"
															},
															"nativeSrc": "6467:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "6467:93:7"
														},
														{
															"nativeSrc": "6569:19:7",
															"nodeType": "YulAssignment",
															"src": "6569:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6580:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6580:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6585:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6576:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6576:3:7"
																},
																"nativeSrc": "6576:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6576:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6569:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6569:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_20a881cf3f301729162087809377e251ecb8eef784f0e70bb190c0868222ecfb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6228:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6362:3:7",
														"nodeType": "YulTypedName",
														"src": "6362:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6370:3:7",
														"nodeType": "YulTypedName",
														"src": "6370:3:7",
														"type": ""
													}
												],
												"src": "6228:366:7"
											},
											{
												"body": {
													"nativeSrc": "6771:248:7",
													"nodeType": "YulBlock",
													"src": "6771:248:7",
													"statements": [
														{
															"nativeSrc": "6781:26:7",
															"nodeType": "YulAssignment",
															"src": "6781:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6793:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6793:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6804:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6804:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6789:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6789:3:7"
																},
																"nativeSrc": "6789:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6789:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6781:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6781:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6828:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6828:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6839:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6839:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6824:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6824:3:7"
																		},
																		"nativeSrc": "6824:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6824:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6847:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6847:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6853:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6853:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6843:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6843:3:7"
																		},
																		"nativeSrc": "6843:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6843:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6817:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6817:6:7"
																},
																"nativeSrc": "6817:47:7",
																"nodeType": "YulFunctionCall",
																"src": "6817:47:7"
															},
															"nativeSrc": "6817:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "6817:47:7"
														},
														{
															"nativeSrc": "6873:139:7",
															"nodeType": "YulAssignment",
															"src": "6873:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7007:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7007:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_20a881cf3f301729162087809377e251ecb8eef784f0e70bb190c0868222ecfb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6881:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "6881:124:7"
																},
																"nativeSrc": "6881:131:7",
																"nodeType": "YulFunctionCall",
																"src": "6881:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6873:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6873:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_20a881cf3f301729162087809377e251ecb8eef784f0e70bb190c0868222ecfb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6600:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6751:9:7",
														"nodeType": "YulTypedName",
														"src": "6751:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6766:4:7",
														"nodeType": "YulTypedName",
														"src": "6766:4:7",
														"type": ""
													}
												],
												"src": "6600:419:7"
											},
											{
												"body": {
													"nativeSrc": "7151:206:7",
													"nodeType": "YulBlock",
													"src": "7151:206:7",
													"statements": [
														{
															"nativeSrc": "7161:26:7",
															"nodeType": "YulAssignment",
															"src": "7161:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7173:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7173:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7184:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7184:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7169:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7169:3:7"
																},
																"nativeSrc": "7169:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7169:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7161:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7161:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7241:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7241:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7254:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7254:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7265:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7265:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7250:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7250:3:7"
																		},
																		"nativeSrc": "7250:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7250:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7197:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7197:43:7"
																},
																"nativeSrc": "7197:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7197:71:7"
															},
															"nativeSrc": "7197:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7197:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7322:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7322:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7335:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7335:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7346:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7346:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7331:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7331:3:7"
																		},
																		"nativeSrc": "7331:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7331:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7278:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7278:43:7"
																},
																"nativeSrc": "7278:72:7",
																"nodeType": "YulFunctionCall",
																"src": "7278:72:7"
															},
															"nativeSrc": "7278:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "7278:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "7025:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7115:9:7",
														"nodeType": "YulTypedName",
														"src": "7115:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7127:6:7",
														"nodeType": "YulTypedName",
														"src": "7127:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7135:6:7",
														"nodeType": "YulTypedName",
														"src": "7135:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7146:4:7",
														"nodeType": "YulTypedName",
														"src": "7146:4:7",
														"type": ""
													}
												],
												"src": "7025:332:7"
											},
											{
												"body": {
													"nativeSrc": "7426:80:7",
													"nodeType": "YulBlock",
													"src": "7426:80:7",
													"statements": [
														{
															"nativeSrc": "7436:22:7",
															"nodeType": "YulAssignment",
															"src": "7436:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7451:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7451:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7445:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7445:5:7"
																},
																"nativeSrc": "7445:13:7",
																"nodeType": "YulFunctionCall",
																"src": "7445:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7436:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7436:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7494:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7494:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7467:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "7467:26:7"
																},
																"nativeSrc": "7467:33:7",
																"nodeType": "YulFunctionCall",
																"src": "7467:33:7"
															},
															"nativeSrc": "7467:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "7467:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "7363:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7404:6:7",
														"nodeType": "YulTypedName",
														"src": "7404:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7412:3:7",
														"nodeType": "YulTypedName",
														"src": "7412:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7420:5:7",
														"nodeType": "YulTypedName",
														"src": "7420:5:7",
														"type": ""
													}
												],
												"src": "7363:143:7"
											},
											{
												"body": {
													"nativeSrc": "7589:274:7",
													"nodeType": "YulBlock",
													"src": "7589:274:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7635:83:7",
																"nodeType": "YulBlock",
																"src": "7635:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7637:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7637:77:7"
																			},
																			"nativeSrc": "7637:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7637:79:7"
																		},
																		"nativeSrc": "7637:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7637:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7610:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7610:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7619:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7619:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7606:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7606:3:7"
																		},
																		"nativeSrc": "7606:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7606:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7631:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7631:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7602:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7602:3:7"
																},
																"nativeSrc": "7602:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7602:32:7"
															},
															"nativeSrc": "7599:119:7",
															"nodeType": "YulIf",
															"src": "7599:119:7"
														},
														{
															"nativeSrc": "7728:128:7",
															"nodeType": "YulBlock",
															"src": "7728:128:7",
															"statements": [
																{
																	"nativeSrc": "7743:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7743:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7757:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7757:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7747:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7747:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7772:74:7",
																	"nodeType": "YulAssignment",
																	"src": "7772:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7818:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7818:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7829:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7829:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7814:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7814:3:7"
																				},
																				"nativeSrc": "7814:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7814:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7838:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7838:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "7782:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "7782:31:7"
																		},
																		"nativeSrc": "7782:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7782:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7772:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7772:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7512:351:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7559:9:7",
														"nodeType": "YulTypedName",
														"src": "7559:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7570:7:7",
														"nodeType": "YulTypedName",
														"src": "7570:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7582:6:7",
														"nodeType": "YulTypedName",
														"src": "7582:6:7",
														"type": ""
													}
												],
												"src": "7512:351:7"
											},
											{
												"body": {
													"nativeSrc": "7975:61:7",
													"nodeType": "YulBlock",
													"src": "7975:61:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7997:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7997:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8005:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8005:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7993:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7993:3:7"
																		},
																		"nativeSrc": "7993:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7993:14:7"
																	},
																	{
																		"hexValue": "416c6c6f77616e6365206e6f7420736574",
																		"kind": "string",
																		"nativeSrc": "8009:19:7",
																		"nodeType": "YulLiteral",
																		"src": "8009:19:7",
																		"type": "",
																		"value": "Allowance not set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7986:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7986:6:7"
																},
																"nativeSrc": "7986:43:7",
																"nodeType": "YulFunctionCall",
																"src": "7986:43:7"
															},
															"nativeSrc": "7986:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "7986:43:7"
														}
													]
												},
												"name": "store_literal_in_memory_b7f5bbf01babd612ff41adb253311ab3eccd8d56664e3b6ae54fa2e62b1bbfb0",
												"nativeSrc": "7869:167:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7967:6:7",
														"nodeType": "YulTypedName",
														"src": "7967:6:7",
														"type": ""
													}
												],
												"src": "7869:167:7"
											},
											{
												"body": {
													"nativeSrc": "8188:220:7",
													"nodeType": "YulBlock",
													"src": "8188:220:7",
													"statements": [
														{
															"nativeSrc": "8198:74:7",
															"nodeType": "YulAssignment",
															"src": "8198:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8264:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8264:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8269:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8269:2:7",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8205:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "8205:58:7"
																},
																"nativeSrc": "8205:67:7",
																"nodeType": "YulFunctionCall",
																"src": "8205:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8198:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8198:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8370:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8370:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b7f5bbf01babd612ff41adb253311ab3eccd8d56664e3b6ae54fa2e62b1bbfb0",
																	"nativeSrc": "8281:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "8281:88:7"
																},
																"nativeSrc": "8281:93:7",
																"nodeType": "YulFunctionCall",
																"src": "8281:93:7"
															},
															"nativeSrc": "8281:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "8281:93:7"
														},
														{
															"nativeSrc": "8383:19:7",
															"nodeType": "YulAssignment",
															"src": "8383:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8394:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8394:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8399:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8399:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8390:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8390:3:7"
																},
																"nativeSrc": "8390:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8390:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8383:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8383:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b7f5bbf01babd612ff41adb253311ab3eccd8d56664e3b6ae54fa2e62b1bbfb0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8042:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8176:3:7",
														"nodeType": "YulTypedName",
														"src": "8176:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8184:3:7",
														"nodeType": "YulTypedName",
														"src": "8184:3:7",
														"type": ""
													}
												],
												"src": "8042:366:7"
											},
											{
												"body": {
													"nativeSrc": "8585:248:7",
													"nodeType": "YulBlock",
													"src": "8585:248:7",
													"statements": [
														{
															"nativeSrc": "8595:26:7",
															"nodeType": "YulAssignment",
															"src": "8595:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8607:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8607:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8618:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8618:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8603:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8603:3:7"
																},
																"nativeSrc": "8603:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8603:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8595:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8595:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8642:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8642:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8653:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8653:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8638:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8638:3:7"
																		},
																		"nativeSrc": "8638:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8638:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8661:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8661:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8667:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8667:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8657:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8657:3:7"
																		},
																		"nativeSrc": "8657:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8657:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8631:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8631:6:7"
																},
																"nativeSrc": "8631:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8631:47:7"
															},
															"nativeSrc": "8631:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8631:47:7"
														},
														{
															"nativeSrc": "8687:139:7",
															"nodeType": "YulAssignment",
															"src": "8687:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8821:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8821:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b7f5bbf01babd612ff41adb253311ab3eccd8d56664e3b6ae54fa2e62b1bbfb0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8695:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "8695:124:7"
																},
																"nativeSrc": "8695:131:7",
																"nodeType": "YulFunctionCall",
																"src": "8695:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8687:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8687:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b7f5bbf01babd612ff41adb253311ab3eccd8d56664e3b6ae54fa2e62b1bbfb0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8414:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8565:9:7",
														"nodeType": "YulTypedName",
														"src": "8565:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8580:4:7",
														"nodeType": "YulTypedName",
														"src": "8580:4:7",
														"type": ""
													}
												],
												"src": "8414:419:7"
											},
											{
												"body": {
													"nativeSrc": "8945:64:7",
													"nodeType": "YulBlock",
													"src": "8945:64:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8967:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8967:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8975:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8975:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8963:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8963:3:7"
																		},
																		"nativeSrc": "8963:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8963:14:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "8979:22:7",
																		"nodeType": "YulLiteral",
																		"src": "8979:22:7",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8956:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8956:6:7"
																},
																"nativeSrc": "8956:46:7",
																"nodeType": "YulFunctionCall",
																"src": "8956:46:7"
															},
															"nativeSrc": "8956:46:7",
															"nodeType": "YulExpressionStatement",
															"src": "8956:46:7"
														}
													]
												},
												"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
												"nativeSrc": "8839:170:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8937:6:7",
														"nodeType": "YulTypedName",
														"src": "8937:6:7",
														"type": ""
													}
												],
												"src": "8839:170:7"
											},
											{
												"body": {
													"nativeSrc": "9161:220:7",
													"nodeType": "YulBlock",
													"src": "9161:220:7",
													"statements": [
														{
															"nativeSrc": "9171:74:7",
															"nodeType": "YulAssignment",
															"src": "9171:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9237:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9237:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9242:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9242:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9178:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "9178:58:7"
																},
																"nativeSrc": "9178:67:7",
																"nodeType": "YulFunctionCall",
																"src": "9178:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9171:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9171:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9343:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9343:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																	"nativeSrc": "9254:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "9254:88:7"
																},
																"nativeSrc": "9254:93:7",
																"nodeType": "YulFunctionCall",
																"src": "9254:93:7"
															},
															"nativeSrc": "9254:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "9254:93:7"
														},
														{
															"nativeSrc": "9356:19:7",
															"nodeType": "YulAssignment",
															"src": "9356:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9367:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9367:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9372:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9372:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9363:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9363:3:7"
																},
																"nativeSrc": "9363:12:7",
																"nodeType": "YulFunctionCall",
																"src": "9363:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9356:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9356:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9015:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9149:3:7",
														"nodeType": "YulTypedName",
														"src": "9149:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9157:3:7",
														"nodeType": "YulTypedName",
														"src": "9157:3:7",
														"type": ""
													}
												],
												"src": "9015:366:7"
											},
											{
												"body": {
													"nativeSrc": "9558:248:7",
													"nodeType": "YulBlock",
													"src": "9558:248:7",
													"statements": [
														{
															"nativeSrc": "9568:26:7",
															"nodeType": "YulAssignment",
															"src": "9568:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9580:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9580:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9591:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9591:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9576:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9576:3:7"
																},
																"nativeSrc": "9576:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9576:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9568:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9568:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9615:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9615:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9626:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9626:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9611:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9611:3:7"
																		},
																		"nativeSrc": "9611:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9611:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9634:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9634:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9640:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9640:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9630:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9630:3:7"
																		},
																		"nativeSrc": "9630:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9630:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9604:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9604:6:7"
																},
																"nativeSrc": "9604:47:7",
																"nodeType": "YulFunctionCall",
																"src": "9604:47:7"
															},
															"nativeSrc": "9604:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "9604:47:7"
														},
														{
															"nativeSrc": "9660:139:7",
															"nodeType": "YulAssignment",
															"src": "9660:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9794:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "9794:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9668:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "9668:124:7"
																},
																"nativeSrc": "9668:131:7",
																"nodeType": "YulFunctionCall",
																"src": "9668:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9660:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9660:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9387:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9538:9:7",
														"nodeType": "YulTypedName",
														"src": "9538:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9553:4:7",
														"nodeType": "YulTypedName",
														"src": "9553:4:7",
														"type": ""
													}
												],
												"src": "9387:419:7"
											},
											{
												"body": {
													"nativeSrc": "9966:288:7",
													"nodeType": "YulBlock",
													"src": "9966:288:7",
													"statements": [
														{
															"nativeSrc": "9976:26:7",
															"nodeType": "YulAssignment",
															"src": "9976:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9988:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9988:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9999:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9999:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9984:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9984:3:7"
																},
																"nativeSrc": "9984:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9984:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9976:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9976:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10056:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10056:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10069:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10069:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10080:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10080:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10065:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10065:3:7"
																		},
																		"nativeSrc": "10065:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10065:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10012:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10012:43:7"
																},
																"nativeSrc": "10012:71:7",
																"nodeType": "YulFunctionCall",
																"src": "10012:71:7"
															},
															"nativeSrc": "10012:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "10012:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10137:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10137:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10150:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10150:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10161:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10161:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10146:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10146:3:7"
																		},
																		"nativeSrc": "10146:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10146:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10093:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10093:43:7"
																},
																"nativeSrc": "10093:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10093:72:7"
															},
															"nativeSrc": "10093:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10093:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10219:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10219:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10232:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10232:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10243:2:7",
																				"nodeType": "YulLiteral",
																				"src": "10243:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10228:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10228:3:7"
																		},
																		"nativeSrc": "10228:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10228:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10175:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "10175:43:7"
																},
																"nativeSrc": "10175:72:7",
																"nodeType": "YulFunctionCall",
																"src": "10175:72:7"
															},
															"nativeSrc": "10175:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "10175:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9812:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9922:9:7",
														"nodeType": "YulTypedName",
														"src": "9922:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9934:6:7",
														"nodeType": "YulTypedName",
														"src": "9934:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9942:6:7",
														"nodeType": "YulTypedName",
														"src": "9942:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9950:6:7",
														"nodeType": "YulTypedName",
														"src": "9950:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9961:4:7",
														"nodeType": "YulTypedName",
														"src": "9961:4:7",
														"type": ""
													}
												],
												"src": "9812:442:7"
											},
											{
												"body": {
													"nativeSrc": "10300:76:7",
													"nodeType": "YulBlock",
													"src": "10300:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "10354:16:7",
																"nodeType": "YulBlock",
																"src": "10354:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10363:1:7",
																					"nodeType": "YulLiteral",
																					"src": "10363:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10366:1:7",
																					"nodeType": "YulLiteral",
																					"src": "10366:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10356:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10356:6:7"
																			},
																			"nativeSrc": "10356:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10356:12:7"
																		},
																		"nativeSrc": "10356:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10356:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10323:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "10323:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10345:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "10345:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "10330:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "10330:14:7"
																				},
																				"nativeSrc": "10330:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10330:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10320:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "10320:2:7"
																		},
																		"nativeSrc": "10320:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10320:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10313:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10313:6:7"
																},
																"nativeSrc": "10313:40:7",
																"nodeType": "YulFunctionCall",
																"src": "10313:40:7"
															},
															"nativeSrc": "10310:60:7",
															"nodeType": "YulIf",
															"src": "10310:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "10260:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10293:5:7",
														"nodeType": "YulTypedName",
														"src": "10293:5:7",
														"type": ""
													}
												],
												"src": "10260:116:7"
											},
											{
												"body": {
													"nativeSrc": "10442:77:7",
													"nodeType": "YulBlock",
													"src": "10442:77:7",
													"statements": [
														{
															"nativeSrc": "10452:22:7",
															"nodeType": "YulAssignment",
															"src": "10452:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10467:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "10467:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10461:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "10461:5:7"
																},
																"nativeSrc": "10461:13:7",
																"nodeType": "YulFunctionCall",
																"src": "10461:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10452:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "10452:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10507:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "10507:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "10483:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "10483:23:7"
																},
																"nativeSrc": "10483:30:7",
																"nodeType": "YulFunctionCall",
																"src": "10483:30:7"
															},
															"nativeSrc": "10483:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "10483:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "10382:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10420:6:7",
														"nodeType": "YulTypedName",
														"src": "10420:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10428:3:7",
														"nodeType": "YulTypedName",
														"src": "10428:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10436:5:7",
														"nodeType": "YulTypedName",
														"src": "10436:5:7",
														"type": ""
													}
												],
												"src": "10382:137:7"
											},
											{
												"body": {
													"nativeSrc": "10599:271:7",
													"nodeType": "YulBlock",
													"src": "10599:271:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "10645:83:7",
																"nodeType": "YulBlock",
																"src": "10645:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10647:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "10647:77:7"
																			},
																			"nativeSrc": "10647:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "10647:79:7"
																		},
																		"nativeSrc": "10647:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "10647:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10620:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10620:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10629:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10629:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10616:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10616:3:7"
																		},
																		"nativeSrc": "10616:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10616:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10641:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10641:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10612:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10612:3:7"
																},
																"nativeSrc": "10612:32:7",
																"nodeType": "YulFunctionCall",
																"src": "10612:32:7"
															},
															"nativeSrc": "10609:119:7",
															"nodeType": "YulIf",
															"src": "10609:119:7"
														},
														{
															"nativeSrc": "10738:125:7",
															"nodeType": "YulBlock",
															"src": "10738:125:7",
															"statements": [
																{
																	"nativeSrc": "10753:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10753:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10767:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10767:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10757:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10757:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10782:71:7",
																	"nodeType": "YulAssignment",
																	"src": "10782:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10825:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10825:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10836:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10836:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10821:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10821:3:7"
																				},
																				"nativeSrc": "10821:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10821:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10845:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10845:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "10792:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "10792:28:7"
																		},
																		"nativeSrc": "10792:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10792:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10782:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10782:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "10525:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10569:9:7",
														"nodeType": "YulTypedName",
														"src": "10569:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10580:7:7",
														"nodeType": "YulTypedName",
														"src": "10580:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10592:6:7",
														"nodeType": "YulTypedName",
														"src": "10592:6:7",
														"type": ""
													}
												],
												"src": "10525:345:7"
											},
											{
												"body": {
													"nativeSrc": "10904:152:7",
													"nodeType": "YulBlock",
													"src": "10904:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10921:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10921:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10924:77:7",
																		"nodeType": "YulLiteral",
																		"src": "10924:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10914:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10914:6:7"
																},
																"nativeSrc": "10914:88:7",
																"nodeType": "YulFunctionCall",
																"src": "10914:88:7"
															},
															"nativeSrc": "10914:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "10914:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11018:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11018:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11021:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11021:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11011:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11011:6:7"
																},
																"nativeSrc": "11011:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11011:15:7"
															},
															"nativeSrc": "11011:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11011:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11042:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11042:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11045:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11045:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11035:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11035:6:7"
																},
																"nativeSrc": "11035:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11035:15:7"
															},
															"nativeSrc": "11035:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11035:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10876:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "10876:180:7"
											},
											{
												"body": {
													"nativeSrc": "11106:147:7",
													"nodeType": "YulBlock",
													"src": "11106:147:7",
													"statements": [
														{
															"nativeSrc": "11116:25:7",
															"nodeType": "YulAssignment",
															"src": "11116:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11139:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11139:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11121:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11121:17:7"
																},
																"nativeSrc": "11121:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11121:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11116:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11116:1:7"
																}
															]
														},
														{
															"nativeSrc": "11150:25:7",
															"nodeType": "YulAssignment",
															"src": "11150:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11173:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11173:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11155:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11155:17:7"
																},
																"nativeSrc": "11155:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11155:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11150:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11150:1:7"
																}
															]
														},
														{
															"nativeSrc": "11184:16:7",
															"nodeType": "YulAssignment",
															"src": "11184:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11195:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11195:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11198:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11198:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11191:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11191:3:7"
																},
																"nativeSrc": "11191:9:7",
																"nodeType": "YulFunctionCall",
																"src": "11191:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11184:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11184:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11224:22:7",
																"nodeType": "YulBlock",
																"src": "11224:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11226:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11226:16:7"
																			},
																			"nativeSrc": "11226:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11226:18:7"
																		},
																		"nativeSrc": "11226:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11226:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11216:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11216:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11219:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11219:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11213:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "11213:2:7"
																},
																"nativeSrc": "11213:10:7",
																"nodeType": "YulFunctionCall",
																"src": "11213:10:7"
															},
															"nativeSrc": "11210:36:7",
															"nodeType": "YulIf",
															"src": "11210:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11062:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11093:1:7",
														"nodeType": "YulTypedName",
														"src": "11093:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11096:1:7",
														"nodeType": "YulTypedName",
														"src": "11096:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11102:3:7",
														"nodeType": "YulTypedName",
														"src": "11102:3:7",
														"type": ""
													}
												],
												"src": "11062:191:7"
											},
											{
												"body": {
													"nativeSrc": "11307:362:7",
													"nodeType": "YulBlock",
													"src": "11307:362:7",
													"statements": [
														{
															"nativeSrc": "11317:25:7",
															"nodeType": "YulAssignment",
															"src": "11317:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11340:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11340:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11322:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11322:17:7"
																},
																"nativeSrc": "11322:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11322:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11317:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11317:1:7"
																}
															]
														},
														{
															"nativeSrc": "11351:25:7",
															"nodeType": "YulAssignment",
															"src": "11351:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11374:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11374:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11356:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11356:17:7"
																},
																"nativeSrc": "11356:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11356:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11351:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11351:1:7"
																}
															]
														},
														{
															"nativeSrc": "11385:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "11385:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11408:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11408:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11411:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11411:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11404:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11404:3:7"
																},
																"nativeSrc": "11404:9:7",
																"nodeType": "YulFunctionCall",
																"src": "11404:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11389:11:7",
																	"nodeType": "YulTypedName",
																	"src": "11389:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11422:41:7",
															"nodeType": "YulAssignment",
															"src": "11422:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11451:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "11451:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11433:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11433:17:7"
																},
																"nativeSrc": "11433:30:7",
																"nodeType": "YulFunctionCall",
																"src": "11433:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11422:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "11422:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11640:22:7",
																"nodeType": "YulBlock",
																"src": "11640:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11642:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11642:16:7"
																			},
																			"nativeSrc": "11642:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11642:18:7"
																		},
																		"nativeSrc": "11642:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11642:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11573:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "11573:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11566:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "11566:6:7"
																				},
																				"nativeSrc": "11566:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11566:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11596:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "11596:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11603:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "11603:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11612:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "11612:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11599:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "11599:3:7"
																						},
																						"nativeSrc": "11599:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "11599:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11593:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "11593:2:7"
																				},
																				"nativeSrc": "11593:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11593:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11546:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "11546:2:7"
																		},
																		"nativeSrc": "11546:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11546:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11526:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11526:6:7"
																},
																"nativeSrc": "11526:113:7",
																"nodeType": "YulFunctionCall",
																"src": "11526:113:7"
															},
															"nativeSrc": "11523:139:7",
															"nodeType": "YulIf",
															"src": "11523:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11259:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11290:1:7",
														"nodeType": "YulTypedName",
														"src": "11290:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11293:1:7",
														"nodeType": "YulTypedName",
														"src": "11293:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "11299:7:7",
														"nodeType": "YulTypedName",
														"src": "11299:7:7",
														"type": ""
													}
												],
												"src": "11259:410:7"
											},
											{
												"body": {
													"nativeSrc": "11703:152:7",
													"nodeType": "YulBlock",
													"src": "11703:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11720:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11720:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11723:77:7",
																		"nodeType": "YulLiteral",
																		"src": "11723:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11713:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11713:6:7"
																},
																"nativeSrc": "11713:88:7",
																"nodeType": "YulFunctionCall",
																"src": "11713:88:7"
															},
															"nativeSrc": "11713:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "11713:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11817:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11817:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11820:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11820:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11810:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11810:6:7"
																},
																"nativeSrc": "11810:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11810:15:7"
															},
															"nativeSrc": "11810:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11810:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11841:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11841:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11844:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11844:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11834:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11834:6:7"
																},
																"nativeSrc": "11834:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11834:15:7"
															},
															"nativeSrc": "11834:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11834:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "11675:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "11675:180:7"
											},
											{
												"body": {
													"nativeSrc": "11903:143:7",
													"nodeType": "YulBlock",
													"src": "11903:143:7",
													"statements": [
														{
															"nativeSrc": "11913:25:7",
															"nodeType": "YulAssignment",
															"src": "11913:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11936:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11936:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11918:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11918:17:7"
																},
																"nativeSrc": "11918:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11918:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11913:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11913:1:7"
																}
															]
														},
														{
															"nativeSrc": "11947:25:7",
															"nodeType": "YulAssignment",
															"src": "11947:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11970:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11970:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11952:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "11952:17:7"
																},
																"nativeSrc": "11952:20:7",
																"nodeType": "YulFunctionCall",
																"src": "11952:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11947:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "11947:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11994:22:7",
																"nodeType": "YulBlock",
																"src": "11994:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "11996:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "11996:16:7"
																			},
																			"nativeSrc": "11996:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11996:18:7"
																		},
																		"nativeSrc": "11996:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11996:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11991:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "11991:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11984:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11984:6:7"
																},
																"nativeSrc": "11984:9:7",
																"nodeType": "YulFunctionCall",
																"src": "11984:9:7"
															},
															"nativeSrc": "11981:35:7",
															"nodeType": "YulIf",
															"src": "11981:35:7"
														},
														{
															"nativeSrc": "12026:14:7",
															"nodeType": "YulAssignment",
															"src": "12026:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12035:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12035:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12038:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12038:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12031:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12031:3:7"
																},
																"nativeSrc": "12031:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12031:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "12026:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12026:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "11861:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11892:1:7",
														"nodeType": "YulTypedName",
														"src": "11892:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11895:1:7",
														"nodeType": "YulTypedName",
														"src": "11895:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11901:1:7",
														"nodeType": "YulTypedName",
														"src": "11901:1:7",
														"type": ""
													}
												],
												"src": "11861:185:7"
											},
											{
												"body": {
													"nativeSrc": "12080:152:7",
													"nodeType": "YulBlock",
													"src": "12080:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12097:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12097:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12100:77:7",
																		"nodeType": "YulLiteral",
																		"src": "12100:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12090:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12090:6:7"
																},
																"nativeSrc": "12090:88:7",
																"nodeType": "YulFunctionCall",
																"src": "12090:88:7"
															},
															"nativeSrc": "12090:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "12090:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12194:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12197:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12197:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12187:6:7"
																},
																"nativeSrc": "12187:15:7",
																"nodeType": "YulFunctionCall",
																"src": "12187:15:7"
															},
															"nativeSrc": "12187:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "12187:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12218:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12218:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12221:4:7",
																		"nodeType": "YulLiteral",
																		"src": "12221:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12211:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12211:6:7"
																},
																"nativeSrc": "12211:15:7",
																"nodeType": "YulFunctionCall",
																"src": "12211:15:7"
															},
															"nativeSrc": "12211:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "12211:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "12052:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "12052:180:7"
											},
											{
												"body": {
													"nativeSrc": "12283:149:7",
													"nodeType": "YulBlock",
													"src": "12283:149:7",
													"statements": [
														{
															"nativeSrc": "12293:25:7",
															"nodeType": "YulAssignment",
															"src": "12293:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12316:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12316:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12298:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12298:17:7"
																},
																"nativeSrc": "12298:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12298:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12293:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12293:1:7"
																}
															]
														},
														{
															"nativeSrc": "12327:25:7",
															"nodeType": "YulAssignment",
															"src": "12327:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12350:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12350:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12332:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "12332:17:7"
																},
																"nativeSrc": "12332:20:7",
																"nodeType": "YulFunctionCall",
																"src": "12332:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12327:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "12327:1:7"
																}
															]
														},
														{
															"nativeSrc": "12361:17:7",
															"nodeType": "YulAssignment",
															"src": "12361:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12373:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12373:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12376:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12376:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12369:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12369:3:7"
																},
																"nativeSrc": "12369:9:7",
																"nodeType": "YulFunctionCall",
																"src": "12369:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "12361:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12361:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12403:22:7",
																"nodeType": "YulBlock",
																"src": "12403:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12405:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "12405:16:7"
																			},
																			"nativeSrc": "12405:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12405:18:7"
																		},
																		"nativeSrc": "12405:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12405:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "12394:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12394:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "12400:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12400:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12391:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "12391:2:7"
																},
																"nativeSrc": "12391:11:7",
																"nodeType": "YulFunctionCall",
																"src": "12391:11:7"
															},
															"nativeSrc": "12388:37:7",
															"nodeType": "YulIf",
															"src": "12388:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "12238:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12269:1:7",
														"nodeType": "YulTypedName",
														"src": "12269:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12272:1:7",
														"nodeType": "YulTypedName",
														"src": "12272:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "12278:4:7",
														"nodeType": "YulTypedName",
														"src": "12278:4:7",
														"type": ""
													}
												],
												"src": "12238:194:7"
											},
											{
												"body": {
													"nativeSrc": "12496:40:7",
													"nodeType": "YulBlock",
													"src": "12496:40:7",
													"statements": [
														{
															"nativeSrc": "12507:22:7",
															"nodeType": "YulAssignment",
															"src": "12507:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12523:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "12523:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12517:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "12517:5:7"
																},
																"nativeSrc": "12517:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12517:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12507:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12507:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "12438:98:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12479:5:7",
														"nodeType": "YulTypedName",
														"src": "12479:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12489:6:7",
														"nodeType": "YulTypedName",
														"src": "12489:6:7",
														"type": ""
													}
												],
												"src": "12438:98:7"
											},
											{
												"body": {
													"nativeSrc": "12655:34:7",
													"nodeType": "YulBlock",
													"src": "12655:34:7",
													"statements": [
														{
															"nativeSrc": "12665:18:7",
															"nodeType": "YulAssignment",
															"src": "12665:18:7",
															"value": {
																"name": "pos",
																"nativeSrc": "12680:3:7",
																"nodeType": "YulIdentifier",
																"src": "12680:3:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12665:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "12665:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12542:147:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12627:3:7",
														"nodeType": "YulTypedName",
														"src": "12627:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12632:6:7",
														"nodeType": "YulTypedName",
														"src": "12632:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12643:11:7",
														"nodeType": "YulTypedName",
														"src": "12643:11:7",
														"type": ""
													}
												],
												"src": "12542:147:7"
											},
											{
												"body": {
													"nativeSrc": "12757:184:7",
													"nodeType": "YulBlock",
													"src": "12757:184:7",
													"statements": [
														{
															"nativeSrc": "12767:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "12767:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "12776:1:7",
																"nodeType": "YulLiteral",
																"src": "12776:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "12771:1:7",
																	"nodeType": "YulTypedName",
																	"src": "12771:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12836:63:7",
																"nodeType": "YulBlock",
																"src": "12836:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "12861:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "12861:3:7"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "12866:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "12866:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "12857:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "12857:3:7"
																					},
																					"nativeSrc": "12857:11:7",
																					"nodeType": "YulFunctionCall",
																					"src": "12857:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "12880:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "12880:3:7"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "12885:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "12885:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "12876:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "12876:3:7"
																							},
																							"nativeSrc": "12876:11:7",
																							"nodeType": "YulFunctionCall",
																							"src": "12876:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "12870:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "12870:5:7"
																					},
																					"nativeSrc": "12870:18:7",
																					"nodeType": "YulFunctionCall",
																					"src": "12870:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12850:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12850:6:7"
																			},
																			"nativeSrc": "12850:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12850:39:7"
																		},
																		"nativeSrc": "12850:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12850:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "12797:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "12797:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12800:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "12800:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12794:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "12794:2:7"
																},
																"nativeSrc": "12794:13:7",
																"nodeType": "YulFunctionCall",
																"src": "12794:13:7"
															},
															"nativeSrc": "12786:113:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "12808:19:7",
																"nodeType": "YulBlock",
																"src": "12808:19:7",
																"statements": [
																	{
																		"nativeSrc": "12810:15:7",
																		"nodeType": "YulAssignment",
																		"src": "12810:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "12819:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "12819:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12822:2:7",
																					"nodeType": "YulLiteral",
																					"src": "12822:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12815:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "12815:3:7"
																			},
																			"nativeSrc": "12815:10:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12815:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "12810:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "12810:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "12790:3:7",
																"nodeType": "YulBlock",
																"src": "12790:3:7",
																"statements": []
															},
															"src": "12786:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "12919:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "12919:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "12924:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12924:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12915:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12915:3:7"
																		},
																		"nativeSrc": "12915:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12915:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12933:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12933:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12908:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12908:6:7"
																},
																"nativeSrc": "12908:27:7",
																"nodeType": "YulFunctionCall",
																"src": "12908:27:7"
															},
															"nativeSrc": "12908:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "12908:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "12695:246:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "12739:3:7",
														"nodeType": "YulTypedName",
														"src": "12739:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "12744:3:7",
														"nodeType": "YulTypedName",
														"src": "12744:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12749:6:7",
														"nodeType": "YulTypedName",
														"src": "12749:6:7",
														"type": ""
													}
												],
												"src": "12695:246:7"
											},
											{
												"body": {
													"nativeSrc": "13055:278:7",
													"nodeType": "YulBlock",
													"src": "13055:278:7",
													"statements": [
														{
															"nativeSrc": "13065:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "13065:52:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13111:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "13111:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "13079:31:7",
																	"nodeType": "YulIdentifier",
																	"src": "13079:31:7"
																},
																"nativeSrc": "13079:38:7",
																"nodeType": "YulFunctionCall",
																"src": "13079:38:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13069:6:7",
																	"nodeType": "YulTypedName",
																	"src": "13069:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13126:95:7",
															"nodeType": "YulAssignment",
															"src": "13126:95:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13209:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13209:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13214:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13214:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13133:75:7",
																	"nodeType": "YulIdentifier",
																	"src": "13133:75:7"
																},
																"nativeSrc": "13133:88:7",
																"nodeType": "YulFunctionCall",
																"src": "13133:88:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13126:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13126:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13269:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "13269:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13276:4:7",
																				"nodeType": "YulLiteral",
																				"src": "13276:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13265:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13265:3:7"
																		},
																		"nativeSrc": "13265:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13265:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13283:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13283:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13288:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13288:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "13230:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "13230:34:7"
																},
																"nativeSrc": "13230:65:7",
																"nodeType": "YulFunctionCall",
																"src": "13230:65:7"
															},
															"nativeSrc": "13230:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "13230:65:7"
														},
														{
															"nativeSrc": "13304:23:7",
															"nodeType": "YulAssignment",
															"src": "13304:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13315:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13315:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13320:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13320:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13311:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13311:3:7"
																},
																"nativeSrc": "13311:16:7",
																"nodeType": "YulFunctionCall",
																"src": "13311:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13304:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13304:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12947:386:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13036:5:7",
														"nodeType": "YulTypedName",
														"src": "13036:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13043:3:7",
														"nodeType": "YulTypedName",
														"src": "13043:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13051:3:7",
														"nodeType": "YulTypedName",
														"src": "13051:3:7",
														"type": ""
													}
												],
												"src": "12947:386:7"
											},
											{
												"body": {
													"nativeSrc": "13473:137:7",
													"nodeType": "YulBlock",
													"src": "13473:137:7",
													"statements": [
														{
															"nativeSrc": "13484:100:7",
															"nodeType": "YulAssignment",
															"src": "13484:100:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13571:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13571:6:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13580:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13580:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13491:79:7",
																	"nodeType": "YulIdentifier",
																	"src": "13491:79:7"
																},
																"nativeSrc": "13491:93:7",
																"nodeType": "YulFunctionCall",
																"src": "13491:93:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13484:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13484:3:7"
																}
															]
														},
														{
															"nativeSrc": "13594:10:7",
															"nodeType": "YulAssignment",
															"src": "13594:10:7",
															"value": {
																"name": "pos",
																"nativeSrc": "13601:3:7",
																"nodeType": "YulIdentifier",
																"src": "13601:3:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13594:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13594:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13339:271:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13452:3:7",
														"nodeType": "YulTypedName",
														"src": "13452:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13458:6:7",
														"nodeType": "YulTypedName",
														"src": "13458:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13469:3:7",
														"nodeType": "YulTypedName",
														"src": "13469:3:7",
														"type": ""
													}
												],
												"src": "13339:271:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e4b1ff88c98651e5d7d85eb43f5a141517ae9ecbf5e440d1ab5dd743d5169ea1(memPtr) {\n\n        mstore(add(memPtr, 0), \"This Address is not exist!\")\n\n    }\n\n    function abi_encode_t_stringliteral_e4b1ff88c98651e5d7d85eb43f5a141517ae9ecbf5e440d1ab5dd743d5169ea1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_e4b1ff88c98651e5d7d85eb43f5a141517ae9ecbf5e440d1ab5dd743d5169ea1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e4b1ff88c98651e5d7d85eb43f5a141517ae9ecbf5e440d1ab5dd743d5169ea1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e4b1ff88c98651e5d7d85eb43f5a141517ae9ecbf5e440d1ab5dd743d5169ea1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_69cc1d0091f450c9f1b40951e04a8e02ae8a28f18820a3d492d53b3c2bca82f7(memPtr) {\n\n        mstore(add(memPtr, 0), \"This Address is already WhiteLis\")\n\n        mstore(add(memPtr, 32), \"ted!\")\n\n    }\n\n    function abi_encode_t_stringliteral_69cc1d0091f450c9f1b40951e04a8e02ae8a28f18820a3d492d53b3c2bca82f7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_69cc1d0091f450c9f1b40951e04a8e02ae8a28f18820a3d492d53b3c2bca82f7(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_69cc1d0091f450c9f1b40951e04a8e02ae8a28f18820a3d492d53b3c2bca82f7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_69cc1d0091f450c9f1b40951e04a8e02ae8a28f18820a3d492d53b3c2bca82f7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_20a881cf3f301729162087809377e251ecb8eef784f0e70bb190c0868222ecfb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Accept only (USDM,DIA,USDT,USDC)\")\n\n        mstore(add(memPtr, 32), \" Tokens\")\n\n    }\n\n    function abi_encode_t_stringliteral_20a881cf3f301729162087809377e251ecb8eef784f0e70bb190c0868222ecfb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_20a881cf3f301729162087809377e251ecb8eef784f0e70bb190c0868222ecfb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_20a881cf3f301729162087809377e251ecb8eef784f0e70bb190c0868222ecfb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_20a881cf3f301729162087809377e251ecb8eef784f0e70bb190c0868222ecfb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_b7f5bbf01babd612ff41adb253311ab3eccd8d56664e3b6ae54fa2e62b1bbfb0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Allowance not set\")\n\n    }\n\n    function abi_encode_t_stringliteral_b7f5bbf01babd612ff41adb253311ab3eccd8d56664e3b6ae54fa2e62b1bbfb0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_b7f5bbf01babd612ff41adb253311ab3eccd8d56664e3b6ae54fa2e62b1bbfb0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b7f5bbf01babd612ff41adb253311ab3eccd8d56664e3b6ae54fa2e62b1bbfb0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b7f5bbf01babd612ff41adb253311ab3eccd8d56664e3b6ae54fa2e62b1bbfb0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100cd575f3560e01c80639c2c67c91161008a578063b9818be111610064578063b9818be1146101e7578063e1ad418e14610205578063f09f0aac14610235578063f2fde38b14610265576100cd565b80639c2c67c91461017d578063a114398d1461019b578063a4329677146101b7576100cd565b806301bf6648146100d1578063372c12b1146100ed5780634f1bd9ca1461011d5780636bc2015714610139578063715018a6146101555780638da5cb5b1461015f575b5f80fd5b6100eb60048036038101906100e691906111e7565b610281565b005b610107600480360381019061010291906111e7565b610369565b604051610114919061122c565b60405180910390f35b61013760048036038101906101329190611278565b610386565b005b610153600480360381019061014e91906111e7565b6103f6565b005b61015d610540565b005b610167610553565b60405161017491906112c5565b60405180910390f35b61018561057a565b60405161019291906112ed565b60405180910390f35b6101b560048036038101906101b09190611278565b610580565b005b6101d160048036038101906101cc91906111e7565b610bfe565b6040516101de91906112ed565b60405180910390f35b6101ef610c7e565b6040516101fc91906112c5565b60405180910390f35b61021f600480360381019061021a91906111e7565b610ca3565b60405161022c91906112ed565b60405180910390f35b61024f600480360381019061024a9190611306565b610cb8565b60405161025c91906112c5565b60405180910390f35b61027f600480360381019061027a91906111e7565b610cf3565b005b610289610d77565b60025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610312576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103099061138b565b60405180910390fd5b5f60025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b6002602052805f5260405f205f915054906101000a900460ff1681565b61038e610d77565b6103b933828473ffffffffffffffffffffffffffffffffffffffff16610dfe9092919063ffffffff16565b7f92ba58c57c335232a5e63d6dbabcefcee8074c3d8909bc7f8e63dd6e434b280d33826040516103ea9291906113a9565b60405180910390a15050565b6103fe610d77565b60025f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610488576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047f90611440565b60405180910390fd5b600381908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160025f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b610548610d77565b6105515f610e7d565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60055481565b73e9a05afac6e76749462f6537fed148f34a92c0f773ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16148061060d57507307b25cc8082abc65c70b9e5f00b7f3b8fcf6814b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806106575750732df4faece2ea8b8fb5efa8e022edec520c2f0fa473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b806106a15750731059dc58fee94fd0caf8a5c9a9b936843f0c532973ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b6106e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d7906114ce565b60405180910390fd5b808273ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b815260040161071c9291906114ec565b602060405180830381865afa158015610737573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061075b9190611527565b101561079c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107939061159c565b60405180910390fd5b808273ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016107d691906112c5565b602060405180830381865afa1580156107f1573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108159190611527565b1015610856576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084d90611604565b60405180910390fd5b73e9a05afac6e76749462f6537fed148f34a92c0f773ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109b3578173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016108da93929190611622565b6020604051808303815f875af11580156108f6573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061091a9190611681565b508060055f82825461092c91906116d9565b925050819055508060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055507fcc87ab2abfe87b272af9b77691e40b3d9186a0431f3d41a8e06d39614f46072233826040516109a69291906113a9565b60405180910390a1610bfa565b5f6103e86003836109c4919061170c565b6109ce919061177a565b90505f600380549050826109e2919061177a565b90505f5b600380549050811015610ab9578473ffffffffffffffffffffffffffffffffffffffff166323b872dd3360038481548110610a2457610a236117aa565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518463ffffffff1660e01b8152600401610a6b93929190611622565b6020604051808303815f875af1158015610a87573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610aab9190611681565b5080806001019150506109e6565b508373ffffffffffffffffffffffffffffffffffffffff166323b872dd33308587610ae491906117d7565b6040518463ffffffff1660e01b8152600401610b0293929190611622565b6020604051808303815f875af1158015610b1e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b429190611681565b508183610b4f91906117d7565b60055f828254610b5f91906116d9565b925050819055508183610b7291906117d7565b60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055507fcc87ab2abfe87b272af9b77691e40b3d9186a0431f3d41a8e06d39614f460722338385610be191906117d7565b604051610bef9291906113a9565b60405180910390a150505b5050565b5f8173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610c3891906112c5565b602060405180830381865afa158015610c53573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c779190611527565b9050919050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6004602052805f5260405f205f915090505481565b60038181548110610cc7575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610cfb610d77565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d6b575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d6291906112c5565b60405180910390fd5b610d7481610e7d565b50565b610d7f610f3e565b73ffffffffffffffffffffffffffffffffffffffff16610d9d610553565b73ffffffffffffffffffffffffffffffffffffffff1614610dfc57610dc0610f3e565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610df391906112c5565b60405180910390fd5b565b610e78838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610e319291906113a9565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610f45565b505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f33905090565b5f610f6f828473ffffffffffffffffffffffffffffffffffffffff16610fda90919063ffffffff16565b90505f815114158015610f93575080806020019051810190610f919190611681565b155b15610fd557826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401610fcc91906112c5565b60405180910390fd5b505050565b6060610fe783835f610fef565b905092915050565b60608147101561103657306040517fcd78605900000000000000000000000000000000000000000000000000000000815260040161102d91906112c5565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff16848660405161105e9190611876565b5f6040518083038185875af1925050503d805f8114611098576040519150601f19603f3d011682016040523d82523d5f602084013e61109d565b606091505b50915091506110ad8683836110b8565b925050509392505050565b6060826110cd576110c882611145565b61113d565b5f82511480156110f357505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561113557836040517f9996b31500000000000000000000000000000000000000000000000000000000815260040161112c91906112c5565b60405180910390fd5b81905061113e565b5b9392505050565b5f815111156111575780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6111b68261118d565b9050919050565b6111c6816111ac565b81146111d0575f80fd5b50565b5f813590506111e1816111bd565b92915050565b5f602082840312156111fc576111fb611189565b5b5f611209848285016111d3565b91505092915050565b5f8115159050919050565b61122681611212565b82525050565b5f60208201905061123f5f83018461121d565b92915050565b5f819050919050565b61125781611245565b8114611261575f80fd5b50565b5f813590506112728161124e565b92915050565b5f806040838503121561128e5761128d611189565b5b5f61129b858286016111d3565b92505060206112ac85828601611264565b9150509250929050565b6112bf816111ac565b82525050565b5f6020820190506112d85f8301846112b6565b92915050565b6112e781611245565b82525050565b5f6020820190506113005f8301846112de565b92915050565b5f6020828403121561131b5761131a611189565b5b5f61132884828501611264565b91505092915050565b5f82825260208201905092915050565b7f546869732041646472657373206973206e6f74206578697374210000000000005f82015250565b5f611375601a83611331565b915061138082611341565b602082019050919050565b5f6020820190508181035f8301526113a281611369565b9050919050565b5f6040820190506113bc5f8301856112b6565b6113c960208301846112de565b9392505050565b7f54686973204164647265737320697320616c72656164792057686974654c69735f8201527f7465642100000000000000000000000000000000000000000000000000000000602082015250565b5f61142a602483611331565b9150611435826113d0565b604082019050919050565b5f6020820190508181035f8301526114578161141e565b9050919050565b7f416363657074206f6e6c7920285553444d2c4449412c555344542c55534443295f8201527f20546f6b656e7300000000000000000000000000000000000000000000000000602082015250565b5f6114b8602783611331565b91506114c38261145e565b604082019050919050565b5f6020820190508181035f8301526114e5816114ac565b9050919050565b5f6040820190506114ff5f8301856112b6565b61150c60208301846112b6565b9392505050565b5f815190506115218161124e565b92915050565b5f6020828403121561153c5761153b611189565b5b5f61154984828501611513565b91505092915050565b7f416c6c6f77616e6365206e6f74207365740000000000000000000000000000005f82015250565b5f611586601183611331565b915061159182611552565b602082019050919050565b5f6020820190508181035f8301526115b38161157a565b9050919050565b7f496e73756666696369656e742062616c616e63650000000000000000000000005f82015250565b5f6115ee601483611331565b91506115f9826115ba565b602082019050919050565b5f6020820190508181035f83015261161b816115e2565b9050919050565b5f6060820190506116355f8301866112b6565b61164260208301856112b6565b61164f60408301846112de565b949350505050565b61166081611212565b811461166a575f80fd5b50565b5f8151905061167b81611657565b92915050565b5f6020828403121561169657611695611189565b5b5f6116a38482850161166d565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6116e382611245565b91506116ee83611245565b9250828201905080821115611706576117056116ac565b5b92915050565b5f61171682611245565b915061172183611245565b925082820261172f81611245565b91508282048414831517611746576117456116ac565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61178482611245565b915061178f83611245565b92508261179f5761179e61174d565b5b828204905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f6117e182611245565b91506117ec83611245565b9250828203905081811115611804576118036116ac565b5b92915050565b5f81519050919050565b5f81905092915050565b5f5b8381101561183b578082015181840152602081019050611820565b5f8484015250505050565b5f6118508261180a565b61185a8185611814565b935061186a81856020860161181e565b80840191505092915050565b5f6118818284611846565b91508190509291505056fea2646970667358221220070c9c3934af60a64432fefcb4b54873a66ac300d8b398002f51e395ca2a1b8864736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C2C67C9 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xB9818BE1 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB9818BE1 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0xE1AD418E EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0xF09F0AAC EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x265 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x9C2C67C9 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xA114398D EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xA4329677 EQ PUSH2 0x1B7 JUMPI PUSH2 0xCD JUMP JUMPDEST DUP1 PUSH4 0x1BF6648 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x372C12B1 EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x4F1BD9CA EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x6BC20157 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x15F JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xEB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE6 SWAP2 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x281 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x369 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0x122C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x1278 JUMP JUMPDEST PUSH2 0x386 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0x3F6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15D PUSH2 0x540 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x167 PUSH2 0x553 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x185 PUSH2 0x57A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x1278 JUMP JUMPDEST PUSH2 0x580 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EF PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FC SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0xCA3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22C SWAP2 SWAP1 PUSH2 0x12ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0xCB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x11E7 JUMP JUMPDEST PUSH2 0xCF3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x289 PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x309 SWAP1 PUSH2 0x138B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x38E PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x3B9 CALLER DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xDFE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0x92BA58C57C335232A5E63D6DBABCEFCEE8074C3D8909BC7F8E63DD6E434B280D CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x3EA SWAP3 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x3FE PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x488 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47F SWAP1 PUSH2 0x1440 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x548 PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x551 PUSH0 PUSH2 0xE7D JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH20 0xE9A05AFAC6E76749462F6537FED148F34A92C0F7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x60D JUMPI POP PUSH20 0x7B25CC8082ABC65C70B9E5F00B7F3B8FCF6814B PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x657 JUMPI POP PUSH20 0x2DF4FAECE2EA8B8FB5EFA8E022EDEC520C2F0FA4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x6A1 JUMPI POP PUSH20 0x1059DC58FEE94FD0CAF8A5C9A9B936843F0C5329 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x6E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D7 SWAP1 PUSH2 0x14CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71C SWAP3 SWAP2 SWAP1 PUSH2 0x14EC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x737 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x75B SWAP2 SWAP1 PUSH2 0x1527 JUMP JUMPDEST LT ISZERO PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x793 SWAP1 PUSH2 0x159C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D6 SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x7F1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x815 SWAP2 SWAP1 PUSH2 0x1527 JUMP JUMPDEST LT ISZERO PUSH2 0x856 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84D SWAP1 PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xE9A05AFAC6E76749462F6537FED148F34A92C0F7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9B3 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8DA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x91A SWAP2 SWAP1 PUSH2 0x1681 JUMP JUMPDEST POP DUP1 PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x92C SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xCC87AB2ABFE87B272AF9B77691E40B3D9186A0431F3D41A8E06D39614F460722 CALLER DUP3 PUSH1 0x40 MLOAD PUSH2 0x9A6 SWAP3 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xBFA JUMP JUMPDEST PUSH0 PUSH2 0x3E8 PUSH1 0x3 DUP4 PUSH2 0x9C4 SWAP2 SWAP1 PUSH2 0x170C JUMP JUMPDEST PUSH2 0x9CE SWAP2 SWAP1 PUSH2 0x177A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP3 PUSH2 0x9E2 SWAP2 SWAP1 PUSH2 0x177A JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xAB9 JUMPI DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA24 JUMPI PUSH2 0xA23 PUSH2 0x17AA JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA87 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAAB SWAP2 SWAP1 PUSH2 0x1681 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x9E6 JUMP JUMPDEST POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 DUP8 PUSH2 0xAE4 SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB02 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB1E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB42 SWAP2 SWAP1 PUSH2 0x1681 JUMP JUMPDEST POP DUP2 DUP4 PUSH2 0xB4F SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST PUSH1 0x5 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB5F SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 DUP4 PUSH2 0xB72 SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xCC87AB2ABFE87B272AF9B77691E40B3D9186A0431F3D41A8E06D39614F460722 CALLER DUP4 DUP6 PUSH2 0xBE1 SWAP2 SWAP1 PUSH2 0x17D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBEF SWAP3 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC38 SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC53 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC77 SWAP2 SWAP1 PUSH2 0x1527 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xCC7 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xCFB PUSH2 0xD77 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD6B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD62 SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD74 DUP2 PUSH2 0xE7D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xD7F PUSH2 0xF3E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD9D PUSH2 0x553 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDFC JUMPI PUSH2 0xDC0 PUSH2 0xF3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF3 SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xE78 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xE31 SWAP3 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0xF45 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xF6F DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFDA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0xF93 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xF91 SWAP2 SWAP1 PUSH2 0x1681 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xFD5 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCC SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xFE7 DUP4 DUP4 PUSH0 PUSH2 0xFEF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1036 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102D SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x105E SWAP2 SWAP1 PUSH2 0x1876 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1098 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x109D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x10AD DUP7 DUP4 DUP4 PUSH2 0x10B8 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x10CD JUMPI PUSH2 0x10C8 DUP3 PUSH2 0x1145 JUMP JUMPDEST PUSH2 0x113D JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x10F3 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1135 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x112C SWAP2 SWAP1 PUSH2 0x12C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x113E JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1157 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x11B6 DUP3 PUSH2 0x118D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11C6 DUP2 PUSH2 0x11AC JUMP JUMPDEST DUP2 EQ PUSH2 0x11D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11E1 DUP2 PUSH2 0x11BD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11FC JUMPI PUSH2 0x11FB PUSH2 0x1189 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1209 DUP5 DUP3 DUP6 ADD PUSH2 0x11D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1226 DUP2 PUSH2 0x1212 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x123F PUSH0 DUP4 ADD DUP5 PUSH2 0x121D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1257 DUP2 PUSH2 0x1245 JUMP JUMPDEST DUP2 EQ PUSH2 0x1261 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1272 DUP2 PUSH2 0x124E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x128E JUMPI PUSH2 0x128D PUSH2 0x1189 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x129B DUP6 DUP3 DUP7 ADD PUSH2 0x11D3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12AC DUP6 DUP3 DUP7 ADD PUSH2 0x1264 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x12BF DUP2 PUSH2 0x11AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12D8 PUSH0 DUP4 ADD DUP5 PUSH2 0x12B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12E7 DUP2 PUSH2 0x1245 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1300 PUSH0 DUP4 ADD DUP5 PUSH2 0x12DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x131B JUMPI PUSH2 0x131A PUSH2 0x1189 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1328 DUP5 DUP3 DUP6 ADD PUSH2 0x1264 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x546869732041646472657373206973206E6F7420657869737421000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1375 PUSH1 0x1A DUP4 PUSH2 0x1331 JUMP JUMPDEST SWAP2 POP PUSH2 0x1380 DUP3 PUSH2 0x1341 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13A2 DUP2 PUSH2 0x1369 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13BC PUSH0 DUP4 ADD DUP6 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x13C9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12DE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x54686973204164647265737320697320616C72656164792057686974654C6973 PUSH0 DUP3 ADD MSTORE PUSH32 0x7465642100000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x142A PUSH1 0x24 DUP4 PUSH2 0x1331 JUMP JUMPDEST SWAP2 POP PUSH2 0x1435 DUP3 PUSH2 0x13D0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1457 DUP2 PUSH2 0x141E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657074206F6E6C7920285553444D2C4449412C555344542C5553444329 PUSH0 DUP3 ADD MSTORE PUSH32 0x20546F6B656E7300000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14B8 PUSH1 0x27 DUP4 PUSH2 0x1331 JUMP JUMPDEST SWAP2 POP PUSH2 0x14C3 DUP3 PUSH2 0x145E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14E5 DUP2 PUSH2 0x14AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x14FF PUSH0 DUP4 ADD DUP6 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x150C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12B6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1521 DUP2 PUSH2 0x124E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x153C JUMPI PUSH2 0x153B PUSH2 0x1189 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1549 DUP5 DUP3 DUP6 ADD PUSH2 0x1513 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C6C6F77616E6365206E6F7420736574000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1586 PUSH1 0x11 DUP4 PUSH2 0x1331 JUMP JUMPDEST SWAP2 POP PUSH2 0x1591 DUP3 PUSH2 0x1552 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x15B3 DUP2 PUSH2 0x157A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742062616C616E6365000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x15EE PUSH1 0x14 DUP4 PUSH2 0x1331 JUMP JUMPDEST SWAP2 POP PUSH2 0x15F9 DUP3 PUSH2 0x15BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x161B DUP2 PUSH2 0x15E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1635 PUSH0 DUP4 ADD DUP7 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x1642 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x12B6 JUMP JUMPDEST PUSH2 0x164F PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12DE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1660 DUP2 PUSH2 0x1212 JUMP JUMPDEST DUP2 EQ PUSH2 0x166A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x167B DUP2 PUSH2 0x1657 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1696 JUMPI PUSH2 0x1695 PUSH2 0x1189 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16A3 DUP5 DUP3 DUP6 ADD PUSH2 0x166D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x16E3 DUP3 PUSH2 0x1245 JUMP JUMPDEST SWAP2 POP PUSH2 0x16EE DUP4 PUSH2 0x1245 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1706 JUMPI PUSH2 0x1705 PUSH2 0x16AC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1716 DUP3 PUSH2 0x1245 JUMP JUMPDEST SWAP2 POP PUSH2 0x1721 DUP4 PUSH2 0x1245 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x172F DUP2 PUSH2 0x1245 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1746 JUMPI PUSH2 0x1745 PUSH2 0x16AC JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1784 DUP3 PUSH2 0x1245 JUMP JUMPDEST SWAP2 POP PUSH2 0x178F DUP4 PUSH2 0x1245 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x179F JUMPI PUSH2 0x179E PUSH2 0x174D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x17E1 DUP3 PUSH2 0x1245 JUMP JUMPDEST SWAP2 POP PUSH2 0x17EC DUP4 PUSH2 0x1245 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1804 JUMPI PUSH2 0x1803 PUSH2 0x16AC JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x183B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1820 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1850 DUP3 PUSH2 0x180A JUMP JUMPDEST PUSH2 0x185A DUP2 DUP6 PUSH2 0x1814 JUMP JUMPDEST SWAP4 POP PUSH2 0x186A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x181E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1881 DUP3 DUP5 PUSH2 0x1846 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0xC SWAP13 CODECOPY CALLVALUE 0xAF PUSH1 0xA6 PREVRANDAO ORIGIN INVALID 0xFC 0xB4 0xB5 BASEFEE PUSH20 0xA66AC300D8B398002F51E395CA2A1B8864736F6C PUSH4 0x43000816 STOP CALLER ",
							"sourceMap": "234:3392:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3110:174;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1081:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2902:202;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1353:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1216:27:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1574:1323;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3291:145;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;302:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1167:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1128:33;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3110:174:6;1531:13:0;:11;:13::i;:::-;3191:9:6::1;:19;3201:8;3191:19;;;;;;;;;;;;;;;;;;;;;;;;;3183:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3272:5;3250:9;:19;3260:8;3250:19;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;3110:174:::0;:::o;1081:41::-;;;;;;;;;;;;;;;;;;;;;;:::o;2902:202::-;1531:13:0;:11;:13::i;:::-;2994:50:6::1;3025:10;3036:7;3001:9;2994:30;;;;:50;;;;;:::i;:::-;3059:38;3078:10;3089:7;3059:38;;;;;;;:::i;:::-;;;;;;;;2902:202:::0;;:::o;1353:215::-;1531:13:0;:11;:13::i;:::-;1425:9:6::1;:19;1435:8;1425:19;;;;;;;;;;;;;;;;;;;;;;;;;1424:20;1416:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1494:16;1516:8;1494:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1557:4;1535:9;:19;1545:8;1535:19;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;1353:215:::0;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1216:27:6:-;;;;:::o;1574:1323::-;733:42;1654:17;;:9;:17;;;:38;;;;590:42;1675:17;;:9;:17;;;1654:38;:58;;;;661:42;1696:16;;:9;:16;;;1654:58;:79;;;;518:42;1716:17;;:9;:17;;;1654:79;1646:130;;;;;;;;;;;;:::i;:::-;;;;;;;;;1852:7;1801:9;1794:27;;;1822:10;1842:4;1794:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;;1786:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1942:7;1906:9;1899:27;;;1927:10;1899:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;1891:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;733:42;1988:17;;:9;:17;;;1985:853;;2027:9;2020:30;;;2051:10;2071:4;2079:7;2020:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2122:7;2102:15;;:28;;;;;;;:::i;:::-;;;;;;;;2169:7;2144:10;:22;2155:10;2144:22;;;;;;;;;;;;;;;:32;;;;2195:29;2205:10;2216:7;2195:29;;;;;;;:::i;:::-;;;;;;;;1985:853;;;2262:14;2291:4;2288:1;2280:7;:9;;;;:::i;:::-;2279:16;;;;:::i;:::-;2262:33;;2309:27;2349:16;:23;;;;2339:9;:33;;;;:::i;:::-;2309:63;;2391:6;2386:180;2403:16;:23;;;;2401:1;:25;2386:180;;;2471:9;2464:30;;;2495:10;2507:16;2524:1;2507:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2528:22;2464:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2428:3;;;;;;;2386:180;;;;2586:9;2579:30;;;2610:10;2630:4;2646:9;2638:7;:17;;;;:::i;:::-;2579:78;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2699:9;2691:7;:17;;;;:::i;:::-;2671:15;;:38;;;;;;;:::i;:::-;;;;;;;;2757:9;2749:7;:17;;;;:::i;:::-;2723:10;:22;2734:10;2723:22;;;;;;;;;;;;;;;:44;;;;2786:41;2796:10;2816:9;2808:7;:17;;;;:::i;:::-;2786:41;;;;;;;:::i;:::-;;;;;;;;2248:590;;1985:853;1574:1323;;:::o;3291:145::-;3356:13;3394:9;3387:27;;;3423:4;3387:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3380:49;;3291:145;;;:::o;302:23::-;;;;;;;;;;;;;:::o;1167:43::-;;;;;;;;;;;;;;;;;:::o;1128:33::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;1303:160:3:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;4059:629:3:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:4:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;88:117:7;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:109::-;1353:21;1368:5;1353:21;:::i;:::-;1348:3;1341:34;1272:109;;:::o;1387:210::-;1474:4;1512:2;1501:9;1497:18;1489:26;;1525:65;1587:1;1576:9;1572:17;1563:6;1525:65;:::i;:::-;1387:210;;;;:::o;1603:77::-;1640:7;1669:5;1658:16;;1603:77;;;:::o;1686:122::-;1759:24;1777:5;1759:24;:::i;:::-;1752:5;1749:35;1739:63;;1798:1;1795;1788:12;1739:63;1686:122;:::o;1814:139::-;1860:5;1898:6;1885:20;1876:29;;1914:33;1941:5;1914:33;:::i;:::-;1814:139;;;;:::o;1959:474::-;2027:6;2035;2084:2;2072:9;2063:7;2059:23;2055:32;2052:119;;;2090:79;;:::i;:::-;2052:119;2210:1;2235:53;2280:7;2271:6;2260:9;2256:22;2235:53;:::i;:::-;2225:63;;2181:117;2337:2;2363:53;2408:7;2399:6;2388:9;2384:22;2363:53;:::i;:::-;2353:63;;2308:118;1959:474;;;;;:::o;2439:118::-;2526:24;2544:5;2526:24;:::i;:::-;2521:3;2514:37;2439:118;;:::o;2563:222::-;2656:4;2694:2;2683:9;2679:18;2671:26;;2707:71;2775:1;2764:9;2760:17;2751:6;2707:71;:::i;:::-;2563:222;;;;:::o;2791:118::-;2878:24;2896:5;2878:24;:::i;:::-;2873:3;2866:37;2791:118;;:::o;2915:222::-;3008:4;3046:2;3035:9;3031:18;3023:26;;3059:71;3127:1;3116:9;3112:17;3103:6;3059:71;:::i;:::-;2915:222;;;;:::o;3143:329::-;3202:6;3251:2;3239:9;3230:7;3226:23;3222:32;3219:119;;;3257:79;;:::i;:::-;3219:119;3377:1;3402:53;3447:7;3438:6;3427:9;3423:22;3402:53;:::i;:::-;3392:63;;3348:117;3143:329;;;;:::o;3478:169::-;3562:11;3596:6;3591:3;3584:19;3636:4;3631:3;3627:14;3612:29;;3478:169;;;;:::o;3653:176::-;3793:28;3789:1;3781:6;3777:14;3770:52;3653:176;:::o;3835:366::-;3977:3;3998:67;4062:2;4057:3;3998:67;:::i;:::-;3991:74;;4074:93;4163:3;4074:93;:::i;:::-;4192:2;4187:3;4183:12;4176:19;;3835:366;;;:::o;4207:419::-;4373:4;4411:2;4400:9;4396:18;4388:26;;4460:9;4454:4;4450:20;4446:1;4435:9;4431:17;4424:47;4488:131;4614:4;4488:131;:::i;:::-;4480:139;;4207:419;;;:::o;4632:332::-;4753:4;4791:2;4780:9;4776:18;4768:26;;4804:71;4872:1;4861:9;4857:17;4848:6;4804:71;:::i;:::-;4885:72;4953:2;4942:9;4938:18;4929:6;4885:72;:::i;:::-;4632:332;;;;;:::o;4970:223::-;5110:34;5106:1;5098:6;5094:14;5087:58;5179:6;5174:2;5166:6;5162:15;5155:31;4970:223;:::o;5199:366::-;5341:3;5362:67;5426:2;5421:3;5362:67;:::i;:::-;5355:74;;5438:93;5527:3;5438:93;:::i;:::-;5556:2;5551:3;5547:12;5540:19;;5199:366;;;:::o;5571:419::-;5737:4;5775:2;5764:9;5760:18;5752:26;;5824:9;5818:4;5814:20;5810:1;5799:9;5795:17;5788:47;5852:131;5978:4;5852:131;:::i;:::-;5844:139;;5571:419;;;:::o;5996:226::-;6136:34;6132:1;6124:6;6120:14;6113:58;6205:9;6200:2;6192:6;6188:15;6181:34;5996:226;:::o;6228:366::-;6370:3;6391:67;6455:2;6450:3;6391:67;:::i;:::-;6384:74;;6467:93;6556:3;6467:93;:::i;:::-;6585:2;6580:3;6576:12;6569:19;;6228:366;;;:::o;6600:419::-;6766:4;6804:2;6793:9;6789:18;6781:26;;6853:9;6847:4;6843:20;6839:1;6828:9;6824:17;6817:47;6881:131;7007:4;6881:131;:::i;:::-;6873:139;;6600:419;;;:::o;7025:332::-;7146:4;7184:2;7173:9;7169:18;7161:26;;7197:71;7265:1;7254:9;7250:17;7241:6;7197:71;:::i;:::-;7278:72;7346:2;7335:9;7331:18;7322:6;7278:72;:::i;:::-;7025:332;;;;;:::o;7363:143::-;7420:5;7451:6;7445:13;7436:22;;7467:33;7494:5;7467:33;:::i;:::-;7363:143;;;;:::o;7512:351::-;7582:6;7631:2;7619:9;7610:7;7606:23;7602:32;7599:119;;;7637:79;;:::i;:::-;7599:119;7757:1;7782:64;7838:7;7829:6;7818:9;7814:22;7782:64;:::i;:::-;7772:74;;7728:128;7512:351;;;;:::o;7869:167::-;8009:19;8005:1;7997:6;7993:14;7986:43;7869:167;:::o;8042:366::-;8184:3;8205:67;8269:2;8264:3;8205:67;:::i;:::-;8198:74;;8281:93;8370:3;8281:93;:::i;:::-;8399:2;8394:3;8390:12;8383:19;;8042:366;;;:::o;8414:419::-;8580:4;8618:2;8607:9;8603:18;8595:26;;8667:9;8661:4;8657:20;8653:1;8642:9;8638:17;8631:47;8695:131;8821:4;8695:131;:::i;:::-;8687:139;;8414:419;;;:::o;8839:170::-;8979:22;8975:1;8967:6;8963:14;8956:46;8839:170;:::o;9015:366::-;9157:3;9178:67;9242:2;9237:3;9178:67;:::i;:::-;9171:74;;9254:93;9343:3;9254:93;:::i;:::-;9372:2;9367:3;9363:12;9356:19;;9015:366;;;:::o;9387:419::-;9553:4;9591:2;9580:9;9576:18;9568:26;;9640:9;9634:4;9630:20;9626:1;9615:9;9611:17;9604:47;9668:131;9794:4;9668:131;:::i;:::-;9660:139;;9387:419;;;:::o;9812:442::-;9961:4;9999:2;9988:9;9984:18;9976:26;;10012:71;10080:1;10069:9;10065:17;10056:6;10012:71;:::i;:::-;10093:72;10161:2;10150:9;10146:18;10137:6;10093:72;:::i;:::-;10175;10243:2;10232:9;10228:18;10219:6;10175:72;:::i;:::-;9812:442;;;;;;:::o;10260:116::-;10330:21;10345:5;10330:21;:::i;:::-;10323:5;10320:32;10310:60;;10366:1;10363;10356:12;10310:60;10260:116;:::o;10382:137::-;10436:5;10467:6;10461:13;10452:22;;10483:30;10507:5;10483:30;:::i;:::-;10382:137;;;;:::o;10525:345::-;10592:6;10641:2;10629:9;10620:7;10616:23;10612:32;10609:119;;;10647:79;;:::i;:::-;10609:119;10767:1;10792:61;10845:7;10836:6;10825:9;10821:22;10792:61;:::i;:::-;10782:71;;10738:125;10525:345;;;;:::o;10876:180::-;10924:77;10921:1;10914:88;11021:4;11018:1;11011:15;11045:4;11042:1;11035:15;11062:191;11102:3;11121:20;11139:1;11121:20;:::i;:::-;11116:25;;11155:20;11173:1;11155:20;:::i;:::-;11150:25;;11198:1;11195;11191:9;11184:16;;11219:3;11216:1;11213:10;11210:36;;;11226:18;;:::i;:::-;11210:36;11062:191;;;;:::o;11259:410::-;11299:7;11322:20;11340:1;11322:20;:::i;:::-;11317:25;;11356:20;11374:1;11356:20;:::i;:::-;11351:25;;11411:1;11408;11404:9;11433:30;11451:11;11433:30;:::i;:::-;11422:41;;11612:1;11603:7;11599:15;11596:1;11593:22;11573:1;11566:9;11546:83;11523:139;;11642:18;;:::i;:::-;11523:139;11307:362;11259:410;;;;:::o;11675:180::-;11723:77;11720:1;11713:88;11820:4;11817:1;11810:15;11844:4;11841:1;11834:15;11861:185;11901:1;11918:20;11936:1;11918:20;:::i;:::-;11913:25;;11952:20;11970:1;11952:20;:::i;:::-;11947:25;;11991:1;11981:35;;11996:18;;:::i;:::-;11981:35;12038:1;12035;12031:9;12026:14;;11861:185;;;;:::o;12052:180::-;12100:77;12097:1;12090:88;12197:4;12194:1;12187:15;12221:4;12218:1;12211:15;12238:194;12278:4;12298:20;12316:1;12298:20;:::i;:::-;12293:25;;12332:20;12350:1;12332:20;:::i;:::-;12327:25;;12376:1;12373;12369:9;12361:17;;12400:1;12394:4;12391:11;12388:37;;;12405:18;;:::i;:::-;12388:37;12238:194;;;;:::o;12438:98::-;12489:6;12523:5;12517:12;12507:22;;12438:98;;;:::o;12542:147::-;12643:11;12680:3;12665:18;;12542:147;;;;:::o;12695:246::-;12776:1;12786:113;12800:6;12797:1;12794:13;12786:113;;;12885:1;12880:3;12876:11;12870:18;12866:1;12861:3;12857:11;12850:39;12822:2;12819:1;12815:10;12810:15;;12786:113;;;12933:1;12924:6;12919:3;12915:16;12908:27;12757:184;12695:246;;;:::o;12947:386::-;13051:3;13079:38;13111:5;13079:38;:::i;:::-;13133:88;13214:6;13209:3;13133:88;:::i;:::-;13126:95;;13230:65;13288:6;13283:3;13276:4;13269:5;13265:16;13230:65;:::i;:::-;13320:6;13315:3;13311:16;13304:23;;13055:278;12947:386;;;;:::o;13339:271::-;13469:3;13491:93;13580:3;13571:6;13491:93;:::i;:::-;13484:100;;13601:3;13594:10;;13339:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1267600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"WhiteList(address)": "infinite",
								"currentHoldings()": "2448",
								"feeOwner()": "2530",
								"holdingOfTokens(address)": "infinite",
								"owner()": "2626",
								"removeFromWhiteList(address)": "infinite",
								"renounceOwnership()": "infinite",
								"swapTokens(address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"userAmount(address)": "2846",
								"whilistedAddress(uint256)": "5010",
								"whiteList(address)": "2856",
								"withdrawBalanceTokens(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 234,
									"end": 3626,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 234,
									"end": 3626,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 234,
									"end": 3626,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1250,
									"end": 1347,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1292,
									"end": 1304,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1328,
									"end": 1340,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1317,
									"end": 1325,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1317,
									"end": 1325,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1317,
									"end": 1340,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1317,
									"end": 1340,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1317,
									"end": 1340,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1317,
									"end": 1340,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1317,
									"end": 1340,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1317,
									"end": 1340,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1317,
									"end": 1340,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1317,
									"end": 1340,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1317,
									"end": 1340,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1317,
									"end": 1340,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1317,
									"end": 1340,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1317,
									"end": 1340,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1317,
									"end": 1340,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1317,
									"end": 1340,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1317,
									"end": 1340,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1317,
									"end": 1340,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1317,
									"end": 1340,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1317,
									"end": 1340,
									"modifierDepth": 1,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1250,
									"end": 1347,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 234,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 234,
									"end": 3626,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 7,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 7,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 7,
									"value": "36"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 7,
									"value": "38"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "tag",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1307,
									"end": 1312,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1289,
									"end": 1313,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "tag",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1289,
									"end": 1313,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1284,
									"end": 1287,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1277,
									"end": 1314,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1320,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1320,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1419,
									"end": 1423,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1457,
									"end": 1459,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1446,
									"end": 1455,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1442,
									"end": 1460,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1434,
									"end": 1460,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1527,
									"end": 1536,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1523,
									"end": 1540,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1514,
									"end": 1520,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1470,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "tag",
									"source": 7,
									"value": "42"
								},
								{
									"begin": 1470,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1548,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 234,
									"end": 3626,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 234,
									"end": 3626,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 234,
									"end": 3626,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 234,
									"end": 3626,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 234,
									"end": 3626,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 234,
									"end": 3626,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 3626,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 234,
									"end": 3626,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 234,
									"end": 3626,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220070c9c3934af60a64432fefcb4b54873a66ac300d8b398002f51e395ca2a1b8864736f6c63430008160033",
									".code": [
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "9C2C67C9"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "B9818BE1"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "B9818BE1"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "E1AD418E"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "F09F0AAC"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "9C2C67C9"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "A114398D"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "A4329677"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "1BF6648"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "372C12B1"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "4F1BD9CA"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "6BC20157"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 234,
											"end": 3626,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3284,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3110,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3110,
											"end": 3284,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3110,
											"end": 3284,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3284,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3284,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3284,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3284,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3284,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 3110,
											"end": 3284,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3284,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3110,
											"end": 3284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3284,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 3110,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 3110,
											"end": 3284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3284,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3110,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3284,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1081,
											"end": 1122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1081,
											"end": 1122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1081,
											"end": 1122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3104,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2902,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2902,
											"end": 3104,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2902,
											"end": 3104,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3104,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3104,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3104,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3104,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2902,
											"end": 3104,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3104,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2902,
											"end": 3104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3104,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2902,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2902,
											"end": 3104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3104,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2902,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3104,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1353,
											"end": 1568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1216,
											"end": 1243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1216,
											"end": 1243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 2897,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1574,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1574,
											"end": 2897,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 2897,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 2897,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 2897,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 2897,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 2897,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 2897,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1574,
											"end": 2897,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 2897,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1574,
											"end": 2897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 2897,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1574,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1574,
											"end": 2897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 2897,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1574,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 2897,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3291,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3291,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 3291,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 302,
											"end": 325,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 302,
											"end": 325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 302,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 302,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 302,
											"end": 325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 302,
											"end": 325,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 302,
											"end": 325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 302,
											"end": 325,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 302,
											"end": 325,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 302,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 302,
											"end": 325,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 302,
											"end": 325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 302,
											"end": 325,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 302,
											"end": 325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 302,
											"end": 325,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 302,
											"end": 325,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 302,
											"end": 325,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 302,
											"end": 325,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1167,
											"end": 1210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1167,
											"end": 1210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1128,
											"end": 1161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1128,
											"end": 1161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1128,
											"end": 1161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3110,
											"end": 3284,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 3110,
											"end": 3284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3201,
											"end": 3209,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3191,
											"end": 3210,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3240,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3183,
											"end": 3240,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3183,
											"end": 3240,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3183,
											"end": 3240,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3240,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3183,
											"end": 3240,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3240,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3183,
											"end": 3240,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3240,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 3183,
											"end": 3240,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3240,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 3183,
											"end": 3240,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3240,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3183,
											"end": 3240,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3240,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3240,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3240,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3240,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3240,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3183,
											"end": 3240,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3183,
											"end": 3240,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3250,
											"end": 3269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3260,
											"end": 3268,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3250,
											"end": 3269,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3250,
											"end": 3269,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3269,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3269,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3269,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3269,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3269,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3269,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3269,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3269,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3269,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3250,
											"end": 3277,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3277,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3277,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3277,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3250,
											"end": 3277,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3277,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3277,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3277,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3277,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3277,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3277,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3277,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3277,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3277,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3277,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3277,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3110,
											"end": 3284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1081,
											"end": 1122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3104,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2902,
											"end": 3104,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2994,
											"end": 3044,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 3025,
											"end": 3035,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3036,
											"end": 3043,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3010,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2994,
											"end": 3024,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 2994,
											"end": 3024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3044,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3044,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3044,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3044,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2994,
											"end": 3044,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3044,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2994,
											"end": 3044,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 2994,
											"end": 3044,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "92BA58C57C335232A5E63D6DBABCEFCEE8074C3D8909BC7F8E63DD6E434B280D"
										},
										{
											"begin": 3078,
											"end": 3088,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3096,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3059,
											"end": 3097,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 3059,
											"end": 3097,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3097,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3097,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3059,
											"end": 3097,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3097,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 3059,
											"end": 3097,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3059,
											"end": 3097,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3097,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3097,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3097,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3097,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3059,
											"end": 3097,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3104,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3104,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1425,
											"end": 1434,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1435,
											"end": 1443,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1425,
											"end": 1444,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1424,
											"end": 1444,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1416,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1416,
											"end": 1484,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1416,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1416,
											"end": 1484,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1416,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1416,
											"end": 1484,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1416,
											"end": 1484,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1416,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1416,
											"end": 1484,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1416,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1416,
											"end": 1484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1416,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1416,
											"end": 1484,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1416,
											"end": 1484,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1416,
											"end": 1484,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1416,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1416,
											"end": 1484,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1416,
											"end": 1484,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1416,
											"end": 1484,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1416,
											"end": 1484,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1416,
											"end": 1484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1416,
											"end": 1484,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1416,
											"end": 1484,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 1416,
											"end": 1484,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1516,
											"end": 1524,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1525,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1557,
											"end": 1561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1535,
											"end": 1544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1535,
											"end": 1554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1553,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1535,
											"end": 1554,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1535,
											"end": 1554,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1554,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1554,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1535,
											"end": 1554,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1554,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1554,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1554,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1535,
											"end": 1554,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1554,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1554,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1535,
											"end": 1561,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1561,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1561,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1561,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1535,
											"end": 1561,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1561,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1561,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1561,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1561,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1561,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1561,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1561,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1561,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1561,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1561,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1535,
											"end": 1561,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1568,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1243,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1216,
											"end": 1243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 2897,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1574,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 733,
											"end": 775,
											"name": "PUSH",
											"source": 6,
											"value": "E9A05AFAC6E76749462F6537FED148F34A92C0F7"
										},
										{
											"begin": 1654,
											"end": 1671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1654,
											"end": 1671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1663,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1654,
											"end": 1671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1671,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1692,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1654,
											"end": 1692,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1692,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 590,
											"end": 632,
											"name": "PUSH",
											"source": 6,
											"value": "7B25CC8082ABC65C70B9E5F00B7F3B8FCF6814B"
										},
										{
											"begin": 1675,
											"end": 1692,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1675,
											"end": 1692,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1675,
											"end": 1684,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1675,
											"end": 1692,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1675,
											"end": 1692,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1675,
											"end": 1692,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1692,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1654,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1712,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1712,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1654,
											"end": 1712,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1712,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 661,
											"end": 703,
											"name": "PUSH",
											"source": 6,
											"value": "2DF4FAECE2EA8B8FB5EFA8E022EDEC520C2F0FA4"
										},
										{
											"begin": 1696,
											"end": 1712,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1696,
											"end": 1712,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1705,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1712,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1696,
											"end": 1712,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1696,
											"end": 1712,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1712,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1654,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1733,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1654,
											"end": 1733,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 518,
											"end": 560,
											"name": "PUSH",
											"source": 6,
											"value": "1059DC58FEE94FD0CAF8A5C9A9B936843F0C5329"
										},
										{
											"begin": 1716,
											"end": 1733,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1716,
											"end": 1733,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1716,
											"end": 1725,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1716,
											"end": 1733,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1716,
											"end": 1733,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1716,
											"end": 1733,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1654,
											"end": 1733,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1654,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1646,
											"end": 1776,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1776,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1776,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1776,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1646,
											"end": 1776,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1776,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1776,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1646,
											"end": 1776,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1646,
											"end": 1776,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1776,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1646,
											"end": 1776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1776,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1646,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1776,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1776,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1776,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1776,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1776,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1776,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1776,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1646,
											"end": 1776,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1646,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1852,
											"end": 1859,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1801,
											"end": 1810,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1821,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1821,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1821,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 1822,
											"end": 1832,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1842,
											"end": 1846,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1794,
											"end": 1848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1794,
											"end": 1848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1794,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1859,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1794,
											"end": 1859,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1786,
											"end": 1881,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1881,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1881,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1881,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1786,
											"end": 1881,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1881,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1881,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1786,
											"end": 1881,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1786,
											"end": 1881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1786,
											"end": 1881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1881,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1786,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1881,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1786,
											"end": 1881,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1881,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1881,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1881,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1881,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1786,
											"end": 1881,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1786,
											"end": 1881,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1915,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1926,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1899,
											"end": 1926,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1926,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 1927,
											"end": 1937,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1899,
											"end": 1938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1899,
											"end": 1938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 1899,
											"end": 1938,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1949,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1949,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1891,
											"end": 1974,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1974,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1891,
											"end": 1974,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1974,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1891,
											"end": 1974,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1974,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1974,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1891,
											"end": 1974,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1891,
											"end": 1974,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 1891,
											"end": 1974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1974,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1891,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1974,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1891,
											"end": 1974,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1974,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1974,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1974,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1974,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1974,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1891,
											"end": 1974,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1891,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 733,
											"end": 775,
											"name": "PUSH",
											"source": 6,
											"value": "E9A05AFAC6E76749462F6537FED148F34A92C0F7"
										},
										{
											"begin": 1988,
											"end": 2005,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1988,
											"end": 2005,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 1997,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 2005,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1988,
											"end": 2005,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 2005,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1985,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1985,
											"end": 2838,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2027,
											"end": 2036,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2050,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 2051,
											"end": 2061,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2075,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2079,
											"end": 2086,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2020,
											"end": 2088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2020,
											"end": 2088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2129,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2117,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2102,
											"end": 2117,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2102,
											"end": 2130,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2130,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2130,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2102,
											"end": 2130,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2102,
											"end": 2130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2130,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2102,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2130,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2130,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2130,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2102,
											"end": 2130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2169,
											"end": 2176,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2154,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2144,
											"end": 2166,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2165,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2166,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2144,
											"end": 2166,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2166,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2144,
											"end": 2166,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2166,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2166,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2166,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2166,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2166,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2166,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2166,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2166,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2166,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2166,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2166,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2176,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2176,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2176,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2224,
											"name": "PUSH",
											"source": 6,
											"value": "CC87AB2ABFE87B272AF9B77691E40B3D9186A0431F3D41A8E06D39614F460722"
										},
										{
											"begin": 2205,
											"end": 2215,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2216,
											"end": 2223,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2224,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2195,
											"end": 2224,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2195,
											"end": 2224,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2224,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2195,
											"end": 2224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2224,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2195,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2224,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2195,
											"end": 2224,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2224,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2224,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2224,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2195,
											"end": 2224,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 1985,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1985,
											"end": 2838,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1985,
											"end": 2838,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1985,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2262,
											"end": 2276,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2295,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 2288,
											"end": 2289,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2280,
											"end": 2287,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2280,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2280,
											"end": 2289,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2280,
											"end": 2289,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2280,
											"end": 2289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 2280,
											"end": 2289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2280,
											"end": 2289,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2280,
											"end": 2289,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2279,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 2279,
											"end": 2295,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2279,
											"end": 2295,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2279,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2279,
											"end": 2295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2279,
											"end": 2295,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 2279,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2262,
											"end": 2295,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2262,
											"end": 2295,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2336,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2365,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2349,
											"end": 2372,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2372,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2348,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2339,
											"end": 2372,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2339,
											"end": 2372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2339,
											"end": 2372,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2339,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2372,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2309,
											"end": 2372,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2391,
											"end": 2397,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2566,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2386,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2419,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2403,
											"end": 2426,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2426,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2402,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2401,
											"end": 2426,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2566,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2386,
											"end": 2566,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2471,
											"end": 2480,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2494,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2464,
											"end": 2494,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2494,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 2495,
											"end": 2505,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2524,
											"end": 2525,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2507,
											"end": 2526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2550,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2464,
											"end": 2551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2464,
											"end": 2551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2464,
											"end": 2551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2431,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2431,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2431,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2428,
											"end": 2431,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2431,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2386,
											"end": 2566,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2566,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2386,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2586,
											"end": 2595,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2609,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2579,
											"end": 2609,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2609,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 2610,
											"end": 2620,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2630,
											"end": 2634,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2655,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2638,
											"end": 2645,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2638,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2638,
											"end": 2655,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2638,
											"end": 2655,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2638,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2638,
											"end": 2655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2638,
											"end": 2655,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2638,
											"end": 2655,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2579,
											"end": 2657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2579,
											"end": 2657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2657,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2708,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2691,
											"end": 2698,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2691,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2691,
											"end": 2708,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2691,
											"end": 2708,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2691,
											"end": 2708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2691,
											"end": 2708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2691,
											"end": 2708,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2691,
											"end": 2708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2686,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2671,
											"end": 2686,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2709,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2709,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2709,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2671,
											"end": 2709,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2671,
											"end": 2709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2709,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2671,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2709,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2709,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2709,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2709,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2709,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2671,
											"end": 2709,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2757,
											"end": 2766,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2749,
											"end": 2756,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2749,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2749,
											"end": 2766,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2749,
											"end": 2766,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2749,
											"end": 2766,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2749,
											"end": 2766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2749,
											"end": 2766,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2749,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2733,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2723,
											"end": 2745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2734,
											"end": 2744,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2745,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2723,
											"end": 2745,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2745,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2723,
											"end": 2745,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2745,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2723,
											"end": 2745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2745,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2723,
											"end": 2745,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2723,
											"end": 2745,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2767,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2767,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2723,
											"end": 2767,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2827,
											"name": "PUSH",
											"source": 6,
											"value": "CC87AB2ABFE87B272AF9B77691E40B3D9186A0431F3D41A8E06D39614F460722"
										},
										{
											"begin": 2796,
											"end": 2806,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2816,
											"end": 2825,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2808,
											"end": 2815,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2808,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2808,
											"end": 2825,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2808,
											"end": 2825,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2808,
											"end": 2825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2808,
											"end": 2825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2808,
											"end": 2825,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 2808,
											"end": 2825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2827,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2786,
											"end": 2827,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2786,
											"end": 2827,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2827,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2827,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2786,
											"end": 2827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2827,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2786,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2827,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2786,
											"end": 2827,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2827,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2827,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2827,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2827,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2786,
											"end": 2827,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 2248,
											"end": 2838,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2248,
											"end": 2838,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1985,
											"end": 2838,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 1985,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 2897,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 2897,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 2897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3356,
											"end": 3369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3394,
											"end": 3403,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3414,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3387,
											"end": 3414,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3414,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 3423,
											"end": 3427,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3387,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3387,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 3387,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3380,
											"end": 3429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3380,
											"end": 3429,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3291,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 302,
											"end": 325,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 302,
											"end": 325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 302,
											"end": 325,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 302,
											"end": 325,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 302,
											"end": 325,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 302,
											"end": 325,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 302,
											"end": 325,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 302,
											"end": 325,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 302,
											"end": 325,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 302,
											"end": 325,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 302,
											"end": 325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1128,
											"end": 1161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 3,
											"value": "184"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 3,
											"value": "186"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 3,
											"value": "185"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 1368,
											"end": 1373,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 1353,
											"end": 1374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1348,
											"end": 1351,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1375,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1381,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1272,
											"end": 1381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1514,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1501,
											"end": 1510,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1497,
											"end": 1515,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1489,
											"end": 1515,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 1587,
											"end": 1588,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1585,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1572,
											"end": 1589,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1569,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 1525,
											"end": 1590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 1525,
											"end": 1590,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1387,
											"end": 1597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1387,
											"end": 1597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1603,
											"end": 1680,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 1603,
											"end": 1680,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1640,
											"end": 1647,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1674,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1674,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1658,
											"end": 1674,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1603,
											"end": 1680,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1603,
											"end": 1680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1603,
											"end": 1680,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1603,
											"end": 1680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1686,
											"end": 1808,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1686,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 1777,
											"end": 1782,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 1759,
											"end": 1783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1759,
											"end": 1783,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 1759,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1752,
											"end": 1757,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1749,
											"end": 1784,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 1739,
											"end": 1802,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1798,
											"end": 1799,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1796,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1788,
											"end": 1800,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1802,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 1739,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1686,
											"end": 1808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1686,
											"end": 1808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1814,
											"end": 1953,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1814,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1860,
											"end": 1865,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1885,
											"end": 1905,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1905,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1905,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 1941,
											"end": 1946,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1914,
											"end": 1947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1914,
											"end": 1947,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 1914,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1814,
											"end": 1953,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1814,
											"end": 1953,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1814,
											"end": 1953,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1814,
											"end": 1953,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1814,
											"end": 1953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 2433,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1959,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2041,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2084,
											"end": 2086,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2072,
											"end": 2081,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2063,
											"end": 2070,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2082,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2055,
											"end": 2087,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2052,
											"end": 2171,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2052,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2052,
											"end": 2171,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2090,
											"end": 2169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 2090,
											"end": 2169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2169,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2090,
											"end": 2169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2052,
											"end": 2171,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2052,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2235,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 2280,
											"end": 2287,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2260,
											"end": 2269,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2235,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 2235,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2235,
											"end": 2288,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 2235,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2288,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2288,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2181,
											"end": 2298,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2337,
											"end": 2339,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 2408,
											"end": 2415,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2399,
											"end": 2405,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2388,
											"end": 2397,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2384,
											"end": 2406,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2363,
											"end": 2416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2353,
											"end": 2416,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2353,
											"end": 2416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 2433,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 2433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 2433,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 2433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 2433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1959,
											"end": 2433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2439,
											"end": 2557,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2439,
											"end": 2557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2526,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2526,
											"end": 2550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 2526,
											"end": 2550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2526,
											"end": 2550,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 2526,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2524,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2514,
											"end": 2551,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2439,
											"end": 2557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2439,
											"end": 2557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2439,
											"end": 2557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2660,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2694,
											"end": 2696,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2683,
											"end": 2692,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2679,
											"end": 2697,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2671,
											"end": 2697,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2671,
											"end": 2697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 2775,
											"end": 2776,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2773,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2760,
											"end": 2777,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2751,
											"end": 2757,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2778,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2707,
											"end": 2778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2707,
											"end": 2778,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 2707,
											"end": 2778,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2785,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2909,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2791,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 2896,
											"end": 2901,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2878,
											"end": 2902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 2878,
											"end": 2902,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2873,
											"end": 2876,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 2903,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2791,
											"end": 2909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2915,
											"end": 3137,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 2915,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3012,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3046,
											"end": 3048,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3035,
											"end": 3044,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3031,
											"end": 3049,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3049,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3023,
											"end": 3049,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 3127,
											"end": 3128,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3116,
											"end": 3125,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3112,
											"end": 3129,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3103,
											"end": 3109,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3059,
											"end": 3130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3059,
											"end": 3130,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 3059,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2915,
											"end": 3137,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2915,
											"end": 3137,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2915,
											"end": 3137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2915,
											"end": 3137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2915,
											"end": 3137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3143,
											"end": 3472,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3143,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3208,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3251,
											"end": 3253,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3239,
											"end": 3248,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3230,
											"end": 3237,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3226,
											"end": 3249,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3222,
											"end": 3254,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3219,
											"end": 3338,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3219,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 3219,
											"end": 3338,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 3257,
											"end": 3336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3257,
											"end": 3336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3336,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 3257,
											"end": 3336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3219,
											"end": 3338,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 3219,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3377,
											"end": 3378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3402,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 3447,
											"end": 3454,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3438,
											"end": 3444,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3427,
											"end": 3436,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3423,
											"end": 3445,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3402,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 3402,
											"end": 3455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3402,
											"end": 3455,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 3402,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3392,
											"end": 3455,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3392,
											"end": 3455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3348,
											"end": 3465,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3143,
											"end": 3472,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3143,
											"end": 3472,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3143,
											"end": 3472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3143,
											"end": 3472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3143,
											"end": 3472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 3647,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3478,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3562,
											"end": 3573,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3596,
											"end": 3602,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3591,
											"end": 3594,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3584,
											"end": 3603,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3636,
											"end": 3640,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3631,
											"end": 3634,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3627,
											"end": 3641,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3641,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3612,
											"end": 3641,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 3647,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 3647,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 3647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 3647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3478,
											"end": 3647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3653,
											"end": 3829,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 3653,
											"end": 3829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3793,
											"end": 3821,
											"name": "PUSH",
											"source": 7,
											"value": "546869732041646472657373206973206E6F7420657869737421000000000000"
										},
										{
											"begin": 3789,
											"end": 3790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3781,
											"end": 3787,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3777,
											"end": 3791,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3770,
											"end": 3822,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3653,
											"end": 3829,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3653,
											"end": 3829,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 4201,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3835,
											"end": 4201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3977,
											"end": 3980,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3998,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 4062,
											"end": 4064,
											"name": "PUSH",
											"source": 7,
											"value": "1A"
										},
										{
											"begin": 4057,
											"end": 4060,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 3998,
											"end": 4065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4065,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 3998,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 4065,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3991,
											"end": 4065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 4163,
											"end": 4166,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4074,
											"end": 4167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4167,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 4074,
											"end": 4167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4192,
											"end": 4194,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4187,
											"end": 4190,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4183,
											"end": 4195,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4195,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4176,
											"end": 4195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 4201,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 4201,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 4201,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 4201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4207,
											"end": 4626,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 4207,
											"end": 4626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4373,
											"end": 4377,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4411,
											"end": 4413,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4400,
											"end": 4409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4396,
											"end": 4414,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4388,
											"end": 4414,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4460,
											"end": 4469,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4454,
											"end": 4458,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4450,
											"end": 4470,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4446,
											"end": 4447,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4435,
											"end": 4444,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4431,
											"end": 4448,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4424,
											"end": 4471,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4488,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 4614,
											"end": 4618,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4488,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4488,
											"end": 4619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4488,
											"end": 4619,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 4488,
											"end": 4619,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4480,
											"end": 4619,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4480,
											"end": 4619,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4207,
											"end": 4626,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4207,
											"end": 4626,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4207,
											"end": 4626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4207,
											"end": 4626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4964,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 4632,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4753,
											"end": 4757,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4791,
											"end": 4793,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4780,
											"end": 4789,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4776,
											"end": 4794,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4768,
											"end": 4794,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4768,
											"end": 4794,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 4872,
											"end": 4873,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4861,
											"end": 4870,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4857,
											"end": 4874,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4848,
											"end": 4854,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 4804,
											"end": 4875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4804,
											"end": 4875,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 4804,
											"end": 4875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 4953,
											"end": 4955,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4942,
											"end": 4951,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4938,
											"end": 4956,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4929,
											"end": 4935,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 4885,
											"end": 4957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4957,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 4885,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4964,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4964,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4964,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4970,
											"end": 5193,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 4970,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5144,
											"name": "PUSH",
											"source": 7,
											"value": "54686973204164647265737320697320616C72656164792057686974654C6973"
										},
										{
											"begin": 5106,
											"end": 5107,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5104,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5094,
											"end": 5108,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5087,
											"end": 5145,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5179,
											"end": 5185,
											"name": "PUSH",
											"source": 7,
											"value": "7465642100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5174,
											"end": 5176,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5166,
											"end": 5172,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5162,
											"end": 5177,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5155,
											"end": 5186,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4970,
											"end": 5193,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4970,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5199,
											"end": 5565,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 5199,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5341,
											"end": 5344,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5362,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 5426,
											"end": 5428,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5421,
											"end": 5424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5362,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 5362,
											"end": 5429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5362,
											"end": 5429,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 5362,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5355,
											"end": 5429,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5355,
											"end": 5429,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 5527,
											"end": 5530,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5531,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 5438,
											"end": 5531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5531,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 5438,
											"end": 5531,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5556,
											"end": 5558,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5551,
											"end": 5554,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5547,
											"end": 5559,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5559,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5540,
											"end": 5559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5199,
											"end": 5565,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5199,
											"end": 5565,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5199,
											"end": 5565,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5199,
											"end": 5565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5990,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 5571,
											"end": 5990,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5737,
											"end": 5741,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5775,
											"end": 5777,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5764,
											"end": 5773,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5760,
											"end": 5778,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5752,
											"end": 5778,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5752,
											"end": 5778,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5824,
											"end": 5833,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5818,
											"end": 5822,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5814,
											"end": 5834,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5808,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5795,
											"end": 5812,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5788,
											"end": 5835,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5852,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 5978,
											"end": 5982,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5852,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 5852,
											"end": 5983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5852,
											"end": 5983,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 5852,
											"end": 5983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5844,
											"end": 5983,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5844,
											"end": 5983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5990,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5990,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5990,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5571,
											"end": 5990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5996,
											"end": 6222,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 5996,
											"end": 6222,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6136,
											"end": 6170,
											"name": "PUSH",
											"source": 7,
											"value": "416363657074206F6E6C7920285553444D2C4449412C555344542C5553444329"
										},
										{
											"begin": 6132,
											"end": 6133,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6124,
											"end": 6130,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6120,
											"end": 6134,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6113,
											"end": 6171,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6205,
											"end": 6214,
											"name": "PUSH",
											"source": 7,
											"value": "20546F6B656E7300000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6200,
											"end": 6202,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6192,
											"end": 6198,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6188,
											"end": 6203,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6181,
											"end": 6215,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5996,
											"end": 6222,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5996,
											"end": 6222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6228,
											"end": 6594,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 6228,
											"end": 6594,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6373,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6391,
											"end": 6458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 6455,
											"end": 6457,
											"name": "PUSH",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 6450,
											"end": 6453,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6391,
											"end": 6458,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 6391,
											"end": 6458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6391,
											"end": 6458,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 6391,
											"end": 6458,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6384,
											"end": 6458,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6384,
											"end": 6458,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 6556,
											"end": 6559,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 6467,
											"end": 6560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6560,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 6467,
											"end": 6560,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6580,
											"end": 6583,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6576,
											"end": 6588,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6569,
											"end": 6588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6569,
											"end": 6588,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6228,
											"end": 6594,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6228,
											"end": 6594,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6228,
											"end": 6594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6228,
											"end": 6594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 7019,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 6600,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6766,
											"end": 6770,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6804,
											"end": 6806,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6793,
											"end": 6802,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6789,
											"end": 6807,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6781,
											"end": 6807,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6781,
											"end": 6807,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6853,
											"end": 6862,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6847,
											"end": 6851,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6843,
											"end": 6863,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6839,
											"end": 6840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6837,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6824,
											"end": 6841,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6817,
											"end": 6864,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6881,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 7007,
											"end": 7011,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6881,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 6881,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6881,
											"end": 7012,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 6881,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 7012,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 7012,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 7019,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 7019,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 7019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6600,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7025,
											"end": 7357,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 7025,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7146,
											"end": 7150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7184,
											"end": 7186,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7173,
											"end": 7182,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7169,
											"end": 7187,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7161,
											"end": 7187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7161,
											"end": 7187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7197,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 7265,
											"end": 7266,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7254,
											"end": 7263,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7250,
											"end": 7267,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7241,
											"end": 7247,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7197,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 7197,
											"end": 7268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7197,
											"end": 7268,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 7197,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7278,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 7346,
											"end": 7348,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7335,
											"end": 7344,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7331,
											"end": 7349,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7322,
											"end": 7328,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7278,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 7278,
											"end": 7350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7278,
											"end": 7350,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 7278,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7025,
											"end": 7357,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7025,
											"end": 7357,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7025,
											"end": 7357,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7025,
											"end": 7357,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7025,
											"end": 7357,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7025,
											"end": 7357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7363,
											"end": 7506,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 7363,
											"end": 7506,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7420,
											"end": 7425,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7451,
											"end": 7457,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7445,
											"end": 7458,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7436,
											"end": 7458,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7436,
											"end": 7458,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7467,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 7494,
											"end": 7499,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7467,
											"end": 7500,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 7467,
											"end": 7500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7467,
											"end": 7500,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 7467,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7363,
											"end": 7506,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7363,
											"end": 7506,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7363,
											"end": 7506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7363,
											"end": 7506,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7363,
											"end": 7506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7512,
											"end": 7863,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 7512,
											"end": 7863,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7631,
											"end": 7633,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7619,
											"end": 7628,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7610,
											"end": 7617,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7606,
											"end": 7629,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7602,
											"end": 7634,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7599,
											"end": 7718,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7599,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 7599,
											"end": 7718,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7637,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 7637,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 7637,
											"end": 7716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7637,
											"end": 7716,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 7637,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7599,
											"end": 7718,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 7599,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7782,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 7838,
											"end": 7845,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7829,
											"end": 7835,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7818,
											"end": 7827,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7814,
											"end": 7836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7782,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 7782,
											"end": 7846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7782,
											"end": 7846,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 7782,
											"end": 7846,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7846,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7772,
											"end": 7846,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7728,
											"end": 7856,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7512,
											"end": 7863,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7512,
											"end": 7863,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7512,
											"end": 7863,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7512,
											"end": 7863,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7512,
											"end": 7863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7869,
											"end": 8036,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 7869,
											"end": 8036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8009,
											"end": 8028,
											"name": "PUSH",
											"source": 7,
											"value": "416C6C6F77616E6365206E6F7420736574000000000000000000000000000000"
										},
										{
											"begin": 8005,
											"end": 8006,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7997,
											"end": 8003,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7993,
											"end": 8007,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7986,
											"end": 8029,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7869,
											"end": 8036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7869,
											"end": 8036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8042,
											"end": 8408,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 8042,
											"end": 8408,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8184,
											"end": 8187,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8205,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 8269,
											"end": 8271,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8264,
											"end": 8267,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8205,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 8205,
											"end": 8272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8205,
											"end": 8272,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 8205,
											"end": 8272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8198,
											"end": 8272,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8198,
											"end": 8272,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8281,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 8370,
											"end": 8373,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8281,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 8281,
											"end": 8374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8281,
											"end": 8374,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 8281,
											"end": 8374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8399,
											"end": 8401,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8394,
											"end": 8397,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8390,
											"end": 8402,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8383,
											"end": 8402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8042,
											"end": 8408,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8042,
											"end": 8408,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8042,
											"end": 8408,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8042,
											"end": 8408,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8414,
											"end": 8833,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 8414,
											"end": 8833,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8580,
											"end": 8584,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8618,
											"end": 8620,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8607,
											"end": 8616,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8603,
											"end": 8621,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8595,
											"end": 8621,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8595,
											"end": 8621,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8667,
											"end": 8676,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8661,
											"end": 8665,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8657,
											"end": 8677,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8653,
											"end": 8654,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8642,
											"end": 8651,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8638,
											"end": 8655,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8631,
											"end": 8678,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8695,
											"end": 8826,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 8821,
											"end": 8825,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8695,
											"end": 8826,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 8695,
											"end": 8826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8695,
											"end": 8826,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 8695,
											"end": 8826,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8687,
											"end": 8826,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8687,
											"end": 8826,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8414,
											"end": 8833,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8414,
											"end": 8833,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8414,
											"end": 8833,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8414,
											"end": 8833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 9009,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 8839,
											"end": 9009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8979,
											"end": 9001,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E742062616C616E6365000000000000000000000000"
										},
										{
											"begin": 8975,
											"end": 8976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8967,
											"end": 8973,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8963,
											"end": 8977,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8956,
											"end": 9002,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 9009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8839,
											"end": 9009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9015,
											"end": 9381,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 9015,
											"end": 9381,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9157,
											"end": 9160,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9178,
											"end": 9245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 9242,
											"end": 9244,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 9237,
											"end": 9240,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9178,
											"end": 9245,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 9178,
											"end": 9245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9178,
											"end": 9245,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 9178,
											"end": 9245,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9171,
											"end": 9245,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9171,
											"end": 9245,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9254,
											"end": 9347,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 9343,
											"end": 9346,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9254,
											"end": 9347,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 9254,
											"end": 9347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9254,
											"end": 9347,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 9254,
											"end": 9347,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9372,
											"end": 9374,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9367,
											"end": 9370,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9363,
											"end": 9375,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9356,
											"end": 9375,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9356,
											"end": 9375,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9015,
											"end": 9381,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9015,
											"end": 9381,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9015,
											"end": 9381,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9015,
											"end": 9381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9387,
											"end": 9806,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 9387,
											"end": 9806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9553,
											"end": 9557,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9591,
											"end": 9593,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9580,
											"end": 9589,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9576,
											"end": 9594,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9568,
											"end": 9594,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9568,
											"end": 9594,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9640,
											"end": 9649,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9638,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9630,
											"end": 9650,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9626,
											"end": 9627,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9615,
											"end": 9624,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9611,
											"end": 9628,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9604,
											"end": 9651,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9668,
											"end": 9799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 9794,
											"end": 9798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9668,
											"end": 9799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 9668,
											"end": 9799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9668,
											"end": 9799,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 9668,
											"end": 9799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9660,
											"end": 9799,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9660,
											"end": 9799,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9387,
											"end": 9806,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9387,
											"end": 9806,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9387,
											"end": 9806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9387,
											"end": 9806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9812,
											"end": 10254,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 9812,
											"end": 10254,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9961,
											"end": 9965,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10001,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9988,
											"end": 9997,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9984,
											"end": 10002,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9976,
											"end": 10002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9976,
											"end": 10002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10012,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 10080,
											"end": 10081,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10069,
											"end": 10078,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10065,
											"end": 10082,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10056,
											"end": 10062,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10012,
											"end": 10083,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 10012,
											"end": 10083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10012,
											"end": 10083,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 10012,
											"end": 10083,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10093,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 10161,
											"end": 10163,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10150,
											"end": 10159,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10146,
											"end": 10164,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10137,
											"end": 10143,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10093,
											"end": 10165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 10093,
											"end": 10165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10093,
											"end": 10165,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 10093,
											"end": 10165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10175,
											"end": 10247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 10243,
											"end": 10245,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10232,
											"end": 10241,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10228,
											"end": 10246,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10219,
											"end": 10225,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10175,
											"end": 10247,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 10175,
											"end": 10247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10175,
											"end": 10247,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 10175,
											"end": 10247,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9812,
											"end": 10254,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 9812,
											"end": 10254,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9812,
											"end": 10254,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9812,
											"end": 10254,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9812,
											"end": 10254,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9812,
											"end": 10254,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9812,
											"end": 10254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10260,
											"end": 10376,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 10260,
											"end": 10376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10330,
											"end": 10351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 10345,
											"end": 10350,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10330,
											"end": 10351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 10330,
											"end": 10351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10330,
											"end": 10351,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 10330,
											"end": 10351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10323,
											"end": 10328,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10320,
											"end": 10352,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 10310,
											"end": 10370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 10310,
											"end": 10370,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10366,
											"end": 10367,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10363,
											"end": 10364,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 10368,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10310,
											"end": 10370,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 10310,
											"end": 10370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10260,
											"end": 10376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10260,
											"end": 10376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10382,
											"end": 10519,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 10382,
											"end": 10519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10436,
											"end": 10441,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10467,
											"end": 10473,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10461,
											"end": 10474,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10452,
											"end": 10474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10452,
											"end": 10474,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10483,
											"end": 10513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 10507,
											"end": 10512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10483,
											"end": 10513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 10483,
											"end": 10513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10483,
											"end": 10513,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 10483,
											"end": 10513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10382,
											"end": 10519,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10382,
											"end": 10519,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10382,
											"end": 10519,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10382,
											"end": 10519,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10382,
											"end": 10519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10525,
											"end": 10870,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 10525,
											"end": 10870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10592,
											"end": 10598,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10641,
											"end": 10643,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10629,
											"end": 10638,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10620,
											"end": 10627,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10616,
											"end": 10639,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10612,
											"end": 10644,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 10609,
											"end": 10728,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10609,
											"end": 10728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 10609,
											"end": 10728,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10647,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 10647,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 10647,
											"end": 10726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10647,
											"end": 10726,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 10647,
											"end": 10726,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10609,
											"end": 10728,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 10609,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10767,
											"end": 10768,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10792,
											"end": 10853,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 10845,
											"end": 10852,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10836,
											"end": 10842,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10825,
											"end": 10834,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10821,
											"end": 10843,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10853,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 10792,
											"end": 10853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10792,
											"end": 10853,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 10792,
											"end": 10853,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10782,
											"end": 10853,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10738,
											"end": 10863,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10525,
											"end": 10870,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10525,
											"end": 10870,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10525,
											"end": 10870,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10525,
											"end": 10870,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10525,
											"end": 10870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10876,
											"end": 11056,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 10876,
											"end": 11056,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10924,
											"end": 11001,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10921,
											"end": 10922,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10914,
											"end": 11002,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11021,
											"end": 11025,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 11018,
											"end": 11019,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11011,
											"end": 11026,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11045,
											"end": 11049,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11042,
											"end": 11043,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11035,
											"end": 11050,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11062,
											"end": 11253,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 11062,
											"end": 11253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11102,
											"end": 11105,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11121,
											"end": 11141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 11139,
											"end": 11140,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11121,
											"end": 11141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 11121,
											"end": 11141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11121,
											"end": 11141,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 11121,
											"end": 11141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11116,
											"end": 11141,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11116,
											"end": 11141,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11155,
											"end": 11175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 11173,
											"end": 11174,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11155,
											"end": 11175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 11155,
											"end": 11175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11155,
											"end": 11175,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 11155,
											"end": 11175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11150,
											"end": 11175,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11150,
											"end": 11175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11198,
											"end": 11199,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11195,
											"end": 11196,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11191,
											"end": 11200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11184,
											"end": 11200,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11184,
											"end": 11200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11219,
											"end": 11222,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11216,
											"end": 11217,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11213,
											"end": 11223,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11210,
											"end": 11246,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11210,
											"end": 11246,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 11210,
											"end": 11246,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11226,
											"end": 11244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 11226,
											"end": 11244,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 11226,
											"end": 11244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11226,
											"end": 11244,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 11226,
											"end": 11244,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11210,
											"end": 11246,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 11210,
											"end": 11246,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11062,
											"end": 11253,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11062,
											"end": 11253,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11062,
											"end": 11253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11062,
											"end": 11253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11062,
											"end": 11253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11259,
											"end": 11669,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 11259,
											"end": 11669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11299,
											"end": 11306,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11322,
											"end": 11342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 11340,
											"end": 11341,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11322,
											"end": 11342,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 11322,
											"end": 11342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11322,
											"end": 11342,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 11322,
											"end": 11342,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11317,
											"end": 11342,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11317,
											"end": 11342,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11356,
											"end": 11376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 11374,
											"end": 11375,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11356,
											"end": 11376,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 11356,
											"end": 11376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11356,
											"end": 11376,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 11356,
											"end": 11376,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11351,
											"end": 11376,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11351,
											"end": 11376,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11411,
											"end": 11412,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11408,
											"end": 11409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11404,
											"end": 11413,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 11433,
											"end": 11463,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 11451,
											"end": 11462,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11433,
											"end": 11463,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 11433,
											"end": 11463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11433,
											"end": 11463,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 11433,
											"end": 11463,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11422,
											"end": 11463,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11422,
											"end": 11463,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11612,
											"end": 11613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11603,
											"end": 11610,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11599,
											"end": 11614,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 11596,
											"end": 11597,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11593,
											"end": 11615,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 11573,
											"end": 11574,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11566,
											"end": 11575,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11546,
											"end": 11629,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 11523,
											"end": 11662,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 11523,
											"end": 11662,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 11642,
											"end": 11660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 11642,
											"end": 11660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11523,
											"end": 11662,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 11523,
											"end": 11662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11307,
											"end": 11669,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11259,
											"end": 11669,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11259,
											"end": 11669,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11259,
											"end": 11669,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11259,
											"end": 11669,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11259,
											"end": 11669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11675,
											"end": 11855,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 11675,
											"end": 11855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11723,
											"end": 11800,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11720,
											"end": 11721,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11713,
											"end": 11801,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11820,
											"end": 11824,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 11817,
											"end": 11818,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11810,
											"end": 11825,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11844,
											"end": 11848,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11841,
											"end": 11842,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11834,
											"end": 11849,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11861,
											"end": 12046,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 11861,
											"end": 12046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11901,
											"end": 11902,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11918,
											"end": 11938,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 11936,
											"end": 11937,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11918,
											"end": 11938,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 11918,
											"end": 11938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11918,
											"end": 11938,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 11918,
											"end": 11938,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11913,
											"end": 11938,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11913,
											"end": 11938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11952,
											"end": 11972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 11970,
											"end": 11971,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11952,
											"end": 11972,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 11952,
											"end": 11972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11952,
											"end": 11972,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 11952,
											"end": 11972,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11947,
											"end": 11972,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11947,
											"end": 11972,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11991,
											"end": 11992,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11981,
											"end": 12016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 11981,
											"end": 12016,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11996,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 11996,
											"end": 12014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 11996,
											"end": 12014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11996,
											"end": 12014,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 11996,
											"end": 12014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11981,
											"end": 12016,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 11981,
											"end": 12016,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12038,
											"end": 12039,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12035,
											"end": 12036,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12031,
											"end": 12040,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 12026,
											"end": 12040,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12026,
											"end": 12040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11861,
											"end": 12046,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11861,
											"end": 12046,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11861,
											"end": 12046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11861,
											"end": 12046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11861,
											"end": 12046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12052,
											"end": 12232,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 12052,
											"end": 12232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12100,
											"end": 12177,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12097,
											"end": 12098,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12090,
											"end": 12178,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12197,
											"end": 12201,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 12194,
											"end": 12195,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 12187,
											"end": 12202,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12221,
											"end": 12225,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 12218,
											"end": 12219,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12211,
											"end": 12226,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 12238,
											"end": 12432,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 12238,
											"end": 12432,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12278,
											"end": 12282,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12298,
											"end": 12318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 12316,
											"end": 12317,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12298,
											"end": 12318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 12298,
											"end": 12318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12298,
											"end": 12318,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 12298,
											"end": 12318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12293,
											"end": 12318,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12293,
											"end": 12318,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12332,
											"end": 12352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 12350,
											"end": 12351,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12332,
											"end": 12352,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 12332,
											"end": 12352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12332,
											"end": 12352,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 12332,
											"end": 12352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12327,
											"end": 12352,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12327,
											"end": 12352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12376,
											"end": 12377,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12373,
											"end": 12374,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12369,
											"end": 12378,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12361,
											"end": 12378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12361,
											"end": 12378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12400,
											"end": 12401,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12394,
											"end": 12398,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12391,
											"end": 12402,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 12388,
											"end": 12425,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12388,
											"end": 12425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 12388,
											"end": 12425,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12405,
											"end": 12423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 12405,
											"end": 12423,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 12405,
											"end": 12423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12405,
											"end": 12423,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 12405,
											"end": 12423,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12388,
											"end": 12425,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 12388,
											"end": 12425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12238,
											"end": 12432,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12238,
											"end": 12432,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12238,
											"end": 12432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12238,
											"end": 12432,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12238,
											"end": 12432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12438,
											"end": 12536,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 12438,
											"end": 12536,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12489,
											"end": 12495,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12523,
											"end": 12528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12517,
											"end": 12529,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12507,
											"end": 12529,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12507,
											"end": 12529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12438,
											"end": 12536,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12438,
											"end": 12536,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12438,
											"end": 12536,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12438,
											"end": 12536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12542,
											"end": 12689,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 12542,
											"end": 12689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12643,
											"end": 12654,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12680,
											"end": 12683,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12665,
											"end": 12683,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12665,
											"end": 12683,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12542,
											"end": 12689,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12542,
											"end": 12689,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12542,
											"end": 12689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12542,
											"end": 12689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12542,
											"end": 12689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12695,
											"end": 12941,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 12695,
											"end": 12941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12776,
											"end": 12777,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12786,
											"end": 12899,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 12786,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12800,
											"end": 12806,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12797,
											"end": 12798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12794,
											"end": 12807,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 12786,
											"end": 12899,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12786,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 12786,
											"end": 12899,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12885,
											"end": 12886,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12880,
											"end": 12883,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12876,
											"end": 12887,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12870,
											"end": 12888,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 12866,
											"end": 12867,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12861,
											"end": 12864,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12857,
											"end": 12868,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12850,
											"end": 12889,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12822,
											"end": 12824,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12819,
											"end": 12820,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12815,
											"end": 12825,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12810,
											"end": 12825,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12810,
											"end": 12825,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12786,
											"end": 12899,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 12786,
											"end": 12899,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12786,
											"end": 12899,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 12786,
											"end": 12899,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12933,
											"end": 12934,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12924,
											"end": 12930,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12919,
											"end": 12922,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12915,
											"end": 12931,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12908,
											"end": 12935,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12757,
											"end": 12941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12695,
											"end": 12941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12695,
											"end": 12941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12695,
											"end": 12941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12695,
											"end": 12941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12947,
											"end": 13333,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 12947,
											"end": 13333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13051,
											"end": 13054,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13079,
											"end": 13117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 13111,
											"end": 13116,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13079,
											"end": 13117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 13079,
											"end": 13117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13079,
											"end": 13117,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 13079,
											"end": 13117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13133,
											"end": 13221,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 13214,
											"end": 13220,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13209,
											"end": 13212,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13133,
											"end": 13221,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 13133,
											"end": 13221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13133,
											"end": 13221,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 13133,
											"end": 13221,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13126,
											"end": 13221,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 13126,
											"end": 13221,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13230,
											"end": 13295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 13288,
											"end": 13294,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13283,
											"end": 13286,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13276,
											"end": 13280,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13269,
											"end": 13274,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13265,
											"end": 13281,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13230,
											"end": 13295,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 13230,
											"end": 13295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13230,
											"end": 13295,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 13230,
											"end": 13295,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13320,
											"end": 13326,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13315,
											"end": 13318,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13311,
											"end": 13327,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13304,
											"end": 13327,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13304,
											"end": 13327,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13055,
											"end": 13333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12947,
											"end": 13333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12947,
											"end": 13333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12947,
											"end": 13333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12947,
											"end": 13333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12947,
											"end": 13333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13339,
											"end": 13610,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 13339,
											"end": 13610,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13469,
											"end": 13472,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13491,
											"end": 13584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 13580,
											"end": 13583,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13571,
											"end": 13577,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13491,
											"end": 13584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 13491,
											"end": 13584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13491,
											"end": 13584,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 13491,
											"end": 13584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13484,
											"end": 13584,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13484,
											"end": 13584,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13601,
											"end": 13604,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13594,
											"end": 13604,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13594,
											"end": 13604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13339,
											"end": 13610,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13339,
											"end": 13610,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13339,
											"end": 13610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13339,
											"end": 13610,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13339,
											"end": 13610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Liberswap/swaping.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"WhiteList(address)": "6bc20157",
							"currentHoldings()": "9c2c67c9",
							"feeOwner()": "b9818be1",
							"holdingOfTokens(address)": "a4329677",
							"owner()": "8da5cb5b",
							"removeFromWhiteList(address)": "01bf6648",
							"renounceOwnership()": "715018a6",
							"swapTokens(address,uint256)": "a114398d",
							"transferOwnership(address)": "f2fde38b",
							"userAmount(address)": "e1ad418e",
							"whilistedAddress(uint256)": "f09f0aac",
							"whiteList(address)": "372c12b1",
							"withdrawBalanceTokens(address,uint256)": "4f1bd9ca"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Hold_USDM_Token\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"swapSubstrateToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"swapToken\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"WhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentHoldings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ethToken\",\"type\":\"address\"}],\"name\":\"holdingOfTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"holdings\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeFromWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ethToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"swapTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"whilistedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ethToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawBalanceTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Liberswap/swaping.sol\":\"TokenSwap\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"contracts/Liberswap/swaping.sol\":{\"keccak256\":\"0xcb773c99b5a13ad03ece04a9610afaf26916fe7e8036353ef61810839554e68e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc25cb979f70eb2728f23ae38f0941b6a91805bb2db68ebbc4f187f68492e247\",\"dweb:/ipfs/QmNuo2WxkxbMAsDV2FPSCuVCfGTJLUYE7oTJkcZmPQPf4R\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/Liberswap/swaping.sol:TokenSwap",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 839,
								"contract": "contracts/Liberswap/swaping.sol:TokenSwap",
								"label": "feeOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 873,
								"contract": "contracts/Liberswap/swaping.sol:TokenSwap",
								"label": "whiteList",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 876,
								"contract": "contracts/Liberswap/swaping.sol:TokenSwap",
								"label": "whilistedAddress",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 880,
								"contract": "contracts/Liberswap/swaping.sol:TokenSwap",
								"label": "userAmount",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 882,
								"contract": "contracts/Liberswap/swaping.sol:TokenSwap",
								"label": "currentHoldings",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							826
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 827,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 826,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 826,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								826
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 225,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 225,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 225,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 225,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 225,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 225,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							261
						]
					},
					"id": 262,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:2",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 261,
							"linearizedBaseContracts": [
								261
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:2",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3022:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3045:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3070:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3093:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3119:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 238,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3136:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 240,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3155:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 242,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:2"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:2"
									},
									"scope": 261,
									"src": "2997:183:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:2",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 254,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "3501:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:2"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "3539:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:2"
									},
									"scope": 261,
									"src": "3485:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:2",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 260,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:2"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3791:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:2"
									},
									"scope": 261,
									"src": "3740:60:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 262,
							"src": "2113:1689:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							804
						],
						"IERC20": [
							225
						],
						"IERC20Permit": [
							261
						],
						"SafeERC20": [
							551
						]
					},
					"id": 552,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 263,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 265,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 226,
							"src": "141:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 264,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 225,
										"src": "149:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 267,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 262,
							"src": "179:60:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 266,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 261,
										"src": "187:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 269,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 805,
							"src": "240:51:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 268,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 804,
										"src": "248:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 551,
							"linearizedBaseContracts": [
								551
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 273,
									"libraryName": {
										"id": 271,
										"name": "Address",
										"nameLocations": [
											"781:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 804,
										"src": "781:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:3",
									"typeName": {
										"id": 272,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:3",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 278,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "907:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:3"
									},
									"src": "876:46:3"
								},
								{
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:3",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 287,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1043:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1060:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1086:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:3"
									},
									"src": "1004:109:3"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "1375:88:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 299,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "1405:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 302,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "1427:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:3",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 192,
																	"src": "1427:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 304,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 293,
																			"src": "1444:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 305,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 295,
																			"src": "1448:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 306,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 300,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:3",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 298,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1385:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:3"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:3",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1325:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 290,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 289,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "1325:6:3"
													},
													"referencedDeclaration": 225,
													"src": "1325:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1339:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1351:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:3"
									},
									"scope": 551,
									"src": "1303:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "1792:98:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 325,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1822:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 328,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "1844:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:3",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 224,
																	"src": "1844:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 330,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 317,
																			"src": "1865:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 331,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 319,
																			"src": "1871:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 332,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 321,
																			"src": "1875:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 333,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 326,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:3",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 324,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1802:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:3"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:3",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1728:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "1728:6:3"
													},
													"referencedDeclaration": 225,
													"src": "1728:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1742:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1756:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1768:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:3"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:3"
									},
									"scope": 551,
									"src": "1702:188:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "2167:139:3",
										"statements": [
											{
												"assignments": [
													350
												],
												"declarations": [
													{
														"constant": false,
														"id": 350,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 368,
														"src": "2177:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 349,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 359,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 355,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$551",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$551",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 353,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 357,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2231:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 351,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2200:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:3",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 202,
														"src": "2200:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 361,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2262:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 362,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2269:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 363,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 350,
																"src": "2278:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 364,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "2293:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 360,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "2249:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:3"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:3",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2112:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 340,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "2112:6:3"
													},
													"referencedDeclaration": 225,
													"src": "2112:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2126:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2143:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:3"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:3"
									},
									"scope": 551,
									"src": "2081:225:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "2607:370:3",
										"statements": [
											{
												"id": 410,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:3",
												"statements": [
													{
														"assignments": [
															381
														],
														"declarations": [
															{
																"constant": false,
																"id": 381,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:3",
																"nodeType": "VariableDeclaration",
																"scope": 410,
																"src": "2641:24:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 380,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 390,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 386,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$551",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$551",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 384,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 388,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "2699:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 382,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "2668:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:3",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 202,
																"src": "2668:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 391,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "2725:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 392,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "2744:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 401,
														"nodeType": "IfStatement",
														"src": "2721:160:3",
														"trueBody": {
															"id": 400,
															"nodeType": "Block",
															"src": "2763:118:3",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 395,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 375,
																				"src": "2821:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 396,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 381,
																				"src": "2830:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 397,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 377,
																				"src": "2848:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 394,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "2788:32:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 399,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:3"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 403,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "2907:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 404,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "2914:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 405,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "2923:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 406,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 377,
																		"src": "2942:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 402,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "2894:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 409,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:3",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2540:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 372,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 371,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "2540:6:3"
													},
													"referencedDeclaration": 225,
													"src": "2540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2554:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2571:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:3"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:3"
									},
									"scope": 551,
									"src": "2509:468:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "3373:303:3",
										"statements": [
											{
												"assignments": [
													424
												],
												"declarations": [
													{
														"constant": false,
														"id": 424,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "3383:25:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 423,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 433,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 427,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "3426:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:3",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 212,
															"src": "3426:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 429,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "3442:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 430,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "3451:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 431,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 425,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:3",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:3"
											},
											{
												"condition": {
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:3",
													"subExpression": {
														"arguments": [
															{
																"id": 435,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "3498:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 436,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "3505:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 434,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "3474:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 457,
												"nodeType": "IfStatement",
												"src": "3469:201:3",
												"trueBody": {
													"id": 456,
													"nodeType": "Block",
													"src": "3520:150:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 440,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "3554:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 443,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 416,
																					"src": "3576:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$225",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:3",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 212,
																				"src": "3576:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 445,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 418,
																						"src": "3592:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 446,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 447,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 441,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:3",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 439,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "3534:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 450,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 452,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "3639:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 453,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 424,
																		"src": "3646:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 451,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "3619:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 455,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:3",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3318:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 415,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 414,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "3318:6:3"
													},
													"referencedDeclaration": 225,
													"src": "3318:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3332:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3349:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:3"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:3"
									},
									"scope": 551,
									"src": "3296:380:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "4129:559:3",
										"statements": [
											{
												"assignments": [
													469
												],
												"declarations": [
													{
														"constant": false,
														"id": 469,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 500,
														"src": "4478:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 468,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 477,
												"initialValue": {
													"arguments": [
														{
															"id": 475,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "4532:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 472,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 463,
																	"src": "4512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 470,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:3",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 625,
														"src": "4504:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 478,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "4551:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:3",
														"subExpression": {
															"arguments": [
																{
																	"id": 484,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 469,
																	"src": "4589:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 485,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 487,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 482,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 499,
												"nodeType": "IfStatement",
												"src": "4547:135:3",
												"trueBody": {
													"id": 498,
													"nodeType": "Block",
													"src": "4610:72:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 494,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 463,
																				"src": "4664:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$225",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$225",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 492,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 491,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "4631:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 497,
															"nodeType": "RevertStatement",
															"src": "4624:47:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4088:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 462,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 461,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "4088:6:3"
													},
													"referencedDeclaration": 225,
													"src": "4088:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4102:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:3"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:3"
									},
									"scope": 551,
									"src": "4059:629:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "5278:489:3",
										"statements": [
											{
												"assignments": [
													513,
													515
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "5574:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 512,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 515,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "5588:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 514,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 523,
												"initialValue": {
													"arguments": [
														{
															"id": 521,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "5635:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 518,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "5623:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 524,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "5657:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 525,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 515,
																				"src": "5669:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:3",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 531,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 515,
																				"src": "5706:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 533,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 532,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 534,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 529,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:3",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 537,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 541,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 505,
																			"src": "5738:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$225",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$225",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 539,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:3",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 511,
												"id": 548,
												"nodeType": "Return",
												"src": "5650:110:3"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5222:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 504,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 503,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "5222:6:3"
													},
													"referencedDeclaration": 225,
													"src": "5222:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5236:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 506,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:3"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5272:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:3"
									},
									"scope": 551,
									"src": "5189:578:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 552,
							"src": "751:5018:3",
							"usedErrors": [
								278,
								287
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							804
						]
					},
					"id": 805,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 553,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 554,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 804,
							"linearizedBaseContracts": [
								804
							],
							"name": "Address",
							"nameLocation": "203:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:4",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 559,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "349:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:4"
									},
									"src": "316:50:4"
								},
								{
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:4",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 564,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "475:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:4"
									},
									"src": "452:39:4"
								},
								{
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:4",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 567,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:4"
									},
									"src": "591:24:4"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "1602:260:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 577,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																],
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 575,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:4",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 580,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "1640:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 590,
												"nodeType": "IfStatement",
												"src": "1612:109:4",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "1648:73:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 585,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			],
																			"id": 584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 583,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 582,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "1669:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 588,
															"nodeType": "RevertStatement",
															"src": "1662:48:4"
														}
													]
												}
											},
											{
												"assignments": [
													592,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 607,
														"src": "1732:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 591,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 599,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 593,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "1750:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 595,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "1772:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:4"
											},
											{
												"condition": {
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:4",
													"subExpression": {
														"id": 600,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "1798:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 606,
												"nodeType": "IfStatement",
												"src": "1793:63:4",
												"trueBody": {
													"id": 605,
													"nodeType": "Block",
													"src": "1807:49:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 602,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "1828:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 604,
															"nodeType": "RevertStatement",
															"src": "1821:24:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1550:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1577:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:4"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:4"
									},
									"scope": 804,
									"src": "1531:331:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "2794:62:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 619,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "2833:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "2841:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 618,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "2811:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 617,
												"id": 623,
												"nodeType": "Return",
												"src": "2804:45:4"
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2727:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2743:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 612,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:4"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2780:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 615,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:4"
									},
									"scope": 804,
									"src": "2705:151:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "3293:279:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 639,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																],
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 637,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:4",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 642,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "3331:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 652,
												"nodeType": "IfStatement",
												"src": "3303:108:4",
												"trueBody": {
													"id": 651,
													"nodeType": "Block",
													"src": "3338:73:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 647,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			],
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 645,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 644,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "3359:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 650,
															"nodeType": "RevertStatement",
															"src": "3352:48:4"
														}
													]
												}
											},
											{
												"assignments": [
													654,
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 654,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 670,
														"src": "3421:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 653,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 670,
														"src": "3435:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 655,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 663,
												"initialValue": {
													"arguments": [
														{
															"id": 661,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "3488:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 657,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "3462:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 659,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "3481:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 665,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "3537:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "3545:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 667,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "3554:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 664,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "3510:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 636,
												"id": 669,
												"nodeType": "Return",
												"src": "3503:62:4"
											}
										]
									},
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3211:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3227:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 629,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3246:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:4"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3279:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:4"
									},
									"scope": 804,
									"src": "3180:392:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "3811:154:4",
										"statements": [
											{
												"assignments": [
													682,
													684
												],
												"declarations": [
													{
														"constant": false,
														"id": 682,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "3822:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 681,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 684,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "3836:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 683,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 689,
												"initialValue": {
													"arguments": [
														{
															"id": 687,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "3881:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 685,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "3863:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 691,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "3930:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "3938:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 693,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "3947:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 690,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "3903:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 680,
												"id": 695,
												"nodeType": "Return",
												"src": "3896:62:4"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3739:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3755:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 675,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:4"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3797:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:4"
									},
									"scope": 804,
									"src": "3711:254:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "4203:156:4",
										"statements": [
											{
												"assignments": [
													708,
													710
												],
												"declarations": [
													{
														"constant": false,
														"id": 708,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "4214:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 707,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 710,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "4228:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 709,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 715,
												"initialValue": {
													"arguments": [
														{
															"id": 713,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "4275:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 711,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "4255:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 717,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "4324:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "4332:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 719,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "4341:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 716,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "4297:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 706,
												"id": 721,
												"nodeType": "Return",
												"src": "4290:62:4"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4136:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4152:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:4"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4189:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 704,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:4"
									},
									"scope": 804,
									"src": "4106:253:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "4783:424:4",
										"statements": [
											{
												"condition": {
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:4",
													"subExpression": {
														"id": 735,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "4798:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 760,
													"nodeType": "Block",
													"src": "4857:344:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 742,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 730,
																			"src": "5045:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 746,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 726,
																				"src": "5071:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:4",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 757,
															"nodeType": "IfStatement",
															"src": "5041:119:4",
															"trueBody": {
																"id": 756,
																"nodeType": "Block",
																"src": "5096:64:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 753,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 726,
																					"src": "5138:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 752,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 564,
																				"src": "5121:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 755,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 758,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "5180:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 734,
															"id": 759,
															"nodeType": "Return",
															"src": "5173:17:4"
														}
													]
												},
												"id": 761,
												"nodeType": "IfStatement",
												"src": "4793:408:4",
												"trueBody": {
													"id": 741,
													"nodeType": "Block",
													"src": "4807:44:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 738,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "4829:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 737,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "4821:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 740,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4670:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4694:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 727,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4716:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 729,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:4"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4769:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 732,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:4"
									},
									"scope": 804,
									"src": "4625:582:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "5509:122:4",
										"statements": [
											{
												"condition": {
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:4",
													"subExpression": {
														"id": 773,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "5524:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 782,
													"nodeType": "Block",
													"src": "5583:42:4",
													"statements": [
														{
															"expression": {
																"id": 780,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "5604:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 772,
															"id": 781,
															"nodeType": "Return",
															"src": "5597:17:4"
														}
													]
												},
												"id": 783,
												"nodeType": "IfStatement",
												"src": "5519:106:4",
												"trueBody": {
													"id": 779,
													"nodeType": "Block",
													"src": "5533:44:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 776,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "5555:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 775,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "5547:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 778,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:4",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5433:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 765,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5447:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 767,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:4"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5495:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 770,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:4"
									},
									"scope": 804,
									"src": "5407:224:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "5798:461:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 791,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "5874:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "6204:49:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 797,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "6225:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 799,
															"nodeType": "RevertStatement",
															"src": "6218:24:4"
														}
													]
												},
												"id": 801,
												"nodeType": "IfStatement",
												"src": "5870:383:4",
												"trueBody": {
													"id": 796,
													"nodeType": "Block",
													"src": "5897:301:4",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:4",
																"nodeType": "YulBlock",
																"src": "6055:133:4",
																"statements": [
																	{
																		"nativeSrc": "6073:40:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:4",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:4"
																			},
																			"nativeSrc": "6096:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:4",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:4",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:4",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:4"
																					},
																					"nativeSrc": "6137:19:4",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:4",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:4"
																			},
																			"nativeSrc": "6130:44:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:4"
																		},
																		"nativeSrc": "6130:44:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 788,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 788,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:4",
																	"valueSize": 1
																}
															],
															"id": 795,
															"nodeType": "InlineAssembly",
															"src": "6046:142:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:4",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "5760:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 787,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:4"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:4"
									},
									"scope": 804,
									"src": "5743:516:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 805,
							"src": "195:6066:4",
							"usedErrors": [
								559,
								564,
								567
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							826
						]
					},
					"id": 827,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 806,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 807,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 826,
							"linearizedBaseContracts": [
								826
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 812,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 811,
												"id": 814,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 826,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 821,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 820,
												"id": 823,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 818,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 826,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 827,
							"src": "624:235:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:5"
				},
				"id": 5
			},
			"contracts/Liberswap/swaping.sol": {
				"ast": {
					"absolutePath": "contracts/Liberswap/swaping.sol",
					"exportedSymbols": {
						"Address": [
							804
						],
						"Context": [
							826
						],
						"IERC20": [
							225
						],
						"IERC20Permit": [
							261
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							551
						],
						"TokenSwap": [
							1166
						]
					},
					"id": 1167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 828,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 829,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1167,
							"sourceUnit": 226,
							"src": "57:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 830,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1167,
							"sourceUnit": 552,
							"src": "114:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 831,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1167,
							"sourceUnit": 148,
							"src": "180:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 832,
										"name": "Ownable",
										"nameLocations": [
											"256:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "256:7:6"
									},
									"id": 833,
									"nodeType": "InheritanceSpecifier",
									"src": "256:7:6"
								}
							],
							"canonicalName": "TokenSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1166,
							"linearizedBaseContracts": [
								1166,
								147,
								826
							],
							"name": "TokenSwap",
							"nameLocation": "243:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 837,
									"libraryName": {
										"id": 834,
										"name": "SafeERC20",
										"nameLocations": [
											"276:9:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 551,
										"src": "276:9:6"
									},
									"nodeType": "UsingForDirective",
									"src": "270:27:6",
									"typeName": {
										"id": 836,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 835,
											"name": "IERC20",
											"nameLocations": [
												"290:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "290:6:6"
										},
										"referencedDeclaration": 225,
										"src": "290:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "b9818be1",
									"id": 839,
									"mutability": "mutable",
									"name": "feeOwner",
									"nameLocation": "317:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1166,
									"src": "302:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 838,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "302:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "cc87ab2abfe87b272af9b77691e40b3d9186a0431f3d41a8e06d39614f460722",
									"id": 845,
									"name": "swapToken",
									"nameLocation": "337:9:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "355:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "347:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "347:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "367:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "362:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 842,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "362:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "346:28:6"
									},
									"src": "331:44:6"
								},
								{
									"anonymous": false,
									"eventSelector": "92ba58c57c335232a5e63d6dbabcefcee8074c3d8909bc7f8e63dd6e434b280d",
									"id": 851,
									"name": "swapSubstrateToken",
									"nameLocation": "386:18:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "413:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "405:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "425:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "420:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "420:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:28:6"
									},
									"src": "380:53:6"
								},
								{
									"anonymous": false,
									"eventSelector": "e90fdaf1ebe9ad8ab1edd544a94c7381925e8933ec126ac9066cdcc01473cd82",
									"id": 857,
									"name": "Hold_USDM_Token",
									"nameLocation": "444:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "468:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "460:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "480:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "475:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "475:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:28:6"
									},
									"src": "438:50:6"
								},
								{
									"constant": true,
									"id": 860,
									"mutability": "constant",
									"name": "usdt",
									"nameLocation": "510:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1166,
									"src": "493:67:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 858,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "493:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307831303539646335384665453934466430636146384135633961396239333638343346306335333239",
										"id": 859,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "518:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x1059dc58FeE94Fd0caF8A5c9a9b936843F0c5329"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 863,
									"mutability": "constant",
									"name": "usdc",
									"nameLocation": "583:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1166,
									"src": "566:66:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 861,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "566:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307830374232354343383038324142633635433730623965356630306237663362384663463638313442",
										"id": 862,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "590:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x07B25CC8082ABc65C70b9e5f00b7f3b8FcF6814B"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 866,
									"mutability": "constant",
									"name": "dai",
									"nameLocation": "655:3:6",
									"nodeType": "VariableDeclaration",
									"scope": 1166,
									"src": "638:65:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 864,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "638:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307832444634464165634532654138623846423565466138653032326544656335323063326630464134",
										"id": 865,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "661:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x2DF4FAecE2eA8b8FB5eFa8e022eDec520c2f0FA4"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 869,
									"mutability": "constant",
									"name": "usdm",
									"nameLocation": "726:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1166,
									"src": "709:66:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 867,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "709:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307865394130354146614336653736373439343632663635333746656431343846333441393263306637",
										"id": 868,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "733:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xe9A05AFaC6e76749462f6537Fed148F34A92c0f7"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "372c12b1",
									"id": 873,
									"mutability": "mutable",
									"name": "whiteList",
									"nameLocation": "1113:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1166,
									"src": "1081:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 872,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 870,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1089:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1081:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 871,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1100:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f09f0aac",
									"id": 876,
									"mutability": "mutable",
									"name": "whilistedAddress",
									"nameLocation": "1145:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1166,
									"src": "1128:33:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 874,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1128:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 875,
										"nodeType": "ArrayTypeName",
										"src": "1128:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e1ad418e",
									"id": 880,
									"mutability": "mutable",
									"name": "userAmount",
									"nameLocation": "1200:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1166,
									"src": "1167:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 879,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 877,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1176:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1167:25:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 878,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1187:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9c2c67c9",
									"id": 882,
									"mutability": "mutable",
									"name": "currentHoldings",
									"nameLocation": "1228:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1166,
									"src": "1216:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 881,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1216:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "1307:40:6",
										"statements": [
											{
												"expression": {
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 890,
														"name": "feeOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 839,
														"src": "1317:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 891,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "1328:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1317:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "1317:23:6"
											}
										]
									},
									"id": 895,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 887,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 884,
													"src": "1292:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 888,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 886,
												"name": "Ownable",
												"nameLocations": [
													"1284:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1284:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1284:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1270:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "1262:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1262:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1261:22:6"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1307:0:6"
									},
									"scope": 1166,
									"src": "1250:97:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "1406:162:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1424:20:6",
															"subExpression": {
																"baseExpression": {
																	"id": 903,
																	"name": "whiteList",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 873,
																	"src": "1425:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 905,
																"indexExpression": {
																	"id": 904,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 897,
																	"src": "1435:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1425:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973204164647265737320697320616c72656164792057686974654c697374656421",
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1445:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_69cc1d0091f450c9f1b40951e04a8e02ae8a28f18820a3d492d53b3c2bca82f7",
																"typeString": "literal_string \"This Address is already WhiteListed!\""
															},
															"value": "This Address is already WhiteListed!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_69cc1d0091f450c9f1b40951e04a8e02ae8a28f18820a3d492d53b3c2bca82f7",
																"typeString": "literal_string \"This Address is already WhiteListed!\""
															}
														],
														"id": 902,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1416:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1416:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "1416:68:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 913,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "1516:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 910,
															"name": "whilistedAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "1494:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1511:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1494:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1494:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 915,
												"nodeType": "ExpressionStatement",
												"src": "1494:31:6"
											},
											{
												"expression": {
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 916,
															"name": "whiteList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "1535:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 918,
														"indexExpression": {
															"id": 917,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "1545:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1535:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 919,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1557:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1535:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "1535:26:6"
											}
										]
									},
									"functionSelector": "6bc20157",
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 900,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 899,
												"name": "onlyOwner",
												"nameLocations": [
													"1397:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1397:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1397:9:6"
										}
									],
									"name": "WhiteList",
									"nameLocation": "1362:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1380:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "1372:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1372:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1371:18:6"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1406:0:6"
									},
									"scope": 1166,
									"src": "1353:215:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1100,
										"nodeType": "Block",
										"src": "1636:1261:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 931,
																			"name": "_ethToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 925,
																			"src": "1654:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 932,
																			"name": "usdm",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 869,
																			"src": "1667:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "1654:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 934,
																			"name": "_ethToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 925,
																			"src": "1675:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 935,
																			"name": "usdc",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 863,
																			"src": "1688:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "1675:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "1654:38:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 938,
																		"name": "_ethToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 925,
																		"src": "1696:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 939,
																		"name": "dai",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 866,
																		"src": "1709:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "1696:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1654:58:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 942,
																	"name": "_ethToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 925,
																	"src": "1716:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 943,
																	"name": "usdt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 860,
																	"src": "1729:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1716:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1654:79:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657074206f6e6c7920285553444d2c4449412c555344542c555344432920546f6b656e73",
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1734:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_20a881cf3f301729162087809377e251ecb8eef784f0e70bb190c0868222ecfb",
																"typeString": "literal_string \"Accept only (USDM,DIA,USDT,USDC) Tokens\""
															},
															"value": "Accept only (USDM,DIA,USDT,USDC) Tokens"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_20a881cf3f301729162087809377e251ecb8eef784f0e70bb190c0868222ecfb",
																"typeString": "literal_string \"Accept only (USDM,DIA,USDT,USDC) Tokens\""
															}
														],
														"id": 930,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1646:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1646:130:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "1646:130:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 954,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1822:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1826:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1822:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 958,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1842:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenSwap_$1166",
																					"typeString": "contract TokenSwap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenSwap_$1166",
																					"typeString": "contract TokenSwap"
																				}
																			],
																			"id": 957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1834:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 956,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1834:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1834:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 951,
																				"name": "_ethToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 925,
																				"src": "1801:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 950,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 225,
																			"src": "1794:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1794:17:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1812:9:6",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 202,
																	"src": "1794:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1794:54:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 961,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 927,
																"src": "1852:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1794:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c6f77616e6365206e6f7420736574",
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1861:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b7f5bbf01babd612ff41adb253311ab3eccd8d56664e3b6ae54fa2e62b1bbfb0",
																"typeString": "literal_string \"Allowance not set\""
															},
															"value": "Allowance not set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b7f5bbf01babd612ff41adb253311ab3eccd8d56664e3b6ae54fa2e62b1bbfb0",
																"typeString": "literal_string \"Allowance not set\""
															}
														],
														"id": 949,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1786:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1786:95:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "1786:95:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 971,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1927:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1931:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1927:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 968,
																				"name": "_ethToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 925,
																				"src": "1906:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 967,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 225,
																			"src": "1899:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1899:17:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1917:9:6",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 182,
																	"src": "1899:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1899:39:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 974,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 927,
																"src": "1942:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1899:50:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1951:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 966,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1891:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1891:83:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "1891:83:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 979,
														"name": "_ethToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "1988:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 980,
														"name": "usdm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "2001:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1988:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1098,
													"nodeType": "Block",
													"src": "2248:590:6",
													"statements": [
														{
															"assignments": [
																1016
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1016,
																	"mutability": "mutable",
																	"name": "FeeAmount",
																	"nameLocation": "2267:9:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1098,
																	"src": "2262:14:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1015,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "2262:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1023,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1017,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 927,
																				"src": "2280:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "33",
																				"id": 1018,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2288:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_3_by_1",
																					"typeString": "int_const 3"
																				},
																				"value": "3"
																			},
																			"src": "2280:9:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1020,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2279:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31303030",
																	"id": 1021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2291:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "2279:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2262:33:6"
														},
														{
															"assignments": [
																1025
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1025,
																	"mutability": "mutable",
																	"name": "eachWhilitedAddressFee",
																	"nameLocation": "2314:22:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1098,
																	"src": "2309:27:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1024,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "2309:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1030,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1026,
																	"name": "FeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1016,
																	"src": "2339:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"expression": {
																		"id": 1027,
																		"name": "whilistedAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 876,
																		"src": "2349:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2366:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2349:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2339:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2309:63:6"
														},
														{
															"body": {
																"id": 1054,
																"nodeType": "Block",
																"src": "2446:120:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1046,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "2495:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1047,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2499:6:6",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "2495:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"baseExpression": {
																						"id": 1048,
																						"name": "whilistedAddress",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 876,
																						"src": "2507:16:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_storage",
																							"typeString": "address[] storage ref"
																						}
																					},
																					"id": 1050,
																					"indexExpression": {
																						"id": 1049,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1032,
																						"src": "2524:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2507:19:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1051,
																					"name": "eachWhilitedAddressFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1025,
																					"src": "2528:22:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1043,
																							"name": "_ethToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 925,
																							"src": "2471:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1042,
																						"name": "IERC20",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 225,
																						"src": "2464:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																							"typeString": "type(contract IERC20)"
																						}
																					},
																					"id": 1044,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2464:17:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$225",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1045,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2482:12:6",
																				"memberName": "transferFrom",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 224,
																				"src": "2464:30:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1052,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2464:87:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1053,
																		"nodeType": "ExpressionStatement",
																		"src": "2464:87:6"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1038,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1035,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1032,
																	"src": "2401:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1036,
																		"name": "whilistedAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 876,
																		"src": "2403:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2420:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2403:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2401:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1055,
															"initializationExpression": {
																"assignments": [
																	1032
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1032,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "2396:1:6",
																		"nodeType": "VariableDeclaration",
																		"scope": 1055,
																		"src": "2391:6:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1031,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "2391:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1034,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2398:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "2391:8:6"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 1040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "2428:3:6",
																	"subExpression": {
																		"id": 1039,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1032,
																		"src": "2428:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1041,
																"nodeType": "ExpressionStatement",
																"src": "2428:3:6"
															},
															"nodeType": "ForStatement",
															"src": "2386:180:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1060,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2610:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1061,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2614:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2610:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1064,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2630:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenSwap_$1166",
																					"typeString": "contract TokenSwap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenSwap_$1166",
																					"typeString": "contract TokenSwap"
																				}
																			],
																			"id": 1063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2622:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1062,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2622:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2622:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1068,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1066,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 927,
																					"src": "2638:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1067,
																					"name": "FeeAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1016,
																					"src": "2646:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2638:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1069,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2637:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1057,
																				"name": "_ethToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 925,
																				"src": "2586:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1056,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 225,
																			"src": "2579:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2579:17:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2597:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 224,
																	"src": "2579:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2579:78:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1071,
															"nodeType": "ExpressionStatement",
															"src": "2579:78:6"
														},
														{
															"expression": {
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1072,
																	"name": "currentHoldings",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "2671:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1075,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1073,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 927,
																				"src": "2691:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1074,
																				"name": "FeeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1016,
																				"src": "2699:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2691:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1076,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2690:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2671:38:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1078,
															"nodeType": "ExpressionStatement",
															"src": "2671:38:6"
														},
														{
															"expression": {
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1079,
																		"name": "userAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 880,
																		"src": "2723:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1082,
																	"indexExpression": {
																		"expression": {
																			"id": 1080,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2734:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1081,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2738:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2734:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2723:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1085,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1083,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 927,
																				"src": "2749:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1084,
																				"name": "FeeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1016,
																				"src": "2757:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2749:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1086,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2748:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2723:44:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1088,
															"nodeType": "ExpressionStatement",
															"src": "2723:44:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1090,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2796:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2800:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2796:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1094,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1092,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 927,
																					"src": "2808:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1093,
																					"name": "FeeAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1016,
																					"src": "2816:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "2808:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1095,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2807:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1089,
																	"name": "swapToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "2786:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2786:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1097,
															"nodeType": "EmitStatement",
															"src": "2781:46:6"
														}
													]
												},
												"id": 1099,
												"nodeType": "IfStatement",
												"src": "1985:853:6",
												"trueBody": {
													"id": 1014,
													"nodeType": "Block",
													"src": "2006:229:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 986,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2051:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2055:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2051:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 990,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2071:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenSwap_$1166",
																					"typeString": "contract TokenSwap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenSwap_$1166",
																					"typeString": "contract TokenSwap"
																				}
																			],
																			"id": 989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2063:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 988,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2063:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2063:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 992,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 927,
																				"src": "2079:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 993,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "2078:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 983,
																				"name": "_ethToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 925,
																				"src": "2027:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 982,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 225,
																			"src": "2020:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2020:17:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2038:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 224,
																	"src": "2020:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2020:68:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 995,
															"nodeType": "ExpressionStatement",
															"src": "2020:68:6"
														},
														{
															"expression": {
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 996,
																	"name": "currentHoldings",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "2102:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"components": [
																		{
																			"id": 997,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 927,
																			"src": "2122:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 998,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2121:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2102:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1000,
															"nodeType": "ExpressionStatement",
															"src": "2102:28:6"
														},
														{
															"expression": {
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1001,
																		"name": "userAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 880,
																		"src": "2144:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1004,
																	"indexExpression": {
																		"expression": {
																			"id": 1002,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2155:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2159:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2155:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2144:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1005,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "2169:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2144:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1007,
															"nodeType": "ExpressionStatement",
															"src": "2144:32:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1009,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2205:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2209:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2205:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1011,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 927,
																		"src": "2216:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1008,
																	"name": "swapToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "2195:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1012,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2195:29:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1013,
															"nodeType": "EmitStatement",
															"src": "2190:34:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "a114398d",
									"id": 1101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokens",
									"nameLocation": "1583:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "_ethToken",
												"nameLocation": "1602:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1594:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 924,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1594:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "1620:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1612:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:35:6"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1636:0:6"
									},
									"scope": 1166,
									"src": "1574:1323:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1125,
										"nodeType": "Block",
										"src": "2984:120:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1114,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3025:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3029:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3025:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1116,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "3036:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1111,
																	"name": "_ethToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1103,
																	"src": "3001:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1110,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "2994:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2994:17:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3012:12:6",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 311,
														"src": "2994:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2994:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "2994:50:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1120,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3078:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3082:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3078:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "3089:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1119,
														"name": "swapSubstrateToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "3059:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3059:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1124,
												"nodeType": "EmitStatement",
												"src": "3054:43:6"
											}
										]
									},
									"functionSelector": "4f1bd9ca",
									"id": 1126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1108,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1107,
												"name": "onlyOwner",
												"nameLocations": [
													"2975:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2975:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2975:9:6"
										}
									],
									"name": "withdrawBalanceTokens",
									"nameLocation": "2911:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "_ethToken",
												"nameLocation": "2941:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "2933:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2933:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "2959:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "2951:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2951:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2932:35:6"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2984:0:6"
									},
									"scope": 1166,
									"src": "2902:202:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "3173:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1134,
																"name": "whiteList",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "3191:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1136,
															"indexExpression": {
																"id": 1135,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "3201:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3191:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546869732041646472657373206973206e6f7420657869737421",
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3211:28:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e4b1ff88c98651e5d7d85eb43f5a141517ae9ecbf5e440d1ab5dd743d5169ea1",
																"typeString": "literal_string \"This Address is not exist!\""
															},
															"value": "This Address is not exist!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e4b1ff88c98651e5d7d85eb43f5a141517ae9ecbf5e440d1ab5dd743d5169ea1",
																"typeString": "literal_string \"This Address is not exist!\""
															}
														],
														"id": 1133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3183:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3183:57:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1139,
												"nodeType": "ExpressionStatement",
												"src": "3183:57:6"
											},
											{
												"expression": {
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1140,
															"name": "whiteList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "3250:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1142,
														"indexExpression": {
															"id": 1141,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "3260:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3250:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1143,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3272:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3250:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "3250:27:6"
											}
										]
									},
									"functionSelector": "01bf6648",
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1131,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1130,
												"name": "onlyOwner",
												"nameLocations": [
													"3164:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3164:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3164:9:6"
										}
									],
									"name": "removeFromWhiteList",
									"nameLocation": "3119:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "3147:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "3139:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3139:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3138:18:6"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3173:0:6"
									},
									"scope": 1166,
									"src": "3110:174:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1164,
										"nodeType": "Block",
										"src": "3370:66:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1160,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3423:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenSwap_$1166",
																		"typeString": "contract TokenSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenSwap_$1166",
																		"typeString": "contract TokenSwap"
																	}
																],
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3415:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1158,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3415:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3415:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1155,
																	"name": "_ethToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1149,
																	"src": "3394:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1154,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "3387:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3387:17:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3405:9:6",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 182,
														"src": "3387:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3387:42:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1153,
												"id": 1163,
												"nodeType": "Return",
												"src": "3380:49:6"
											}
										]
									},
									"functionSelector": "a4329677",
									"id": 1165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "holdingOfTokens",
									"nameLocation": "3300:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "_ethToken",
												"nameLocation": "3324:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "3316:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3315:19:6"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "holdings",
												"nameLocation": "3361:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "3356:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3356:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3355:15:6"
									},
									"scope": 1166,
									"src": "3291:145:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1167,
							"src": "234:3392:6",
							"usedErrors": [
								13,
								18,
								278,
								559,
								564,
								567
							],
							"usedEvents": [
								24,
								845,
								851,
								857
							]
						}
					],
					"src": "32:3594:6"
				},
				"id": 6
			}
		}
	}
}