{
	"id": "5e6dca76254eacc4868f452247e46498",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Liberswap/USDM_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/security/Pausable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n\n// File: contracts/Liberswap/USDM.sol\n\n\npragma solidity ^0.8.20;\n\n\n\n\n\ncontract USDT_Token is ERC20, ERC20Burnable, Pausable, Ownable {\n    /** \n        Default Constructor With Initial Supply Arguments\n    **/\n    constructor(address owner) ERC20(\"USDT Token\", \"USDT\") Ownable(owner) {\n        _mint(msg.sender, 1000000000 * 10**decimals());\n    }\n\n    /** \n        Pause Token Function Controlled by Owner Only\n    **/\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    /** \n        Unpause Token Function Controlled by Owner Only\n    **/\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/Liberswap/USDM_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Liberswap/USDM_flattened.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Liberswap/USDM_flattened.sol\":{\"keccak256\":\"0x7c3a1be4f06975f282b34404ea0b05336346649198091286e95a7b6ad111e29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87d1f06fbbaf441e3cb05933a56ba264a107d772ec69107828afcc9e531ab0ca\",\"dweb:/ipfs/Qmdb1iiFFrKYDpR9jkcrMSkjeaziYkon6qv2D6qZ6gyd1p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Liberswap/USDM_flattened.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Liberswap/USDM_flattened.sol\":{\"keccak256\":\"0x7c3a1be4f06975f282b34404ea0b05336346649198091286e95a7b6ad111e29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87d1f06fbbaf441e3cb05933a56ba264a107d772ec69107828afcc9e531ab0ca\",\"dweb:/ipfs/Qmdb1iiFFrKYDpR9jkcrMSkjeaziYkon6qv2D6qZ6gyd1p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 522,
								"contract": "contracts/Liberswap/USDM_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 528,
								"contract": "contracts/Liberswap/USDM_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 530,
								"contract": "contracts/Liberswap/USDM_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 532,
								"contract": "contracts/Liberswap/USDM_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 534,
								"contract": "contracts/Liberswap/USDM_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Liberswap/USDM_flattened.sol\":\"ERC20Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Liberswap/USDM_flattened.sol\":{\"keccak256\":\"0x7c3a1be4f06975f282b34404ea0b05336346649198091286e95a7b6ad111e29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87d1f06fbbaf441e3cb05933a56ba264a107d772ec69107828afcc9e531ab0ca\",\"dweb:/ipfs/Qmdb1iiFFrKYDpR9jkcrMSkjeaziYkon6qv2D6qZ6gyd1p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 522,
								"contract": "contracts/Liberswap/USDM_flattened.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 528,
								"contract": "contracts/Liberswap/USDM_flattened.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 530,
								"contract": "contracts/Liberswap/USDM_flattened.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 532,
								"contract": "contracts/Liberswap/USDM_flattened.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 534,
								"contract": "contracts/Liberswap/USDM_flattened.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Liberswap/USDM_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Liberswap/USDM_flattened.sol\":{\"keccak256\":\"0x7c3a1be4f06975f282b34404ea0b05336346649198091286e95a7b6ad111e29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87d1f06fbbaf441e3cb05933a56ba264a107d772ec69107828afcc9e531ab0ca\",\"dweb:/ipfs/Qmdb1iiFFrKYDpR9jkcrMSkjeaziYkon6qv2D6qZ6gyd1p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Liberswap/USDM_flattened.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Liberswap/USDM_flattened.sol\":{\"keccak256\":\"0x7c3a1be4f06975f282b34404ea0b05336346649198091286e95a7b6ad111e29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87d1f06fbbaf441e3cb05933a56ba264a107d772ec69107828afcc9e531ab0ca\",\"dweb:/ipfs/Qmdb1iiFFrKYDpR9jkcrMSkjeaziYkon6qv2D6qZ6gyd1p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Liberswap/USDM_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Liberswap/USDM_flattened.sol\":{\"keccak256\":\"0x7c3a1be4f06975f282b34404ea0b05336346649198091286e95a7b6ad111e29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87d1f06fbbaf441e3cb05933a56ba264a107d772ec69107828afcc9e531ab0ca\",\"dweb:/ipfs/Qmdb1iiFFrKYDpR9jkcrMSkjeaziYkon6qv2D6qZ6gyd1p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Liberswap/USDM_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Liberswap/USDM_flattened.sol\":{\"keccak256\":\"0x7c3a1be4f06975f282b34404ea0b05336346649198091286e95a7b6ad111e29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87d1f06fbbaf441e3cb05933a56ba264a107d772ec69107828afcc9e531ab0ca\",\"dweb:/ipfs/Qmdb1iiFFrKYDpR9jkcrMSkjeaziYkon6qv2D6qZ6gyd1p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Liberswap/USDM_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Liberswap/USDM_flattened.sol\":{\"keccak256\":\"0x7c3a1be4f06975f282b34404ea0b05336346649198091286e95a7b6ad111e29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87d1f06fbbaf441e3cb05933a56ba264a107d772ec69107828afcc9e531ab0ca\",\"dweb:/ipfs/Qmdb1iiFFrKYDpR9jkcrMSkjeaziYkon6qv2D6qZ6gyd1p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Liberswap/USDM_flattened.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Liberswap/USDM_flattened.sol\":{\"keccak256\":\"0x7c3a1be4f06975f282b34404ea0b05336346649198091286e95a7b6ad111e29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87d1f06fbbaf441e3cb05933a56ba264a107d772ec69107828afcc9e531ab0ca\",\"dweb:/ipfs/Qmdb1iiFFrKYDpR9jkcrMSkjeaziYkon6qv2D6qZ6gyd1p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 163,
								"contract": "contracts/Liberswap/USDM_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Liberswap/USDM_flattened.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Liberswap/USDM_flattened.sol\":{\"keccak256\":\"0x7c3a1be4f06975f282b34404ea0b05336346649198091286e95a7b6ad111e29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87d1f06fbbaf441e3cb05933a56ba264a107d772ec69107828afcc9e531ab0ca\",\"dweb:/ipfs/Qmdb1iiFFrKYDpR9jkcrMSkjeaziYkon6qv2D6qZ6gyd1p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 318,
								"contract": "contracts/Liberswap/USDM_flattened.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"USDT_Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Liberswap/USDM_flattened.sol\":28771:29329  contract USDT_Token is ERC20, ERC20Burnable, Pausable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Liberswap/USDM_flattened.sol\":28915:29048  constructor(address owner) ERC20(\"USDT Token\", \"USDT\") Ownable(owner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Liberswap/USDM_flattened.sol\":28978:28983  owner */\n  dup1\n    /* \"contracts/Liberswap/USDM_flattened.sol\":18313:18426  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x5553445420546f6b656e00000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x5553445400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/Liberswap/USDM_flattened.sol\":18387:18392  name_ */\n  dup2\n    /* \"contracts/Liberswap/USDM_flattened.sol\":18379:18384  _name */\n  0x03\n    /* \"contracts/Liberswap/USDM_flattened.sol\":18379:18392  _name = name_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  pop\n    /* \"contracts/Liberswap/USDM_flattened.sol\":18412:18419  symbol_ */\n  dup1\n    /* \"contracts/Liberswap/USDM_flattened.sol\":18402:18409  _symbol */\n  0x04\n    /* \"contracts/Liberswap/USDM_flattened.sol\":18402:18419  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_11\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_11:\n  pop\n    /* \"contracts/Liberswap/USDM_flattened.sol\":18313:18426  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/Liberswap/USDM_flattened.sol\":11560:11565  false */\n  0x00\n    /* \"contracts/Liberswap/USDM_flattened.sol\":11550:11557  _paused */\n  0x05\n  0x00\n    /* \"contracts/Liberswap/USDM_flattened.sol\":11550:11565  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Liberswap/USDM_flattened.sol\":8753:8754  0 */\n  0x00\n    /* \"contracts/Liberswap/USDM_flattened.sol\":8729:8755  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Liberswap/USDM_flattened.sol\":8729:8741  initialOwner */\n  dup2\n    /* \"contracts/Liberswap/USDM_flattened.sol\":8729:8755  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/Liberswap/USDM_flattened.sol\":8725:8820  if (initialOwner == address(0)) {... */\n  tag_14\n  jumpi\n    /* \"contracts/Liberswap/USDM_flattened.sol\":8806:8807  0 */\n  0x00\n    /* \"contracts/Liberswap/USDM_flattened.sol\":8778:8809  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/Liberswap/USDM_flattened.sol\":8725:8820  if (initialOwner == address(0)) {... */\ntag_14:\n    /* \"contracts/Liberswap/USDM_flattened.sol\":8829:8861  _transferOwnership(initialOwner) */\n  tag_17\n    /* \"contracts/Liberswap/USDM_flattened.sol\":8848:8860  initialOwner */\n  dup2\n    /* \"contracts/Liberswap/USDM_flattened.sol\":8829:8847  _transferOwnership */\n  shl(0x20, tag_18)\n    /* \"contracts/Liberswap/USDM_flattened.sol\":8829:8861  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_17:\n    /* \"contracts/Liberswap/USDM_flattened.sol\":8681:8868  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/Liberswap/USDM_flattened.sol\":28995:29041  _mint(msg.sender, 1000000000 * 10**decimals()) */\n  tag_20\n    /* \"contracts/Liberswap/USDM_flattened.sol\":29001:29011  msg.sender */\n  caller\n    /* \"contracts/Liberswap/USDM_flattened.sol\":29030:29040  decimals() */\n  tag_21\n    /* \"contracts/Liberswap/USDM_flattened.sol\":29030:29038  decimals */\n  shl(0x20, tag_22)\n    /* \"contracts/Liberswap/USDM_flattened.sol\":29030:29040  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"contracts/Liberswap/USDM_flattened.sol\":29026:29028  10 */\n  0x0a\n    /* \"contracts/Liberswap/USDM_flattened.sol\":29026:29040  10**decimals() */\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"contracts/Liberswap/USDM_flattened.sol\":29013:29023  1000000000 */\n  0x3b9aca00\n    /* \"contracts/Liberswap/USDM_flattened.sol\":29013:29040  1000000000 * 10**decimals() */\n  tag_25\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"contracts/Liberswap/USDM_flattened.sol\":28995:29000  _mint */\n  shl(0x20, tag_27)\n    /* \"contracts/Liberswap/USDM_flattened.sol\":28995:29041  _mint(msg.sender, 1000000000 * 10**decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"contracts/Liberswap/USDM_flattened.sol\":28915:29048  constructor(address owner) ERC20(\"USDT Token\", \"USDT\") Ownable(owner) {... */\n  pop\n    /* \"contracts/Liberswap/USDM_flattened.sol\":28771:29329  contract USDT_Token is ERC20, ERC20Burnable, Pausable, Ownable {... */\n  jump(tag_28)\n    /* \"contracts/Liberswap/USDM_flattened.sol\":10368:10555  function _transferOwnership(address newOwner) internal virtual {... */\ntag_18:\n    /* \"contracts/Liberswap/USDM_flattened.sol\":10441:10457  address oldOwner */\n  0x00\n    /* \"contracts/Liberswap/USDM_flattened.sol\":10460:10466  _owner */\n  0x05\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Liberswap/USDM_flattened.sol\":10441:10466  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/Liberswap/USDM_flattened.sol\":10485:10493  newOwner */\n  dup2\n    /* \"contracts/Liberswap/USDM_flattened.sol\":10476:10482  _owner */\n  0x05\n  0x01\n    /* \"contracts/Liberswap/USDM_flattened.sol\":10476:10493  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Liberswap/USDM_flattened.sol\":10539:10547  newOwner */\n  dup2\n    /* \"contracts/Liberswap/USDM_flattened.sol\":10508:10548  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Liberswap/USDM_flattened.sol\":10529:10537  oldOwner */\n  dup2\n    /* \"contracts/Liberswap/USDM_flattened.sol\":10508:10548  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/Liberswap/USDM_flattened.sol\":10431:10555  {... */\n  pop\n    /* \"contracts/Liberswap/USDM_flattened.sol\":10368:10555  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Liberswap/USDM_flattened.sol\":19419:19501  function decimals() public view virtual returns (uint8) {... */\ntag_22:\n    /* \"contracts/Liberswap/USDM_flattened.sol\":19468:19473  uint8 */\n  0x00\n    /* \"contracts/Liberswap/USDM_flattened.sol\":19492:19494  18 */\n  0x12\n    /* \"contracts/Liberswap/USDM_flattened.sol\":19485:19494  return 18 */\n  swap1\n  pop\n    /* \"contracts/Liberswap/USDM_flattened.sol\":19419:19501  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/Liberswap/USDM_flattened.sol\":24138:24346  function _mint(address account, uint256 value) internal {... */\ntag_27:\n    /* \"contracts/Liberswap/USDM_flattened.sol\":24227:24228  0 */\n  0x00\n    /* \"contracts/Liberswap/USDM_flattened.sol\":24208:24229  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Liberswap/USDM_flattened.sol\":24208:24215  account */\n  dup3\n    /* \"contracts/Liberswap/USDM_flattened.sol\":24208:24229  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/Liberswap/USDM_flattened.sol\":24204:24295  if (account == address(0)) {... */\n  tag_32\n  jumpi\n    /* \"contracts/Liberswap/USDM_flattened.sol\":24281:24282  0 */\n  0x00\n    /* \"contracts/Liberswap/USDM_flattened.sol\":24252:24284  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap2\n  swap1\n  tag_16\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/Liberswap/USDM_flattened.sol\":24204:24295  if (account == address(0)) {... */\ntag_32:\n    /* \"contracts/Liberswap/USDM_flattened.sol\":24304:24339  _update(address(0), account, value) */\n  tag_34\n    /* \"contracts/Liberswap/USDM_flattened.sol\":24320:24321  0 */\n  0x00\n    /* \"contracts/Liberswap/USDM_flattened.sol\":24324:24331  account */\n  dup4\n    /* \"contracts/Liberswap/USDM_flattened.sol\":24333:24338  value */\n  dup4\n    /* \"contracts/Liberswap/USDM_flattened.sol\":24304:24311  _update */\n  shl(0x20, tag_35)\n    /* \"contracts/Liberswap/USDM_flattened.sol\":24304:24339  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_34:\n    /* \"contracts/Liberswap/USDM_flattened.sol\":24138:24346  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Liberswap/USDM_flattened.sol\":22688:23795  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_35:\n    /* \"contracts/Liberswap/USDM_flattened.sol\":22793:22794  0 */\n  0x00\n    /* \"contracts/Liberswap/USDM_flattened.sol\":22777:22795  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Liberswap/USDM_flattened.sol\":22777:22781  from */\n  dup4\n    /* \"contracts/Liberswap/USDM_flattened.sol\":22777:22795  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/Liberswap/USDM_flattened.sol\":22773:23313  if (from == address(0)) {... */\n  tag_37\n  jumpi\n    /* \"contracts/Liberswap/USDM_flattened.sol\":22929:22934  value */\n  dup1\n    /* \"contracts/Liberswap/USDM_flattened.sol\":22913:22925  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/Liberswap/USDM_flattened.sol\":22913:22934  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_38\n  swap2\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Liberswap/USDM_flattened.sol\":22773:23313  if (from == address(0)) {... */\n  jump(tag_40)\ntag_37:\n    /* \"contracts/Liberswap/USDM_flattened.sol\":22965:22984  uint256 fromBalance */\n  0x00\n    /* \"contracts/Liberswap/USDM_flattened.sol\":22987:22996  _balances */\n  dup1\n    /* \"contracts/Liberswap/USDM_flattened.sol\":22987:23002  _balances[from] */\n  0x00\n    /* \"contracts/Liberswap/USDM_flattened.sol\":22997:23001  from */\n  dup6\n    /* \"contracts/Liberswap/USDM_flattened.sol\":22987:23002  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"contracts/Liberswap/USDM_flattened.sol\":22965:23002  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23034:23039  value */\n  dup2\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23020:23031  fromBalance */\n  dup2\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23020:23039  fromBalance < value */\n  lt\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23016:23131  if (fromBalance < value) {... */\n  iszero\n  tag_41\n  jumpi\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23091:23095  from */\n  dup4\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23097:23108  fromBalance */\n  dup2\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23110:23115  value */\n  dup4\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23066:23116  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_42\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23016:23131  if (fromBalance < value) {... */\ntag_41:\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23283:23288  value */\n  dup2\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23269:23280  fromBalance */\n  dup2\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23269:23288  fromBalance - value */\n  sub\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23251:23260  _balances */\n  0x00\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23251:23266  _balances[from] */\n  dup1\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23261:23265  from */\n  dup7\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23251:23266  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23251:23288  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Liberswap/USDM_flattened.sol\":22951:23313  {... */\n  pop\n    /* \"contracts/Liberswap/USDM_flattened.sol\":22773:23313  if (from == address(0)) {... */\ntag_40:\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23341:23342  0 */\n  0x00\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23327:23343  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23327:23329  to */\n  dup3\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23327:23343  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23323:23748  if (to == address(0)) {... */\n  tag_44\n  jumpi\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23506:23511  value */\n  dup1\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23490:23502  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23490:23511  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23323:23748  if (to == address(0)) {... */\n  jump(tag_45)\ntag_44:\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23718:23723  value */\n  dup1\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23701:23710  _balances */\n  0x00\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23701:23714  _balances[to] */\n  dup1\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23711:23713  to */\n  dup5\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23701:23714  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23701:23723  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23323:23748  if (to == address(0)) {... */\ntag_45:\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23778:23780  to */\n  dup2\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23763:23788  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23772:23776  from */\n  dup4\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23763:23788  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23782:23787  value */\n  dup4\n    /* \"contracts/Liberswap/USDM_flattened.sol\":23763:23788  Transfer(from, to, value) */\n  mload(0x40)\n  tag_46\n  swap2\n  swap1\n  tag_47\n  jump\t// in\ntag_46:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/Liberswap/USDM_flattened.sol\":22688:23795  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_49:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_51:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_52:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_88\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_51\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_53:\n    /* \"#utility.yul\":641:665   */\n  tag_90\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_52\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_91\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_91:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_54:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_93\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_53\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_96\n  tag_49\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":932:1051   */\ntag_95:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_97\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_54\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_55:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_56:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_57:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_58:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_102\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_102:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_103\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_104\n  tag_57\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":1909:1993   */\ntag_103:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_59:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_60:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_61:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_62:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_109\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_61\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":2624:2663   */\n  tag_110\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_61\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_63:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_64:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_65:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_114\n    /* \"#utility.yul\":3013:3047   */\n  tag_115\n    /* \"#utility.yul\":3022:3046   */\n  tag_116\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_63\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3013:3047   */\n  tag_64\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":2995:3048   */\n  tag_63\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_66:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_67:\n    /* \"#utility.yul\":3251:3290   */\n  tag_119\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_65\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3312:3403   */\n  tag_120\n    /* \"#utility.yul\":3361:3402   */\n  tag_121\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_66\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_62\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_68:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_69:\n    /* \"#utility.yul\":3572:3604   */\n  tag_124\n  tag_68\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":3613:3678   */\n  tag_125\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_67\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_70:\n    /* \"#utility.yul\":3750:3870   */\ntag_127:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_130\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_69\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_127)\ntag_129:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_71:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_133\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_59\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":4101:4130   */\n  tag_134\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_60\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_135:\n    /* \"#utility.yul\":4328:4408   */\n  tag_136\n    /* \"#utility.yul\":4384:4406   */\n  tag_137\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_60\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_70\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_132:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_72:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_73:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_140\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_72\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_74:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_142\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_73\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_10:\n    /* \"#utility.yul\":5145:5182   */\n  tag_144\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_55\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_146\n  tag_56\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":5233:5289   */\ntag_145:\n    /* \"#utility.yul\":5313:5351   */\n  tag_147\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_58\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":5398:5465   */\n  tag_148\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_71\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_150\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_151\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_151:\n    /* \"#utility.yul\":6339:6406   */\n  tag_152\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_74\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_149)\n    /* \"#utility.yul\":5560:6178   */\ntag_150:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_153\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_59\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_154:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_156\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_154)\ntag_156:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_157\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_158\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_73\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_157:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_149:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_75:\n    /* \"#utility.yul\":6516:6540   */\n  tag_160\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_52\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_16:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_162\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_75\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6781:6961   */\ntag_76:\n    /* \"#utility.yul\":6829:6906   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6826:6827   */\n  0x00\n    /* \"#utility.yul\":6819:6907   */\n  mstore\n    /* \"#utility.yul\":6926:6930   */\n  0x11\n    /* \"#utility.yul\":6923:6924   */\n  0x04\n    /* \"#utility.yul\":6916:6931   */\n  mstore\n    /* \"#utility.yul\":6950:6954   */\n  0x24\n    /* \"#utility.yul\":6947:6948   */\n  0x00\n    /* \"#utility.yul\":6940:6955   */\n  revert\n    /* \"#utility.yul\":6967:7069   */\ntag_77:\n    /* \"#utility.yul\":7009:7017   */\n  0x00\n    /* \"#utility.yul\":7056:7061   */\n  dup2\n    /* \"#utility.yul\":7053:7054   */\n  0x01\n    /* \"#utility.yul\":7049:7062   */\n  shr\n    /* \"#utility.yul\":7028:7062   */\n  swap1\n  pop\n    /* \"#utility.yul\":6967:7069   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7075:7923   */\ntag_78:\n    /* \"#utility.yul\":7136:7141   */\n  0x00\n    /* \"#utility.yul\":7143:7147   */\n  dup1\n    /* \"#utility.yul\":7167:7173   */\n  dup3\n    /* \"#utility.yul\":7158:7173   */\n  swap2\n  pop\n    /* \"#utility.yul\":7191:7196   */\n  dup4\n    /* \"#utility.yul\":7182:7196   */\n  swap1\n  pop\n    /* \"#utility.yul\":7205:7917   */\ntag_166:\n    /* \"#utility.yul\":7226:7227   */\n  0x01\n    /* \"#utility.yul\":7216:7224   */\n  dup6\n    /* \"#utility.yul\":7213:7228   */\n  gt\n    /* \"#utility.yul\":7205:7917   */\n  iszero\n  tag_168\n  jumpi\n    /* \"#utility.yul\":7321:7325   */\n  dup1\n    /* \"#utility.yul\":7316:7319   */\n  dup7\n    /* \"#utility.yul\":7312:7326   */\n  div\n    /* \"#utility.yul\":7306:7310   */\n  dup2\n    /* \"#utility.yul\":7303:7327   */\n  gt\n    /* \"#utility.yul\":7300:7350   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":7330:7348   */\n  tag_170\n  tag_76\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":7300:7350   */\ntag_169:\n    /* \"#utility.yul\":7380:7381   */\n  0x01\n    /* \"#utility.yul\":7370:7378   */\n  dup6\n    /* \"#utility.yul\":7366:7382   */\n  and\n    /* \"#utility.yul\":7363:7814   */\n  iszero\n  tag_171\n  jumpi\n    /* \"#utility.yul\":7795:7799   */\n  dup1\n    /* \"#utility.yul\":7788:7793   */\n  dup3\n    /* \"#utility.yul\":7784:7800   */\n  mul\n    /* \"#utility.yul\":7775:7800   */\n  swap2\n  pop\n    /* \"#utility.yul\":7363:7814   */\ntag_171:\n    /* \"#utility.yul\":7845:7849   */\n  dup1\n    /* \"#utility.yul\":7839:7843   */\n  dup2\n    /* \"#utility.yul\":7835:7850   */\n  mul\n    /* \"#utility.yul\":7827:7850   */\n  swap1\n  pop\n    /* \"#utility.yul\":7875:7907   */\n  tag_172\n    /* \"#utility.yul\":7898:7906   */\n  dup6\n    /* \"#utility.yul\":7875:7907   */\n  tag_77\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":7863:7907   */\n  swap5\n  pop\n    /* \"#utility.yul\":7205:7917   */\n  jump(tag_166)\ntag_168:\n    /* \"#utility.yul\":7075:7923   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7929:9002   */\ntag_79:\n    /* \"#utility.yul\":7983:7988   */\n  0x00\n    /* \"#utility.yul\":8174:8182   */\n  dup3\n    /* \"#utility.yul\":8164:8204   */\n  tag_174\n  jumpi\n    /* \"#utility.yul\":8195:8196   */\n  0x01\n    /* \"#utility.yul\":8186:8196   */\n  swap1\n  pop\n    /* \"#utility.yul\":8197:8202   */\n  jump(tag_173)\n    /* \"#utility.yul\":8164:8204   */\ntag_174:\n    /* \"#utility.yul\":8223:8227   */\n  dup2\n    /* \"#utility.yul\":8213:8249   */\n  tag_175\n  jumpi\n    /* \"#utility.yul\":8240:8241   */\n  0x00\n    /* \"#utility.yul\":8231:8241   */\n  swap1\n  pop\n    /* \"#utility.yul\":8242:8247   */\n  jump(tag_173)\n    /* \"#utility.yul\":8213:8249   */\ntag_175:\n    /* \"#utility.yul\":8309:8313   */\n  dup2\n    /* \"#utility.yul\":8357:8358   */\n  0x01\n    /* \"#utility.yul\":8352:8379   */\n  dup2\n  eq\n  tag_177\n  jumpi\n    /* \"#utility.yul\":8393:8394   */\n  0x02\n    /* \"#utility.yul\":8388:8579   */\n  dup2\n  eq\n  tag_178\n  jumpi\n    /* \"#utility.yul\":8302:8579   */\n  jump(tag_176)\n    /* \"#utility.yul\":8352:8379   */\ntag_177:\n    /* \"#utility.yul\":8370:8371   */\n  0x01\n    /* \"#utility.yul\":8361:8371   */\n  swap2\n  pop\n    /* \"#utility.yul\":8372:8377   */\n  pop\n  jump(tag_173)\n    /* \"#utility.yul\":8388:8579   */\ntag_178:\n    /* \"#utility.yul\":8433:8436   */\n  0xff\n    /* \"#utility.yul\":8423:8431   */\n  dup5\n    /* \"#utility.yul\":8420:8437   */\n  gt\n    /* \"#utility.yul\":8417:8460   */\n  iszero\n  tag_179\n  jumpi\n    /* \"#utility.yul\":8440:8458   */\n  tag_180\n  tag_76\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8417:8460   */\ntag_179:\n    /* \"#utility.yul\":8489:8497   */\n  dup4\n    /* \"#utility.yul\":8486:8487   */\n  0x02\n    /* \"#utility.yul\":8482:8498   */\n  exp\n    /* \"#utility.yul\":8473:8498   */\n  swap2\n  pop\n    /* \"#utility.yul\":8524:8527   */\n  dup5\n    /* \"#utility.yul\":8517:8522   */\n  dup3\n    /* \"#utility.yul\":8514:8528   */\n  gt\n    /* \"#utility.yul\":8511:8551   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":8531:8549   */\n  tag_182\n  tag_76\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":8511:8551   */\ntag_181:\n    /* \"#utility.yul\":8564:8569   */\n  pop\n  jump(tag_173)\n    /* \"#utility.yul\":8302:8579   */\ntag_176:\n  pop\n    /* \"#utility.yul\":8688:8690   */\n  0x20\n    /* \"#utility.yul\":8678:8686   */\n  dup4\n    /* \"#utility.yul\":8675:8691   */\n  lt\n    /* \"#utility.yul\":8669:8672   */\n  0x0133\n    /* \"#utility.yul\":8663:8667   */\n  dup4\n    /* \"#utility.yul\":8660:8673   */\n  lt\n    /* \"#utility.yul\":8656:8692   */\n  and\n    /* \"#utility.yul\":8638:8640   */\n  0x4e\n    /* \"#utility.yul\":8628:8636   */\n  dup5\n    /* \"#utility.yul\":8625:8641   */\n  lt\n    /* \"#utility.yul\":8620:8622   */\n  0x0b\n    /* \"#utility.yul\":8614:8618   */\n  dup5\n    /* \"#utility.yul\":8611:8623   */\n  lt\n    /* \"#utility.yul\":8607:8642   */\n  and\n    /* \"#utility.yul\":8591:8702   */\n  or\n    /* \"#utility.yul\":8588:8834   */\n  iszero\n  tag_183\n  jumpi\n    /* \"#utility.yul\":8744:8752   */\n  dup3\n    /* \"#utility.yul\":8738:8742   */\n  dup3\n    /* \"#utility.yul\":8734:8753   */\n  exp\n    /* \"#utility.yul\":8725:8753   */\n  swap1\n  pop\n    /* \"#utility.yul\":8779:8782   */\n  dup4\n    /* \"#utility.yul\":8772:8777   */\n  dup2\n    /* \"#utility.yul\":8769:8783   */\n  gt\n    /* \"#utility.yul\":8766:8806   */\n  iszero\n  tag_184\n  jumpi\n    /* \"#utility.yul\":8786:8804   */\n  tag_185\n  tag_76\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":8766:8806   */\ntag_184:\n    /* \"#utility.yul\":8819:8824   */\n  jump(tag_173)\n    /* \"#utility.yul\":8588:8834   */\ntag_183:\n    /* \"#utility.yul\":8859:8901   */\n  tag_186\n    /* \"#utility.yul\":8897:8900   */\n  dup5\n    /* \"#utility.yul\":8887:8895   */\n  dup5\n    /* \"#utility.yul\":8881:8885   */\n  dup5\n    /* \"#utility.yul\":8878:8879   */\n  0x01\n    /* \"#utility.yul\":8859:8901   */\n  tag_78\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":8844:8901   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":8933:8937   */\n  dup2\n    /* \"#utility.yul\":8928:8931   */\n  dup5\n    /* \"#utility.yul\":8924:8938   */\n  div\n    /* \"#utility.yul\":8917:8922   */\n  dup2\n    /* \"#utility.yul\":8914:8939   */\n  gt\n    /* \"#utility.yul\":8911:8962   */\n  iszero\n  tag_187\n  jumpi\n    /* \"#utility.yul\":8942:8960   */\n  tag_188\n  tag_76\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":8911:8962   */\ntag_187:\n    /* \"#utility.yul\":8991:8995   */\n  dup2\n    /* \"#utility.yul\":8984:8989   */\n  dup2\n    /* \"#utility.yul\":8980:8996   */\n  mul\n    /* \"#utility.yul\":8971:8996   */\n  swap1\n  pop\n    /* \"#utility.yul\":7929:9002   */\ntag_173:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9008:9094   */\ntag_80:\n    /* \"#utility.yul\":9043:9050   */\n  0x00\n    /* \"#utility.yul\":9083:9087   */\n  0xff\n    /* \"#utility.yul\":9076:9081   */\n  dup3\n    /* \"#utility.yul\":9072:9088   */\n  and\n    /* \"#utility.yul\":9061:9088   */\n  swap1\n  pop\n    /* \"#utility.yul\":9008:9094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9100:9381   */\ntag_24:\n    /* \"#utility.yul\":9158:9163   */\n  0x00\n    /* \"#utility.yul\":9182:9205   */\n  tag_191\n    /* \"#utility.yul\":9200:9204   */\n  dup3\n    /* \"#utility.yul\":9182:9205   */\n  tag_63\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":9174:9205   */\n  swap2\n  pop\n    /* \"#utility.yul\":9226:9251   */\n  tag_192\n    /* \"#utility.yul\":9242:9250   */\n  dup4\n    /* \"#utility.yul\":9226:9251   */\n  tag_80\n  jump\t// in\ntag_192:\n    /* \"#utility.yul\":9214:9251   */\n  swap3\n  pop\n    /* \"#utility.yul\":9270:9374   */\n  tag_193\n    /* \"#utility.yul\":9307:9373   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9297:9305   */\n  dup5\n    /* \"#utility.yul\":9291:9295   */\n  dup5\n    /* \"#utility.yul\":9270:9374   */\n  tag_79\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":9261:9374   */\n  swap1\n  pop\n    /* \"#utility.yul\":9100:9381   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9387:9797   */\ntag_26:\n    /* \"#utility.yul\":9427:9434   */\n  0x00\n    /* \"#utility.yul\":9450:9470   */\n  tag_195\n    /* \"#utility.yul\":9468:9469   */\n  dup3\n    /* \"#utility.yul\":9450:9470   */\n  tag_63\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":9445:9470   */\n  swap2\n  pop\n    /* \"#utility.yul\":9484:9504   */\n  tag_196\n    /* \"#utility.yul\":9502:9503   */\n  dup4\n    /* \"#utility.yul\":9484:9504   */\n  tag_63\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":9479:9504   */\n  swap3\n  pop\n    /* \"#utility.yul\":9539:9540   */\n  dup3\n    /* \"#utility.yul\":9536:9537   */\n  dup3\n    /* \"#utility.yul\":9532:9541   */\n  mul\n    /* \"#utility.yul\":9561:9591   */\n  tag_197\n    /* \"#utility.yul\":9579:9590   */\n  dup2\n    /* \"#utility.yul\":9561:9591   */\n  tag_63\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":9550:9591   */\n  swap2\n  pop\n    /* \"#utility.yul\":9740:9741   */\n  dup3\n    /* \"#utility.yul\":9731:9738   */\n  dup3\n    /* \"#utility.yul\":9727:9742   */\n  div\n    /* \"#utility.yul\":9724:9725   */\n  dup5\n    /* \"#utility.yul\":9721:9743   */\n  eq\n    /* \"#utility.yul\":9701:9702   */\n  dup4\n    /* \"#utility.yul\":9694:9703   */\n  iszero\n    /* \"#utility.yul\":9674:9757   */\n  or\n    /* \"#utility.yul\":9651:9790   */\n  tag_198\n  jumpi\n    /* \"#utility.yul\":9770:9788   */\n  tag_199\n  tag_76\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":9651:9790   */\ntag_198:\n    /* \"#utility.yul\":9435:9797   */\n  pop\n    /* \"#utility.yul\":9387:9797   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9803:9994   */\ntag_39:\n    /* \"#utility.yul\":9843:9846   */\n  0x00\n    /* \"#utility.yul\":9862:9882   */\n  tag_201\n    /* \"#utility.yul\":9880:9881   */\n  dup3\n    /* \"#utility.yul\":9862:9882   */\n  tag_63\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":9857:9882   */\n  swap2\n  pop\n    /* \"#utility.yul\":9896:9916   */\n  tag_202\n    /* \"#utility.yul\":9914:9915   */\n  dup4\n    /* \"#utility.yul\":9896:9916   */\n  tag_63\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":9891:9916   */\n  swap3\n  pop\n    /* \"#utility.yul\":9939:9940   */\n  dup3\n    /* \"#utility.yul\":9936:9937   */\n  dup3\n    /* \"#utility.yul\":9932:9941   */\n  add\n    /* \"#utility.yul\":9925:9941   */\n  swap1\n  pop\n    /* \"#utility.yul\":9960:9963   */\n  dup1\n    /* \"#utility.yul\":9957:9958   */\n  dup3\n    /* \"#utility.yul\":9954:9964   */\n  gt\n    /* \"#utility.yul\":9951:9987   */\n  iszero\n  tag_203\n  jumpi\n    /* \"#utility.yul\":9967:9985   */\n  tag_204\n  tag_76\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":9951:9987   */\ntag_203:\n    /* \"#utility.yul\":9803:9994   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10000:10118   */\ntag_81:\n    /* \"#utility.yul\":10087:10111   */\n  tag_206\n    /* \"#utility.yul\":10105:10110   */\n  dup2\n    /* \"#utility.yul\":10087:10111   */\n  tag_63\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":10082:10085   */\n  dup3\n    /* \"#utility.yul\":10075:10112   */\n  mstore\n    /* \"#utility.yul\":10000:10118   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10124:10566   */\ntag_43:\n    /* \"#utility.yul\":10273:10277   */\n  0x00\n    /* \"#utility.yul\":10311:10313   */\n  0x60\n    /* \"#utility.yul\":10300:10309   */\n  dup3\n    /* \"#utility.yul\":10296:10314   */\n  add\n    /* \"#utility.yul\":10288:10314   */\n  swap1\n  pop\n    /* \"#utility.yul\":10324:10395   */\n  tag_208\n    /* \"#utility.yul\":10392:10393   */\n  0x00\n    /* \"#utility.yul\":10381:10390   */\n  dup4\n    /* \"#utility.yul\":10377:10394   */\n  add\n    /* \"#utility.yul\":10368:10374   */\n  dup7\n    /* \"#utility.yul\":10324:10395   */\n  tag_75\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":10405:10477   */\n  tag_209\n    /* \"#utility.yul\":10473:10475   */\n  0x20\n    /* \"#utility.yul\":10462:10471   */\n  dup4\n    /* \"#utility.yul\":10458:10476   */\n  add\n    /* \"#utility.yul\":10449:10455   */\n  dup6\n    /* \"#utility.yul\":10405:10477   */\n  tag_81\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":10487:10559   */\n  tag_210\n    /* \"#utility.yul\":10555:10557   */\n  0x40\n    /* \"#utility.yul\":10544:10553   */\n  dup4\n    /* \"#utility.yul\":10540:10558   */\n  add\n    /* \"#utility.yul\":10531:10537   */\n  dup5\n    /* \"#utility.yul\":10487:10559   */\n  tag_81\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":10124:10566   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10572:10794   */\ntag_47:\n    /* \"#utility.yul\":10665:10669   */\n  0x00\n    /* \"#utility.yul\":10703:10705   */\n  0x20\n    /* \"#utility.yul\":10692:10701   */\n  dup3\n    /* \"#utility.yul\":10688:10706   */\n  add\n    /* \"#utility.yul\":10680:10706   */\n  swap1\n  pop\n    /* \"#utility.yul\":10716:10787   */\n  tag_212\n    /* \"#utility.yul\":10784:10785   */\n  0x00\n    /* \"#utility.yul\":10773:10782   */\n  dup4\n    /* \"#utility.yul\":10769:10786   */\n  add\n    /* \"#utility.yul\":10760:10766   */\n  dup5\n    /* \"#utility.yul\":10716:10787   */\n  tag_81\n  jump\t// in\ntag_212:\n    /* \"#utility.yul\":10572:10794   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/Liberswap/USDM_flattened.sol\":28771:29329  contract USDT_Token is ERC20, ERC20Burnable, Pausable, Ownable {... */\ntag_28:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28771:29329  contract USDT_Token is ERC20, ERC20Burnable, Pausable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x313ce567\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Liberswap/USDM_flattened.sol\":18491:18580  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20710:20896  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Liberswap/USDM_flattened.sol\":19561:19658  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Liberswap/USDM_flattened.sol\":21456:21700  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Liberswap/USDM_flattened.sol\":19419:19501  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Liberswap/USDM_flattened.sol\":29263:29326  function unpause() public onlyOwner {... */\n    tag_8:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28136:28223  function burn(uint256 value) public virtual {... */\n    tag_9:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12169:12253  function paused() public view virtual returns (bool) {... */\n    tag_10:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Liberswap/USDM_flattened.sol\":19716:19832  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9749:9850  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      stop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28539:28697  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_13:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n    tag_62:\n      stop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":29125:29184  function pause() public onlyOwner {... */\n    tag_14:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      stop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9094:9179  function owner() public view virtual returns (address) {... */\n    tag_15:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Liberswap/USDM_flattened.sol\":18693:18786  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20027:20205  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_17:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20263:20403  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9999:10214  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      stop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":18491:18580  function name() public view virtual returns (string memory) {... */\n    tag_24:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":18536:18549  string memory */\n      0x60\n        /* \"contracts/Liberswap/USDM_flattened.sol\":18568:18573  _name */\n      0x03\n        /* \"contracts/Liberswap/USDM_flattened.sol\":18561:18573  return _name */\n      dup1\n      sload\n      tag_87\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_89\n      swap1\n      tag_88\n      jump\t// in\n    tag_89:\n      dup1\n      iszero\n      tag_90\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_91\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_90)\n    tag_91:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_92:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_92\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_90:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":18491:18580  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20710:20896  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20783:20787  bool */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20799:20812  address owner */\n      dup1\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20815:20827  _msgSender() */\n      tag_94\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20815:20825  _msgSender */\n      tag_95\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20815:20827  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20799:20827  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20837:20868  _approve(owner, spender, value) */\n      tag_96\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20846:20851  owner */\n      dup2\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20853:20860  spender */\n      dup6\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20862:20867  value */\n      dup6\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20837:20845  _approve */\n      tag_97\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20837:20868  _approve(owner, spender, value) */\n      jump\t// in\n    tag_96:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20885:20889  true */\n      0x01\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20878:20889  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20710:20896  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":19561:19658  function totalSupply() public view virtual returns (uint256) {... */\n    tag_34:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":19613:19620  uint256 */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":19639:19651  _totalSupply */\n      sload(0x02)\n        /* \"contracts/Liberswap/USDM_flattened.sol\":19632:19651  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":19561:19658  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":21456:21700  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_40:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":21543:21547  bool */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":21559:21574  address spender */\n      dup1\n        /* \"contracts/Liberswap/USDM_flattened.sol\":21577:21589  _msgSender() */\n      tag_100\n        /* \"contracts/Liberswap/USDM_flattened.sol\":21577:21587  _msgSender */\n      tag_95\n        /* \"contracts/Liberswap/USDM_flattened.sol\":21577:21589  _msgSender() */\n      jump\t// in\n    tag_100:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":21559:21589  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":21599:21636  _spendAllowance(from, spender, value) */\n      tag_101\n        /* \"contracts/Liberswap/USDM_flattened.sol\":21615:21619  from */\n      dup6\n        /* \"contracts/Liberswap/USDM_flattened.sol\":21621:21628  spender */\n      dup3\n        /* \"contracts/Liberswap/USDM_flattened.sol\":21630:21635  value */\n      dup6\n        /* \"contracts/Liberswap/USDM_flattened.sol\":21599:21614  _spendAllowance */\n      tag_102\n        /* \"contracts/Liberswap/USDM_flattened.sol\":21599:21636  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_101:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":21646:21672  _transfer(from, to, value) */\n      tag_103\n        /* \"contracts/Liberswap/USDM_flattened.sol\":21656:21660  from */\n      dup6\n        /* \"contracts/Liberswap/USDM_flattened.sol\":21662:21664  to */\n      dup6\n        /* \"contracts/Liberswap/USDM_flattened.sol\":21666:21671  value */\n      dup6\n        /* \"contracts/Liberswap/USDM_flattened.sol\":21646:21655  _transfer */\n      tag_104\n        /* \"contracts/Liberswap/USDM_flattened.sol\":21646:21672  _transfer(from, to, value) */\n      jump\t// in\n    tag_103:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":21689:21693  true */\n      0x01\n        /* \"contracts/Liberswap/USDM_flattened.sol\":21682:21693  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":21456:21700  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":19419:19501  function decimals() public view virtual returns (uint8) {... */\n    tag_43:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":19468:19473  uint8 */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":19492:19494  18 */\n      0x12\n        /* \"contracts/Liberswap/USDM_flattened.sol\":19485:19494  return 18 */\n      swap1\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":19419:19501  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":29263:29326  function unpause() public onlyOwner {... */\n    tag_47:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":8987:9000  _checkOwner() */\n      tag_107\n        /* \"contracts/Liberswap/USDM_flattened.sol\":8987:8998  _checkOwner */\n      tag_108\n        /* \"contracts/Liberswap/USDM_flattened.sol\":8987:9000  _checkOwner() */\n      jump\t// in\n    tag_107:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":29309:29319  _unpause() */\n      tag_110\n        /* \"contracts/Liberswap/USDM_flattened.sol\":29309:29317  _unpause */\n      tag_111\n        /* \"contracts/Liberswap/USDM_flattened.sol\":29309:29319  _unpause() */\n      jump\t// in\n    tag_110:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":29263:29326  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28136:28223  function burn(uint256 value) public virtual {... */\n    tag_51:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28190:28216  _burn(_msgSender(), value) */\n      tag_113\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28196:28208  _msgSender() */\n      tag_114\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28196:28206  _msgSender */\n      tag_95\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28196:28208  _msgSender() */\n      jump\t// in\n    tag_114:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28210:28215  value */\n      dup3\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28190:28195  _burn */\n      tag_115\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28190:28216  _burn(_msgSender(), value) */\n      jump\t// in\n    tag_113:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28136:28223  function burn(uint256 value) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12169:12253  function paused() public view virtual returns (bool) {... */\n    tag_53:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12216:12220  bool */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12239:12246  _paused */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12232:12246  return _paused */\n      swap1\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12169:12253  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":19716:19832  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_58:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":19781:19788  uint256 */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":19807:19816  _balances */\n      dup1\n        /* \"contracts/Liberswap/USDM_flattened.sol\":19807:19825  _balances[account] */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":19817:19824  account */\n      dup4\n        /* \"contracts/Liberswap/USDM_flattened.sol\":19807:19825  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Liberswap/USDM_flattened.sol\":19800:19825  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":19716:19832  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9749:9850  function renounceOwnership() public virtual onlyOwner {... */\n    tag_61:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":8987:9000  _checkOwner() */\n      tag_119\n        /* \"contracts/Liberswap/USDM_flattened.sol\":8987:8998  _checkOwner */\n      tag_108\n        /* \"contracts/Liberswap/USDM_flattened.sol\":8987:9000  _checkOwner() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9813:9843  _transferOwnership(address(0)) */\n      tag_121\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9840:9841  0 */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9813:9831  _transferOwnership */\n      tag_122\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9813:9843  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9749:9850  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28539:28697  function burnFrom(address account, uint256 value) public virtual {... */\n    tag_64:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28614:28659  _spendAllowance(account, _msgSender(), value) */\n      tag_124\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28630:28637  account */\n      dup3\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28639:28651  _msgSender() */\n      tag_125\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28639:28649  _msgSender */\n      tag_95\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28639:28651  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28653:28658  value */\n      dup4\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28614:28629  _spendAllowance */\n      tag_102\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28614:28659  _spendAllowance(account, _msgSender(), value) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28669:28690  _burn(account, value) */\n      tag_126\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28675:28682  account */\n      dup3\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28684:28689  value */\n      dup3\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28669:28674  _burn */\n      tag_115\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28669:28690  _burn(account, value) */\n      jump\t// in\n    tag_126:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":28539:28697  function burnFrom(address account, uint256 value) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":29125:29184  function pause() public onlyOwner {... */\n    tag_66:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":8987:9000  _checkOwner() */\n      tag_128\n        /* \"contracts/Liberswap/USDM_flattened.sol\":8987:8998  _checkOwner */\n      tag_108\n        /* \"contracts/Liberswap/USDM_flattened.sol\":8987:9000  _checkOwner() */\n      jump\t// in\n    tag_128:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":29169:29177  _pause() */\n      tag_130\n        /* \"contracts/Liberswap/USDM_flattened.sol\":29169:29175  _pause */\n      tag_131\n        /* \"contracts/Liberswap/USDM_flattened.sol\":29169:29177  _pause() */\n      jump\t// in\n    tag_130:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":29125:29184  function pause() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9094:9179  function owner() public view virtual returns (address) {... */\n    tag_68:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9140:9147  address */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9166:9172  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9159:9172  return _owner */\n      swap1\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9094:9179  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":18693:18786  function symbol() public view virtual returns (string memory) {... */\n    tag_72:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":18740:18753  string memory */\n      0x60\n        /* \"contracts/Liberswap/USDM_flattened.sol\":18772:18779  _symbol */\n      0x04\n        /* \"contracts/Liberswap/USDM_flattened.sol\":18765:18779  return _symbol */\n      dup1\n      sload\n      tag_134\n      swap1\n      tag_88\n      jump\t// in\n    tag_134:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_135\n      swap1\n      tag_88\n      jump\t// in\n    tag_135:\n      dup1\n      iszero\n      tag_136\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_137\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_136)\n    tag_137:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_138:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_138\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":18693:18786  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20027:20205  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_76:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20096:20100  bool */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20112:20125  address owner */\n      dup1\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20128:20140  _msgSender() */\n      tag_140\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20128:20138  _msgSender */\n      tag_95\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20128:20140  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20112:20140  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20150:20177  _transfer(owner, to, value) */\n      tag_141\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20160:20165  owner */\n      dup2\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20167:20169  to */\n      dup6\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20171:20176  value */\n      dup6\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20150:20159  _transfer */\n      tag_104\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20150:20177  _transfer(owner, to, value) */\n      jump\t// in\n    tag_141:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20194:20198  true */\n      0x01\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20187:20198  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20027:20205  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20263:20403  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_81:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20343:20350  uint256 */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20369:20380  _allowances */\n      0x01\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20369:20387  _allowances[owner] */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20381:20386  owner */\n      dup5\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20369:20387  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20369:20396  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20388:20395  spender */\n      dup4\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20369:20396  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20362:20396  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":20263:20403  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9999:10214  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_85:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":8987:9000  _checkOwner() */\n      tag_144\n        /* \"contracts/Liberswap/USDM_flattened.sol\":8987:8998  _checkOwner */\n      tag_108\n        /* \"contracts/Liberswap/USDM_flattened.sol\":8987:9000  _checkOwner() */\n      jump\t// in\n    tag_144:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":10103:10104  0 */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":10083:10105  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Liberswap/USDM_flattened.sol\":10083:10091  newOwner */\n      dup2\n        /* \"contracts/Liberswap/USDM_flattened.sol\":10083:10105  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Liberswap/USDM_flattened.sol\":10079:10170  if (newOwner == address(0)) {... */\n      tag_146\n      jumpi\n        /* \"contracts/Liberswap/USDM_flattened.sol\":10156:10157  0 */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":10128:10159  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Liberswap/USDM_flattened.sol\":10079:10170  if (newOwner == address(0)) {... */\n    tag_146:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":10179:10207  _transferOwnership(newOwner) */\n      tag_148\n        /* \"contracts/Liberswap/USDM_flattened.sol\":10198:10206  newOwner */\n      dup2\n        /* \"contracts/Liberswap/USDM_flattened.sol\":10179:10197  _transferOwnership */\n      tag_122\n        /* \"contracts/Liberswap/USDM_flattened.sol\":10179:10207  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9999:10214  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":7275:7371  function _msgSender() internal view virtual returns (address) {... */\n    tag_95:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":7328:7335  address */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":7354:7364  msg.sender */\n      caller\n        /* \"contracts/Liberswap/USDM_flattened.sol\":7347:7364  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":7275:7371  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":25406:25534  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_97:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":25490:25527  _approve(owner, spender, value, true) */\n      tag_151\n        /* \"contracts/Liberswap/USDM_flattened.sol\":25499:25504  owner */\n      dup4\n        /* \"contracts/Liberswap/USDM_flattened.sol\":25506:25513  spender */\n      dup4\n        /* \"contracts/Liberswap/USDM_flattened.sol\":25515:25520  value */\n      dup4\n        /* \"contracts/Liberswap/USDM_flattened.sol\":25522:25526  true */\n      0x01\n        /* \"contracts/Liberswap/USDM_flattened.sol\":25490:25498  _approve */\n      tag_152\n        /* \"contracts/Liberswap/USDM_flattened.sol\":25490:25527  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":25406:25534  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27080:27557  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_102:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27179:27203  uint256 currentAllowance */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27206:27231  allowance(owner, spender) */\n      tag_154\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27216:27221  owner */\n      dup5\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27223:27230  spender */\n      dup5\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27206:27215  allowance */\n      tag_81\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27206:27231  allowance(owner, spender) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27179:27231  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27265:27282  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27245:27261  currentAllowance */\n      dup2\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27245:27282  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27241:27551  if (currentAllowance != type(uint256).max) {... */\n      tag_155\n      jumpi\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27321:27326  value */\n      dup2\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27302:27318  currentAllowance */\n      dup2\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27302:27326  currentAllowance < value */\n      lt\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27298:27428  if (currentAllowance < value) {... */\n      iszero\n      tag_156\n      jumpi\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27380:27387  spender */\n      dup3\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27389:27405  currentAllowance */\n      dup2\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27407:27412  value */\n      dup4\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27353:27413  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27298:27428  if (currentAllowance < value) {... */\n    tag_156:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27469:27526  _approve(owner, spender, currentAllowance - value, false) */\n      tag_159\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27478:27483  owner */\n      dup5\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27485:27492  spender */\n      dup5\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27513:27518  value */\n      dup5\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27494:27510  currentAllowance */\n      dup5\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27494:27518  currentAllowance - value */\n      sub\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27520:27525  false */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27469:27477  _approve */\n      tag_152\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27469:27526  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27241:27551  if (currentAllowance != type(uint256).max) {... */\n    tag_155:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27169:27557  {... */\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":27080:27557  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22073:22373  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_104:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22172:22173  0 */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22156:22174  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22156:22160  from */\n      dup4\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22156:22174  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22152:22238  if (from == address(0)) {... */\n      tag_161\n      jumpi\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22224:22225  0 */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22197:22227  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22152:22238  if (from == address(0)) {... */\n    tag_161:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22265:22266  0 */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22251:22267  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22251:22253  to */\n      dup3\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22251:22267  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22247:22333  if (to == address(0)) {... */\n      tag_163\n      jumpi\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22319:22320  0 */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22290:22322  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22247:22333  if (to == address(0)) {... */\n    tag_163:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22342:22366  _update(from, to, value) */\n      tag_165\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22350:22354  from */\n      dup4\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22356:22358  to */\n      dup4\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22360:22365  value */\n      dup4\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22342:22349  _update */\n      tag_166\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22342:22366  _update(from, to, value) */\n      jump\t// in\n    tag_165:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22073:22373  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9252:9414  function _checkOwner() internal view virtual {... */\n    tag_108:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9322:9334  _msgSender() */\n      tag_168\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9322:9332  _msgSender */\n      tag_95\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9322:9334  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9311:9334  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9311:9318  owner() */\n      tag_169\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9311:9316  owner */\n      tag_68\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9311:9318  owner() */\n      jump\t// in\n    tag_169:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9311:9334  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9307:9408  if (owner() != _msgSender()) {... */\n      tag_170\n      jumpi\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9384:9396  _msgSender() */\n      tag_171\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9384:9394  _msgSender */\n      tag_95\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9384:9396  _msgSender() */\n      jump\t// in\n    tag_171:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9357:9397  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9307:9408  if (owner() != _msgSender()) {... */\n    tag_170:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":9252:9414  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12987:13104  function _unpause() internal virtual whenPaused {... */\n    tag_111:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12040:12056  _requirePaused() */\n      tag_174\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12040:12054  _requirePaused */\n      tag_175\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12040:12056  _requirePaused() */\n      jump\t// in\n    tag_174:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":13055:13060  false */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":13045:13052  _paused */\n      0x05\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":13045:13060  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":13075:13097  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"contracts/Liberswap/USDM_flattened.sol\":13084:13096  _msgSender() */\n      tag_177\n        /* \"contracts/Liberswap/USDM_flattened.sol\":13084:13094  _msgSender */\n      tag_95\n        /* \"contracts/Liberswap/USDM_flattened.sol\":13084:13096  _msgSender() */\n      jump\t// in\n    tag_177:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":13075:13097  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_178\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12987:13104  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":24664:24870  function _burn(address account, uint256 value) internal {... */\n    tag_115:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":24753:24754  0 */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":24734:24755  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Liberswap/USDM_flattened.sol\":24734:24741  account */\n      dup3\n        /* \"contracts/Liberswap/USDM_flattened.sol\":24734:24755  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Liberswap/USDM_flattened.sol\":24730:24819  if (account == address(0)) {... */\n      tag_180\n      jumpi\n        /* \"contracts/Liberswap/USDM_flattened.sol\":24805:24806  0 */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":24778:24808  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Liberswap/USDM_flattened.sol\":24730:24819  if (account == address(0)) {... */\n    tag_180:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":24828:24863  _update(account, address(0), value) */\n      tag_182\n        /* \"contracts/Liberswap/USDM_flattened.sol\":24836:24843  account */\n      dup3\n        /* \"contracts/Liberswap/USDM_flattened.sol\":24853:24854  0 */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":24857:24862  value */\n      dup4\n        /* \"contracts/Liberswap/USDM_flattened.sol\":24828:24835  _update */\n      tag_166\n        /* \"contracts/Liberswap/USDM_flattened.sol\":24828:24863  _update(account, address(0), value) */\n      jump\t// in\n    tag_182:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":24664:24870  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":10368:10555  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_122:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":10441:10457  address oldOwner */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":10460:10466  _owner */\n      0x05\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Liberswap/USDM_flattened.sol\":10441:10466  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":10485:10493  newOwner */\n      dup2\n        /* \"contracts/Liberswap/USDM_flattened.sol\":10476:10482  _owner */\n      0x05\n      0x01\n        /* \"contracts/Liberswap/USDM_flattened.sol\":10476:10493  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":10539:10547  newOwner */\n      dup2\n        /* \"contracts/Liberswap/USDM_flattened.sol\":10508:10548  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Liberswap/USDM_flattened.sol\":10529:10537  oldOwner */\n      dup2\n        /* \"contracts/Liberswap/USDM_flattened.sol\":10508:10548  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Liberswap/USDM_flattened.sol\":10431:10555  {... */\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":10368:10555  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12740:12855  function _pause() internal virtual whenNotPaused {... */\n    tag_131:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":11793:11812  _requireNotPaused() */\n      tag_185\n        /* \"contracts/Liberswap/USDM_flattened.sol\":11793:11810  _requireNotPaused */\n      tag_186\n        /* \"contracts/Liberswap/USDM_flattened.sol\":11793:11812  _requireNotPaused() */\n      jump\t// in\n    tag_185:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12809:12813  true */\n      0x01\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12799:12806  _paused */\n      0x05\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12799:12813  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12828:12848  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12835:12847  _msgSender() */\n      tag_188\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12835:12845  _msgSender */\n      tag_95\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12835:12847  _msgSender() */\n      jump\t// in\n    tag_188:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12828:12848  Paused(_msgSender()) */\n      mload(0x40)\n      tag_189\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12740:12855  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26366:26798  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_152:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26495:26496  0 */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26478:26497  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26478:26483  owner */\n      dup5\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26478:26497  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26474:26563  if (owner == address(0)) {... */\n      tag_191\n      jumpi\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26549:26550  0 */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26520:26552  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26474:26563  if (owner == address(0)) {... */\n    tag_191:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26595:26596  0 */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26576:26597  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26576:26583  spender */\n      dup4\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26576:26597  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26572:26662  if (spender == address(0)) {... */\n      tag_193\n      jumpi\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26648:26649  0 */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26620:26651  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26572:26662  if (spender == address(0)) {... */\n    tag_193:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26701:26706  value */\n      dup2\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26671:26682  _allowances */\n      0x01\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26671:26689  _allowances[owner] */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26683:26688  owner */\n      dup7\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26671:26689  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26671:26698  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26690:26697  spender */\n      dup6\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26671:26698  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26671:26706  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26720:26729  emitEvent */\n      dup1\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26716:26792  if (emitEvent) {... */\n      iszero\n      tag_195\n      jumpi\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26766:26773  spender */\n      dup3\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26750:26781  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26759:26764  owner */\n      dup5\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26750:26781  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26775:26780  value */\n      dup5\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26750:26781  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_196\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26716:26792  if (emitEvent) {... */\n    tag_195:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":26366:26798  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22688:23795  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_166:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22793:22794  0 */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22777:22795  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22777:22781  from */\n      dup4\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22777:22795  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22773:23313  if (from == address(0)) {... */\n      tag_198\n      jumpi\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22929:22934  value */\n      dup1\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22913:22925  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22913:22934  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_199\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22773:23313  if (from == address(0)) {... */\n      jump(tag_201)\n    tag_198:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22965:22984  uint256 fromBalance */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22987:22996  _balances */\n      dup1\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22987:23002  _balances[from] */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22997:23001  from */\n      dup6\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22987:23002  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22965:23002  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23034:23039  value */\n      dup2\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23020:23031  fromBalance */\n      dup2\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23020:23039  fromBalance < value */\n      lt\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23016:23131  if (fromBalance < value) {... */\n      iszero\n      tag_202\n      jumpi\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23091:23095  from */\n      dup4\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23097:23108  fromBalance */\n      dup2\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23110:23115  value */\n      dup4\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23066:23116  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23016:23131  if (fromBalance < value) {... */\n    tag_202:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23283:23288  value */\n      dup2\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23269:23280  fromBalance */\n      dup2\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23269:23288  fromBalance - value */\n      sub\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23251:23260  _balances */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23251:23266  _balances[from] */\n      dup1\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23261:23265  from */\n      dup7\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23251:23266  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23251:23288  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22951:23313  {... */\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22773:23313  if (from == address(0)) {... */\n    tag_201:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23341:23342  0 */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23327:23343  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23327:23329  to */\n      dup3\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23327:23343  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23323:23748  if (to == address(0)) {... */\n      tag_204\n      jumpi\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23506:23511  value */\n      dup1\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23490:23502  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23490:23511  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23323:23748  if (to == address(0)) {... */\n      jump(tag_205)\n    tag_204:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23718:23723  value */\n      dup1\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23701:23710  _balances */\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23701:23714  _balances[to] */\n      dup1\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23711:23713  to */\n      dup5\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23701:23714  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23701:23723  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23323:23748  if (to == address(0)) {... */\n    tag_205:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23778:23780  to */\n      dup2\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23763:23788  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23772:23776  from */\n      dup4\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23763:23788  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23782:23787  value */\n      dup4\n        /* \"contracts/Liberswap/USDM_flattened.sol\":23763:23788  Transfer(from, to, value) */\n      mload(0x40)\n      tag_206\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Liberswap/USDM_flattened.sol\":22688:23795  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12499:12605  function _requirePaused() internal view virtual {... */\n    tag_175:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12565:12573  paused() */\n      tag_208\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12565:12571  paused */\n      tag_53\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12565:12573  paused() */\n      jump\t// in\n    tag_208:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12557:12598  require(paused(), \"Pausable: not paused\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_209:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12499:12605  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12321:12427  function _requireNotPaused() internal view virtual {... */\n    tag_186:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12391:12399  paused() */\n      tag_213\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12391:12397  paused */\n      tag_53\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12391:12399  paused() */\n      jump\t// in\n    tag_213:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12390:12399  !paused() */\n      iszero\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12382:12420  require(!paused(), \"Pausable: paused\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_214:\n        /* \"contracts/Liberswap/USDM_flattened.sol\":12321:12427  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_217:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_218:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_219:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_248:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_248)\n    tag_250:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_220:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_221:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_253\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_217\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":818:889   */\n      tag_254\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_218\n      jump\t// in\n    tag_254:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_255\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_219\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":988:1017   */\n      tag_256\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_220\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_26:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_258\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_221\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_223:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_225:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_226:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_264\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_225\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_227:\n        /* \"#utility.yul\":1983:2007   */\n      tag_266\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_226\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_267:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_228:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_269\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_227\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_229:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_230:\n        /* \"#utility.yul\":2339:2363   */\n      tag_272\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_229\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_273\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_273:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_231:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_275\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_230\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_29:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_278\n      tag_223\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":2632:2751   */\n    tag_277:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_279\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_228\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_280\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_231\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_232:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_233:\n        /* \"#utility.yul\":3196:3217   */\n      tag_283\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_232\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_32:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_285\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_233\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3564   */\n    tag_234:\n        /* \"#utility.yul\":3533:3557   */\n      tag_287\n        /* \"#utility.yul\":3551:3556   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      tag_229\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3521:3558   */\n      mstore\n        /* \"#utility.yul\":3446:3564   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3570:3792   */\n    tag_36:\n        /* \"#utility.yul\":3663:3667   */\n      0x00\n        /* \"#utility.yul\":3701:3703   */\n      0x20\n        /* \"#utility.yul\":3690:3699   */\n      dup3\n        /* \"#utility.yul\":3686:3704   */\n      add\n        /* \"#utility.yul\":3678:3704   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3785   */\n      tag_289\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3771:3780   */\n      dup4\n        /* \"#utility.yul\":3767:3784   */\n      add\n        /* \"#utility.yul\":3758:3764   */\n      dup5\n        /* \"#utility.yul\":3714:3785   */\n      tag_234\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":3570:3792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3798:4417   */\n    tag_39:\n        /* \"#utility.yul\":3875:3881   */\n      0x00\n        /* \"#utility.yul\":3883:3889   */\n      dup1\n        /* \"#utility.yul\":3891:3897   */\n      0x00\n        /* \"#utility.yul\":3940:3942   */\n      0x60\n        /* \"#utility.yul\":3928:3937   */\n      dup5\n        /* \"#utility.yul\":3919:3926   */\n      dup7\n        /* \"#utility.yul\":3915:3938   */\n      sub\n        /* \"#utility.yul\":3911:3943   */\n      slt\n        /* \"#utility.yul\":3908:4027   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":3946:4025   */\n      tag_292\n      tag_223\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":3908:4027   */\n    tag_291:\n        /* \"#utility.yul\":4066:4067   */\n      0x00\n        /* \"#utility.yul\":4091:4144   */\n      tag_293\n        /* \"#utility.yul\":4136:4143   */\n      dup7\n        /* \"#utility.yul\":4127:4133   */\n      dup3\n        /* \"#utility.yul\":4116:4125   */\n      dup8\n        /* \"#utility.yul\":4112:4134   */\n      add\n        /* \"#utility.yul\":4091:4144   */\n      tag_228\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":4081:4144   */\n      swap4\n      pop\n        /* \"#utility.yul\":4037:4154   */\n      pop\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4219:4272   */\n      tag_294\n        /* \"#utility.yul\":4264:4271   */\n      dup7\n        /* \"#utility.yul\":4255:4261   */\n      dup3\n        /* \"#utility.yul\":4244:4253   */\n      dup8\n        /* \"#utility.yul\":4240:4262   */\n      add\n        /* \"#utility.yul\":4219:4272   */\n      tag_228\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":4209:4272   */\n      swap3\n      pop\n        /* \"#utility.yul\":4164:4282   */\n      pop\n        /* \"#utility.yul\":4321:4323   */\n      0x40\n        /* \"#utility.yul\":4347:4400   */\n      tag_295\n        /* \"#utility.yul\":4392:4399   */\n      dup7\n        /* \"#utility.yul\":4383:4389   */\n      dup3\n        /* \"#utility.yul\":4372:4381   */\n      dup8\n        /* \"#utility.yul\":4368:4390   */\n      add\n        /* \"#utility.yul\":4347:4400   */\n      tag_231\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":4337:4400   */\n      swap2\n      pop\n        /* \"#utility.yul\":4292:4410   */\n      pop\n        /* \"#utility.yul\":3798:4417   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4423:4509   */\n    tag_235:\n        /* \"#utility.yul\":4458:4465   */\n      0x00\n        /* \"#utility.yul\":4498:4502   */\n      0xff\n        /* \"#utility.yul\":4491:4496   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      and\n        /* \"#utility.yul\":4476:4503   */\n      swap1\n      pop\n        /* \"#utility.yul\":4423:4509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4515:4627   */\n    tag_236:\n        /* \"#utility.yul\":4598:4620   */\n      tag_298\n        /* \"#utility.yul\":4614:4619   */\n      dup2\n        /* \"#utility.yul\":4598:4620   */\n      tag_235\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":4593:4596   */\n      dup3\n        /* \"#utility.yul\":4586:4621   */\n      mstore\n        /* \"#utility.yul\":4515:4627   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4633:4847   */\n    tag_45:\n        /* \"#utility.yul\":4722:4726   */\n      0x00\n        /* \"#utility.yul\":4760:4762   */\n      0x20\n        /* \"#utility.yul\":4749:4758   */\n      dup3\n        /* \"#utility.yul\":4745:4763   */\n      add\n        /* \"#utility.yul\":4737:4763   */\n      swap1\n      pop\n        /* \"#utility.yul\":4773:4840   */\n      tag_300\n        /* \"#utility.yul\":4837:4838   */\n      0x00\n        /* \"#utility.yul\":4826:4835   */\n      dup4\n        /* \"#utility.yul\":4822:4839   */\n      add\n        /* \"#utility.yul\":4813:4819   */\n      dup5\n        /* \"#utility.yul\":4773:4840   */\n      tag_236\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":4633:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5182   */\n    tag_50:\n        /* \"#utility.yul\":4912:4918   */\n      0x00\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"#utility.yul\":4949:4958   */\n      dup3\n        /* \"#utility.yul\":4940:4947   */\n      dup5\n        /* \"#utility.yul\":4936:4959   */\n      sub\n        /* \"#utility.yul\":4932:4964   */\n      slt\n        /* \"#utility.yul\":4929:5048   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":4967:5046   */\n      tag_303\n      tag_223\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":4929:5048   */\n    tag_302:\n        /* \"#utility.yul\":5087:5088   */\n      0x00\n        /* \"#utility.yul\":5112:5165   */\n      tag_304\n        /* \"#utility.yul\":5157:5164   */\n      dup5\n        /* \"#utility.yul\":5148:5154   */\n      dup3\n        /* \"#utility.yul\":5137:5146   */\n      dup6\n        /* \"#utility.yul\":5133:5155   */\n      add\n        /* \"#utility.yul\":5112:5165   */\n      tag_231\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":5102:5165   */\n      swap2\n      pop\n        /* \"#utility.yul\":5058:5175   */\n      pop\n        /* \"#utility.yul\":4853:5182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5188:5517   */\n    tag_57:\n        /* \"#utility.yul\":5247:5253   */\n      0x00\n        /* \"#utility.yul\":5296:5298   */\n      0x20\n        /* \"#utility.yul\":5284:5293   */\n      dup3\n        /* \"#utility.yul\":5275:5282   */\n      dup5\n        /* \"#utility.yul\":5271:5294   */\n      sub\n        /* \"#utility.yul\":5267:5299   */\n      slt\n        /* \"#utility.yul\":5264:5383   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":5302:5381   */\n      tag_307\n      tag_223\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":5264:5383   */\n    tag_306:\n        /* \"#utility.yul\":5422:5423   */\n      0x00\n        /* \"#utility.yul\":5447:5500   */\n      tag_308\n        /* \"#utility.yul\":5492:5499   */\n      dup5\n        /* \"#utility.yul\":5483:5489   */\n      dup3\n        /* \"#utility.yul\":5472:5481   */\n      dup6\n        /* \"#utility.yul\":5468:5490   */\n      add\n        /* \"#utility.yul\":5447:5500   */\n      tag_228\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":5437:5500   */\n      swap2\n      pop\n        /* \"#utility.yul\":5393:5510   */\n      pop\n        /* \"#utility.yul\":5188:5517   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5523:5641   */\n    tag_237:\n        /* \"#utility.yul\":5610:5634   */\n      tag_310\n        /* \"#utility.yul\":5628:5633   */\n      dup2\n        /* \"#utility.yul\":5610:5634   */\n      tag_226\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":5605:5608   */\n      dup3\n        /* \"#utility.yul\":5598:5635   */\n      mstore\n        /* \"#utility.yul\":5523:5641   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5647:5869   */\n    tag_70:\n        /* \"#utility.yul\":5740:5744   */\n      0x00\n        /* \"#utility.yul\":5778:5780   */\n      0x20\n        /* \"#utility.yul\":5767:5776   */\n      dup3\n        /* \"#utility.yul\":5763:5781   */\n      add\n        /* \"#utility.yul\":5755:5781   */\n      swap1\n      pop\n        /* \"#utility.yul\":5791:5862   */\n      tag_312\n        /* \"#utility.yul\":5859:5860   */\n      0x00\n        /* \"#utility.yul\":5848:5857   */\n      dup4\n        /* \"#utility.yul\":5844:5861   */\n      add\n        /* \"#utility.yul\":5835:5841   */\n      dup5\n        /* \"#utility.yul\":5791:5862   */\n      tag_237\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5647:5869   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5875:6349   */\n    tag_80:\n        /* \"#utility.yul\":5943:5949   */\n      0x00\n        /* \"#utility.yul\":5951:5957   */\n      dup1\n        /* \"#utility.yul\":6000:6002   */\n      0x40\n        /* \"#utility.yul\":5988:5997   */\n      dup4\n        /* \"#utility.yul\":5979:5986   */\n      dup6\n        /* \"#utility.yul\":5975:5998   */\n      sub\n        /* \"#utility.yul\":5971:6003   */\n      slt\n        /* \"#utility.yul\":5968:6087   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":6006:6085   */\n      tag_315\n      tag_223\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":5968:6087   */\n    tag_314:\n        /* \"#utility.yul\":6126:6127   */\n      0x00\n        /* \"#utility.yul\":6151:6204   */\n      tag_316\n        /* \"#utility.yul\":6196:6203   */\n      dup6\n        /* \"#utility.yul\":6187:6193   */\n      dup3\n        /* \"#utility.yul\":6176:6185   */\n      dup7\n        /* \"#utility.yul\":6172:6194   */\n      add\n        /* \"#utility.yul\":6151:6204   */\n      tag_228\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":6141:6204   */\n      swap3\n      pop\n        /* \"#utility.yul\":6097:6214   */\n      pop\n        /* \"#utility.yul\":6253:6255   */\n      0x20\n        /* \"#utility.yul\":6279:6332   */\n      tag_317\n        /* \"#utility.yul\":6324:6331   */\n      dup6\n        /* \"#utility.yul\":6315:6321   */\n      dup3\n        /* \"#utility.yul\":6304:6313   */\n      dup7\n        /* \"#utility.yul\":6300:6322   */\n      add\n        /* \"#utility.yul\":6279:6332   */\n      tag_228\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":6269:6332   */\n      swap2\n      pop\n        /* \"#utility.yul\":6224:6342   */\n      pop\n        /* \"#utility.yul\":5875:6349   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6355:6535   */\n    tag_238:\n        /* \"#utility.yul\":6403:6480   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6400:6401   */\n      0x00\n        /* \"#utility.yul\":6393:6481   */\n      mstore\n        /* \"#utility.yul\":6500:6504   */\n      0x22\n        /* \"#utility.yul\":6497:6498   */\n      0x04\n        /* \"#utility.yul\":6490:6505   */\n      mstore\n        /* \"#utility.yul\":6524:6528   */\n      0x24\n        /* \"#utility.yul\":6521:6522   */\n      0x00\n        /* \"#utility.yul\":6514:6529   */\n      revert\n        /* \"#utility.yul\":6541:6861   */\n    tag_88:\n        /* \"#utility.yul\":6585:6591   */\n      0x00\n        /* \"#utility.yul\":6622:6623   */\n      0x02\n        /* \"#utility.yul\":6616:6620   */\n      dup3\n        /* \"#utility.yul\":6612:6624   */\n      div\n        /* \"#utility.yul\":6602:6624   */\n      swap1\n      pop\n        /* \"#utility.yul\":6669:6670   */\n      0x01\n        /* \"#utility.yul\":6663:6667   */\n      dup3\n        /* \"#utility.yul\":6659:6671   */\n      and\n        /* \"#utility.yul\":6690:6708   */\n      dup1\n        /* \"#utility.yul\":6680:6761   */\n      tag_320\n      jumpi\n        /* \"#utility.yul\":6746:6750   */\n      0x7f\n        /* \"#utility.yul\":6738:6744   */\n      dup3\n        /* \"#utility.yul\":6734:6751   */\n      and\n        /* \"#utility.yul\":6724:6751   */\n      swap2\n      pop\n        /* \"#utility.yul\":6680:6761   */\n    tag_320:\n        /* \"#utility.yul\":6808:6810   */\n      0x20\n        /* \"#utility.yul\":6800:6806   */\n      dup3\n        /* \"#utility.yul\":6797:6811   */\n      lt\n        /* \"#utility.yul\":6777:6795   */\n      dup2\n        /* \"#utility.yul\":6774:6812   */\n      sub\n        /* \"#utility.yul\":6771:6855   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":6827:6845   */\n      tag_322\n      tag_238\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":6771:6855   */\n    tag_321:\n        /* \"#utility.yul\":6592:6861   */\n      pop\n        /* \"#utility.yul\":6541:6861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6867:7309   */\n    tag_158:\n        /* \"#utility.yul\":7016:7020   */\n      0x00\n        /* \"#utility.yul\":7054:7056   */\n      0x60\n        /* \"#utility.yul\":7043:7052   */\n      dup3\n        /* \"#utility.yul\":7039:7057   */\n      add\n        /* \"#utility.yul\":7031:7057   */\n      swap1\n      pop\n        /* \"#utility.yul\":7067:7138   */\n      tag_324\n        /* \"#utility.yul\":7135:7136   */\n      0x00\n        /* \"#utility.yul\":7124:7133   */\n      dup4\n        /* \"#utility.yul\":7120:7137   */\n      add\n        /* \"#utility.yul\":7111:7117   */\n      dup7\n        /* \"#utility.yul\":7067:7138   */\n      tag_237\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":7148:7220   */\n      tag_325\n        /* \"#utility.yul\":7216:7218   */\n      0x20\n        /* \"#utility.yul\":7205:7214   */\n      dup4\n        /* \"#utility.yul\":7201:7219   */\n      add\n        /* \"#utility.yul\":7192:7198   */\n      dup6\n        /* \"#utility.yul\":7148:7220   */\n      tag_234\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":7230:7302   */\n      tag_326\n        /* \"#utility.yul\":7298:7300   */\n      0x40\n        /* \"#utility.yul\":7287:7296   */\n      dup4\n        /* \"#utility.yul\":7283:7301   */\n      add\n        /* \"#utility.yul\":7274:7280   */\n      dup5\n        /* \"#utility.yul\":7230:7302   */\n      tag_234\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":6867:7309   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7315:7495   */\n    tag_239:\n        /* \"#utility.yul\":7363:7440   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7360:7361   */\n      0x00\n        /* \"#utility.yul\":7353:7441   */\n      mstore\n        /* \"#utility.yul\":7460:7464   */\n      0x11\n        /* \"#utility.yul\":7457:7458   */\n      0x04\n        /* \"#utility.yul\":7450:7465   */\n      mstore\n        /* \"#utility.yul\":7484:7488   */\n      0x24\n        /* \"#utility.yul\":7481:7482   */\n      0x00\n        /* \"#utility.yul\":7474:7489   */\n      revert\n        /* \"#utility.yul\":7501:7692   */\n    tag_200:\n        /* \"#utility.yul\":7541:7544   */\n      0x00\n        /* \"#utility.yul\":7560:7580   */\n      tag_329\n        /* \"#utility.yul\":7578:7579   */\n      dup3\n        /* \"#utility.yul\":7560:7580   */\n      tag_229\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":7555:7580   */\n      swap2\n      pop\n        /* \"#utility.yul\":7594:7614   */\n      tag_330\n        /* \"#utility.yul\":7612:7613   */\n      dup4\n        /* \"#utility.yul\":7594:7614   */\n      tag_229\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":7589:7614   */\n      swap3\n      pop\n        /* \"#utility.yul\":7637:7638   */\n      dup3\n        /* \"#utility.yul\":7634:7635   */\n      dup3\n        /* \"#utility.yul\":7630:7639   */\n      add\n        /* \"#utility.yul\":7623:7639   */\n      swap1\n      pop\n        /* \"#utility.yul\":7658:7661   */\n      dup1\n        /* \"#utility.yul\":7655:7656   */\n      dup3\n        /* \"#utility.yul\":7652:7662   */\n      gt\n        /* \"#utility.yul\":7649:7685   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":7665:7683   */\n      tag_332\n      tag_239\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":7649:7685   */\n    tag_331:\n        /* \"#utility.yul\":7501:7692   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7698:7868   */\n    tag_240:\n        /* \"#utility.yul\":7838:7860   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":7834:7835   */\n      0x00\n        /* \"#utility.yul\":7826:7832   */\n      dup3\n        /* \"#utility.yul\":7822:7836   */\n      add\n        /* \"#utility.yul\":7815:7861   */\n      mstore\n        /* \"#utility.yul\":7698:7868   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7874:8240   */\n    tag_241:\n        /* \"#utility.yul\":8016:8019   */\n      0x00\n        /* \"#utility.yul\":8037:8104   */\n      tag_335\n        /* \"#utility.yul\":8101:8103   */\n      0x14\n        /* \"#utility.yul\":8096:8099   */\n      dup4\n        /* \"#utility.yul\":8037:8104   */\n      tag_218\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":8030:8104   */\n      swap2\n      pop\n        /* \"#utility.yul\":8113:8206   */\n      tag_336\n        /* \"#utility.yul\":8202:8205   */\n      dup3\n        /* \"#utility.yul\":8113:8206   */\n      tag_240\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":8231:8233   */\n      0x20\n        /* \"#utility.yul\":8226:8229   */\n      dup3\n        /* \"#utility.yul\":8222:8234   */\n      add\n        /* \"#utility.yul\":8215:8234   */\n      swap1\n      pop\n        /* \"#utility.yul\":7874:8240   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8246:8665   */\n    tag_211:\n        /* \"#utility.yul\":8412:8416   */\n      0x00\n        /* \"#utility.yul\":8450:8452   */\n      0x20\n        /* \"#utility.yul\":8439:8448   */\n      dup3\n        /* \"#utility.yul\":8435:8453   */\n      add\n        /* \"#utility.yul\":8427:8453   */\n      swap1\n      pop\n        /* \"#utility.yul\":8499:8508   */\n      dup2\n        /* \"#utility.yul\":8493:8497   */\n      dup2\n        /* \"#utility.yul\":8489:8509   */\n      sub\n        /* \"#utility.yul\":8485:8486   */\n      0x00\n        /* \"#utility.yul\":8474:8483   */\n      dup4\n        /* \"#utility.yul\":8470:8487   */\n      add\n        /* \"#utility.yul\":8463:8510   */\n      mstore\n        /* \"#utility.yul\":8527:8658   */\n      tag_338\n        /* \"#utility.yul\":8653:8657   */\n      dup2\n        /* \"#utility.yul\":8527:8658   */\n      tag_241\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":8519:8658   */\n      swap1\n      pop\n        /* \"#utility.yul\":8246:8665   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8671:8837   */\n    tag_242:\n        /* \"#utility.yul\":8811:8829   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":8807:8808   */\n      0x00\n        /* \"#utility.yul\":8799:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8809   */\n      add\n        /* \"#utility.yul\":8788:8830   */\n      mstore\n        /* \"#utility.yul\":8671:8837   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8843:9209   */\n    tag_243:\n        /* \"#utility.yul\":8985:8988   */\n      0x00\n        /* \"#utility.yul\":9006:9073   */\n      tag_341\n        /* \"#utility.yul\":9070:9072   */\n      0x10\n        /* \"#utility.yul\":9065:9068   */\n      dup4\n        /* \"#utility.yul\":9006:9073   */\n      tag_218\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":8999:9073   */\n      swap2\n      pop\n        /* \"#utility.yul\":9082:9175   */\n      tag_342\n        /* \"#utility.yul\":9171:9174   */\n      dup3\n        /* \"#utility.yul\":9082:9175   */\n      tag_242\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":9200:9202   */\n      0x20\n        /* \"#utility.yul\":9195:9198   */\n      dup3\n        /* \"#utility.yul\":9191:9203   */\n      add\n        /* \"#utility.yul\":9184:9203   */\n      swap1\n      pop\n        /* \"#utility.yul\":8843:9209   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9215:9634   */\n    tag_216:\n        /* \"#utility.yul\":9381:9385   */\n      0x00\n        /* \"#utility.yul\":9419:9421   */\n      0x20\n        /* \"#utility.yul\":9408:9417   */\n      dup3\n        /* \"#utility.yul\":9404:9422   */\n      add\n        /* \"#utility.yul\":9396:9422   */\n      swap1\n      pop\n        /* \"#utility.yul\":9468:9477   */\n      dup2\n        /* \"#utility.yul\":9462:9466   */\n      dup2\n        /* \"#utility.yul\":9458:9478   */\n      sub\n        /* \"#utility.yul\":9454:9455   */\n      0x00\n        /* \"#utility.yul\":9443:9452   */\n      dup4\n        /* \"#utility.yul\":9439:9456   */\n      add\n        /* \"#utility.yul\":9432:9479   */\n      mstore\n        /* \"#utility.yul\":9496:9627   */\n      tag_344\n        /* \"#utility.yul\":9622:9626   */\n      dup2\n        /* \"#utility.yul\":9496:9627   */\n      tag_243\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":9488:9627   */\n      swap1\n      pop\n        /* \"#utility.yul\":9215:9634   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c7cc4e284aa65424473409a24bcfbd568fb82664f257411168e55a835e9ccd0064736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1089": {
									"entryPoint": null,
									"id": 1089,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_205": {
									"entryPoint": null,
									"id": 205,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_327": {
									"entryPoint": null,
									"id": 327,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_551": {
									"entryPoint": null,
									"id": 551,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_854": {
									"entryPoint": 635,
									"id": 854,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_301": {
									"entryPoint": 430,
									"id": 301,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_821": {
									"entryPoint": 773,
									"id": 821,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_578": {
									"entryPoint": 627,
									"id": 578,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2976,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2411,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2501,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2827,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1931,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1325,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1752,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1640,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2354,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1525,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1480,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1321,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1667,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1818,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1861,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10797:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1261:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1272:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1282:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1244:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1254:6:1",
														"type": ""
													}
												],
												"src": "1202:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1335:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1442:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1466:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1521:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1531:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1628:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1730:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1740:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1750:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1848:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1862:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1821:26:1"
															},
															"nodeType": "YulIf",
															"src": "1818:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1951:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1912:38:1"
															},
															"nodeType": "YulIf",
															"src": "1909:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1714:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1723:6:1",
														"type": ""
													}
												],
												"src": "1679:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2059:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2069:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "2077:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2090:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2113:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2121:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "2046:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2054:4:1",
														"type": ""
													}
												],
												"src": "2005:141:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2196:49:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2206:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2179:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2189:6:1",
														"type": ""
													}
												],
												"src": "2152:93:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2304:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2314:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2335:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "2279:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2285:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "2295:8:1",
														"type": ""
													}
												],
												"src": "2251:107:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2440:317:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2467:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2506:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2612:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2624:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2672:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2681:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2711:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:1"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2721:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2401:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "2408:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "2420:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2433:6:1",
														"type": ""
													}
												],
												"src": "2364:393:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2808:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2818:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2829:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2790:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2800:7:1",
														"type": ""
													}
												],
												"src": "2763:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2878:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2888:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2895:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2864:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2874:3:1",
														"type": ""
													}
												],
												"src": "2846:60:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2972:82:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2982:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2995:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2952:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2962:9:1",
														"type": ""
													}
												],
												"src": "2912:142:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3107:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3117:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3124:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3093:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3103:3:1",
														"type": ""
													}
												],
												"src": "3060:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3217:193:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3251:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3299:105:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3194:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3200:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "3208:7:1",
														"type": ""
													}
												],
												"src": "3141:269:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3465:24:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3475:8:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3482:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3461:3:1",
														"type": ""
													}
												],
												"src": "3416:73:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3548:136:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3572:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3613:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "3534:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3540:6:1",
														"type": ""
													}
												],
												"src": "3495:189:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3740:136:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3807:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3757:14:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3772:26:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3774:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3754:2:1",
																"statements": []
															},
															"src": "3750:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "3728:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3735:3:1",
														"type": ""
													}
												],
												"src": "3690:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3961:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3987:431:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "4288:27:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4290:23:1",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:1"
																		},
																		"nodeType": "YulIf",
																		"src": "4266:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3975:11:1"
															},
															"nodeType": "YulIf",
															"src": "3972:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3937:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "3944:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "3949:10:1",
														"type": ""
													}
												],
												"src": "3882:543:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4494:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4504:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4525:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4469:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4475:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4485:8:1",
														"type": ""
													}
												],
												"src": "4431:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4605:118:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4627:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4692:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:1"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4702:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4582:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "4588:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4598:6:1",
														"type": ""
													}
												],
												"src": "4554:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4809:214:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4942:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:1"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4950:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4988:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4996:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4790:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "4796:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "4804:4:1",
														"type": ""
													}
												],
												"src": "4728:295:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:1303:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5145:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5267:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5236:30:1"
															},
															"nodeType": "YulIf",
															"src": "5233:56:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5313:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5398:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5492:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5503:17:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5516:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5567:611:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5764:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5841:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "5882:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "5742:21:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "5744:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "5723:3:1",
																					"statements": []
																				},
																				"src": "5719:208:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "5963:156:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:1"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "5940:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:1"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "5560:618:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6195:222:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "6246:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "6264:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "6236:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "6187:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5537:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "5530:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5109:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "5115:3:1",
														"type": ""
													}
												],
												"src": "5028:1395:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6494:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6504:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6482:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6489:3:1",
														"type": ""
													}
												],
												"src": "6429:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6651:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6661:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6669:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6697:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6623:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6635:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6646:4:1",
														"type": ""
													}
												],
												"src": "6553:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6809:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6826:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6829:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6819:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6819:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6819:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6923:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6926:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6916:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6916:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6947:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6950:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6940:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6940:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6781:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7018:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7028:34:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7053:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7056:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7049:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7049:13:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "7028:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6999:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "7009:8:1",
														"type": ""
													}
												],
												"src": "6967:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7148:775:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7158:15:1",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "7167:6:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7158:5:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7182:14:1",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "7191:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "7182:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7240:677:1",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7328:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "7330:16:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7330:18:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7330:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7306:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "7316:3:1"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "7321:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "7312:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7312:14:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "7303:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7303:24:1"
																		},
																		"nodeType": "YulIf",
																		"src": "7300:50:1"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "7395:419:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "7775:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "7788:5:1"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "7795:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "7784:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7784:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "7775:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "7370:8:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7380:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "7366:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7366:16:1"
																		},
																		"nodeType": "YulIf",
																		"src": "7363:451:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7827:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7839:4:1"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "7845:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "7835:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7835:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "7827:4:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7863:44:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "7898:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "7875:22:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7875:32:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "7863:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7216:8:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7226:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7213:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7213:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7229:2:1",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7209:3:1",
																"statements": []
															},
															"src": "7205:712:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "7103:6:1",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "7111:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "7118:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "7128:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "7136:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "7143:4:1",
														"type": ""
													}
												],
												"src": "7075:848:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7989:1013:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8184:20:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8186:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "8195:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "8186:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "8197:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "8174:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8167:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8167:16:1"
															},
															"nodeType": "YulIf",
															"src": "8164:40:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8229:20:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8231:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "8240:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "8231:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "8242:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8223:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8216:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8216:12:1"
															},
															"nodeType": "YulIf",
															"src": "8213:36:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8359:20:1",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "8361:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "8361:5:1"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "8372:5:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8352:27:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8357:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8403:176:1",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8438:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "8440:16:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8440:18:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8440:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "8423:8:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8433:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "8420:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8420:17:1"
																				},
																				"nodeType": "YulIf",
																				"src": "8417:43:1"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "8473:25:1",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8486:1:1",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "8489:8:1"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "8482:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8482:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "8473:5:1"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8529:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "8531:16:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8531:18:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8531:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "8517:5:1"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "8524:3:1"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "8514:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8514:14:1"
																				},
																				"nodeType": "YulIf",
																				"src": "8511:40:1"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "8564:5:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8388:191:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8393:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "8309:4:1"
															},
															"nodeType": "YulSwitch",
															"src": "8302:277:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8711:123:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8725:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "8738:4:1"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "8744:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "8734:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8734:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "8725:5:1"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "8784:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "8786:16:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8786:18:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8786:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "8772:5:1"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "8779:3:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "8769:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8769:14:1"
																		},
																		"nodeType": "YulIf",
																		"src": "8766:40:1"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "8819:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "8614:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8620:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "8611:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8611:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "8628:8:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8638:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "8625:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8625:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8607:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8607:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "8663:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8669:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "8660:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8660:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "8678:8:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8688:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "8675:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8675:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8656:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8656:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8591:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8591:111:1"
															},
															"nodeType": "YulIf",
															"src": "8588:246:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8844:57:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8878:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8881:4:1"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "8887:8:1"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "8897:3:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "8859:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8859:42:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "8844:5:1"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "8851:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8940:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8942:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8942:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8942:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "8917:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "8928:3:1"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "8933:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "8924:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8924:14:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8914:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:25:1"
															},
															"nodeType": "YulIf",
															"src": "8911:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8971:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "8984:5:1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "8991:4:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8980:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8980:16:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "8971:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "7959:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "7965:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "7975:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "7983:5:1",
														"type": ""
													}
												],
												"src": "7929:1073:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9051:43:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9061:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9076:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9083:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9072:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9072:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9061:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9033:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9043:7:1",
														"type": ""
													}
												],
												"src": "9008:86:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9164:217:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9174:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "9200:4:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9182:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9182:23:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "9174:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9214:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "9242:8:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "9226:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9226:25:1"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "9214:8:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9261:113:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "9291:4:1"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "9297:8:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9307:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "9270:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9270:104:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "9261:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "9139:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "9145:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "9158:5:1",
														"type": ""
													}
												],
												"src": "9100:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9435:362:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9445:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9468:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9450:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9450:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9445:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9479:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9502:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9484:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9484:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9479:1:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9513:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9536:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9539:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "9532:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9532:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "9517:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9550:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "9579:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9561:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9561:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "9550:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9768:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9770:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9770:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9770:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "9701:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9694:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9694:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "9724:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "9731:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "9740:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "9727:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9727:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "9721:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9721:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "9674:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9674:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9654:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9654:113:1"
															},
															"nodeType": "YulIf",
															"src": "9651:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9418:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9421:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "9427:7:1",
														"type": ""
													}
												],
												"src": "9387:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9847:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9857:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9880:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9862:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9862:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9857:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9891:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9914:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9896:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9896:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9891:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9925:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9936:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9939:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9932:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9932:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9925:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9965:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9967:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9967:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9967:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9957:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "9960:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9954:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9954:10:1"
															},
															"nodeType": "YulIf",
															"src": "9951:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9834:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9837:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9843:3:1",
														"type": ""
													}
												],
												"src": "9803:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10065:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10082:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10105:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10087:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10087:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10075:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10075:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10075:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10053:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10060:3:1",
														"type": ""
													}
												],
												"src": "10000:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10278:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10288:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10300:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10311:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10296:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10296:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10288:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10368:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10381:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10392:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10377:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10377:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10324:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10324:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10324:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10449:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10462:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10473:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10458:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10458:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10405:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10405:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10405:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10531:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10544:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10555:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10540:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10540:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10487:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10487:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10487:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10234:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10246:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10254:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10262:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10273:4:1",
														"type": ""
													}
												],
												"src": "10124:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10670:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10680:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10692:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10703:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10688:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10688:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10680:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10760:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10773:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10784:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10769:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10769:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10716:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10716:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10716:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10642:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10654:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10665:4:1",
														"type": ""
													}
												],
												"src": "10572:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040516200206e3803806200206e83398181016040528101906200003691906200058e565b806040518060400160405280600a81526020017f5553445420546f6b656e000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f55534454000000000000000000000000000000000000000000000000000000008152508160039081620000b4919062000822565b508060049081620000c6919062000822565b5050505f60055f6101000a81548160ff0219169083151502179055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000155575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200014c919062000917565b60405180910390fd5b6200016681620001ae60201b60201c565b50620001a7336200017c6200027360201b60201c565b600a6200018a919062000abb565b633b9aca006200019b919062000b0b565b6200027b60201b60201c565b5062000bf6565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002ee575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620002e5919062000917565b60405180910390fd5b620003015f83836200030560201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160362000359578060025f8282546200034c919062000b55565b925050819055506200042a565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015620003e5578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620003dc9392919062000ba0565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000473578060025f8282540392505081905550620004bd565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200051c919062000bdb565b60405180910390a3505050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000558826200052d565b9050919050565b6200056a816200054c565b811462000575575f80fd5b50565b5f8151905062000588816200055f565b92915050565b5f60208284031215620005a657620005a562000529565b5b5f620005b58482850162000578565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200063a57607f821691505b60208210810362000650576200064f620005f5565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620006b47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000677565b620006c0868362000677565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200070a62000704620006fe84620006d8565b620006e1565b620006d8565b9050919050565b5f819050919050565b6200072583620006ea565b6200073d620007348262000711565b84845462000683565b825550505050565b5f90565b6200075362000745565b620007608184846200071a565b505050565b5b8181101562000787576200077b5f8262000749565b60018101905062000766565b5050565b601f821115620007d657620007a08162000656565b620007ab8462000668565b81016020851015620007bb578190505b620007d3620007ca8562000668565b83018262000765565b50505b505050565b5f82821c905092915050565b5f620007f85f1984600802620007db565b1980831691505092915050565b5f620008128383620007e7565b9150826002028217905092915050565b6200082d82620005be565b67ffffffffffffffff811115620008495762000848620005c8565b5b62000855825462000622565b620008628282856200078b565b5f60209050601f83116001811462000898575f841562000883578287015190505b6200088f858262000805565b865550620008fe565b601f198416620008a88662000656565b5f5b82811015620008d157848901518255600182019150602085019450602081019050620008aa565b86831015620008f15784890151620008ed601f891682620007e7565b8355505b6001600288020188555050505b505050505050565b62000911816200054c565b82525050565b5f6020820190506200092c5f83018462000906565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b6001851115620009bc5780860481111562000994576200099362000932565b5b6001851615620009a45780820291505b8081029050620009b4856200095f565b945062000974565b94509492505050565b5f82620009d6576001905062000aa8565b81620009e5575f905062000aa8565b8160018114620009fe576002811462000a095762000a3f565b600191505062000aa8565b60ff84111562000a1e5762000a1d62000932565b5b8360020a91508482111562000a385762000a3762000932565b5b5062000aa8565b5060208310610133831016604e8410600b841016171562000a795782820a90508381111562000a735762000a7262000932565b5b62000aa8565b62000a8884848460016200096b565b9250905081840481111562000aa25762000aa162000932565b5b81810290505b9392505050565b5f60ff82169050919050565b5f62000ac782620006d8565b915062000ad48362000aaf565b925062000b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484620009c5565b905092915050565b5f62000b1782620006d8565b915062000b2483620006d8565b925082820262000b3481620006d8565b9150828204841483151762000b4e5762000b4d62000932565b5b5092915050565b5f62000b6182620006d8565b915062000b6e83620006d8565b925082820190508082111562000b895762000b8862000932565b5b92915050565b62000b9a81620006d8565b82525050565b5f60608201905062000bb55f83018662000906565b62000bc4602083018562000b8f565b62000bd3604083018462000b8f565b949350505050565b5f60208201905062000bf05f83018462000b8f565b92915050565b61146a8062000c045f395ff3fe608060405234801561000f575f80fd5b5060043610610109575f3560e01c806370a08231116100a05780638da5cb5b1161006f5780638da5cb5b1461026b57806395d89b4114610289578063a9059cbb146102a7578063dd62ed3e146102d7578063f2fde38b1461030757610109565b806370a082311461020b578063715018a61461023b57806379cc6790146102455780638456cb591461026157610109565b8063313ce567116100dc578063313ce567146101a95780633f4ba83a146101c757806342966c68146101d15780635c975abb146101ed57610109565b806306fdde031461010d578063095ea7b31461012b57806318160ddd1461015b57806323b872dd14610179575b5f80fd5b610115610323565b6040516101229190610fe8565b60405180910390f35b61014560048036038101906101409190611099565b6103b3565b60405161015291906110f1565b60405180910390f35b6101636103d5565b6040516101709190611119565b60405180910390f35b610193600480360381019061018e9190611132565b6103de565b6040516101a091906110f1565b60405180910390f35b6101b161040c565b6040516101be919061119d565b60405180910390f35b6101cf610414565b005b6101eb60048036038101906101e691906111b6565b610426565b005b6101f561043a565b60405161020291906110f1565b60405180910390f35b610225600480360381019061022091906111e1565b61044f565b6040516102329190611119565b60405180910390f35b610243610494565b005b61025f600480360381019061025a9190611099565b6104a7565b005b6102696104c7565b005b6102736104d9565b604051610280919061121b565b60405180910390f35b610291610502565b60405161029e9190610fe8565b60405180910390f35b6102c160048036038101906102bc9190611099565b610592565b6040516102ce91906110f1565b60405180910390f35b6102f160048036038101906102ec9190611234565b6105b4565b6040516102fe9190611119565b60405180910390f35b610321600480360381019061031c91906111e1565b610636565b005b6060600380546103329061129f565b80601f016020809104026020016040519081016040528092919081815260200182805461035e9061129f565b80156103a95780601f10610380576101008083540402835291602001916103a9565b820191905f5260205f20905b81548152906001019060200180831161038c57829003601f168201915b5050505050905090565b5f806103bd6106ba565b90506103ca8185856106c1565b600191505092915050565b5f600254905090565b5f806103e86106ba565b90506103f58582856106d3565b610400858585610765565b60019150509392505050565b5f6012905090565b61041c610855565b6104246108dc565b565b6104376104316106ba565b8261093d565b50565b5f60055f9054906101000a900460ff16905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61049c610855565b6104a55f6109bc565b565b6104b9826104b36106ba565b836106d3565b6104c3828261093d565b5050565b6104cf610855565b6104d7610a81565b565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105119061129f565b80601f016020809104026020016040519081016040528092919081815260200182805461053d9061129f565b80156105885780601f1061055f57610100808354040283529160200191610588565b820191905f5260205f20905b81548152906001019060200180831161056b57829003601f168201915b5050505050905090565b5f8061059c6106ba565b90506105a9818585610765565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61063e610855565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106ae575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106a5919061121b565b60405180910390fd5b6106b7816109bc565b50565b5f33905090565b6106ce8383836001610ae3565b505050565b5f6106de84846105b4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461075f5781811015610750578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610747939291906112cf565b60405180910390fd5b61075e84848484035f610ae3565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107d5575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107cc919061121b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610845575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161083c919061121b565b60405180910390fd5b610850838383610cb2565b505050565b61085d6106ba565b73ffffffffffffffffffffffffffffffffffffffff1661087b6104d9565b73ffffffffffffffffffffffffffffffffffffffff16146108da5761089e6106ba565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108d1919061121b565b60405180910390fd5b565b6108e4610ecb565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6109266106ba565b604051610933919061121b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109ad575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109a4919061121b565b60405180910390fd5b6109b8825f83610cb2565b5050565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610a89610f14565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610acc6106ba565b604051610ad9919061121b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b53575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b4a919061121b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bc3575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610bba919061121b565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610cac578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ca39190611119565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d02578060025f828254610cf69190611331565b92505081905550610dd0565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610d8b578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610d82939291906112cf565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e17578060025f8282540392505081905550610e61565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ebe9190611119565b60405180910390a3505050565b610ed361043a565b610f12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f09906113ae565b60405180910390fd5b565b610f1c61043a565b15610f5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5390611416565b60405180910390fd5b565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610f95578082015181840152602081019050610f7a565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610fba82610f5e565b610fc48185610f68565b9350610fd4818560208601610f78565b610fdd81610fa0565b840191505092915050565b5f6020820190508181035f8301526110008184610fb0565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110358261100c565b9050919050565b6110458161102b565b811461104f575f80fd5b50565b5f813590506110608161103c565b92915050565b5f819050919050565b61107881611066565b8114611082575f80fd5b50565b5f813590506110938161106f565b92915050565b5f80604083850312156110af576110ae611008565b5b5f6110bc85828601611052565b92505060206110cd85828601611085565b9150509250929050565b5f8115159050919050565b6110eb816110d7565b82525050565b5f6020820190506111045f8301846110e2565b92915050565b61111381611066565b82525050565b5f60208201905061112c5f83018461110a565b92915050565b5f805f6060848603121561114957611148611008565b5b5f61115686828701611052565b935050602061116786828701611052565b925050604061117886828701611085565b9150509250925092565b5f60ff82169050919050565b61119781611182565b82525050565b5f6020820190506111b05f83018461118e565b92915050565b5f602082840312156111cb576111ca611008565b5b5f6111d884828501611085565b91505092915050565b5f602082840312156111f6576111f5611008565b5b5f61120384828501611052565b91505092915050565b6112158161102b565b82525050565b5f60208201905061122e5f83018461120c565b92915050565b5f806040838503121561124a57611249611008565b5b5f61125785828601611052565b925050602061126885828601611052565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806112b657607f821691505b6020821081036112c9576112c8611272565b5b50919050565b5f6060820190506112e25f83018661120c565b6112ef602083018561110a565b6112fc604083018461110a565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61133b82611066565b915061134683611066565b925082820190508082111561135e5761135d611304565b5b92915050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f611398601483610f68565b91506113a382611364565b602082019050919050565b5f6020820190508181035f8301526113c58161138c565b9050919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f611400601083610f68565b915061140b826113cc565b602082019050919050565b5f6020820190508181035f83015261142d816113f4565b905091905056fea2646970667358221220c7cc4e284aa65424473409a24bcfbd568fb82664f257411168e55a835e9ccd0064736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x206E CODESIZE SUB DUP1 PUSH3 0x206E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x58E JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553445420546F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5553445400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xB4 SWAP2 SWAP1 PUSH3 0x822 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xC6 SWAP2 SWAP1 PUSH3 0x822 JUMP JUMPDEST POP POP POP PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x155 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x14C SWAP2 SWAP1 PUSH3 0x917 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x166 DUP2 PUSH3 0x1AE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x1A7 CALLER PUSH3 0x17C PUSH3 0x273 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH3 0x18A SWAP2 SWAP1 PUSH3 0xABB JUMP JUMPDEST PUSH4 0x3B9ACA00 PUSH3 0x19B SWAP2 SWAP1 PUSH3 0xB0B JUMP JUMPDEST PUSH3 0x27B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0xBF6 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x2EE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x2E5 SWAP2 SWAP1 PUSH3 0x917 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x301 PUSH0 DUP4 DUP4 PUSH3 0x305 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x359 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x34C SWAP2 SWAP1 PUSH3 0xB55 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x42A JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x3E5 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x3DC SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xBA0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x473 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x4BD JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x51C SWAP2 SWAP1 PUSH3 0xBDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x558 DUP3 PUSH3 0x52D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x56A DUP2 PUSH3 0x54C JUMP JUMPDEST DUP2 EQ PUSH3 0x575 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x588 DUP2 PUSH3 0x55F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x5A6 JUMPI PUSH3 0x5A5 PUSH3 0x529 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x5B5 DUP5 DUP3 DUP6 ADD PUSH3 0x578 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x63A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x650 JUMPI PUSH3 0x64F PUSH3 0x5F5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x6B4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x677 JUMP JUMPDEST PUSH3 0x6C0 DUP7 DUP4 PUSH3 0x677 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x70A PUSH3 0x704 PUSH3 0x6FE DUP5 PUSH3 0x6D8 JUMP JUMPDEST PUSH3 0x6E1 JUMP JUMPDEST PUSH3 0x6D8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x725 DUP4 PUSH3 0x6EA JUMP JUMPDEST PUSH3 0x73D PUSH3 0x734 DUP3 PUSH3 0x711 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x683 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x753 PUSH3 0x745 JUMP JUMPDEST PUSH3 0x760 DUP2 DUP5 DUP5 PUSH3 0x71A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x787 JUMPI PUSH3 0x77B PUSH0 DUP3 PUSH3 0x749 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x766 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x7D6 JUMPI PUSH3 0x7A0 DUP2 PUSH3 0x656 JUMP JUMPDEST PUSH3 0x7AB DUP5 PUSH3 0x668 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x7BB JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x7D3 PUSH3 0x7CA DUP6 PUSH3 0x668 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x765 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x7F8 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x7DB JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x812 DUP4 DUP4 PUSH3 0x7E7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x82D DUP3 PUSH3 0x5BE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x849 JUMPI PUSH3 0x848 PUSH3 0x5C8 JUMP JUMPDEST JUMPDEST PUSH3 0x855 DUP3 SLOAD PUSH3 0x622 JUMP JUMPDEST PUSH3 0x862 DUP3 DUP3 DUP6 PUSH3 0x78B JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x898 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x883 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x88F DUP6 DUP3 PUSH3 0x805 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x8FE JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x8A8 DUP7 PUSH3 0x656 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x8D1 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x8AA JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x8F1 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x8ED PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x7E7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0x911 DUP2 PUSH3 0x54C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x92C PUSH0 DUP4 ADD DUP5 PUSH3 0x906 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0x9BC JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0x994 JUMPI PUSH3 0x993 PUSH3 0x932 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0x9A4 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0x9B4 DUP6 PUSH3 0x95F JUMP JUMPDEST SWAP5 POP PUSH3 0x974 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x9D6 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0xAA8 JUMP JUMPDEST DUP2 PUSH3 0x9E5 JUMPI PUSH0 SWAP1 POP PUSH3 0xAA8 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x9FE JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0xA09 JUMPI PUSH3 0xA3F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0xAA8 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0xA1E JUMPI PUSH3 0xA1D PUSH3 0x932 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0xA38 JUMPI PUSH3 0xA37 PUSH3 0x932 JUMP JUMPDEST JUMPDEST POP PUSH3 0xAA8 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0xA79 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0xA73 JUMPI PUSH3 0xA72 PUSH3 0x932 JUMP JUMPDEST JUMPDEST PUSH3 0xAA8 JUMP JUMPDEST PUSH3 0xA88 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0x96B JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0xAA2 JUMPI PUSH3 0xAA1 PUSH3 0x932 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xAC7 DUP3 PUSH3 0x6D8 JUMP JUMPDEST SWAP2 POP PUSH3 0xAD4 DUP4 PUSH3 0xAAF JUMP JUMPDEST SWAP3 POP PUSH3 0xB03 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0x9C5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xB17 DUP3 PUSH3 0x6D8 JUMP JUMPDEST SWAP2 POP PUSH3 0xB24 DUP4 PUSH3 0x6D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0xB34 DUP2 PUSH3 0x6D8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0xB4E JUMPI PUSH3 0xB4D PUSH3 0x932 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xB61 DUP3 PUSH3 0x6D8 JUMP JUMPDEST SWAP2 POP PUSH3 0xB6E DUP4 PUSH3 0x6D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xB89 JUMPI PUSH3 0xB88 PUSH3 0x932 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xB9A DUP2 PUSH3 0x6D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xBB5 PUSH0 DUP4 ADD DUP7 PUSH3 0x906 JUMP JUMPDEST PUSH3 0xBC4 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xB8F JUMP JUMPDEST PUSH3 0xBD3 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xB8F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xBF0 PUSH0 DUP4 ADD DUP5 PUSH3 0xB8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x146A DUP1 PUSH3 0xC04 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x307 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x261 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1ED JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x323 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1132 JUMP JUMPDEST PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x119D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH2 0x414 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x11B6 JUMP JUMPDEST PUSH2 0x426 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F5 PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH2 0x494 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x269 PUSH2 0x4C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH2 0x502 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0x592 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x636 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x332 SWAP1 PUSH2 0x129F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x35E SWAP1 PUSH2 0x129F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x380 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x38C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3BD PUSH2 0x6BA JUMP JUMPDEST SWAP1 POP PUSH2 0x3CA DUP2 DUP6 DUP6 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3E8 PUSH2 0x6BA JUMP JUMPDEST SWAP1 POP PUSH2 0x3F5 DUP6 DUP3 DUP6 PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x400 DUP6 DUP6 DUP6 PUSH2 0x765 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x41C PUSH2 0x855 JUMP JUMPDEST PUSH2 0x424 PUSH2 0x8DC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x437 PUSH2 0x431 PUSH2 0x6BA JUMP JUMPDEST DUP3 PUSH2 0x93D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x49C PUSH2 0x855 JUMP JUMPDEST PUSH2 0x4A5 PUSH0 PUSH2 0x9BC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4B9 DUP3 PUSH2 0x4B3 PUSH2 0x6BA JUMP JUMPDEST DUP4 PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x4C3 DUP3 DUP3 PUSH2 0x93D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4CF PUSH2 0x855 JUMP JUMPDEST PUSH2 0x4D7 PUSH2 0xA81 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x511 SWAP1 PUSH2 0x129F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x53D SWAP1 PUSH2 0x129F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x588 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x55F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x588 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x56B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x59C PUSH2 0x6BA JUMP JUMPDEST SWAP1 POP PUSH2 0x5A9 DUP2 DUP6 DUP6 PUSH2 0x765 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x63E PUSH2 0x855 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6AE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A5 SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6B7 DUP2 PUSH2 0x9BC JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6CE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xAE3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6DE DUP5 DUP5 PUSH2 0x5B4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x75F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x750 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x747 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x75E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xAE3 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7D5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x845 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x850 DUP4 DUP4 DUP4 PUSH2 0xCB2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x85D PUSH2 0x6BA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x87B PUSH2 0x4D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8DA JUMPI PUSH2 0x89E PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x8E4 PUSH2 0xECB JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x926 PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x933 SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9AD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A4 SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B8 DUP3 PUSH0 DUP4 PUSH2 0xCB2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA89 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xACC PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD9 SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB53 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4A SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBA SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xCAC JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCA3 SWAP2 SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD02 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCF6 SWAP2 SWAP1 PUSH2 0x1331 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDD0 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xD8B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD82 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE17 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE61 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xEBE SWAP2 SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xED3 PUSH2 0x43A JUMP JUMPDEST PUSH2 0xF12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF09 SWAP1 PUSH2 0x13AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xF1C PUSH2 0x43A JUMP JUMPDEST ISZERO PUSH2 0xF5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF53 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF95 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF7A JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFBA DUP3 PUSH2 0xF5E JUMP JUMPDEST PUSH2 0xFC4 DUP2 DUP6 PUSH2 0xF68 JUMP JUMPDEST SWAP4 POP PUSH2 0xFD4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF78 JUMP JUMPDEST PUSH2 0xFDD DUP2 PUSH2 0xFA0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1000 DUP2 DUP5 PUSH2 0xFB0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1035 DUP3 PUSH2 0x100C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1045 DUP2 PUSH2 0x102B JUMP JUMPDEST DUP2 EQ PUSH2 0x104F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1060 DUP2 PUSH2 0x103C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1078 DUP2 PUSH2 0x1066 JUMP JUMPDEST DUP2 EQ PUSH2 0x1082 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1093 DUP2 PUSH2 0x106F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10AF JUMPI PUSH2 0x10AE PUSH2 0x1008 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10BC DUP6 DUP3 DUP7 ADD PUSH2 0x1052 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10CD DUP6 DUP3 DUP7 ADD PUSH2 0x1085 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10EB DUP2 PUSH2 0x10D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1104 PUSH0 DUP4 ADD DUP5 PUSH2 0x10E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1113 DUP2 PUSH2 0x1066 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x112C PUSH0 DUP4 ADD DUP5 PUSH2 0x110A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1149 JUMPI PUSH2 0x1148 PUSH2 0x1008 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1156 DUP7 DUP3 DUP8 ADD PUSH2 0x1052 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1167 DUP7 DUP3 DUP8 ADD PUSH2 0x1052 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1178 DUP7 DUP3 DUP8 ADD PUSH2 0x1085 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1197 DUP2 PUSH2 0x1182 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11B0 PUSH0 DUP4 ADD DUP5 PUSH2 0x118E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11CB JUMPI PUSH2 0x11CA PUSH2 0x1008 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11D8 DUP5 DUP3 DUP6 ADD PUSH2 0x1085 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F6 JUMPI PUSH2 0x11F5 PUSH2 0x1008 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1203 DUP5 DUP3 DUP6 ADD PUSH2 0x1052 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1215 DUP2 PUSH2 0x102B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x122E PUSH0 DUP4 ADD DUP5 PUSH2 0x120C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x124A JUMPI PUSH2 0x1249 PUSH2 0x1008 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1257 DUP6 DUP3 DUP7 ADD PUSH2 0x1052 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1268 DUP6 DUP3 DUP7 ADD PUSH2 0x1052 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x12B6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x12C9 JUMPI PUSH2 0x12C8 PUSH2 0x1272 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12E2 PUSH0 DUP4 ADD DUP7 PUSH2 0x120C JUMP JUMPDEST PUSH2 0x12EF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x110A JUMP JUMPDEST PUSH2 0x12FC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x110A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x133B DUP3 PUSH2 0x1066 JUMP JUMPDEST SWAP2 POP PUSH2 0x1346 DUP4 PUSH2 0x1066 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x135E JUMPI PUSH2 0x135D PUSH2 0x1304 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1398 PUSH1 0x14 DUP4 PUSH2 0xF68 JUMP JUMPDEST SWAP2 POP PUSH2 0x13A3 DUP3 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13C5 DUP2 PUSH2 0x138C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1400 PUSH1 0x10 DUP4 PUSH2 0xF68 JUMP JUMPDEST SWAP2 POP PUSH2 0x140B DUP3 PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x142D DUP2 PUSH2 0x13F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xCC 0x4E 0x28 0x4A 0xA6 SLOAD 0x24 SELFBALANCE CALLVALUE MULMOD LOG2 0x4B 0xCF 0xBD JUMP DUP16 0xB8 0x26 PUSH5 0xF257411168 0xE5 GAS DUP4 0x5E SWAP13 0xCD STOP PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "28771:558:0:-:0;;;28915:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;28978:5;18313:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18387:5;18379;:13;;;;;;:::i;:::-;;18412:7;18402;:17;;;;;;:::i;:::-;;18313:113;;11560:5;11550:7;;:15;;;;;;;;;;;;;;;;;;8753:1;8729:26;;:12;:26;;;8725:95;;8806:1;8778:31;;;;;;;;;;;:::i;:::-;;;;;;;;8725:95;8829:32;8848:12;8829:18;;;:32;;:::i;:::-;8681:187;28995:46:::2;29001:10;29030;:8;;;:10;;:::i;:::-;29026:2;:14;;;;:::i;:::-;29013:10;:27;;;;:::i;:::-;28995:5;;;:46;;:::i;:::-;28915:133:::0;28771:558;;10368:187;10441:16;10460:6;;;;;;;;;;;10441:25;;10485:8;10476:6;;:17;;;;;;;;;;;;;;;;;;10539:8;10508:40;;10529:8;10508:40;;;;;;;;;;;;10431:124;10368:187;:::o;19419:82::-;19468:5;19492:2;19485:9;;19419:82;:::o;24138:208::-;24227:1;24208:21;;:7;:21;;;24204:91;;24281:1;24252:32;;;;;;;;;;;:::i;:::-;;;;;;;;24204:91;24304:35;24320:1;24324:7;24333:5;24304:7;;;:35;;:::i;:::-;24138:208;;:::o;22688:1107::-;22793:1;22777:18;;:4;:18;;;22773:540;;22929:5;22913:12;;:21;;;;;;;:::i;:::-;;;;;;;;22773:540;;;22965:19;22987:9;:15;22997:4;22987:15;;;;;;;;;;;;;;;;22965:37;;23034:5;23020:11;:19;23016:115;;;23091:4;23097:11;23110:5;23066:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;23016:115;23283:5;23269:11;:19;23251:9;:15;23261:4;23251:15;;;;;;;;;;;;;;;:37;;;;22951:362;22773:540;23341:1;23327:16;;:2;:16;;;23323:425;;23506:5;23490:12;;:21;;;;;;;;;;;23323:425;;;23718:5;23701:9;:13;23711:2;23701:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;23323:425;23778:2;23763:25;;23772:4;23763:25;;;23782:5;23763:25;;;;;;:::i;:::-;;;;;;;;22688:1107;;;:::o;88:117:1:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:102;7009:8;7056:5;7053:1;7049:13;7028:34;;6967:102;;;:::o;7075:848::-;7136:5;7143:4;7167:6;7158:15;;7191:5;7182:14;;7205:712;7226:1;7216:8;7213:15;7205:712;;;7321:4;7316:3;7312:14;7306:4;7303:24;7300:50;;;7330:18;;:::i;:::-;7300:50;7380:1;7370:8;7366:16;7363:451;;;7795:4;7788:5;7784:16;7775:25;;7363:451;7845:4;7839;7835:15;7827:23;;7875:32;7898:8;7875:32;:::i;:::-;7863:44;;7205:712;;;7075:848;;;;;;;:::o;7929:1073::-;7983:5;8174:8;8164:40;;8195:1;8186:10;;8197:5;;8164:40;8223:4;8213:36;;8240:1;8231:10;;8242:5;;8213:36;8309:4;8357:1;8352:27;;;;8393:1;8388:191;;;;8302:277;;8352:27;8370:1;8361:10;;8372:5;;;8388:191;8433:3;8423:8;8420:17;8417:43;;;8440:18;;:::i;:::-;8417:43;8489:8;8486:1;8482:16;8473:25;;8524:3;8517:5;8514:14;8511:40;;;8531:18;;:::i;:::-;8511:40;8564:5;;;8302:277;;8688:2;8678:8;8675:16;8669:3;8663:4;8660:13;8656:36;8638:2;8628:8;8625:16;8620:2;8614:4;8611:12;8607:35;8591:111;8588:246;;;8744:8;8738:4;8734:19;8725:28;;8779:3;8772:5;8769:14;8766:40;;;8786:18;;:::i;:::-;8766:40;8819:5;;8588:246;8859:42;8897:3;8887:8;8881:4;8878:1;8859:42;:::i;:::-;8844:57;;;;8933:4;8928:3;8924:14;8917:5;8914:25;8911:51;;;8942:18;;:::i;:::-;8911:51;8991:4;8984:5;8980:16;8971:25;;7929:1073;;;;;;:::o;9008:86::-;9043:7;9083:4;9076:5;9072:16;9061:27;;9008:86;;;:::o;9100:281::-;9158:5;9182:23;9200:4;9182:23;:::i;:::-;9174:31;;9226:25;9242:8;9226:25;:::i;:::-;9214:37;;9270:104;9307:66;9297:8;9291:4;9270:104;:::i;:::-;9261:113;;9100:281;;;;:::o;9387:410::-;9427:7;9450:20;9468:1;9450:20;:::i;:::-;9445:25;;9484:20;9502:1;9484:20;:::i;:::-;9479:25;;9539:1;9536;9532:9;9561:30;9579:11;9561:30;:::i;:::-;9550:41;;9740:1;9731:7;9727:15;9724:1;9721:22;9701:1;9694:9;9674:83;9651:139;;9770:18;;:::i;:::-;9651:139;9435:362;9387:410;;;;:::o;9803:191::-;9843:3;9862:20;9880:1;9862:20;:::i;:::-;9857:25;;9896:20;9914:1;9896:20;:::i;:::-;9891:25;;9939:1;9936;9932:9;9925:16;;9960:3;9957:1;9954:10;9951:36;;;9967:18;;:::i;:::-;9951:36;9803:191;;;;:::o;10000:118::-;10087:24;10105:5;10087:24;:::i;:::-;10082:3;10075:37;10000:118;;:::o;10124:442::-;10273:4;10311:2;10300:9;10296:18;10288:26;;10324:71;10392:1;10381:9;10377:17;10368:6;10324:71;:::i;:::-;10405:72;10473:2;10462:9;10458:18;10449:6;10405:72;:::i;:::-;10487;10555:2;10544:9;10540:18;10531:6;10487:72;:::i;:::-;10124:442;;;;;;:::o;10572:222::-;10665:4;10703:2;10692:9;10688:18;10680:26;;10716:71;10784:1;10773:9;10769:17;10760:6;10716:71;:::i;:::-;10572:222;;;;:::o;28771:558:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_905": {
									"entryPoint": 1729,
									"id": 905,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_965": {
									"entryPoint": 2787,
									"id": 965,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_887": {
									"entryPoint": 2365,
									"id": 887,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_239": {
									"entryPoint": 2133,
									"id": 239,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_147": {
									"entryPoint": 1722,
									"id": 147,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_391": {
									"entryPoint": 2689,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_364": {
									"entryPoint": 3860,
									"id": 364,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_375": {
									"entryPoint": 3787,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_1013": {
									"entryPoint": 1747,
									"id": 1013,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_301": {
									"entryPoint": 2492,
									"id": 301,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_744": {
									"entryPoint": 1893,
									"id": 744,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_407": {
									"entryPoint": 2268,
									"id": 407,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_update_821": {
									"entryPoint": 3250,
									"id": 821,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_641": {
									"entryPoint": 1460,
									"id": 641,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_665": {
									"entryPoint": 947,
									"id": 665,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_600": {
									"entryPoint": 1103,
									"id": 600,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_1054": {
									"entryPoint": 1191,
									"id": 1054,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_1033": {
									"entryPoint": 1062,
									"id": 1033,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_578": {
									"entryPoint": 1036,
									"id": 578,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_560": {
									"entryPoint": 803,
									"id": 560,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_222": {
									"entryPoint": 1241,
									"id": 222,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1099": {
									"entryPoint": 1223,
									"id": 1099,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_352": {
									"entryPoint": 1082,
									"id": 352,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_253": {
									"entryPoint": 1172,
									"id": 253,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_569": {
									"entryPoint": 1282,
									"id": 569,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_587": {
									"entryPoint": 981,
									"id": 587,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_697": {
									"entryPoint": 990,
									"id": 697,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_281": {
									"entryPoint": 1590,
									"id": 281,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_624": {
									"entryPoint": 1426,
									"id": 624,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1109": {
									"entryPoint": 1044,
									"id": 1109,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4577,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5004,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4635,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4815,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3944,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4311,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3960,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4868,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4722,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4104,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 4964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 5068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9637:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "208:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "218:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "218:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "246:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "270:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "261:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "180:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "185:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "196:11:1",
														"type": ""
													}
												],
												"src": "112:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "349:184:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "368:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "363:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "428:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "386:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "400:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "402:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "414:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "382:3:1",
																"statements": []
															},
															"src": "378:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "525:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "500:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "331:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "336:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "341:6:1",
														"type": ""
													}
												],
												"src": "287:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "597:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "622:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "631:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "607:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "570:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "580:6:1",
														"type": ""
													}
												],
												"src": "539:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:285:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "763:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "753:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "811:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "818:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "944:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "898:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "898:65:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "972:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "979:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "720:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "727:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "735:3:1",
														"type": ""
													}
												],
												"src": "647:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1148:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1158:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1166:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1250:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1120:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1132:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1143:4:1",
														"type": ""
													}
												],
												"src": "1030:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1389:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1399:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1382:6:1",
														"type": ""
													}
												],
												"src": "1349:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1519:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1529:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1642:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1652:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1721:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1731:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1742:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1703:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1713:7:1",
														"type": ""
													}
												],
												"src": "1676:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1853:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1863:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1835:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1845:7:1",
														"type": ""
													}
												],
												"src": "1808:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2010:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1966:43:1"
															},
															"nodeType": "YulIf",
															"src": "1963:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1946:5:1",
														"type": ""
													}
												],
												"src": "1910:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2090:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2100:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2109:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2138:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2068:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2076:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2084:5:1",
														"type": ""
													}
												],
												"src": "2038:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2238:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2249:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2210:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2220:7:1",
														"type": ""
													}
												],
												"src": "2183:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2366:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2322:43:1"
															},
															"nodeType": "YulIf",
															"src": "2319:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2302:5:1",
														"type": ""
													}
												],
												"src": "2266:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2446:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2456:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2494:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2424:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2432:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2440:5:1",
														"type": ""
													}
												],
												"src": "2394:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2622:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2668:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2635:32:1"
															},
															"nodeType": "YulIf",
															"src": "2632:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2761:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2805:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2888:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2933:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2584:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2595:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2607:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2615:6:1",
														"type": ""
													}
												],
												"src": "2539:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3071:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3082:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3043:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3053:7:1",
														"type": ""
													}
												],
												"src": "3019:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3174:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3184:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3162:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3169:3:1",
														"type": ""
													}
												],
												"src": "3115:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:1",
														"type": ""
													}
												],
												"src": "3230:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3511:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3551:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3533:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3533:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3521:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3521:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3521:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3499:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3506:3:1",
														"type": ""
													}
												],
												"src": "3446:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3668:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3678:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3690:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3701:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3686:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3678:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3758:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3771:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3782:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3767:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3714:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3714:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3714:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3640:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3652:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3663:4:1",
														"type": ""
													}
												],
												"src": "3570:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3898:519:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3944:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3946:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3946:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3946:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3919:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3928:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3915:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3915:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3940:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3911:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3911:32:1"
															},
															"nodeType": "YulIf",
															"src": "3908:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "4037:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4052:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4056:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4081:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4116:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4127:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4112:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4112:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4136:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4091:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4091:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4081:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4164:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4179:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4183:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4209:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4244:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4255:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4240:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4264:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4219:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4209:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4292:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4307:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4321:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4311:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4337:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4372:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4383:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4368:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4368:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4392:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4347:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "4337:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3852:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3863:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3875:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3883:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3891:6:1",
														"type": ""
													}
												],
												"src": "3798:619:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4466:43:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4476:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4491:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4498:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4487:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4476:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4448:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4458:7:1",
														"type": ""
													}
												],
												"src": "4423:86:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4576:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4593:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4614:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "4598:15:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4598:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4586:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4586:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4586:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4564:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4571:3:1",
														"type": ""
													}
												],
												"src": "4515:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4727:120:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4737:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4749:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4760:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4745:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4737:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4813:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4773:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4773:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4699:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4711:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4722:4:1",
														"type": ""
													}
												],
												"src": "4633:214:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4919:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4967:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4949:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4936:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4932:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4932:32:1"
															},
															"nodeType": "YulIf",
															"src": "4929:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5058:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5073:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5087:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5077:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5102:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5137:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5148:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5133:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5133:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5157:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5112:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5102:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4889:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4900:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4912:6:1",
														"type": ""
													}
												],
												"src": "4853:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5254:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5300:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5302:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5302:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5302:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5275:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5284:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5271:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5271:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5296:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5267:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5267:32:1"
															},
															"nodeType": "YulIf",
															"src": "5264:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "5393:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5408:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5422:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5412:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5437:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5472:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5483:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5468:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5468:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5492:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5447:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5447:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5437:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5224:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5235:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5247:6:1",
														"type": ""
													}
												],
												"src": "5188:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5588:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5605:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5628:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5610:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5598:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5598:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5598:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5576:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5583:3:1",
														"type": ""
													}
												],
												"src": "5523:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5745:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5755:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5767:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5778:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5763:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5763:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5755:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5835:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5848:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5859:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5844:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5844:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5791:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5791:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5791:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5717:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5729:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5740:4:1",
														"type": ""
													}
												],
												"src": "5647:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5958:391:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6004:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6006:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6006:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6006:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5979:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5988:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5975:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5975:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6000:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5971:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5971:32:1"
															},
															"nodeType": "YulIf",
															"src": "5968:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "6097:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6112:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6126:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6116:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6141:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6176:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6187:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6172:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6172:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6196:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6151:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6151:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6141:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6224:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6239:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6253:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6243:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6269:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6304:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6315:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6300:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6300:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6324:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6279:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6279:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6269:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5920:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5931:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5943:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5951:6:1",
														"type": ""
													}
												],
												"src": "5875:474:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6383:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6400:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6403:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6393:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6393:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6393:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6497:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6500:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6490:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6490:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6490:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6521:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6524:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6514:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6514:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6514:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "6355:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6592:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6602:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6616:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6622:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "6612:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6612:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6602:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6633:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6663:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6669:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6659:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6659:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "6637:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6710:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6724:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "6738:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6746:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "6734:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6734:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6724:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6690:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6683:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6683:26:1"
															},
															"nodeType": "YulIf",
															"src": "6680:81:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6813:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "6827:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6827:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6827:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "6777:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6800:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6808:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6797:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6797:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6774:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6774:38:1"
															},
															"nodeType": "YulIf",
															"src": "6771:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6576:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6585:6:1",
														"type": ""
													}
												],
												"src": "6541:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7021:288:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7031:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7043:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7054:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7039:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7039:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7031:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7111:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7124:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7135:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7120:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7120:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7067:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7067:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7067:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7192:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7216:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7201:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7148:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7148:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7148:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7274:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7287:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7298:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7283:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7283:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7230:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7230:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7230:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6977:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6989:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6997:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7005:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7016:4:1",
														"type": ""
													}
												],
												"src": "6867:442:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7343:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7360:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7363:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7353:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7353:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7353:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7457:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7460:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7450:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7450:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7450:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7481:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7484:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7474:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7474:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7474:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7315:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7545:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7555:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7578:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7560:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7560:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7555:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7589:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7612:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7594:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7594:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7589:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7623:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7634:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7637:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7630:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7630:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7623:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7663:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7665:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7665:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7665:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7655:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "7658:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7652:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7652:10:1"
															},
															"nodeType": "YulIf",
															"src": "7649:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7532:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7535:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "7541:3:1",
														"type": ""
													}
												],
												"src": "7501:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7804:64:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7826:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7834:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7822:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7822:14:1"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7838:22:1",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7815:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7815:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7815:46:1"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7796:6:1",
														"type": ""
													}
												],
												"src": "7698:170:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8020:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8030:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8096:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8101:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8037:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8037:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8030:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8202:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nodeType": "YulIdentifier",
																	"src": "8113:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8113:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8113:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8215:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8226:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8231:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8222:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8222:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8215:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8008:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8016:3:1",
														"type": ""
													}
												],
												"src": "7874:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8417:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8427:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8439:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8450:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8435:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8435:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8427:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8474:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8485:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8470:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8470:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8493:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8499:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8489:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8489:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8463:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8463:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8463:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8519:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8653:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8527:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8527:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8519:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8397:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8412:4:1",
														"type": ""
													}
												],
												"src": "8246:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8777:60:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8799:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8807:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8795:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8795:14:1"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8811:18:1",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8788:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8788:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8788:42:1"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8769:6:1",
														"type": ""
													}
												],
												"src": "8671:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8989:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8999:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9065:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9070:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9006:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9006:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8999:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9171:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nodeType": "YulIdentifier",
																	"src": "9082:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9082:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9082:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9184:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9195:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9200:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9191:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9191:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9184:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8977:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8985:3:1",
														"type": ""
													}
												],
												"src": "8843:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9386:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9396:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9408:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9419:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9404:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9404:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9396:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9443:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9454:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9439:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9439:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9462:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9468:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9458:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9458:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9432:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9432:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9432:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9488:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9622:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9496:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9496:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9488:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9366:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9381:4:1",
														"type": ""
													}
												],
												"src": "9215:419:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610109575f3560e01c806370a08231116100a05780638da5cb5b1161006f5780638da5cb5b1461026b57806395d89b4114610289578063a9059cbb146102a7578063dd62ed3e146102d7578063f2fde38b1461030757610109565b806370a082311461020b578063715018a61461023b57806379cc6790146102455780638456cb591461026157610109565b8063313ce567116100dc578063313ce567146101a95780633f4ba83a146101c757806342966c68146101d15780635c975abb146101ed57610109565b806306fdde031461010d578063095ea7b31461012b57806318160ddd1461015b57806323b872dd14610179575b5f80fd5b610115610323565b6040516101229190610fe8565b60405180910390f35b61014560048036038101906101409190611099565b6103b3565b60405161015291906110f1565b60405180910390f35b6101636103d5565b6040516101709190611119565b60405180910390f35b610193600480360381019061018e9190611132565b6103de565b6040516101a091906110f1565b60405180910390f35b6101b161040c565b6040516101be919061119d565b60405180910390f35b6101cf610414565b005b6101eb60048036038101906101e691906111b6565b610426565b005b6101f561043a565b60405161020291906110f1565b60405180910390f35b610225600480360381019061022091906111e1565b61044f565b6040516102329190611119565b60405180910390f35b610243610494565b005b61025f600480360381019061025a9190611099565b6104a7565b005b6102696104c7565b005b6102736104d9565b604051610280919061121b565b60405180910390f35b610291610502565b60405161029e9190610fe8565b60405180910390f35b6102c160048036038101906102bc9190611099565b610592565b6040516102ce91906110f1565b60405180910390f35b6102f160048036038101906102ec9190611234565b6105b4565b6040516102fe9190611119565b60405180910390f35b610321600480360381019061031c91906111e1565b610636565b005b6060600380546103329061129f565b80601f016020809104026020016040519081016040528092919081815260200182805461035e9061129f565b80156103a95780601f10610380576101008083540402835291602001916103a9565b820191905f5260205f20905b81548152906001019060200180831161038c57829003601f168201915b5050505050905090565b5f806103bd6106ba565b90506103ca8185856106c1565b600191505092915050565b5f600254905090565b5f806103e86106ba565b90506103f58582856106d3565b610400858585610765565b60019150509392505050565b5f6012905090565b61041c610855565b6104246108dc565b565b6104376104316106ba565b8261093d565b50565b5f60055f9054906101000a900460ff16905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61049c610855565b6104a55f6109bc565b565b6104b9826104b36106ba565b836106d3565b6104c3828261093d565b5050565b6104cf610855565b6104d7610a81565b565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105119061129f565b80601f016020809104026020016040519081016040528092919081815260200182805461053d9061129f565b80156105885780601f1061055f57610100808354040283529160200191610588565b820191905f5260205f20905b81548152906001019060200180831161056b57829003601f168201915b5050505050905090565b5f8061059c6106ba565b90506105a9818585610765565b600191505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61063e610855565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106ae575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106a5919061121b565b60405180910390fd5b6106b7816109bc565b50565b5f33905090565b6106ce8383836001610ae3565b505050565b5f6106de84846105b4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461075f5781811015610750578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610747939291906112cf565b60405180910390fd5b61075e84848484035f610ae3565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036107d5575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016107cc919061121b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610845575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161083c919061121b565b60405180910390fd5b610850838383610cb2565b505050565b61085d6106ba565b73ffffffffffffffffffffffffffffffffffffffff1661087b6104d9565b73ffffffffffffffffffffffffffffffffffffffff16146108da5761089e6106ba565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108d1919061121b565b60405180910390fd5b565b6108e4610ecb565b5f60055f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6109266106ba565b604051610933919061121b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109ad575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109a4919061121b565b60405180910390fd5b6109b8825f83610cb2565b5050565b5f600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610a89610f14565b600160055f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610acc6106ba565b604051610ad9919061121b565b60405180910390a1565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b53575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b4a919061121b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610bc3575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610bba919061121b565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610cac578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610ca39190611119565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d02578060025f828254610cf69190611331565b92505081905550610dd0565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610d8b578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610d82939291906112cf565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e17578060025f8282540392505081905550610e61565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ebe9190611119565b60405180910390a3505050565b610ed361043a565b610f12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f09906113ae565b60405180910390fd5b565b610f1c61043a565b15610f5c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5390611416565b60405180910390fd5b565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610f95578082015181840152602081019050610f7a565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610fba82610f5e565b610fc48185610f68565b9350610fd4818560208601610f78565b610fdd81610fa0565b840191505092915050565b5f6020820190508181035f8301526110008184610fb0565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110358261100c565b9050919050565b6110458161102b565b811461104f575f80fd5b50565b5f813590506110608161103c565b92915050565b5f819050919050565b61107881611066565b8114611082575f80fd5b50565b5f813590506110938161106f565b92915050565b5f80604083850312156110af576110ae611008565b5b5f6110bc85828601611052565b92505060206110cd85828601611085565b9150509250929050565b5f8115159050919050565b6110eb816110d7565b82525050565b5f6020820190506111045f8301846110e2565b92915050565b61111381611066565b82525050565b5f60208201905061112c5f83018461110a565b92915050565b5f805f6060848603121561114957611148611008565b5b5f61115686828701611052565b935050602061116786828701611052565b925050604061117886828701611085565b9150509250925092565b5f60ff82169050919050565b61119781611182565b82525050565b5f6020820190506111b05f83018461118e565b92915050565b5f602082840312156111cb576111ca611008565b5b5f6111d884828501611085565b91505092915050565b5f602082840312156111f6576111f5611008565b5b5f61120384828501611052565b91505092915050565b6112158161102b565b82525050565b5f60208201905061122e5f83018461120c565b92915050565b5f806040838503121561124a57611249611008565b5b5f61125785828601611052565b925050602061126885828601611052565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806112b657607f821691505b6020821081036112c9576112c8611272565b5b50919050565b5f6060820190506112e25f83018661120c565b6112ef602083018561110a565b6112fc604083018461110a565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61133b82611066565b915061134683611066565b925082820190508082111561135e5761135d611304565b5b92915050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f611398601483610f68565b91506113a382611364565b602082019050919050565b5f6020820190508181035f8301526113c58161138c565b9050919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f611400601083610f68565b915061140b826113cc565b602082019050919050565b5f6020820190508181035f83015261142d816113f4565b905091905056fea2646970667358221220c7cc4e284aa65424473409a24bcfbd568fb82664f257411168e55a835e9ccd0064736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x307 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x261 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1ED JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x323 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x3D5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1132 JUMP JUMPDEST PUSH2 0x3DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x119D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH2 0x414 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x11B6 JUMP JUMPDEST PUSH2 0x426 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F5 PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x225 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x232 SWAP2 SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x243 PUSH2 0x494 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0x4A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x269 PUSH2 0x4C7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x273 PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x291 PUSH2 0x502 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x1099 JUMP JUMPDEST PUSH2 0x592 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CE SWAP2 SWAP1 PUSH2 0x10F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x5B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x321 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31C SWAP2 SWAP1 PUSH2 0x11E1 JUMP JUMPDEST PUSH2 0x636 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x332 SWAP1 PUSH2 0x129F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x35E SWAP1 PUSH2 0x129F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x380 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x38C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3BD PUSH2 0x6BA JUMP JUMPDEST SWAP1 POP PUSH2 0x3CA DUP2 DUP6 DUP6 PUSH2 0x6C1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x3E8 PUSH2 0x6BA JUMP JUMPDEST SWAP1 POP PUSH2 0x3F5 DUP6 DUP3 DUP6 PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x400 DUP6 DUP6 DUP6 PUSH2 0x765 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x41C PUSH2 0x855 JUMP JUMPDEST PUSH2 0x424 PUSH2 0x8DC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x437 PUSH2 0x431 PUSH2 0x6BA JUMP JUMPDEST DUP3 PUSH2 0x93D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x49C PUSH2 0x855 JUMP JUMPDEST PUSH2 0x4A5 PUSH0 PUSH2 0x9BC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x4B9 DUP3 PUSH2 0x4B3 PUSH2 0x6BA JUMP JUMPDEST DUP4 PUSH2 0x6D3 JUMP JUMPDEST PUSH2 0x4C3 DUP3 DUP3 PUSH2 0x93D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4CF PUSH2 0x855 JUMP JUMPDEST PUSH2 0x4D7 PUSH2 0xA81 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x511 SWAP1 PUSH2 0x129F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x53D SWAP1 PUSH2 0x129F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x588 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x55F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x588 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x56B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x59C PUSH2 0x6BA JUMP JUMPDEST SWAP1 POP PUSH2 0x5A9 DUP2 DUP6 DUP6 PUSH2 0x765 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x63E PUSH2 0x855 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6AE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A5 SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6B7 DUP2 PUSH2 0x9BC JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6CE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xAE3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6DE DUP5 DUP5 PUSH2 0x5B4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x75F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x750 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x747 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x75E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xAE3 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7D5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7CC SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x845 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x850 DUP4 DUP4 DUP4 PUSH2 0xCB2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x85D PUSH2 0x6BA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x87B PUSH2 0x4D9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8DA JUMPI PUSH2 0x89E PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D1 SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x8E4 PUSH2 0xECB JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x926 PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x933 SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9AD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A4 SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9B8 DUP3 PUSH0 DUP4 PUSH2 0xCB2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA89 PUSH2 0xF14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xACC PUSH2 0x6BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD9 SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB53 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4A SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBA SWAP2 SWAP1 PUSH2 0x121B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xCAC JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCA3 SWAP2 SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD02 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCF6 SWAP2 SWAP1 PUSH2 0x1331 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDD0 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xD8B JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD82 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x12CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE17 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE61 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xEBE SWAP2 SWAP1 PUSH2 0x1119 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xED3 PUSH2 0x43A JUMP JUMPDEST PUSH2 0xF12 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF09 SWAP1 PUSH2 0x13AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xF1C PUSH2 0x43A JUMP JUMPDEST ISZERO PUSH2 0xF5C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF53 SWAP1 PUSH2 0x1416 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF95 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF7A JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFBA DUP3 PUSH2 0xF5E JUMP JUMPDEST PUSH2 0xFC4 DUP2 DUP6 PUSH2 0xF68 JUMP JUMPDEST SWAP4 POP PUSH2 0xFD4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF78 JUMP JUMPDEST PUSH2 0xFDD DUP2 PUSH2 0xFA0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1000 DUP2 DUP5 PUSH2 0xFB0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1035 DUP3 PUSH2 0x100C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1045 DUP2 PUSH2 0x102B JUMP JUMPDEST DUP2 EQ PUSH2 0x104F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1060 DUP2 PUSH2 0x103C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1078 DUP2 PUSH2 0x1066 JUMP JUMPDEST DUP2 EQ PUSH2 0x1082 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1093 DUP2 PUSH2 0x106F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10AF JUMPI PUSH2 0x10AE PUSH2 0x1008 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10BC DUP6 DUP3 DUP7 ADD PUSH2 0x1052 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x10CD DUP6 DUP3 DUP7 ADD PUSH2 0x1085 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10EB DUP2 PUSH2 0x10D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1104 PUSH0 DUP4 ADD DUP5 PUSH2 0x10E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1113 DUP2 PUSH2 0x1066 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x112C PUSH0 DUP4 ADD DUP5 PUSH2 0x110A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1149 JUMPI PUSH2 0x1148 PUSH2 0x1008 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1156 DUP7 DUP3 DUP8 ADD PUSH2 0x1052 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1167 DUP7 DUP3 DUP8 ADD PUSH2 0x1052 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1178 DUP7 DUP3 DUP8 ADD PUSH2 0x1085 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1197 DUP2 PUSH2 0x1182 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11B0 PUSH0 DUP4 ADD DUP5 PUSH2 0x118E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11CB JUMPI PUSH2 0x11CA PUSH2 0x1008 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11D8 DUP5 DUP3 DUP6 ADD PUSH2 0x1085 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11F6 JUMPI PUSH2 0x11F5 PUSH2 0x1008 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1203 DUP5 DUP3 DUP6 ADD PUSH2 0x1052 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1215 DUP2 PUSH2 0x102B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x122E PUSH0 DUP4 ADD DUP5 PUSH2 0x120C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x124A JUMPI PUSH2 0x1249 PUSH2 0x1008 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1257 DUP6 DUP3 DUP7 ADD PUSH2 0x1052 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1268 DUP6 DUP3 DUP7 ADD PUSH2 0x1052 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x12B6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x12C9 JUMPI PUSH2 0x12C8 PUSH2 0x1272 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x12E2 PUSH0 DUP4 ADD DUP7 PUSH2 0x120C JUMP JUMPDEST PUSH2 0x12EF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x110A JUMP JUMPDEST PUSH2 0x12FC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x110A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x133B DUP3 PUSH2 0x1066 JUMP JUMPDEST SWAP2 POP PUSH2 0x1346 DUP4 PUSH2 0x1066 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x135E JUMPI PUSH2 0x135D PUSH2 0x1304 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1398 PUSH1 0x14 DUP4 PUSH2 0xF68 JUMP JUMPDEST SWAP2 POP PUSH2 0x13A3 DUP3 PUSH2 0x1364 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13C5 DUP2 PUSH2 0x138C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1400 PUSH1 0x10 DUP4 PUSH2 0xF68 JUMP JUMPDEST SWAP2 POP PUSH2 0x140B DUP3 PUSH2 0x13CC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x142D DUP2 PUSH2 0x13F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 0xCC 0x4E 0x28 0x4A 0xA6 SLOAD 0x24 SELFBALANCE CALLVALUE MULMOD LOG2 0x4B 0xCF 0xBD JUMP DUP16 0xB8 0x26 PUSH5 0xF257411168 0xE5 GAS DUP4 0x5E SWAP13 0xCD STOP PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "28771:558:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18491:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20710:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19561:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;21456:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19419:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;29263:63;;;:::i;:::-;;28136:87;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12169:84;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19716:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9749:101;;;:::i;:::-;;28539:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29125:59;;;:::i;:::-;;9094:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18693:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20027:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;20263:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9999:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;18491:89;18536:13;18568:5;18561:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18491:89;:::o;20710:186::-;20783:4;20799:13;20815:12;:10;:12::i;:::-;20799:28;;20837:31;20846:5;20853:7;20862:5;20837:8;:31::i;:::-;20885:4;20878:11;;;20710:186;;;;:::o;19561:97::-;19613:7;19639:12;;19632:19;;19561:97;:::o;21456:244::-;21543:4;21559:15;21577:12;:10;:12::i;:::-;21559:30;;21599:37;21615:4;21621:7;21630:5;21599:15;:37::i;:::-;21646:26;21656:4;21662:2;21666:5;21646:9;:26::i;:::-;21689:4;21682:11;;;21456:244;;;;;:::o;19419:82::-;19468:5;19492:2;19485:9;;19419:82;:::o;29263:63::-;8987:13;:11;:13::i;:::-;29309:10:::1;:8;:10::i;:::-;29263:63::o:0;28136:87::-;28190:26;28196:12;:10;:12::i;:::-;28210:5;28190;:26::i;:::-;28136:87;:::o;12169:84::-;12216:4;12239:7;;;;;;;;;;;12232:14;;12169:84;:::o;19716:116::-;19781:7;19807:9;:18;19817:7;19807:18;;;;;;;;;;;;;;;;19800:25;;19716:116;;;:::o;9749:101::-;8987:13;:11;:13::i;:::-;9813:30:::1;9840:1;9813:18;:30::i;:::-;9749:101::o:0;28539:158::-;28614:45;28630:7;28639:12;:10;:12::i;:::-;28653:5;28614:15;:45::i;:::-;28669:21;28675:7;28684:5;28669;:21::i;:::-;28539:158;;:::o;29125:59::-;8987:13;:11;:13::i;:::-;29169:8:::1;:6;:8::i;:::-;29125:59::o:0;9094:85::-;9140:7;9166:6;;;;;;;;;;;9159:13;;9094:85;:::o;18693:93::-;18740:13;18772:7;18765:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18693:93;:::o;20027:178::-;20096:4;20112:13;20128:12;:10;:12::i;:::-;20112:28;;20150:27;20160:5;20167:2;20171:5;20150:9;:27::i;:::-;20194:4;20187:11;;;20027:178;;;;:::o;20263:140::-;20343:7;20369:11;:18;20381:5;20369:18;;;;;;;;;;;;;;;:27;20388:7;20369:27;;;;;;;;;;;;;;;;20362:34;;20263:140;;;;:::o;9999:215::-;8987:13;:11;:13::i;:::-;10103:1:::1;10083:22;;:8;:22;;::::0;10079:91:::1;;10156:1;10128:31;;;;;;;;;;;:::i;:::-;;;;;;;;10079:91;10179:28;10198:8;10179:18;:28::i;:::-;9999:215:::0;:::o;7275:96::-;7328:7;7354:10;7347:17;;7275:96;:::o;25406:128::-;25490:37;25499:5;25506:7;25515:5;25522:4;25490:8;:37::i;:::-;25406:128;;;:::o;27080:477::-;27179:24;27206:25;27216:5;27223:7;27206:9;:25::i;:::-;27179:52;;27265:17;27245:16;:37;27241:310;;27321:5;27302:16;:24;27298:130;;;27380:7;27389:16;27407:5;27353:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;27298:130;27469:57;27478:5;27485:7;27513:5;27494:16;:24;27520:5;27469:8;:57::i;:::-;27241:310;27169:388;27080:477;;;:::o;22073:300::-;22172:1;22156:18;;:4;:18;;;22152:86;;22224:1;22197:30;;;;;;;;;;;:::i;:::-;;;;;;;;22152:86;22265:1;22251:16;;:2;:16;;;22247:86;;22319:1;22290:32;;;;;;;;;;;:::i;:::-;;;;;;;;22247:86;22342:24;22350:4;22356:2;22360:5;22342:7;:24::i;:::-;22073:300;;;:::o;9252:162::-;9322:12;:10;:12::i;:::-;9311:23;;:7;:5;:7::i;:::-;:23;;;9307:101;;9384:12;:10;:12::i;:::-;9357:40;;;;;;;;;;;:::i;:::-;;;;;;;;9307:101;9252:162::o;12987:117::-;12040:16;:14;:16::i;:::-;13055:5:::1;13045:7;;:15;;;;;;;;;;;;;;;;;;13075:22;13084:12;:10;:12::i;:::-;13075:22;;;;;;:::i;:::-;;;;;;;;12987:117::o:0;24664:206::-;24753:1;24734:21;;:7;:21;;;24730:89;;24805:1;24778:30;;;;;;;;;;;:::i;:::-;;;;;;;;24730:89;24828:35;24836:7;24853:1;24857:5;24828:7;:35::i;:::-;24664:206;;:::o;10368:187::-;10441:16;10460:6;;;;;;;;;;;10441:25;;10485:8;10476:6;;:17;;;;;;;;;;;;;;;;;;10539:8;10508:40;;10529:8;10508:40;;;;;;;;;;;;10431:124;10368:187;:::o;12740:115::-;11793:19;:17;:19::i;:::-;12809:4:::1;12799:7;;:14;;;;;;;;;;;;;;;;;;12828:20;12835:12;:10;:12::i;:::-;12828:20;;;;;;:::i;:::-;;;;;;;;12740:115::o:0;26366:432::-;26495:1;26478:19;;:5;:19;;;26474:89;;26549:1;26520:32;;;;;;;;;;;:::i;:::-;;;;;;;;26474:89;26595:1;26576:21;;:7;:21;;;26572:90;;26648:1;26620:31;;;;;;;;;;;:::i;:::-;;;;;;;;26572:90;26701:5;26671:11;:18;26683:5;26671:18;;;;;;;;;;;;;;;:27;26690:7;26671:27;;;;;;;;;;;;;;;:35;;;;26720:9;26716:76;;;26766:7;26750:31;;26759:5;26750:31;;;26775:5;26750:31;;;;;;:::i;:::-;;;;;;;;26716:76;26366:432;;;;:::o;22688:1107::-;22793:1;22777:18;;:4;:18;;;22773:540;;22929:5;22913:12;;:21;;;;;;;:::i;:::-;;;;;;;;22773:540;;;22965:19;22987:9;:15;22997:4;22987:15;;;;;;;;;;;;;;;;22965:37;;23034:5;23020:11;:19;23016:115;;;23091:4;23097:11;23110:5;23066:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;23016:115;23283:5;23269:11;:19;23251:9;:15;23261:4;23251:15;;;;;;;;;;;;;;;:37;;;;22951:362;22773:540;23341:1;23327:16;;:2;:16;;;23323:425;;23506:5;23490:12;;:21;;;;;;;;;;;23323:425;;;23718:5;23701:9;:13;23711:2;23701:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;23323:425;23778:2;23763:25;;23772:4;23763:25;;;23782:5;23763:25;;;;;;:::i;:::-;;;;;;;;22688:1107;;;:::o;12499:106::-;12565:8;:6;:8::i;:::-;12557:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;12499:106::o;12321:::-;12391:8;:6;:8::i;:::-;12390:9;12382:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;12321:106::o;7:99:1:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:118::-;3533:24;3551:5;3533:24;:::i;:::-;3528:3;3521:37;3446:118;;:::o;3570:222::-;3663:4;3701:2;3690:9;3686:18;3678:26;;3714:71;3782:1;3771:9;3767:17;3758:6;3714:71;:::i;:::-;3570:222;;;;:::o;3798:619::-;3875:6;3883;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:53;4136:7;4127:6;4116:9;4112:22;4091:53;:::i;:::-;4081:63;;4037:117;4193:2;4219:53;4264:7;4255:6;4244:9;4240:22;4219:53;:::i;:::-;4209:63;;4164:118;4321:2;4347:53;4392:7;4383:6;4372:9;4368:22;4347:53;:::i;:::-;4337:63;;4292:118;3798:619;;;;;:::o;4423:86::-;4458:7;4498:4;4491:5;4487:16;4476:27;;4423:86;;;:::o;4515:112::-;4598:22;4614:5;4598:22;:::i;:::-;4593:3;4586:35;4515:112;;:::o;4633:214::-;4722:4;4760:2;4749:9;4745:18;4737:26;;4773:67;4837:1;4826:9;4822:17;4813:6;4773:67;:::i;:::-;4633:214;;;;:::o;4853:329::-;4912:6;4961:2;4949:9;4940:7;4936:23;4932:32;4929:119;;;4967:79;;:::i;:::-;4929:119;5087:1;5112:53;5157:7;5148:6;5137:9;5133:22;5112:53;:::i;:::-;5102:63;;5058:117;4853:329;;;;:::o;5188:::-;5247:6;5296:2;5284:9;5275:7;5271:23;5267:32;5264:119;;;5302:79;;:::i;:::-;5264:119;5422:1;5447:53;5492:7;5483:6;5472:9;5468:22;5447:53;:::i;:::-;5437:63;;5393:117;5188:329;;;;:::o;5523:118::-;5610:24;5628:5;5610:24;:::i;:::-;5605:3;5598:37;5523:118;;:::o;5647:222::-;5740:4;5778:2;5767:9;5763:18;5755:26;;5791:71;5859:1;5848:9;5844:17;5835:6;5791:71;:::i;:::-;5647:222;;;;:::o;5875:474::-;5943:6;5951;6000:2;5988:9;5979:7;5975:23;5971:32;5968:119;;;6006:79;;:::i;:::-;5968:119;6126:1;6151:53;6196:7;6187:6;6176:9;6172:22;6151:53;:::i;:::-;6141:63;;6097:117;6253:2;6279:53;6324:7;6315:6;6304:9;6300:22;6279:53;:::i;:::-;6269:63;;6224:118;5875:474;;;;;:::o;6355:180::-;6403:77;6400:1;6393:88;6500:4;6497:1;6490:15;6524:4;6521:1;6514:15;6541:320;6585:6;6622:1;6616:4;6612:12;6602:22;;6669:1;6663:4;6659:12;6690:18;6680:81;;6746:4;6738:6;6734:17;6724:27;;6680:81;6808:2;6800:6;6797:14;6777:18;6774:38;6771:84;;6827:18;;:::i;:::-;6771:84;6592:269;6541:320;;;:::o;6867:442::-;7016:4;7054:2;7043:9;7039:18;7031:26;;7067:71;7135:1;7124:9;7120:17;7111:6;7067:71;:::i;:::-;7148:72;7216:2;7205:9;7201:18;7192:6;7148:72;:::i;:::-;7230;7298:2;7287:9;7283:18;7274:6;7230:72;:::i;:::-;6867:442;;;;;;:::o;7315:180::-;7363:77;7360:1;7353:88;7460:4;7457:1;7450:15;7484:4;7481:1;7474:15;7501:191;7541:3;7560:20;7578:1;7560:20;:::i;:::-;7555:25;;7594:20;7612:1;7594:20;:::i;:::-;7589:25;;7637:1;7634;7630:9;7623:16;;7658:3;7655:1;7652:10;7649:36;;;7665:18;;:::i;:::-;7649:36;7501:191;;;;:::o;7698:170::-;7838:22;7834:1;7826:6;7822:14;7815:46;7698:170;:::o;7874:366::-;8016:3;8037:67;8101:2;8096:3;8037:67;:::i;:::-;8030:74;;8113:93;8202:3;8113:93;:::i;:::-;8231:2;8226:3;8222:12;8215:19;;7874:366;;;:::o;8246:419::-;8412:4;8450:2;8439:9;8435:18;8427:26;;8499:9;8493:4;8489:20;8485:1;8474:9;8470:17;8463:47;8527:131;8653:4;8527:131;:::i;:::-;8519:139;;8246:419;;;:::o;8671:166::-;8811:18;8807:1;8799:6;8795:14;8788:42;8671:166;:::o;8843:366::-;8985:3;9006:67;9070:2;9065:3;9006:67;:::i;:::-;8999:74;;9082:93;9171:3;9082:93;:::i;:::-;9200:2;9195:3;9191:12;9184:19;;8843:366;;;:::o;9215:419::-;9381:4;9419:2;9408:9;9404:18;9396:26;;9468:9;9462:4;9458:20;9454:1;9443:9;9439:17;9432:47;9496:131;9622:4;9496:131;:::i;:::-;9488:139;;9215:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1045200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2852",
								"burn(uint256)": "infinite",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "361",
								"name()": "infinite",
								"owner()": "2588",
								"pause()": "infinite",
								"paused()": "2562",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28771,
									"end": 29329,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 28771,
									"end": 29329,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28771,
									"end": 29329,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 28915,
									"end": 29048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28978,
									"end": 28983,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "PUSH",
									"source": 0,
									"value": "5553445420546F6B656E00000000000000000000000000000000000000000000"
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "PUSH",
									"source": 0,
									"value": "5553445400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18387,
									"end": 18392,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18379,
									"end": 18384,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 18379,
									"end": 18392,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18379,
									"end": 18392,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18379,
									"end": 18392,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 18379,
									"end": 18392,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18379,
									"end": 18392,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18379,
									"end": 18392,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 18379,
									"end": 18392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18379,
									"end": 18392,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 18379,
									"end": 18392,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18379,
									"end": 18392,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18412,
									"end": 18419,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18402,
									"end": 18409,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18402,
									"end": 18419,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18402,
									"end": 18419,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18402,
									"end": 18419,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 18402,
									"end": 18419,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18402,
									"end": 18419,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18402,
									"end": 18419,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 18402,
									"end": 18419,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18402,
									"end": 18419,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 18402,
									"end": 18419,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18402,
									"end": 18419,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18313,
									"end": 18426,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 11560,
									"end": 11565,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11550,
									"end": 11557,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 11550,
									"end": 11557,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 11550,
									"end": 11565,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 11550,
									"end": 11565,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 11550,
									"end": 11565,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11550,
									"end": 11565,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 11550,
									"end": 11565,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 11550,
									"end": 11565,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 11550,
									"end": 11565,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 11550,
									"end": 11565,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 11550,
									"end": 11565,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 11550,
									"end": 11565,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11550,
									"end": 11565,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 11550,
									"end": 11565,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11550,
									"end": 11565,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 11550,
									"end": 11565,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 11550,
									"end": 11565,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 11550,
									"end": 11565,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 11550,
									"end": 11565,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 11550,
									"end": 11565,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8753,
									"end": 8754,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8729,
									"end": 8755,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8729,
									"end": 8755,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8729,
									"end": 8741,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8729,
									"end": 8755,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8729,
									"end": 8755,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 8729,
									"end": 8755,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8725,
									"end": 8820,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 8725,
									"end": 8820,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8806,
									"end": 8807,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8778,
									"end": 8809,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8778,
									"end": 8809,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8778,
									"end": 8809,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8778,
									"end": 8809,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8778,
									"end": 8809,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8778,
									"end": 8809,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8778,
									"end": 8809,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 8778,
									"end": 8809,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 8778,
									"end": 8809,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8778,
									"end": 8809,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8778,
									"end": 8809,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 8778,
									"end": 8809,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8778,
									"end": 8809,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 8778,
									"end": 8809,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8778,
									"end": 8809,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 8778,
									"end": 8809,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8778,
									"end": 8809,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8778,
									"end": 8809,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 8778,
									"end": 8809,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 8778,
									"end": 8809,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 8778,
									"end": 8809,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8725,
									"end": 8820,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 8725,
									"end": 8820,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8829,
									"end": 8861,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 8848,
									"end": 8860,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8829,
									"end": 8847,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 8829,
									"end": 8847,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8829,
									"end": 8847,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 8829,
									"end": 8861,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 8829,
									"end": 8861,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 8829,
									"end": 8861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8829,
									"end": 8861,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 8829,
									"end": 8861,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8681,
									"end": 8868,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28995,
									"end": 29041,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 29001,
									"end": 29011,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 29030,
									"end": 29040,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 29030,
									"end": 29038,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 29030,
									"end": 29038,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 29030,
									"end": 29038,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 29030,
									"end": 29040,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 29030,
									"end": 29040,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 29030,
									"end": 29040,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29030,
									"end": 29040,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 29030,
									"end": 29040,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29026,
									"end": 29028,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 29026,
									"end": 29040,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 29026,
									"end": 29040,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29026,
									"end": 29040,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29026,
									"end": 29040,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 29026,
									"end": 29040,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29026,
									"end": 29040,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 29026,
									"end": 29040,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29013,
									"end": 29023,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "3B9ACA00"
								},
								{
									"begin": 29013,
									"end": 29040,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 29013,
									"end": 29040,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29013,
									"end": 29040,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29013,
									"end": 29040,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 29013,
									"end": 29040,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29013,
									"end": 29040,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 29013,
									"end": 29040,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28995,
									"end": 29000,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 28995,
									"end": 29000,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28995,
									"end": 29000,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 28995,
									"end": 29041,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28995,
									"end": 29041,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 28995,
									"end": 29041,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 28995,
									"end": 29041,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 28995,
									"end": 29041,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28915,
									"end": 29048,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 29329,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 28771,
									"end": 29329,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 10368,
									"end": 10555,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 10368,
									"end": 10555,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10441,
									"end": 10457,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10460,
									"end": 10466,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 10460,
									"end": 10466,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10460,
									"end": 10466,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10460,
									"end": 10466,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 10460,
									"end": 10466,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10460,
									"end": 10466,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 10460,
									"end": 10466,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 10460,
									"end": 10466,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10460,
									"end": 10466,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 10460,
									"end": 10466,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10460,
									"end": 10466,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10441,
									"end": 10466,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10441,
									"end": 10466,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10485,
									"end": 10493,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10476,
									"end": 10482,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 10476,
									"end": 10482,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10476,
									"end": 10493,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 10476,
									"end": 10493,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 10476,
									"end": 10493,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10476,
									"end": 10493,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 10476,
									"end": 10493,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10476,
									"end": 10493,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10476,
									"end": 10493,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 10476,
									"end": 10493,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 10476,
									"end": 10493,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10476,
									"end": 10493,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10476,
									"end": 10493,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10476,
									"end": 10493,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10476,
									"end": 10493,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10476,
									"end": 10493,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 10476,
									"end": 10493,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10476,
									"end": 10493,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10476,
									"end": 10493,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10476,
									"end": 10493,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10539,
									"end": 10547,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10508,
									"end": 10548,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10508,
									"end": 10548,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10529,
									"end": 10537,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10508,
									"end": 10548,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 10508,
									"end": 10548,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10508,
									"end": 10548,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 10508,
									"end": 10548,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10508,
									"end": 10548,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10508,
									"end": 10548,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10508,
									"end": 10548,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10508,
									"end": 10548,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10508,
									"end": 10548,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10508,
									"end": 10548,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 10508,
									"end": 10548,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10508,
									"end": 10548,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 10431,
									"end": 10555,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10368,
									"end": 10555,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 10368,
									"end": 10555,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 19419,
									"end": 19501,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 19419,
									"end": 19501,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19468,
									"end": 19473,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19492,
									"end": 19494,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 19485,
									"end": 19494,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19485,
									"end": 19494,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 19419,
									"end": 19501,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 19419,
									"end": 19501,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24138,
									"end": 24346,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 24138,
									"end": 24346,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24227,
									"end": 24228,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24208,
									"end": 24229,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24208,
									"end": 24229,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24208,
									"end": 24215,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24208,
									"end": 24229,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24208,
									"end": 24229,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24208,
									"end": 24229,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24204,
									"end": 24295,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 24204,
									"end": 24295,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24281,
									"end": 24282,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24252,
									"end": 24284,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24252,
									"end": 24284,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24252,
									"end": 24284,
									"name": "PUSH",
									"source": 0,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24252,
									"end": 24284,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24252,
									"end": 24284,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24252,
									"end": 24284,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 24252,
									"end": 24284,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 24252,
									"end": 24284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 24252,
									"end": 24284,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24252,
									"end": 24284,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24252,
									"end": 24284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 24252,
									"end": 24284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24252,
									"end": 24284,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 24252,
									"end": 24284,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24252,
									"end": 24284,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24252,
									"end": 24284,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24252,
									"end": 24284,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24252,
									"end": 24284,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24252,
									"end": 24284,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24252,
									"end": 24284,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24252,
									"end": 24284,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 24204,
									"end": 24295,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 24204,
									"end": 24295,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24304,
									"end": 24339,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 24320,
									"end": 24321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24324,
									"end": 24331,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24333,
									"end": 24338,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24304,
									"end": 24311,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 24304,
									"end": 24311,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24304,
									"end": 24311,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 24304,
									"end": 24339,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 24304,
									"end": 24339,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 24304,
									"end": 24339,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24304,
									"end": 24339,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 24304,
									"end": 24339,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24138,
									"end": 24346,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24138,
									"end": 24346,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24138,
									"end": 24346,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22688,
									"end": 23795,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 22688,
									"end": 23795,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22793,
									"end": 22794,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22777,
									"end": 22795,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22777,
									"end": 22795,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22777,
									"end": 22781,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 22777,
									"end": 22795,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22777,
									"end": 22795,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22777,
									"end": 22795,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 22773,
									"end": 23313,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 22773,
									"end": 23313,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22929,
									"end": 22934,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22913,
									"end": 22925,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 22913,
									"end": 22925,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22913,
									"end": 22934,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22913,
									"end": 22934,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22913,
									"end": 22934,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 22913,
									"end": 22934,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 22913,
									"end": 22934,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 22913,
									"end": 22934,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22913,
									"end": 22934,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 22913,
									"end": 22934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22913,
									"end": 22934,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 22913,
									"end": 22934,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22913,
									"end": 22934,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 22913,
									"end": 22934,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22913,
									"end": 22934,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22913,
									"end": 22934,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22913,
									"end": 22934,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22913,
									"end": 22934,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 22913,
									"end": 22934,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22773,
									"end": 23313,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22773,
									"end": 23313,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 22773,
									"end": 23313,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 22773,
									"end": 23313,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22965,
									"end": 22984,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22987,
									"end": 22996,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22987,
									"end": 23002,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22997,
									"end": 23001,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 22987,
									"end": 23002,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22987,
									"end": 23002,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22987,
									"end": 23002,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 22987,
									"end": 23002,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 22987,
									"end": 23002,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22987,
									"end": 23002,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22987,
									"end": 23002,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 22987,
									"end": 23002,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 22987,
									"end": 23002,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22987,
									"end": 23002,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22987,
									"end": 23002,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22987,
									"end": 23002,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 22987,
									"end": 23002,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 22987,
									"end": 23002,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22987,
									"end": 23002,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 22987,
									"end": 23002,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 22965,
									"end": 23002,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 22965,
									"end": 23002,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23034,
									"end": 23039,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23020,
									"end": 23031,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23020,
									"end": 23039,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 23016,
									"end": 23131,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 23016,
									"end": 23131,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 23016,
									"end": 23131,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23091,
									"end": 23095,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 23097,
									"end": 23108,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23110,
									"end": 23115,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 23066,
									"end": 23116,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23066,
									"end": 23116,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23066,
									"end": 23116,
									"name": "PUSH",
									"source": 0,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23066,
									"end": 23116,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23066,
									"end": 23116,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23066,
									"end": 23116,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 23066,
									"end": 23116,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 23066,
									"end": 23116,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 23066,
									"end": 23116,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 23066,
									"end": 23116,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 23066,
									"end": 23116,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23066,
									"end": 23116,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23066,
									"end": 23116,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 23066,
									"end": 23116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23066,
									"end": 23116,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 23066,
									"end": 23116,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23066,
									"end": 23116,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23066,
									"end": 23116,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23066,
									"end": 23116,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23066,
									"end": 23116,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23066,
									"end": 23116,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23066,
									"end": 23116,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23066,
									"end": 23116,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23016,
									"end": 23131,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 23016,
									"end": 23131,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23283,
									"end": 23288,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23269,
									"end": 23280,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23269,
									"end": 23288,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23251,
									"end": 23260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23251,
									"end": 23266,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23261,
									"end": 23265,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 23251,
									"end": 23266,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23251,
									"end": 23266,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23251,
									"end": 23266,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23251,
									"end": 23266,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23251,
									"end": 23266,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23251,
									"end": 23266,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23251,
									"end": 23266,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23251,
									"end": 23266,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 23251,
									"end": 23266,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23251,
									"end": 23266,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23251,
									"end": 23266,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23251,
									"end": 23266,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23251,
									"end": 23266,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 23251,
									"end": 23266,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23251,
									"end": 23266,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 23251,
									"end": 23288,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23251,
									"end": 23288,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23251,
									"end": 23288,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 23251,
									"end": 23288,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22951,
									"end": 23313,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22773,
									"end": 23313,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 22773,
									"end": 23313,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23341,
									"end": 23342,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23327,
									"end": 23343,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23327,
									"end": 23343,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23327,
									"end": 23329,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23327,
									"end": 23343,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23327,
									"end": 23343,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23327,
									"end": 23343,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23323,
									"end": 23748,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 23323,
									"end": 23748,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23506,
									"end": 23511,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23490,
									"end": 23502,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 23490,
									"end": 23502,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23490,
									"end": 23511,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23490,
									"end": 23511,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23490,
									"end": 23511,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 23490,
									"end": 23511,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23490,
									"end": 23511,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 23490,
									"end": 23511,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23490,
									"end": 23511,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23490,
									"end": 23511,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23490,
									"end": 23511,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23490,
									"end": 23511,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 23490,
									"end": 23511,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23323,
									"end": 23748,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 23323,
									"end": 23748,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23323,
									"end": 23748,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 23323,
									"end": 23748,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23718,
									"end": 23723,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23701,
									"end": 23710,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23701,
									"end": 23714,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23711,
									"end": 23713,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 23701,
									"end": 23714,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23701,
									"end": 23714,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23701,
									"end": 23714,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23701,
									"end": 23714,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23701,
									"end": 23714,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23701,
									"end": 23714,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23701,
									"end": 23714,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23701,
									"end": 23714,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 23701,
									"end": 23714,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23701,
									"end": 23714,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23701,
									"end": 23714,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23701,
									"end": 23714,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23701,
									"end": 23714,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 23701,
									"end": 23714,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23701,
									"end": 23714,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 23701,
									"end": 23714,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23701,
									"end": 23723,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23701,
									"end": 23723,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23701,
									"end": 23723,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 23701,
									"end": 23723,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 23701,
									"end": 23723,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 23701,
									"end": 23723,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23701,
									"end": 23723,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23701,
									"end": 23723,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23701,
									"end": 23723,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23701,
									"end": 23723,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 23701,
									"end": 23723,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23323,
									"end": 23748,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 23323,
									"end": 23748,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23778,
									"end": 23780,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23763,
									"end": 23788,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23763,
									"end": 23788,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23772,
									"end": 23776,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 23763,
									"end": 23788,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23763,
									"end": 23788,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23763,
									"end": 23788,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 23782,
									"end": 23787,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 23763,
									"end": 23788,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23763,
									"end": 23788,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23763,
									"end": 23788,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 23763,
									"end": 23788,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23763,
									"end": 23788,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23763,
									"end": 23788,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 23763,
									"end": 23788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23763,
									"end": 23788,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 23763,
									"end": 23788,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23763,
									"end": 23788,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23763,
									"end": 23788,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23763,
									"end": 23788,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23763,
									"end": 23788,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23763,
									"end": 23788,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23763,
									"end": 23788,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23763,
									"end": 23788,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 22688,
									"end": 23795,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22688,
									"end": 23795,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22688,
									"end": 23795,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 22688,
									"end": 23795,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "96"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "134"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 1,
									"value": "134"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "151"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 1,
									"value": "151"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "156"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 1,
									"value": "156"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "157"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "158"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 1,
									"value": "158"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 1,
									"value": "157"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "162"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 1,
									"value": "162"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6829,
									"end": 6906,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6826,
									"end": 6827,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6819,
									"end": 6907,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6926,
									"end": 6930,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 6923,
									"end": 6924,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6916,
									"end": 6931,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6950,
									"end": 6954,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6947,
									"end": 6948,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6940,
									"end": 6955,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7009,
									"end": 7017,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7056,
									"end": 7061,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7053,
									"end": 7054,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7049,
									"end": 7062,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7028,
									"end": 7062,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7028,
									"end": 7062,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7069,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7136,
									"end": 7141,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7143,
									"end": 7147,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7167,
									"end": 7173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7158,
									"end": 7173,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7158,
									"end": 7173,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7191,
									"end": 7196,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7182,
									"end": 7196,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7182,
									"end": 7196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "tag",
									"source": 1,
									"value": "166"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7226,
									"end": 7227,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7216,
									"end": 7224,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7213,
									"end": 7228,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "168"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7321,
									"end": 7325,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7316,
									"end": 7319,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 7312,
									"end": 7326,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7306,
									"end": 7310,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7303,
									"end": 7327,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "169"
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "170"
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 7330,
									"end": 7348,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "tag",
									"source": 1,
									"value": "170"
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "tag",
									"source": 1,
									"value": "169"
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7380,
									"end": 7381,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7370,
									"end": 7378,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7366,
									"end": 7382,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7795,
									"end": 7799,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7788,
									"end": 7793,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7784,
									"end": 7800,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7775,
									"end": 7800,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7775,
									"end": 7800,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "tag",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7845,
									"end": 7849,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7839,
									"end": 7843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7850,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7827,
									"end": 7850,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7827,
									"end": 7850,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "172"
								},
								{
									"begin": 7898,
									"end": 7906,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 7875,
									"end": 7907,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "tag",
									"source": 1,
									"value": "172"
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7863,
									"end": 7907,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 7863,
									"end": 7907,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "166"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "tag",
									"source": 1,
									"value": "168"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 7988,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8174,
									"end": 8182,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "174"
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8195,
									"end": 8196,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8186,
									"end": 8196,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8186,
									"end": 8196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8197,
									"end": 8202,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "173"
								},
								{
									"begin": 8197,
									"end": 8202,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "tag",
									"source": 1,
									"value": "174"
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8223,
									"end": 8227,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8240,
									"end": 8241,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8231,
									"end": 8241,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8231,
									"end": 8241,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8242,
									"end": 8247,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "173"
								},
								{
									"begin": 8242,
									"end": 8247,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "tag",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8309,
									"end": 8313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8357,
									"end": 8358,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "177"
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8393,
									"end": 8394,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "178"
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "176"
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "tag",
									"source": 1,
									"value": "177"
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8361,
									"end": 8371,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8361,
									"end": 8371,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8372,
									"end": 8377,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8372,
									"end": 8377,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "173"
								},
								{
									"begin": 8372,
									"end": 8377,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "tag",
									"source": 1,
									"value": "178"
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8433,
									"end": 8436,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 8423,
									"end": 8431,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8420,
									"end": 8437,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "179"
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 8440,
									"end": 8458,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "tag",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "tag",
									"source": 1,
									"value": "179"
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8489,
									"end": 8497,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8486,
									"end": 8487,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8482,
									"end": 8498,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 8473,
									"end": 8498,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8473,
									"end": 8498,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8524,
									"end": 8527,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8517,
									"end": 8522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8514,
									"end": 8528,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "181"
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "182"
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 8531,
									"end": 8549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "tag",
									"source": 1,
									"value": "182"
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "tag",
									"source": 1,
									"value": "181"
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8564,
									"end": 8569,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8564,
									"end": 8569,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "173"
								},
								{
									"begin": 8564,
									"end": 8569,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "tag",
									"source": 1,
									"value": "176"
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8688,
									"end": 8690,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8678,
									"end": 8686,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8675,
									"end": 8691,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8669,
									"end": 8672,
									"name": "PUSH",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 8663,
									"end": 8667,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8660,
									"end": 8673,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8656,
									"end": 8692,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8638,
									"end": 8640,
									"name": "PUSH",
									"source": 1,
									"value": "4E"
								},
								{
									"begin": 8628,
									"end": 8636,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8625,
									"end": 8641,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8620,
									"end": 8622,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 8614,
									"end": 8618,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8611,
									"end": 8623,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8607,
									"end": 8642,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8591,
									"end": 8702,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "183"
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8744,
									"end": 8752,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8738,
									"end": 8742,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8734,
									"end": 8753,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 8725,
									"end": 8753,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8725,
									"end": 8753,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8779,
									"end": 8782,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8772,
									"end": 8777,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8769,
									"end": 8783,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 8786,
									"end": 8804,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "tag",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "tag",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8819,
									"end": 8824,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "173"
								},
								{
									"begin": 8819,
									"end": 8824,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "tag",
									"source": 1,
									"value": "183"
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 8897,
									"end": 8900,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8887,
									"end": 8895,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8881,
									"end": 8885,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8878,
									"end": 8879,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 8859,
									"end": 8901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "tag",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8933,
									"end": 8937,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8928,
									"end": 8931,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8924,
									"end": 8938,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 8917,
									"end": 8922,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8914,
									"end": 8939,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "187"
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "188"
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 8942,
									"end": 8960,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "tag",
									"source": 1,
									"value": "188"
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "tag",
									"source": 1,
									"value": "187"
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8991,
									"end": 8995,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8984,
									"end": 8989,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8980,
									"end": 8996,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8971,
									"end": 8996,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8971,
									"end": 8996,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "tag",
									"source": 1,
									"value": "173"
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9043,
									"end": 9050,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9083,
									"end": 9087,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 9076,
									"end": 9081,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9072,
									"end": 9088,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 9061,
									"end": 9088,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9061,
									"end": 9088,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9008,
									"end": 9094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9158,
									"end": 9163,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "191"
								},
								{
									"begin": 9200,
									"end": 9204,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 9182,
									"end": 9205,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "tag",
									"source": 1,
									"value": "191"
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9174,
									"end": 9205,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9174,
									"end": 9205,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "192"
								},
								{
									"begin": 9242,
									"end": 9250,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 9226,
									"end": 9251,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "tag",
									"source": 1,
									"value": "192"
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9214,
									"end": 9251,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9214,
									"end": 9251,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "193"
								},
								{
									"begin": 9307,
									"end": 9373,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9297,
									"end": 9305,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9291,
									"end": 9295,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 9270,
									"end": 9374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "tag",
									"source": 1,
									"value": "193"
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9261,
									"end": 9374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9261,
									"end": 9374,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9427,
									"end": 9434,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "195"
								},
								{
									"begin": 9468,
									"end": 9469,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 9450,
									"end": 9470,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "tag",
									"source": 1,
									"value": "195"
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9445,
									"end": 9470,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9445,
									"end": 9470,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "196"
								},
								{
									"begin": 9502,
									"end": 9503,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 9484,
									"end": 9504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "tag",
									"source": 1,
									"value": "196"
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9479,
									"end": 9504,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9479,
									"end": 9504,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9539,
									"end": 9540,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9536,
									"end": 9537,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9532,
									"end": 9541,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "197"
								},
								{
									"begin": 9579,
									"end": 9590,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 9561,
									"end": 9591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "tag",
									"source": 1,
									"value": "197"
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9550,
									"end": 9591,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9550,
									"end": 9591,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9740,
									"end": 9741,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9731,
									"end": 9738,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9727,
									"end": 9742,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 9724,
									"end": 9725,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9721,
									"end": 9743,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 9701,
									"end": 9702,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9694,
									"end": 9703,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 9674,
									"end": 9757,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "198"
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "199"
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 9770,
									"end": 9788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "tag",
									"source": 1,
									"value": "199"
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "tag",
									"source": 1,
									"value": "198"
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9435,
									"end": 9797,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9843,
									"end": 9846,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "201"
								},
								{
									"begin": 9880,
									"end": 9881,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 9862,
									"end": 9882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "tag",
									"source": 1,
									"value": "201"
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9857,
									"end": 9882,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9857,
									"end": 9882,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "202"
								},
								{
									"begin": 9914,
									"end": 9915,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 9896,
									"end": 9916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "tag",
									"source": 1,
									"value": "202"
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9891,
									"end": 9916,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9891,
									"end": 9916,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9939,
									"end": 9940,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9936,
									"end": 9937,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9932,
									"end": 9941,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9925,
									"end": 9941,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9925,
									"end": 9941,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9960,
									"end": 9963,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9957,
									"end": 9958,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9954,
									"end": 9964,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "203"
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "204"
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 9967,
									"end": 9985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "tag",
									"source": 1,
									"value": "204"
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "tag",
									"source": 1,
									"value": "203"
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "206"
								},
								{
									"begin": 10105,
									"end": 10110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 10087,
									"end": 10111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "tag",
									"source": 1,
									"value": "206"
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10082,
									"end": 10085,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10075,
									"end": 10112,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10000,
									"end": 10118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10273,
									"end": 10277,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10311,
									"end": 10313,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 10300,
									"end": 10309,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10296,
									"end": 10314,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10288,
									"end": 10314,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10288,
									"end": 10314,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "208"
								},
								{
									"begin": 10392,
									"end": 10393,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10381,
									"end": 10390,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10377,
									"end": 10394,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10368,
									"end": 10374,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 10324,
									"end": 10395,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "tag",
									"source": 1,
									"value": "208"
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "209"
								},
								{
									"begin": 10473,
									"end": 10475,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10462,
									"end": 10471,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10458,
									"end": 10476,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10449,
									"end": 10455,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 10405,
									"end": 10477,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "tag",
									"source": 1,
									"value": "209"
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "210"
								},
								{
									"begin": 10555,
									"end": 10557,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 10544,
									"end": 10553,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10540,
									"end": 10558,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10531,
									"end": 10537,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 10487,
									"end": 10559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "tag",
									"source": 1,
									"value": "210"
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10124,
									"end": 10566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10665,
									"end": 10669,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10703,
									"end": 10705,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10692,
									"end": 10701,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10680,
									"end": 10706,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10680,
									"end": 10706,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "212"
								},
								{
									"begin": 10784,
									"end": 10785,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10773,
									"end": 10782,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10769,
									"end": 10786,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10760,
									"end": 10766,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 10716,
									"end": 10787,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "tag",
									"source": 1,
									"value": "212"
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10572,
									"end": 10794,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 28771,
									"end": 29329,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 28771,
									"end": 29329,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 29329,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28771,
									"end": 29329,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 29329,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28771,
									"end": 29329,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28771,
									"end": 29329,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 28771,
									"end": 29329,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 28771,
									"end": 29329,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c7cc4e284aa65424473409a24bcfbd568fb82664f257411168e55a835e9ccd0064736f6c63430008140033",
									".code": [
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "79CC6790"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28771,
											"end": 29329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18491,
											"end": 18580,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18491,
											"end": 18580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18491,
											"end": 18580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 18491,
											"end": 18580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18491,
											"end": 18580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18491,
											"end": 18580,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 18491,
											"end": 18580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18491,
											"end": 18580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18491,
											"end": 18580,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18491,
											"end": 18580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 18491,
											"end": 18580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18491,
											"end": 18580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18491,
											"end": 18580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 18491,
											"end": 18580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18491,
											"end": 18580,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 18491,
											"end": 18580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18491,
											"end": 18580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18491,
											"end": 18580,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18491,
											"end": 18580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18491,
											"end": 18580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18491,
											"end": 18580,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18491,
											"end": 18580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18491,
											"end": 18580,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 20710,
											"end": 20896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 20710,
											"end": 20896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 20710,
											"end": 20896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 19561,
											"end": 19658,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19561,
											"end": 19658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19561,
											"end": 19658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 19561,
											"end": 19658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 19561,
											"end": 19658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19561,
											"end": 19658,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 19561,
											"end": 19658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19561,
											"end": 19658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19561,
											"end": 19658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19561,
											"end": 19658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 19561,
											"end": 19658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19561,
											"end": 19658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19561,
											"end": 19658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 19561,
											"end": 19658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19561,
											"end": 19658,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 19561,
											"end": 19658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19561,
											"end": 19658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19561,
											"end": 19658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19561,
											"end": 19658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19561,
											"end": 19658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19561,
											"end": 19658,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19561,
											"end": 19658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19561,
											"end": 19658,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 21456,
											"end": 21700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21456,
											"end": 21700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 21456,
											"end": 21700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 19419,
											"end": 19501,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 19419,
											"end": 19501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19419,
											"end": 19501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 19419,
											"end": 19501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 19419,
											"end": 19501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19419,
											"end": 19501,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 19419,
											"end": 19501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19419,
											"end": 19501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19419,
											"end": 19501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19419,
											"end": 19501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 19419,
											"end": 19501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19419,
											"end": 19501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19419,
											"end": 19501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 19419,
											"end": 19501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19419,
											"end": 19501,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 19419,
											"end": 19501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19419,
											"end": 19501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19419,
											"end": 19501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19419,
											"end": 19501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19419,
											"end": 19501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19419,
											"end": 19501,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19419,
											"end": 19501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19419,
											"end": 19501,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 29263,
											"end": 29326,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 29263,
											"end": 29326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29263,
											"end": 29326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 29263,
											"end": 29326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 29263,
											"end": 29326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29263,
											"end": 29326,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 29263,
											"end": 29326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29263,
											"end": 29326,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28136,
											"end": 28223,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 28136,
											"end": 28223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28136,
											"end": 28223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 28136,
											"end": 28223,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28136,
											"end": 28223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28136,
											"end": 28223,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28136,
											"end": 28223,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28136,
											"end": 28223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28136,
											"end": 28223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28136,
											"end": 28223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28136,
											"end": 28223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 28136,
											"end": 28223,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28136,
											"end": 28223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28136,
											"end": 28223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 28136,
											"end": 28223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28136,
											"end": 28223,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 28136,
											"end": 28223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28136,
											"end": 28223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 28136,
											"end": 28223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28136,
											"end": 28223,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 28136,
											"end": 28223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28136,
											"end": 28223,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 12253,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 12169,
											"end": 12253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 12253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 12169,
											"end": 12253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 12169,
											"end": 12253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 12253,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 12169,
											"end": 12253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 12253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12169,
											"end": 12253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 12253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 12169,
											"end": 12253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 12253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 12253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 12169,
											"end": 12253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 12253,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 12169,
											"end": 12253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 12253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12169,
											"end": 12253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 12253,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 12253,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 12253,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 12253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 12253,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 19716,
											"end": 19832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 19716,
											"end": 19832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 19716,
											"end": 19832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9850,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9749,
											"end": 9850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9749,
											"end": 9850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 9749,
											"end": 9850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9850,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9749,
											"end": 9850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9850,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28697,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 28539,
											"end": 28697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 28539,
											"end": 28697,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28539,
											"end": 28697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28697,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28697,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28697,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 28539,
											"end": 28697,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 28539,
											"end": 28697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28697,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 28539,
											"end": 28697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 28539,
											"end": 28697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28697,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 28539,
											"end": 28697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28697,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29125,
											"end": 29184,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 29125,
											"end": 29184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29125,
											"end": 29184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 29125,
											"end": 29184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 29125,
											"end": 29184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29125,
											"end": 29184,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 29125,
											"end": 29184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29125,
											"end": 29184,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 9094,
											"end": 9179,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 9094,
											"end": 9179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9094,
											"end": 9179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 9094,
											"end": 9179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 9094,
											"end": 9179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9094,
											"end": 9179,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 9094,
											"end": 9179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9094,
											"end": 9179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9094,
											"end": 9179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9094,
											"end": 9179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 9094,
											"end": 9179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9094,
											"end": 9179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9094,
											"end": 9179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 9094,
											"end": 9179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9094,
											"end": 9179,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 9094,
											"end": 9179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9094,
											"end": 9179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9094,
											"end": 9179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9094,
											"end": 9179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9094,
											"end": 9179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9094,
											"end": 9179,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9094,
											"end": 9179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9094,
											"end": 9179,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18786,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 18693,
											"end": 18786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 18693,
											"end": 18786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 18693,
											"end": 18786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18786,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 18693,
											"end": 18786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18786,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18693,
											"end": 18786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 18693,
											"end": 18786,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 18693,
											"end": 18786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18786,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 18693,
											"end": 18786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18786,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18693,
											"end": 18786,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18786,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18786,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18786,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18786,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 20027,
											"end": 20205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 20027,
											"end": 20205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 20027,
											"end": 20205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 20263,
											"end": 20403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 20263,
											"end": 20403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 20263,
											"end": 20403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9999,
											"end": 10214,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9999,
											"end": 10214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9999,
											"end": 10214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 9999,
											"end": 10214,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9999,
											"end": 10214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9999,
											"end": 10214,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9999,
											"end": 10214,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9999,
											"end": 10214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9999,
											"end": 10214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9999,
											"end": 10214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9999,
											"end": 10214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 9999,
											"end": 10214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9999,
											"end": 10214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9999,
											"end": 10214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 9999,
											"end": 10214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9999,
											"end": 10214,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 9999,
											"end": 10214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9999,
											"end": 10214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 9999,
											"end": 10214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9999,
											"end": 10214,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 9999,
											"end": 10214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9999,
											"end": 10214,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 18491,
											"end": 18580,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 18491,
											"end": 18580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18536,
											"end": 18549,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18568,
											"end": 18573,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 18561,
											"end": 18573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 18561,
											"end": 18573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18561,
											"end": 18573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18491,
											"end": 18580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18491,
											"end": 18580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20783,
											"end": 20787,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20799,
											"end": 20812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20815,
											"end": 20827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 20815,
											"end": 20825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 20815,
											"end": 20827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20815,
											"end": 20827,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 20815,
											"end": 20827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20799,
											"end": 20827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20799,
											"end": 20827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20837,
											"end": 20868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 20846,
											"end": 20851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20853,
											"end": 20860,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20862,
											"end": 20867,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20837,
											"end": 20845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 20837,
											"end": 20868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20837,
											"end": 20868,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 20837,
											"end": 20868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20885,
											"end": 20889,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20878,
											"end": 20889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20878,
											"end": 20889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20878,
											"end": 20889,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19561,
											"end": 19658,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 19561,
											"end": 19658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19613,
											"end": 19620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19639,
											"end": 19651,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19639,
											"end": 19651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19632,
											"end": 19651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19561,
											"end": 19658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19561,
											"end": 19658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21543,
											"end": 21547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21559,
											"end": 21574,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21577,
											"end": 21589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21577,
											"end": 21587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 21577,
											"end": 21589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21577,
											"end": 21589,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 21577,
											"end": 21589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21559,
											"end": 21589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21559,
											"end": 21589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21599,
											"end": 21636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 21615,
											"end": 21619,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21621,
											"end": 21628,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21630,
											"end": 21635,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21599,
											"end": 21614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 21599,
											"end": 21636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21599,
											"end": 21636,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 21599,
											"end": 21636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21646,
											"end": 21672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 21656,
											"end": 21660,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21662,
											"end": 21664,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21666,
											"end": 21671,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21646,
											"end": 21655,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 21646,
											"end": 21672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21646,
											"end": 21672,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 21646,
											"end": 21672,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21689,
											"end": 21693,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21682,
											"end": 21693,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21682,
											"end": 21693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21682,
											"end": 21693,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21456,
											"end": 21700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19419,
											"end": 19501,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 19419,
											"end": 19501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19468,
											"end": 19473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19492,
											"end": 19494,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 19485,
											"end": 19494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19485,
											"end": 19494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19419,
											"end": 19501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19419,
											"end": 19501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29263,
											"end": 29326,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 29263,
											"end": 29326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 8987,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 8987,
											"end": 9000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9000,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 8987,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29309,
											"end": 29319,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 29309,
											"end": 29317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 29309,
											"end": 29319,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29309,
											"end": 29319,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 29309,
											"end": 29319,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29263,
											"end": 29326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28136,
											"end": 28223,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 28136,
											"end": 28223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 28196,
											"end": 28208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 28196,
											"end": 28206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 28196,
											"end": 28208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28196,
											"end": 28208,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 28196,
											"end": 28208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28210,
											"end": 28215,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 28190,
											"end": 28216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28190,
											"end": 28216,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 28190,
											"end": 28216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28136,
											"end": 28223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28136,
											"end": 28223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 12253,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 12169,
											"end": 12253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12216,
											"end": 12220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12239,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12239,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12239,
											"end": 12246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12239,
											"end": 12246,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12239,
											"end": 12246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12239,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12239,
											"end": 12246,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12239,
											"end": 12246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12239,
											"end": 12246,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12239,
											"end": 12246,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12239,
											"end": 12246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12232,
											"end": 12246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 12253,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12169,
											"end": 12253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19781,
											"end": 19788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19807,
											"end": 19816,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19807,
											"end": 19825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19817,
											"end": 19824,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19807,
											"end": 19825,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19807,
											"end": 19825,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19807,
											"end": 19825,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19807,
											"end": 19825,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19807,
											"end": 19825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19807,
											"end": 19825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19807,
											"end": 19825,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19807,
											"end": 19825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19807,
											"end": 19825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19807,
											"end": 19825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19807,
											"end": 19825,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19807,
											"end": 19825,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19807,
											"end": 19825,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19807,
											"end": 19825,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19807,
											"end": 19825,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19807,
											"end": 19825,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 19825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19800,
											"end": 19825,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19716,
											"end": 19832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9850,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 9749,
											"end": 9850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 8987,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 8987,
											"end": 9000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9000,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 8987,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9813,
											"end": 9843,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 9840,
											"end": 9841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9831,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 9813,
											"end": 9843,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9813,
											"end": 9843,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 9813,
											"end": 9843,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9749,
											"end": 9850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28697,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 28539,
											"end": 28697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28614,
											"end": 28659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 28630,
											"end": 28637,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 28639,
											"end": 28649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 28639,
											"end": 28651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28639,
											"end": 28651,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 28639,
											"end": 28651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28653,
											"end": 28658,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28614,
											"end": 28629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 28614,
											"end": 28659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28614,
											"end": 28659,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 28614,
											"end": 28659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28669,
											"end": 28690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 28675,
											"end": 28682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28684,
											"end": 28689,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28669,
											"end": 28674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 28669,
											"end": 28690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28669,
											"end": 28690,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 28669,
											"end": 28690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28539,
											"end": 28697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29125,
											"end": 29184,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 29125,
											"end": 29184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 8987,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 8987,
											"end": 9000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9000,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 8987,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29169,
											"end": 29177,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 29169,
											"end": 29175,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 29169,
											"end": 29177,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29169,
											"end": 29177,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 29169,
											"end": 29177,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29125,
											"end": 29184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9094,
											"end": 9179,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 9094,
											"end": 9179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9140,
											"end": 9147,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9166,
											"end": 9172,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9166,
											"end": 9172,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9166,
											"end": 9172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9172,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9172,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 9166,
											"end": 9172,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9172,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 9166,
											"end": 9172,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9166,
											"end": 9172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9159,
											"end": 9172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9159,
											"end": 9172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9094,
											"end": 9179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9094,
											"end": 9179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18786,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 18693,
											"end": 18786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18740,
											"end": 18753,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18772,
											"end": 18779,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 18765,
											"end": 18779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 18765,
											"end": 18779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18765,
											"end": 18779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18786,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18693,
											"end": 18786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20096,
											"end": 20100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20112,
											"end": 20125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20128,
											"end": 20140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 20128,
											"end": 20138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 20128,
											"end": 20140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20128,
											"end": 20140,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 20128,
											"end": 20140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20112,
											"end": 20140,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20112,
											"end": 20140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20150,
											"end": 20177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 20160,
											"end": 20165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20167,
											"end": 20169,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20171,
											"end": 20176,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20150,
											"end": 20159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 20150,
											"end": 20177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20150,
											"end": 20177,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 20150,
											"end": 20177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20194,
											"end": 20198,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20187,
											"end": 20198,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20187,
											"end": 20198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20187,
											"end": 20198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20027,
											"end": 20205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20343,
											"end": 20350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20369,
											"end": 20380,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20369,
											"end": 20387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20381,
											"end": 20386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20369,
											"end": 20387,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20369,
											"end": 20387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20369,
											"end": 20387,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20369,
											"end": 20387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20369,
											"end": 20387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20369,
											"end": 20387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20369,
											"end": 20387,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20369,
											"end": 20387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20369,
											"end": 20387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20369,
											"end": 20387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20369,
											"end": 20387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20369,
											"end": 20387,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20369,
											"end": 20387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20369,
											"end": 20387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20369,
											"end": 20387,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20369,
											"end": 20396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20388,
											"end": 20395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20369,
											"end": 20396,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20369,
											"end": 20396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20369,
											"end": 20396,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20369,
											"end": 20396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20369,
											"end": 20396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20369,
											"end": 20396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20369,
											"end": 20396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20369,
											"end": 20396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20369,
											"end": 20396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20369,
											"end": 20396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20369,
											"end": 20396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20369,
											"end": 20396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20369,
											"end": 20396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20369,
											"end": 20396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20369,
											"end": 20396,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20369,
											"end": 20396,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20362,
											"end": 20396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20362,
											"end": 20396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20263,
											"end": 20403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9999,
											"end": 10214,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 9999,
											"end": 10214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 8987,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 8987,
											"end": 9000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8987,
											"end": 9000,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 8987,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10103,
											"end": 10104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10083,
											"end": 10105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10083,
											"end": 10105,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10083,
											"end": 10091,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10083,
											"end": 10105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10083,
											"end": 10105,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10083,
											"end": 10105,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10079,
											"end": 10170,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 10079,
											"end": 10170,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10156,
											"end": 10157,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10128,
											"end": 10159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10128,
											"end": 10159,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10128,
											"end": 10159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10128,
											"end": 10159,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10128,
											"end": 10159,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10128,
											"end": 10159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10128,
											"end": 10159,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10128,
											"end": 10159,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 10128,
											"end": 10159,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10128,
											"end": 10159,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10128,
											"end": 10159,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 10128,
											"end": 10159,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10128,
											"end": 10159,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 10128,
											"end": 10159,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10128,
											"end": 10159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10128,
											"end": 10159,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10128,
											"end": 10159,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10128,
											"end": 10159,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10128,
											"end": 10159,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10128,
											"end": 10159,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10128,
											"end": 10159,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10079,
											"end": 10170,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 10079,
											"end": 10170,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10179,
											"end": 10207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 10198,
											"end": 10206,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10179,
											"end": 10197,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 10179,
											"end": 10207,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10179,
											"end": 10207,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 10179,
											"end": 10207,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9999,
											"end": 10214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9999,
											"end": 10214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7275,
											"end": 7371,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 7275,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7328,
											"end": 7335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7354,
											"end": 7364,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7364,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7275,
											"end": 7371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7275,
											"end": 7371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25406,
											"end": 25534,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 25406,
											"end": 25534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25490,
											"end": 25527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 25499,
											"end": 25504,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25506,
											"end": 25513,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25515,
											"end": 25520,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25522,
											"end": 25526,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25490,
											"end": 25498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 25490,
											"end": 25527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25490,
											"end": 25527,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 25490,
											"end": 25527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25406,
											"end": 25534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25406,
											"end": 25534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25406,
											"end": 25534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25406,
											"end": 25534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27080,
											"end": 27557,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 27080,
											"end": 27557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27203,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27206,
											"end": 27231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 27216,
											"end": 27221,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27223,
											"end": 27230,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27206,
											"end": 27215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 27206,
											"end": 27231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27206,
											"end": 27231,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 27206,
											"end": 27231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27265,
											"end": 27282,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27245,
											"end": 27261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27245,
											"end": 27282,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 27241,
											"end": 27551,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27321,
											"end": 27326,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27302,
											"end": 27318,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27302,
											"end": 27326,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27298,
											"end": 27428,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27298,
											"end": 27428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 27298,
											"end": 27428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27380,
											"end": 27387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27389,
											"end": 27405,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27407,
											"end": 27412,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27353,
											"end": 27413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27353,
											"end": 27413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27353,
											"end": 27413,
											"name": "PUSH",
											"source": 0,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 27353,
											"end": 27413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27353,
											"end": 27413,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27353,
											"end": 27413,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27353,
											"end": 27413,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27353,
											"end": 27413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 27353,
											"end": 27413,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27353,
											"end": 27413,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27353,
											"end": 27413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27353,
											"end": 27413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27353,
											"end": 27413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 27353,
											"end": 27413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27353,
											"end": 27413,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 27353,
											"end": 27413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27353,
											"end": 27413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27353,
											"end": 27413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27353,
											"end": 27413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27353,
											"end": 27413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27353,
											"end": 27413,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27353,
											"end": 27413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27353,
											"end": 27413,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 27298,
											"end": 27428,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 27298,
											"end": 27428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27469,
											"end": 27526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 27478,
											"end": 27483,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27485,
											"end": 27492,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27513,
											"end": 27518,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27494,
											"end": 27510,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27494,
											"end": 27518,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27520,
											"end": 27525,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27469,
											"end": 27477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 27469,
											"end": 27526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27469,
											"end": 27526,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 27469,
											"end": 27526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27241,
											"end": 27551,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 27241,
											"end": 27551,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27169,
											"end": 27557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27080,
											"end": 27557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27080,
											"end": 27557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27080,
											"end": 27557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27080,
											"end": 27557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22073,
											"end": 22373,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 22073,
											"end": 22373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22172,
											"end": 22173,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22156,
											"end": 22174,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22156,
											"end": 22174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22156,
											"end": 22160,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22156,
											"end": 22174,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22156,
											"end": 22174,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22156,
											"end": 22174,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22152,
											"end": 22238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 22152,
											"end": 22238,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22224,
											"end": 22225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22197,
											"end": 22227,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22197,
											"end": 22227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22197,
											"end": 22227,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22197,
											"end": 22227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22197,
											"end": 22227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22197,
											"end": 22227,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22197,
											"end": 22227,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22197,
											"end": 22227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 22197,
											"end": 22227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22197,
											"end": 22227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22197,
											"end": 22227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 22197,
											"end": 22227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22197,
											"end": 22227,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 22197,
											"end": 22227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22197,
											"end": 22227,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22197,
											"end": 22227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22197,
											"end": 22227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22197,
											"end": 22227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22197,
											"end": 22227,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22197,
											"end": 22227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22197,
											"end": 22227,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22152,
											"end": 22238,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 22152,
											"end": 22238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22265,
											"end": 22266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22251,
											"end": 22267,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22251,
											"end": 22267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22251,
											"end": 22253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22251,
											"end": 22267,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22251,
											"end": 22267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22251,
											"end": 22267,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22247,
											"end": 22333,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 22247,
											"end": 22333,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22319,
											"end": 22320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22290,
											"end": 22322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22290,
											"end": 22322,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22290,
											"end": 22322,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22290,
											"end": 22322,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22290,
											"end": 22322,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22290,
											"end": 22322,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22290,
											"end": 22322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22290,
											"end": 22322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 22290,
											"end": 22322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22290,
											"end": 22322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22290,
											"end": 22322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 22290,
											"end": 22322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22290,
											"end": 22322,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 22290,
											"end": 22322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22290,
											"end": 22322,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22290,
											"end": 22322,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22290,
											"end": 22322,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22290,
											"end": 22322,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22290,
											"end": 22322,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22290,
											"end": 22322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22290,
											"end": 22322,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22247,
											"end": 22333,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 22247,
											"end": 22333,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22342,
											"end": 22366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 22350,
											"end": 22354,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22356,
											"end": 22358,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22360,
											"end": 22365,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22342,
											"end": 22349,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 22342,
											"end": 22366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22342,
											"end": 22366,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 22342,
											"end": 22366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22073,
											"end": 22373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22073,
											"end": 22373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22073,
											"end": 22373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22073,
											"end": 22373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9252,
											"end": 9414,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 9252,
											"end": 9414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 9322,
											"end": 9332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 9322,
											"end": 9334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9322,
											"end": 9334,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 9322,
											"end": 9334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9311,
											"end": 9334,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9311,
											"end": 9334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9311,
											"end": 9318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 9311,
											"end": 9316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 9311,
											"end": 9318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9311,
											"end": 9318,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 9311,
											"end": 9318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9311,
											"end": 9334,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9311,
											"end": 9334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9311,
											"end": 9334,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 9307,
											"end": 9408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9384,
											"end": 9396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 9384,
											"end": 9394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 9384,
											"end": 9396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9384,
											"end": 9396,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 9384,
											"end": 9396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9357,
											"end": 9397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9357,
											"end": 9397,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9357,
											"end": 9397,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9357,
											"end": 9397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9357,
											"end": 9397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9357,
											"end": 9397,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9357,
											"end": 9397,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9357,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 9357,
											"end": 9397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9357,
											"end": 9397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9357,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 9357,
											"end": 9397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9357,
											"end": 9397,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 9357,
											"end": 9397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9357,
											"end": 9397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9357,
											"end": 9397,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9357,
											"end": 9397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9357,
											"end": 9397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9357,
											"end": 9397,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9357,
											"end": 9397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9357,
											"end": 9397,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 9307,
											"end": 9408,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 9307,
											"end": 9408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9252,
											"end": 9414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13104,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 12987,
											"end": 13104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12040,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 12040,
											"end": 12054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 12040,
											"end": 12056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12040,
											"end": 12056,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 12040,
											"end": 12056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13055,
											"end": 13060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13045,
											"end": 13052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 13045,
											"end": 13052,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13045,
											"end": 13060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13045,
											"end": 13060,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13060,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13060,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13060,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 13045,
											"end": 13060,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13060,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13060,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13060,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13060,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13060,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13060,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13060,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13060,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13060,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13060,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13045,
											"end": 13060,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 13084,
											"end": 13096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 13084,
											"end": 13094,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 13084,
											"end": 13096,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13096,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 13084,
											"end": 13096,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13075,
											"end": 13097,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 13075,
											"end": 13097,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13097,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 13075,
											"end": 13097,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13097,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 13075,
											"end": 13097,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13075,
											"end": 13097,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13097,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13097,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13097,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13097,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13075,
											"end": 13097,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 12987,
											"end": 13104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24870,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 24664,
											"end": 24870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24753,
											"end": 24754,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24734,
											"end": 24755,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24734,
											"end": 24755,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24734,
											"end": 24741,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24734,
											"end": 24755,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24734,
											"end": 24755,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24734,
											"end": 24755,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24730,
											"end": 24819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 24730,
											"end": 24819,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24805,
											"end": 24806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24778,
											"end": 24808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24778,
											"end": 24808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24778,
											"end": 24808,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24778,
											"end": 24808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24778,
											"end": 24808,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24778,
											"end": 24808,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24778,
											"end": 24808,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24778,
											"end": 24808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 24778,
											"end": 24808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24778,
											"end": 24808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24778,
											"end": 24808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 24778,
											"end": 24808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24778,
											"end": 24808,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 24778,
											"end": 24808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24778,
											"end": 24808,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24778,
											"end": 24808,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24778,
											"end": 24808,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24778,
											"end": 24808,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24778,
											"end": 24808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24778,
											"end": 24808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24778,
											"end": 24808,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24730,
											"end": 24819,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 24730,
											"end": 24819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24828,
											"end": 24863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 24836,
											"end": 24843,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 24853,
											"end": 24854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24857,
											"end": 24862,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24828,
											"end": 24835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 24828,
											"end": 24863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24828,
											"end": 24863,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 24828,
											"end": 24863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24664,
											"end": 24870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10555,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 10368,
											"end": 10555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10460,
											"end": 10466,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10460,
											"end": 10466,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10460,
											"end": 10466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 10466,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 10466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 10466,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10460,
											"end": 10466,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 10466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 10466,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 10460,
											"end": 10466,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10460,
											"end": 10466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10441,
											"end": 10466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10485,
											"end": 10493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10476,
											"end": 10482,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 10476,
											"end": 10482,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10476,
											"end": 10493,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 10476,
											"end": 10493,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 10476,
											"end": 10493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10476,
											"end": 10493,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10476,
											"end": 10493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10476,
											"end": 10493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10476,
											"end": 10493,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10476,
											"end": 10493,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 10476,
											"end": 10493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10476,
											"end": 10493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10476,
											"end": 10493,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10476,
											"end": 10493,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10476,
											"end": 10493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10476,
											"end": 10493,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10476,
											"end": 10493,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10476,
											"end": 10493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10476,
											"end": 10493,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10476,
											"end": 10493,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10539,
											"end": 10547,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10548,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10508,
											"end": 10548,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10529,
											"end": 10537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10548,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10508,
											"end": 10548,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10548,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10508,
											"end": 10548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10508,
											"end": 10548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10548,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10508,
											"end": 10548,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10548,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10548,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10548,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10508,
											"end": 10548,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10431,
											"end": 10555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12855,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 12740,
											"end": 12855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11793,
											"end": 11812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 11793,
											"end": 11810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 11793,
											"end": 11812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11793,
											"end": 11812,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 11793,
											"end": 11812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12809,
											"end": 12813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12799,
											"end": 12806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 12799,
											"end": 12806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12799,
											"end": 12813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12799,
											"end": 12813,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12799,
											"end": 12813,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12799,
											"end": 12813,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12799,
											"end": 12813,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12799,
											"end": 12813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 12799,
											"end": 12813,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12799,
											"end": 12813,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12799,
											"end": 12813,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12799,
											"end": 12813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12799,
											"end": 12813,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12799,
											"end": 12813,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12799,
											"end": 12813,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12799,
											"end": 12813,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12799,
											"end": 12813,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 12799,
											"end": 12813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12799,
											"end": 12813,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12799,
											"end": 12813,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12828,
											"end": 12848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 12835,
											"end": 12847,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 12835,
											"end": 12845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 12835,
											"end": 12847,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12835,
											"end": 12847,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 12835,
											"end": 12847,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12828,
											"end": 12848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12828,
											"end": 12848,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12828,
											"end": 12848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 12828,
											"end": 12848,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12828,
											"end": 12848,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12828,
											"end": 12848,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 12828,
											"end": 12848,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12828,
											"end": 12848,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 12828,
											"end": 12848,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12828,
											"end": 12848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12828,
											"end": 12848,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12828,
											"end": 12848,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12828,
											"end": 12848,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12828,
											"end": 12848,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12828,
											"end": 12848,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12828,
											"end": 12848,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 12740,
											"end": 12855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26366,
											"end": 26798,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 26366,
											"end": 26798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26495,
											"end": 26496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26478,
											"end": 26497,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26478,
											"end": 26497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26478,
											"end": 26483,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26478,
											"end": 26497,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26478,
											"end": 26497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26478,
											"end": 26497,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26474,
											"end": 26563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 26474,
											"end": 26563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26549,
											"end": 26550,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26520,
											"end": 26552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26520,
											"end": 26552,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26552,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26520,
											"end": 26552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26552,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26520,
											"end": 26552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 26520,
											"end": 26552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 26520,
											"end": 26552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26552,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 26520,
											"end": 26552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26552,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26520,
											"end": 26552,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26552,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26552,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26552,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26520,
											"end": 26552,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26474,
											"end": 26563,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 26474,
											"end": 26563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26595,
											"end": 26596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26576,
											"end": 26597,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26576,
											"end": 26597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26576,
											"end": 26583,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26576,
											"end": 26597,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26576,
											"end": 26597,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26576,
											"end": 26597,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26572,
											"end": 26662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 26572,
											"end": 26662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26648,
											"end": 26649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26620,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26620,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26620,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26620,
											"end": 26651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26620,
											"end": 26651,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26620,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26620,
											"end": 26651,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26620,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 26620,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26620,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26620,
											"end": 26651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 26620,
											"end": 26651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26620,
											"end": 26651,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 26620,
											"end": 26651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26620,
											"end": 26651,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26620,
											"end": 26651,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26620,
											"end": 26651,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26620,
											"end": 26651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26620,
											"end": 26651,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26620,
											"end": 26651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26620,
											"end": 26651,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26572,
											"end": 26662,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 26572,
											"end": 26662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26701,
											"end": 26706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26682,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26671,
											"end": 26689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26683,
											"end": 26688,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26689,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26671,
											"end": 26689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26689,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26671,
											"end": 26689,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26689,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26671,
											"end": 26689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26689,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26689,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26689,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26671,
											"end": 26689,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26671,
											"end": 26689,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26690,
											"end": 26697,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26698,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26671,
											"end": 26698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26698,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26671,
											"end": 26698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26698,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26671,
											"end": 26698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26698,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26671,
											"end": 26698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26671,
											"end": 26698,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26706,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 26671,
											"end": 26706,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26720,
											"end": 26729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26716,
											"end": 26792,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26716,
											"end": 26792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 26716,
											"end": 26792,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26766,
											"end": 26773,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26781,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26750,
											"end": 26781,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26759,
											"end": 26764,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26781,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26750,
											"end": 26781,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26781,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 26775,
											"end": 26780,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26781,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26750,
											"end": 26781,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 26750,
											"end": 26781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 26750,
											"end": 26781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26781,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 26750,
											"end": 26781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26781,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26750,
											"end": 26781,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26781,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26781,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26750,
											"end": 26781,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 26716,
											"end": 26792,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 26716,
											"end": 26792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26366,
											"end": 26798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26366,
											"end": 26798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26366,
											"end": 26798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26366,
											"end": 26798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26366,
											"end": 26798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22688,
											"end": 23795,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 22688,
											"end": 23795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22793,
											"end": 22794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22777,
											"end": 22795,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22777,
											"end": 22795,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22777,
											"end": 22781,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22777,
											"end": 22795,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22777,
											"end": 22795,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22777,
											"end": 22795,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22773,
											"end": 23313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 22773,
											"end": 23313,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22929,
											"end": 22934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 22925,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22913,
											"end": 22925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22913,
											"end": 22934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 22934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 22934,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 22934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 22913,
											"end": 22934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 22934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 22934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 22913,
											"end": 22934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 22934,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 22913,
											"end": 22934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 22934,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 22934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 22934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 22934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 22934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 22934,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22913,
											"end": 22934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22773,
											"end": 23313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 22773,
											"end": 23313,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22773,
											"end": 23313,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 22773,
											"end": 23313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22965,
											"end": 22984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22987,
											"end": 22996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22987,
											"end": 23002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22997,
											"end": 23001,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22987,
											"end": 23002,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22987,
											"end": 23002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22987,
											"end": 23002,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22987,
											"end": 23002,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22987,
											"end": 23002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22987,
											"end": 23002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22987,
											"end": 23002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22987,
											"end": 23002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22987,
											"end": 23002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22987,
											"end": 23002,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22987,
											"end": 23002,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22987,
											"end": 23002,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22987,
											"end": 23002,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22987,
											"end": 23002,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22987,
											"end": 23002,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22987,
											"end": 23002,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22965,
											"end": 23002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22965,
											"end": 23002,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23034,
											"end": 23039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23020,
											"end": 23031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23020,
											"end": 23039,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 23016,
											"end": 23131,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23016,
											"end": 23131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 23016,
											"end": 23131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23091,
											"end": 23095,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23097,
											"end": 23108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23110,
											"end": 23115,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23066,
											"end": 23116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23066,
											"end": 23116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23066,
											"end": 23116,
											"name": "PUSH",
											"source": 0,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23066,
											"end": 23116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23066,
											"end": 23116,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23066,
											"end": 23116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23066,
											"end": 23116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23066,
											"end": 23116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 23066,
											"end": 23116,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23066,
											"end": 23116,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23066,
											"end": 23116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23066,
											"end": 23116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23066,
											"end": 23116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 23066,
											"end": 23116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23066,
											"end": 23116,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 23066,
											"end": 23116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23066,
											"end": 23116,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23066,
											"end": 23116,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23066,
											"end": 23116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23066,
											"end": 23116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23066,
											"end": 23116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23066,
											"end": 23116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23066,
											"end": 23116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23016,
											"end": 23131,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 23016,
											"end": 23131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23283,
											"end": 23288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23269,
											"end": 23280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23269,
											"end": 23288,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23251,
											"end": 23260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23251,
											"end": 23266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23261,
											"end": 23265,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23251,
											"end": 23266,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23251,
											"end": 23266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23251,
											"end": 23266,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23251,
											"end": 23266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23251,
											"end": 23266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23251,
											"end": 23266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23251,
											"end": 23266,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23251,
											"end": 23266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23251,
											"end": 23266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23251,
											"end": 23266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23251,
											"end": 23266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23251,
											"end": 23266,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23251,
											"end": 23266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23251,
											"end": 23266,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23251,
											"end": 23266,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23251,
											"end": 23288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23251,
											"end": 23288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23251,
											"end": 23288,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23251,
											"end": 23288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22951,
											"end": 23313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22773,
											"end": 23313,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 22773,
											"end": 23313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23341,
											"end": 23342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23327,
											"end": 23343,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23327,
											"end": 23343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23327,
											"end": 23329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23327,
											"end": 23343,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23327,
											"end": 23343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23327,
											"end": 23343,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23323,
											"end": 23748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 23323,
											"end": 23748,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23506,
											"end": 23511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23502,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23490,
											"end": 23502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23490,
											"end": 23511,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23511,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23511,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23511,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23511,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23490,
											"end": 23511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23323,
											"end": 23748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 23323,
											"end": 23748,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23323,
											"end": 23748,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 23323,
											"end": 23748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23718,
											"end": 23723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23701,
											"end": 23710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23701,
											"end": 23714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23711,
											"end": 23713,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23701,
											"end": 23714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23701,
											"end": 23714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23701,
											"end": 23714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23701,
											"end": 23714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23701,
											"end": 23714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23701,
											"end": 23714,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23701,
											"end": 23714,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23701,
											"end": 23714,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23701,
											"end": 23714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23701,
											"end": 23714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23701,
											"end": 23714,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23701,
											"end": 23714,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23701,
											"end": 23714,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23701,
											"end": 23714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23701,
											"end": 23714,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23701,
											"end": 23714,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23701,
											"end": 23723,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23701,
											"end": 23723,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23701,
											"end": 23723,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23701,
											"end": 23723,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23701,
											"end": 23723,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23701,
											"end": 23723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23701,
											"end": 23723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23701,
											"end": 23723,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23701,
											"end": 23723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23701,
											"end": 23723,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23701,
											"end": 23723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23323,
											"end": 23748,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 23323,
											"end": 23748,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23778,
											"end": 23780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23763,
											"end": 23788,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23763,
											"end": 23788,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23772,
											"end": 23776,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23763,
											"end": 23788,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23763,
											"end": 23788,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23763,
											"end": 23788,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 23782,
											"end": 23787,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23763,
											"end": 23788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23763,
											"end": 23788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23763,
											"end": 23788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 23763,
											"end": 23788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23763,
											"end": 23788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23763,
											"end": 23788,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 23763,
											"end": 23788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23763,
											"end": 23788,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 23763,
											"end": 23788,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23763,
											"end": 23788,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23763,
											"end": 23788,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23763,
											"end": 23788,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23763,
											"end": 23788,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23763,
											"end": 23788,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23763,
											"end": 23788,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23763,
											"end": 23788,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 22688,
											"end": 23795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22688,
											"end": 23795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22688,
											"end": 23795,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22688,
											"end": 23795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12499,
											"end": 12605,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 12499,
											"end": 12605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12565,
											"end": 12573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 12565,
											"end": 12571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 12565,
											"end": 12573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12565,
											"end": 12573,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 12565,
											"end": 12573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 12557,
											"end": 12598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12557,
											"end": 12598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12598,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12557,
											"end": 12598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12598,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12557,
											"end": 12598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 12557,
											"end": 12598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 12557,
											"end": 12598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12598,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 12557,
											"end": 12598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12557,
											"end": 12598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12598,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12598,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12598,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12557,
											"end": 12598,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 12557,
											"end": 12598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12499,
											"end": 12605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12321,
											"end": 12427,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 12321,
											"end": 12427,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 12391,
											"end": 12399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12399,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 12391,
											"end": 12399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12390,
											"end": 12399,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 12382,
											"end": 12420,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12382,
											"end": 12420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12420,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12382,
											"end": 12420,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12420,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12382,
											"end": 12420,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 12382,
											"end": 12420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 12382,
											"end": 12420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12420,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 12382,
											"end": 12420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12382,
											"end": 12420,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12420,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12420,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12382,
											"end": 12420,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 12382,
											"end": 12420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12321,
											"end": 12427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 3533,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3521,
											"end": 3558,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3663,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3690,
											"end": 3699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3771,
											"end": 3780,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3764,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 3714,
											"end": 3785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 3714,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3891,
											"end": 3897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3942,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3928,
											"end": 3937,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3926,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3938,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3911,
											"end": 3943,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3946,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 3946,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 3908,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4067,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 4136,
											"end": 4143,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4133,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4125,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4112,
											"end": 4134,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 4091,
											"end": 4144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 4091,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4037,
											"end": 4154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 4264,
											"end": 4271,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4253,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 4219,
											"end": 4272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 4219,
											"end": 4272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4209,
											"end": 4272,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4164,
											"end": 4282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4321,
											"end": 4323,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 4392,
											"end": 4399,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4383,
											"end": 4389,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4372,
											"end": 4381,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4368,
											"end": 4390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 4347,
											"end": 4400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 4347,
											"end": 4400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4292,
											"end": 4410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 4417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4498,
											"end": 4502,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4491,
											"end": 4496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4476,
											"end": 4503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4423,
											"end": 4509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 4614,
											"end": 4619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 4598,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 4598,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4586,
											"end": 4621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4762,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4749,
											"end": 4758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4745,
											"end": 4763,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4835,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4819,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 4773,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 4773,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4912,
											"end": 4918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4958,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4936,
											"end": 4959,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4932,
											"end": 4964,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 4967,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 4967,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 4929,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 5157,
											"end": 5164,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5137,
											"end": 5146,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5133,
											"end": 5155,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 5112,
											"end": 5165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 5112,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5058,
											"end": 5175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 5182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5247,
											"end": 5253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5296,
											"end": 5298,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5275,
											"end": 5282,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5294,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5267,
											"end": 5299,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 5302,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 5302,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 5264,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5422,
											"end": 5423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 5492,
											"end": 5499,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5481,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5468,
											"end": 5490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 5447,
											"end": 5500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 5447,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5500,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5188,
											"end": 5517,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 5628,
											"end": 5633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 5610,
											"end": 5634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 5610,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5605,
											"end": 5608,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5598,
											"end": 5635,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5641,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5740,
											"end": 5744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5778,
											"end": 5780,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5767,
											"end": 5776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5763,
											"end": 5781,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 5859,
											"end": 5860,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5848,
											"end": 5857,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5844,
											"end": 5861,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5835,
											"end": 5841,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 5791,
											"end": 5862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 5791,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5647,
											"end": 5869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 5949,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 5957,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6000,
											"end": 6002,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 5997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5979,
											"end": 5986,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5975,
											"end": 5998,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5971,
											"end": 6003,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 6006,
											"end": 6085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 6006,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5968,
											"end": 6087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6126,
											"end": 6127,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 6196,
											"end": 6203,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6187,
											"end": 6193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6176,
											"end": 6185,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6172,
											"end": 6194,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 6151,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 6151,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6141,
											"end": 6204,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6141,
											"end": 6204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6255,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 6324,
											"end": 6331,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6304,
											"end": 6313,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6300,
											"end": 6322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 6279,
											"end": 6332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 6279,
											"end": 6332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6269,
											"end": 6332,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6269,
											"end": 6332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6224,
											"end": 6342,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 6349,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5875,
											"end": 6349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6355,
											"end": 6535,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 6355,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6403,
											"end": 6480,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6400,
											"end": 6401,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6393,
											"end": 6481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6500,
											"end": 6504,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6497,
											"end": 6498,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6490,
											"end": 6505,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6524,
											"end": 6528,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6521,
											"end": 6522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6514,
											"end": 6529,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6622,
											"end": 6623,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6616,
											"end": 6620,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6624,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6624,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6669,
											"end": 6670,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6663,
											"end": 6667,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6659,
											"end": 6671,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6690,
											"end": 6708,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6746,
											"end": 6750,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 6738,
											"end": 6744,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6734,
											"end": 6751,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6724,
											"end": 6751,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6724,
											"end": 6751,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 6680,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6808,
											"end": 6810,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6800,
											"end": 6806,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6811,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6777,
											"end": 6795,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 6827,
											"end": 6845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 6827,
											"end": 6845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 6771,
											"end": 6855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6592,
											"end": 6861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6867,
											"end": 7309,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 6867,
											"end": 7309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7016,
											"end": 7020,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7054,
											"end": 7056,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7043,
											"end": 7052,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7039,
											"end": 7057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 7135,
											"end": 7136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7124,
											"end": 7133,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7111,
											"end": 7117,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 7067,
											"end": 7138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7138,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 7067,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7148,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 7216,
											"end": 7218,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7205,
											"end": 7214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7219,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7192,
											"end": 7198,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7148,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 7148,
											"end": 7220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7148,
											"end": 7220,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 7148,
											"end": 7220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7230,
											"end": 7302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 7298,
											"end": 7300,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7287,
											"end": 7296,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7283,
											"end": 7301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7274,
											"end": 7280,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7230,
											"end": 7302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 7230,
											"end": 7302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7230,
											"end": 7302,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 7230,
											"end": 7302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6867,
											"end": 7309,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6867,
											"end": 7309,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6867,
											"end": 7309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6867,
											"end": 7309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6867,
											"end": 7309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6867,
											"end": 7309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6867,
											"end": 7309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7315,
											"end": 7495,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 7315,
											"end": 7495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7363,
											"end": 7440,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7360,
											"end": 7361,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7353,
											"end": 7441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7460,
											"end": 7464,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7457,
											"end": 7458,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7450,
											"end": 7465,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7484,
											"end": 7488,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7481,
											"end": 7482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7474,
											"end": 7489,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7692,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 7501,
											"end": 7692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7541,
											"end": 7544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7560,
											"end": 7580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 7578,
											"end": 7579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 7560,
											"end": 7580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7580,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 7560,
											"end": 7580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7555,
											"end": 7580,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7555,
											"end": 7580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7594,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 7612,
											"end": 7613,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7594,
											"end": 7614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 7594,
											"end": 7614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7594,
											"end": 7614,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 7594,
											"end": 7614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7614,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7589,
											"end": 7614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7637,
											"end": 7638,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7634,
											"end": 7635,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7639,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7623,
											"end": 7639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7623,
											"end": 7639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7658,
											"end": 7661,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7655,
											"end": 7656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7662,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7649,
											"end": 7685,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7649,
											"end": 7685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 7649,
											"end": 7685,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7665,
											"end": 7683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 7665,
											"end": 7683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 7665,
											"end": 7683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7665,
											"end": 7683,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 7665,
											"end": 7683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7649,
											"end": 7685,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 7649,
											"end": 7685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7692,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7692,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7692,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7501,
											"end": 7692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7698,
											"end": 7868,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 7698,
											"end": 7868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7838,
											"end": 7860,
											"name": "PUSH",
											"source": 1,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 7834,
											"end": 7835,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7826,
											"end": 7832,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7822,
											"end": 7836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7861,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7698,
											"end": 7868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7698,
											"end": 7868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7874,
											"end": 8240,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 7874,
											"end": 8240,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8016,
											"end": 8019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8037,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 8101,
											"end": 8103,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 8096,
											"end": 8099,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8037,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 8037,
											"end": 8104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8037,
											"end": 8104,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 8037,
											"end": 8104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8030,
											"end": 8104,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8030,
											"end": 8104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8113,
											"end": 8206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 8202,
											"end": 8205,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8113,
											"end": 8206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 8113,
											"end": 8206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8113,
											"end": 8206,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 8113,
											"end": 8206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8231,
											"end": 8233,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8226,
											"end": 8229,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8222,
											"end": 8234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8215,
											"end": 8234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8215,
											"end": 8234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7874,
											"end": 8240,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7874,
											"end": 8240,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7874,
											"end": 8240,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7874,
											"end": 8240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8246,
											"end": 8665,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 8246,
											"end": 8665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8412,
											"end": 8416,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8450,
											"end": 8452,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8439,
											"end": 8448,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8435,
											"end": 8453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8427,
											"end": 8453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8427,
											"end": 8453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8499,
											"end": 8508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8493,
											"end": 8497,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8489,
											"end": 8509,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8485,
											"end": 8486,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8474,
											"end": 8483,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8470,
											"end": 8487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8463,
											"end": 8510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8527,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 8653,
											"end": 8657,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8527,
											"end": 8658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 8527,
											"end": 8658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8527,
											"end": 8658,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 8527,
											"end": 8658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8519,
											"end": 8658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8519,
											"end": 8658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8246,
											"end": 8665,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8246,
											"end": 8665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8246,
											"end": 8665,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8246,
											"end": 8665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8671,
											"end": 8837,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 8671,
											"end": 8837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8811,
											"end": 8829,
											"name": "PUSH",
											"source": 1,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 8807,
											"end": 8808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8799,
											"end": 8805,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8809,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8788,
											"end": 8830,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8671,
											"end": 8837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8671,
											"end": 8837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8985,
											"end": 8988,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9006,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 9070,
											"end": 9072,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 9065,
											"end": 9068,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9006,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 9006,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9006,
											"end": 9073,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 9006,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9073,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9082,
											"end": 9175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 9171,
											"end": 9174,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9082,
											"end": 9175,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 9082,
											"end": 9175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9082,
											"end": 9175,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 9082,
											"end": 9175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9200,
											"end": 9202,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9195,
											"end": 9198,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9191,
											"end": 9203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9184,
											"end": 9203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8843,
											"end": 9209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8843,
											"end": 9209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9381,
											"end": 9385,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9419,
											"end": 9421,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9408,
											"end": 9417,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9404,
											"end": 9422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9396,
											"end": 9422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9396,
											"end": 9422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9468,
											"end": 9477,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9462,
											"end": 9466,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9458,
											"end": 9478,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9454,
											"end": 9455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9443,
											"end": 9452,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9439,
											"end": 9456,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9432,
											"end": 9479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9496,
											"end": 9627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9496,
											"end": 9627,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 9496,
											"end": 9627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9496,
											"end": 9627,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 9496,
											"end": 9627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9488,
											"end": 9627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9488,
											"end": 9627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9215,
											"end": 9634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9215,
											"end": 9634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/Liberswap/USDM_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Default Constructor With Initial Supply Arguments*\"},\"pause()\":{\"notice\":\"Pause Token Function Controlled by Owner Only*\"},\"unpause()\":{\"notice\":\"Unpause Token Function Controlled by Owner Only*\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Liberswap/USDM_flattened.sol\":\"USDT_Token\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Liberswap/USDM_flattened.sol\":{\"keccak256\":\"0x7c3a1be4f06975f282b34404ea0b05336346649198091286e95a7b6ad111e29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87d1f06fbbaf441e3cb05933a56ba264a107d772ec69107828afcc9e531ab0ca\",\"dweb:/ipfs/Qmdb1iiFFrKYDpR9jkcrMSkjeaziYkon6qv2D6qZ6gyd1p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 522,
								"contract": "contracts/Liberswap/USDM_flattened.sol:USDT_Token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 528,
								"contract": "contracts/Liberswap/USDM_flattened.sol:USDT_Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 530,
								"contract": "contracts/Liberswap/USDM_flattened.sol:USDT_Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 532,
								"contract": "contracts/Liberswap/USDM_flattened.sol:USDT_Token",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 534,
								"contract": "contracts/Liberswap/USDM_flattened.sol:USDT_Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 318,
								"contract": "contracts/Liberswap/USDM_flattened.sol:USDT_Token",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 163,
								"contract": "contracts/Liberswap/USDM_flattened.sol:USDT_Token",
								"label": "_owner",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Default Constructor With Initial Supply Arguments*"
							},
							"pause()": {
								"notice": "Pause Token Function Controlled by Owner Only*"
							},
							"unpause()": {
								"notice": "Unpause Token Function Controlled by Owner Only*"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Liberswap/USDM_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/Liberswap/USDM_flattened.sol",
					"exportedSymbols": {
						"Context": [
							157
						],
						"ERC20": [
							1014
						],
						"ERC20Burnable": [
							1055
						],
						"IERC1155Errors": [
							136
						],
						"IERC20": [
							485
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							508
						],
						"IERC721Errors": [
							89
						],
						"Ownable": [
							302
						],
						"Pausable": [
							408
						],
						"USDT_Token": [
							1110
						]
					},
					"id": 1111,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "177:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "203:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "353:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "372:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "692:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "725:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "717:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "741:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "733:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "758:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "750:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "716:49:0"
									},
									"src": "686:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "772:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "935:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "962:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "954:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "954:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "953:16:0"
									},
									"src": "929:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "976:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1146:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1175:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1167:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1167:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1166:18:0"
									},
									"src": "1140:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1191:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1547:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1582:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1574:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1599:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1591:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1591:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1618:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1610:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1610:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1573:52:0"
									},
									"src": "1541:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1632:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1817:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1846:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1838:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1837:18:0"
									},
									"src": "1811:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1862:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2068:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2096:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2088:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:17:0"
									},
									"src": "2062:43:0"
								}
							],
							"scope": 1111,
							"src": "343:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2109:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2261:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2281:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2511:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2538:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2530:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2530:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2529:15:0"
									},
									"src": "2505:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2551:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2694:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2725:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2717:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2717:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2716:17:0"
									},
									"src": "2688:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2740:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "3040:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3069:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3061:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3061:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3085:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3077:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3077:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3102:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3094:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3094:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3060:48:0"
									},
									"src": "3034:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3115:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3278:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3306:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3298:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3298:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3297:16:0"
									},
									"src": "3272:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3320:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3490:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3520:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3512:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3512:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3511:18:0"
									},
									"src": "3484:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3536:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3794:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3829:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3821:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3821:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3847:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3839:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3839:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3820:35:0"
									},
									"src": "3788:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3862:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "4047:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4077:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4069:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4068:18:0"
									},
									"src": "4041:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4093:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4301:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4331:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4323:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4323:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4322:18:0"
									},
									"src": "4295:46:0"
								}
							],
							"scope": 1111,
							"src": "2251:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4345:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4499:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4520:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4892:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4927:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4919:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4919:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4943:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4935:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4935:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4960:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4952:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4952:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4976:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4968:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4968:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4918:66:0"
									},
									"src": "4886:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4991:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5154:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5183:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5175:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5174:16:0"
									},
									"src": "5148:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5197:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5367:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5398:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5390:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5389:18:0"
									},
									"src": "5361:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5414:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5681:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5718:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5710:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5710:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5736:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5728:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5728:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:33:0"
									},
									"src": "5675:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5749:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5934:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5965:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5957:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5957:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5956:18:0"
									},
									"src": "5928:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5981:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6189:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6220:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6212:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6212:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6211:18:0"
									},
									"src": "6183:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6236:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6527:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6561:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6553:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6553:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6580:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6572:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6552:41:0"
									},
									"src": "6521:73:0"
								}
							],
							"scope": 1111,
							"src": "4489:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						},
						{
							"id": 137,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "6720:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 138,
								"nodeType": "StructuredDocumentation",
								"src": "6746:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 157,
							"linearizedBaseContracts": [
								157
							],
							"name": "Context",
							"nameLocation": "7261:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "7337:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 143,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7354:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7358:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7354:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 142,
												"id": 145,
												"nodeType": "Return",
												"src": "7347:17:0"
											}
										]
									},
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "7284:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7294:2:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "7328:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7328:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7327:9:0"
									},
									"scope": 157,
									"src": "7275:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "7444:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 152,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7461:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7465:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "7461:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 151,
												"id": 154,
												"nodeType": "Return",
												"src": "7454:15:0"
											}
										]
									},
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "7386:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7394:2:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "7428:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 149,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7428:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7427:16:0"
									},
									"scope": 157,
									"src": "7377:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1111,
							"src": "7243:235:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 158,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "7604:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 160,
										"name": "Context",
										"nameLocations": [
											"8148:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 157,
										"src": "8148:7:0"
									},
									"id": 161,
									"nodeType": "InheritanceSpecifier",
									"src": "8148:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 159,
								"nodeType": "StructuredDocumentation",
								"src": "7631:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302,
								157
							],
							"name": "Ownable",
							"nameLocation": "8137:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 163,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "8178:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "8162:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 162,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8162:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "8191:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 168,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "8287:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8322:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "8314:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8313:17:0"
									},
									"src": "8281:50:0"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "8337:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 173,
									"name": "OwnableInvalidOwner",
									"nameLocation": "8430:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8458:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "8450:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8450:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8449:15:0"
									},
									"src": "8424:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 179,
									"name": "OwnershipTransferred",
									"nameLocation": "8477:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "8514:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "8498:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8498:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "8545:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "8529:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8529:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8497:57:0"
									},
									"src": "8471:84:0"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "8715:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 185,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 182,
														"src": "8729:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8753:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8745:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 186,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8745:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 189,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8745:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8729:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 199,
												"nodeType": "IfStatement",
												"src": "8725:95:0",
												"trueBody": {
													"id": 198,
													"nodeType": "Block",
													"src": "8757:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 194,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8806:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8798:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 192,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8798:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8798:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 191,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 173,
																	"src": "8778:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8778:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 197,
															"nodeType": "RevertStatement",
															"src": "8771:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 201,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "8848:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 200,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "8829:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8829:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "8829:32:0"
											}
										]
									},
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "8561:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 205,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "8701:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "8693:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8693:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8692:22:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8715:0:0"
									},
									"scope": 302,
									"src": "8681:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "8977:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 208,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "8987:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8987:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "8987:13:0"
											},
											{
												"id": 211,
												"nodeType": "PlaceholderStatement",
												"src": "9010:1:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "8874:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 213,
									"name": "onlyOwner",
									"nameLocation": "8965:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8974:2:0"
									},
									"src": "8956:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 221,
										"nodeType": "Block",
										"src": "9149:30:0",
										"statements": [
											{
												"expression": {
													"id": 219,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 163,
													"src": "9166:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 218,
												"id": 220,
												"nodeType": "Return",
												"src": "9159:13:0"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "9024:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 222,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "9103:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9108:2:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "9140:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9140:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9139:9:0"
									},
									"scope": 302,
									"src": "9094:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "9297:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 226,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 222,
															"src": "9311:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9311:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 228,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "9322:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9322:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9311:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 237,
												"nodeType": "IfStatement",
												"src": "9307:101:0",
												"trueBody": {
													"id": 236,
													"nodeType": "Block",
													"src": "9336:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 232,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "9384:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 233,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9384:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 231,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "9357:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9357:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 235,
															"nodeType": "RevertStatement",
															"src": "9350:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "9185:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "9261:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9272:2:0"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9297:0:0"
									},
									"scope": 302,
									"src": "9252:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "9803:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9840:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9832:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 246,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9832:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9832:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 245,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "9813:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9813:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "9813:30:0"
											}
										]
									},
									"documentation": {
										"id": 240,
										"nodeType": "StructuredDocumentation",
										"src": "9420:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 253,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 243,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 242,
												"name": "onlyOwner",
												"nameLocations": [
													"9793:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 213,
												"src": "9793:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9793:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "9758:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9775:2:0"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9803:0:0"
									},
									"scope": 302,
									"src": "9749:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "10069:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 261,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "10083:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 264,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10103:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10095:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 262,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10095:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10095:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10083:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 275,
												"nodeType": "IfStatement",
												"src": "10079:91:0",
												"trueBody": {
													"id": 274,
													"nodeType": "Block",
													"src": "10107:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 270,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10156:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10148:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 268,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10148:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10148:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 267,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 173,
																	"src": "10128:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10128:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 273,
															"nodeType": "RevertStatement",
															"src": "10121:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 277,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 256,
															"src": "10198:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 276,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 301,
														"src": "10179:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10179:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "10179:28:0"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "9856:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 259,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 258,
												"name": "onlyOwner",
												"nameLocations": [
													"10059:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 213,
												"src": "10059:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "10059:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "10008:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "10034:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "10026:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10026:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10025:18:0"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10069:0:0"
									},
									"scope": 302,
									"src": "9999:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "10431:124:0",
										"statements": [
											{
												"assignments": [
													288
												],
												"declarations": [
													{
														"constant": false,
														"id": 288,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "10449:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 300,
														"src": "10441:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 287,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10441:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 290,
												"initialValue": {
													"id": 289,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 163,
													"src": "10460:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10441:25:0"
											},
											{
												"expression": {
													"id": 293,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 291,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "10476:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 292,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "10485:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10476:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 294,
												"nodeType": "ExpressionStatement",
												"src": "10476:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 296,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "10529:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 297,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 284,
															"src": "10539:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 295,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 179,
														"src": "10508:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10508:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "EmitStatement",
												"src": "10503:45:0"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "10220:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "10377:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "10404:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "10396:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:18:0"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10431:0:0"
									},
									"scope": 302,
									"src": "10368:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1111,
							"src": "8119:2438:0",
							"usedErrors": [
								168,
								173
							],
							"usedEvents": [
								179
							]
						},
						{
							"id": 303,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "10689:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 305,
										"name": "Context",
										"nameLocations": [
											"11186:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 157,
										"src": "11186:7:0"
									},
									"id": 306,
									"nodeType": "InheritanceSpecifier",
									"src": "11186:7:0"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 304,
								"nodeType": "StructuredDocumentation",
								"src": "10716:439:0",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 408,
							"linearizedBaseContracts": [
								408,
								157
							],
							"name": "Pausable",
							"nameLocation": "11174:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "11200:73:0",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 311,
									"name": "Paused",
									"nameLocation": "11284:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "11291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11290:17:0"
									},
									"src": "11278:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "11314:70:0",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 316,
									"name": "Unpaused",
									"nameLocation": "11395:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11412:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "11404:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11403:17:0"
									},
									"src": "11389:32:0"
								},
								{
									"constant": false,
									"id": 318,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "11440:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 408,
									"src": "11427:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 317,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "11427:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "11540:32:0",
										"statements": [
											{
												"expression": {
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 322,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "11550:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11560:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "11550:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "11550:15:0"
											}
										]
									},
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "11454:67:0",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 327,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11537:2:0"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11540:0:0"
									},
									"scope": 408,
									"src": "11526:46:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "11783:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 330,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "11793:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11793:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "11793:19:0"
											},
											{
												"id": 333,
												"nodeType": "PlaceholderStatement",
												"src": "11822:1:0"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "11578:175:0",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 335,
									"name": "whenNotPaused",
									"nameLocation": "11767:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11780:2:0"
									},
									"src": "11758:72:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "12030:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 338,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "12040:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12040:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "12040:16:0"
											},
											{
												"id": 341,
												"nodeType": "PlaceholderStatement",
												"src": "12066:1:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "11836:167:0",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 343,
									"name": "whenPaused",
									"nameLocation": "12017:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12027:2:0"
									},
									"src": "12008:66:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 351,
										"nodeType": "Block",
										"src": "12222:31:0",
										"statements": [
											{
												"expression": {
													"id": 349,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 318,
													"src": "12239:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 348,
												"id": 350,
												"nodeType": "Return",
												"src": "12232:14:0"
											}
										]
									},
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "12080:84:0",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 352,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "12178:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12184:2:0"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "12216:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 346,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12216:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12215:6:0"
									},
									"scope": 408,
									"src": "12169:84:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "12372:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "12390:9:0",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 357,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "12391:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12391:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12401:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 356,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12382:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12382:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "12382:38:0"
											}
										]
									},
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "12259:57:0",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "12330:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12347:2:0"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12372:0:0"
									},
									"scope": 408,
									"src": "12321:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "12547:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 369,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 352,
																"src": "12565:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12565:8:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12575:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 368,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12557:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12557:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "12557:41:0"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "12433:61:0",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "12508:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12522:2:0"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12547:0:0"
									},
									"scope": 408,
									"src": "12499:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "12789:66:0",
										"statements": [
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "12799:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12809:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "12799:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "12799:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 386,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "12835:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12835:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 385,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "12828:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12828:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "EmitStatement",
												"src": "12823:25:0"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "12611:124:0",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 379,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 378,
												"name": "whenNotPaused",
												"nameLocations": [
													"12775:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 335,
												"src": "12775:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "12775:13:0"
										}
									],
									"name": "_pause",
									"nameLocation": "12749:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12755:2:0"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12789:0:0"
									},
									"scope": 408,
									"src": "12740:115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "13035:69:0",
										"statements": [
											{
												"expression": {
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 397,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "13045:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13055:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "13045:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "13045:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 402,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "13084:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13084:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 401,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 316,
														"src": "13075:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13075:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "EmitStatement",
												"src": "13070:27:0"
											}
										]
									},
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "12861:121:0",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 395,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 394,
												"name": "whenPaused",
												"nameLocations": [
													"13024:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 343,
												"src": "13024:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "13024:10:0"
										}
									],
									"name": "_unpause",
									"nameLocation": "12996:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13004:2:0"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13035:0:0"
									},
									"scope": 408,
									"src": "12987:117:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1111,
							"src": "11156:1950:0",
							"usedErrors": [],
							"usedEvents": [
								311,
								316
							]
						},
						{
							"id": 409,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "13240:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 410,
								"nodeType": "StructuredDocumentation",
								"src": "13266:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 485,
							"linearizedBaseContracts": [
								485
							],
							"name": "IERC20",
							"nameLocation": "13347:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 411,
										"nodeType": "StructuredDocumentation",
										"src": "13360:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 419,
									"name": "Transfer",
									"nameLocation": "13529:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13554:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "13538:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13576:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "13560:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13560:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13588:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "13580:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13580:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13537:57:0"
									},
									"src": "13523:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "13601:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 428,
									"name": "Approval",
									"nameLocation": "13760:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "13785:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "13769:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13769:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "13808:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "13792:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13792:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13825:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "13817:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13817:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13768:63:0"
									},
									"src": "13754:78:0"
								},
								{
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "13838:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 434,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13917:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13928:2:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "13954:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13954:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13953:9:0"
									},
									"scope": 485,
									"src": "13908:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "13969:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 442,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "14054:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14072:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "14064:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14064:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14063:17:0"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "14104:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14103:9:0"
									},
									"scope": 485,
									"src": "14045:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "14119:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 452,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14346:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14363:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "14355:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14355:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14375:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "14367:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14367:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14354:27:0"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "14400:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 449,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14400:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14399:6:0"
									},
									"scope": 485,
									"src": "14337:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "14412:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 462,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14690:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14708:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "14700:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14700:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14723:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "14715:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14699:32:0"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "14755:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14754:9:0"
									},
									"scope": 485,
									"src": "14681:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "14770:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 472,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "15451:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15467:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "15459:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15459:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15484:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "15476:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15476:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15458:32:0"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "15509:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 469,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15509:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15508:6:0"
									},
									"scope": 485,
									"src": "15442:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "15521:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15832:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15853:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "15845:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15867:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "15859:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15859:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15879:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "15871:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15844:41:0"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "15904:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15904:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15903:6:0"
									},
									"scope": 485,
									"src": "15823:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1111,
							"src": "13337:2575:0",
							"usedErrors": [],
							"usedEvents": [
								419,
								428
							]
						},
						{
							"id": 486,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "16084:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 488,
										"name": "IERC20",
										"nameLocations": [
											"16226:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 485,
										"src": "16226:6:0"
									},
									"id": 489,
									"nodeType": "InheritanceSpecifier",
									"src": "16226:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 487,
								"nodeType": "StructuredDocumentation",
								"src": "16111:86:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 508,
							"linearizedBaseContracts": [
								508,
								485
							],
							"name": "IERC20Metadata",
							"nameLocation": "16208:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "16239:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 495,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "16307:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16311:2:0"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "16337:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 492,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16336:15:0"
									},
									"scope": 508,
									"src": "16298:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "16358:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "16428:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16434:2:0"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16460:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 498,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16460:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16459:15:0"
									},
									"scope": 508,
									"src": "16419:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "16481:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 507,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "16560:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16568:2:0"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "16594:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 504,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16594:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16593:7:0"
									},
									"scope": 508,
									"src": "16551:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1111,
							"src": "16198:405:0",
							"usedErrors": [],
							"usedEvents": [
								419,
								428
							]
						},
						{
							"id": 509,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "16735:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 511,
										"name": "Context",
										"nameLocations": [
											"17845:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 157,
										"src": "17845:7:0"
									},
									"id": 512,
									"nodeType": "InheritanceSpecifier",
									"src": "17845:7:0"
								},
								{
									"baseName": {
										"id": 513,
										"name": "IERC20",
										"nameLocations": [
											"17854:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 485,
										"src": "17854:6:0"
									},
									"id": 514,
									"nodeType": "InheritanceSpecifier",
									"src": "17854:6:0"
								},
								{
									"baseName": {
										"id": 515,
										"name": "IERC20Metadata",
										"nameLocations": [
											"17862:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 508,
										"src": "17862:14:0"
									},
									"id": 516,
									"nodeType": "InheritanceSpecifier",
									"src": "17862:14:0"
								},
								{
									"baseName": {
										"id": 517,
										"name": "IERC20Errors",
										"nameLocations": [
											"17878:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "17878:12:0"
									},
									"id": 518,
									"nodeType": "InheritanceSpecifier",
									"src": "17878:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 510,
								"nodeType": "StructuredDocumentation",
								"src": "16765:1052:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1014,
							"linearizedBaseContracts": [
								1014,
								41,
								508,
								485,
								157
							],
							"name": "ERC20",
							"nameLocation": "17836:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 522,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "17941:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "17897:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 521,
										"keyName": "account",
										"keyNameLocation": "17913:7:0",
										"keyType": {
											"id": 519,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "17905:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "17897:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 520,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "17924:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 528,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "18029:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "17957:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 527,
										"keyName": "account",
										"keyNameLocation": "17973:7:0",
										"keyType": {
											"id": 523,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "17965:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "17957:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 526,
											"keyName": "spender",
											"keyNameLocation": "18000:7:0",
											"keyType": {
												"id": 524,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "17992:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "17984:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 525,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "18011:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 530,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "18063:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "18047:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 529,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "18047:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 532,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "18097:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "18082:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 531,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "18082:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 534,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "18123:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "18108:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 533,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "18108:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "18369:57:0",
										"statements": [
											{
												"expression": {
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 542,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "18379:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 543,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "18387:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "18379:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "18379:13:0"
											},
											{
												"expression": {
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 546,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "18402:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 547,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "18412:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "18402:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "18402:17:0"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "18137:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 551,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "18339:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "18325:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 536,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18325:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "18360:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "18346:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 538,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18346:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18324:44:0"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18369:0:0"
									},
									"scope": 1014,
									"src": "18313:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										495
									],
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "18551:29:0",
										"statements": [
											{
												"expression": {
													"id": 557,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 532,
													"src": "18568:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 556,
												"id": 558,
												"nodeType": "Return",
												"src": "18561:12:0"
											}
										]
									},
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "18432:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "18500:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18504:2:0"
									},
									"returnParameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "18536:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 554,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18536:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18535:15:0"
									},
									"scope": 1014,
									"src": "18491:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										501
									],
									"body": {
										"id": 568,
										"nodeType": "Block",
										"src": "18755:31:0",
										"statements": [
											{
												"expression": {
													"id": 566,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 534,
													"src": "18772:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 565,
												"id": 567,
												"nodeType": "Return",
												"src": "18765:14:0"
											}
										]
									},
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "18586:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "18702:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18708:2:0"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 569,
												"src": "18740:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 563,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18740:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18739:15:0"
									},
									"scope": 1014,
									"src": "18693:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										507
									],
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "19475:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19492:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 574,
												"id": 576,
												"nodeType": "Return",
												"src": "19485:9:0"
											}
										]
									},
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "18792:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "19428:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19436:2:0"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "19468:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 572,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "19468:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19467:7:0"
									},
									"scope": 1014,
									"src": "19419:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										434
									],
									"body": {
										"id": 586,
										"nodeType": "Block",
										"src": "19622:36:0",
										"statements": [
											{
												"expression": {
													"id": 584,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 530,
													"src": "19639:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 583,
												"id": 585,
												"nodeType": "Return",
												"src": "19632:19:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "19507:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "19570:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19581:2:0"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "19613:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19613:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19612:9:0"
									},
									"scope": 1014,
									"src": "19561:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										442
									],
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "19790:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 595,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "19807:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 597,
													"indexExpression": {
														"id": 596,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "19817:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19807:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 594,
												"id": 598,
												"nodeType": "Return",
												"src": "19800:25:0"
											}
										]
									},
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "19664:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "19725:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19743:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "19735:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19735:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19734:17:0"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "19781:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19780:9:0"
									},
									"scope": 1014,
									"src": "19716:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										452
									],
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "20102:103:0",
										"statements": [
											{
												"assignments": [
													611
												],
												"declarations": [
													{
														"constant": false,
														"id": 611,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "20120:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 623,
														"src": "20112:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 610,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20112:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 614,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 612,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "20128:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20128:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20112:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 616,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "20160:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "20167:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 618,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "20171:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 615,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "20150:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20150:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 620,
												"nodeType": "ExpressionStatement",
												"src": "20150:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20194:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 609,
												"id": 622,
												"nodeType": "Return",
												"src": "20187:11:0"
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "19838:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "20036:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20053:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "20045:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 602,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20045:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20065:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "20057:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20057:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20044:27:0"
									},
									"returnParameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "20096:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 607,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20096:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20095:6:0"
									},
									"scope": 1014,
									"src": "20027:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										462
									],
									"body": {
										"id": 640,
										"nodeType": "Block",
										"src": "20352:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 634,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "20369:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 636,
														"indexExpression": {
															"id": 635,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "20381:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "20369:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 638,
													"indexExpression": {
														"id": 637,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "20388:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20369:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 633,
												"id": 639,
												"nodeType": "Return",
												"src": "20362:34:0"
											}
										]
									},
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "20211:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 641,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "20272:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20290:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "20282:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20282:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20305:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "20297:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20297:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20281:32:0"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 641,
												"src": "20343:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20342:9:0"
									},
									"scope": 1014,
									"src": "20263:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										472
									],
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "20789:107:0",
										"statements": [
											{
												"assignments": [
													652
												],
												"declarations": [
													{
														"constant": false,
														"id": 652,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "20807:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 664,
														"src": "20799:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 651,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "20799:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 655,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 653,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "20815:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20815:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20799:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 657,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "20846:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 658,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "20853:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 659,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "20862:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 656,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															905,
															965
														],
														"referencedDeclaration": 905,
														"src": "20837:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20837:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "20837:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20885:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 650,
												"id": 663,
												"nodeType": "Return",
												"src": "20878:11:0"
											}
										]
									},
									"documentation": {
										"id": 642,
										"nodeType": "StructuredDocumentation",
										"src": "20409:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "20719:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20735:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "20727:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 643,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20752:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "20744:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20744:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20726:32:0"
									},
									"returnParameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "20783:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 648,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20783:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20782:6:0"
									},
									"scope": 1014,
									"src": "20710:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										484
									],
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "21549:151:0",
										"statements": [
											{
												"assignments": [
													678
												],
												"declarations": [
													{
														"constant": false,
														"id": 678,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "21567:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "21559:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 677,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "21559:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 681,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 679,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "21577:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21577:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21559:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "21615:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "21621:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "21630:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 682,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "21599:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21599:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "21599:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 689,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "21656:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 690,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "21662:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 691,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "21666:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 688,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "21646:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21646:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "21646:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21689:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 676,
												"id": 695,
												"nodeType": "Return",
												"src": "21682:11:0"
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "20902:549:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "21465:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "21486:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "21478:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21478:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21500:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "21492:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21492:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21512:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "21504:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21504:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21477:41:0"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "21543:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 674,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21543:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21542:6:0"
									},
									"scope": 1014,
									"src": "21456:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "22142:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 707,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "22156:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22172:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22164:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 708,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22164:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22164:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22156:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 721,
												"nodeType": "IfStatement",
												"src": "22152:86:0",
												"trueBody": {
													"id": 720,
													"nodeType": "Block",
													"src": "22176:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 716,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22224:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 715,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "22216:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 714,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "22216:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22216:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 713,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "22197:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22197:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 719,
															"nodeType": "RevertStatement",
															"src": "22190:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 722,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "22251:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22265:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22257:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 723,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22257:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22257:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22251:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 736,
												"nodeType": "IfStatement",
												"src": "22247:86:0",
												"trueBody": {
													"id": 735,
													"nodeType": "Block",
													"src": "22269:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 731,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22319:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "22311:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 729,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "22311:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22311:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 728,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "22290:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22290:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 734,
															"nodeType": "RevertStatement",
															"src": "22283:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 738,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "22350:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 739,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "22356:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 740,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "22360:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 737,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "22342:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22342:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "22342:24:0"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "21706:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "22082:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22100:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "22092:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22114:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "22106:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22106:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22126:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "22118:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22118:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22091:41:0"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22142:0:0"
									},
									"scope": 1014,
									"src": "22073:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "22763:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 754,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "22777:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "22793:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22785:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 755,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22785:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 758,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22785:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22777:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 791,
													"nodeType": "Block",
													"src": "22951:362:0",
													"statements": [
														{
															"assignments": [
																766
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 766,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "22973:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 791,
																	"src": "22965:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 765,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "22965:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 770,
															"initialValue": {
																"baseExpression": {
																	"id": 767,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "22987:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 769,
																"indexExpression": {
																	"id": 768,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "22997:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "22987:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "22965:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 771,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "23020:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 772,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "23034:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23020:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 781,
															"nodeType": "IfStatement",
															"src": "23016:115:0",
															"trueBody": {
																"id": 780,
																"nodeType": "Block",
																"src": "23041:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 775,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 747,
																					"src": "23091:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 776,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 766,
																					"src": "23097:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 777,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 751,
																					"src": "23110:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 774,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "23066:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 778,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23066:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 779,
																		"nodeType": "RevertStatement",
																		"src": "23059:57:0"
																	}
																]
															}
														},
														{
															"id": 790,
															"nodeType": "UncheckedBlock",
															"src": "23144:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 782,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 522,
																				"src": "23251:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 784,
																			"indexExpression": {
																				"id": 783,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 747,
																				"src": "23261:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "23251:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 787,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 785,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 766,
																				"src": "23269:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 786,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 751,
																				"src": "23283:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23269:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23251:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 789,
																	"nodeType": "ExpressionStatement",
																	"src": "23251:37:0"
																}
															]
														}
													]
												},
												"id": 792,
												"nodeType": "IfStatement",
												"src": "22773:540:0",
												"trueBody": {
													"id": 764,
													"nodeType": "Block",
													"src": "22797:148:0",
													"statements": [
														{
															"expression": {
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 760,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 530,
																	"src": "22913:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 761,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 751,
																	"src": "22929:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22913:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 763,
															"nodeType": "ExpressionStatement",
															"src": "22913:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 793,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 749,
														"src": "23327:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23341:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23333:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 794,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "23333:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 797,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23333:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23327:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "23542:206:0",
													"statements": [
														{
															"id": 811,
															"nodeType": "UncheckedBlock",
															"src": "23556:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 805,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 522,
																				"src": "23701:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 807,
																			"indexExpression": {
																				"id": 806,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 749,
																				"src": "23711:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "23701:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 808,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 751,
																			"src": "23718:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23701:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 810,
																	"nodeType": "ExpressionStatement",
																	"src": "23701:22:0"
																}
															]
														}
													]
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "23323:425:0",
												"trueBody": {
													"id": 804,
													"nodeType": "Block",
													"src": "23345:191:0",
													"statements": [
														{
															"id": 803,
															"nodeType": "UncheckedBlock",
															"src": "23359:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 799,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 530,
																			"src": "23490:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 800,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 751,
																			"src": "23506:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23490:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 802,
																	"nodeType": "ExpressionStatement",
																	"src": "23490:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 815,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "23772:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 816,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "23778:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 817,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 751,
															"src": "23782:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 814,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "23763:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23763:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "EmitStatement",
												"src": "23758:30:0"
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "22379:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "22697:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22713:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "22705:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22705:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22727:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "22719:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22719:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22739:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "22731:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22731:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22704:41:0"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22763:0:0"
									},
									"scope": 1014,
									"src": "22688:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "24194:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 829,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 824,
														"src": "24208:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24227:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 831,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24219:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 830,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "24219:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24219:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24208:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 843,
												"nodeType": "IfStatement",
												"src": "24204:91:0",
												"trueBody": {
													"id": 842,
													"nodeType": "Block",
													"src": "24231:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24281:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "24273:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 836,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "24273:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 839,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24273:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 835,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "24252:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24252:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 841,
															"nodeType": "RevertStatement",
															"src": "24245:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24320:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24312:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 845,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24312:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24312:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "24324:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 850,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "24333:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 844,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "24304:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24304:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "24304:35:0"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "23801:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "24147:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "24161:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "24153:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24178:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "24170:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24170:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24152:32:0"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24194:0:0"
									},
									"scope": 1014,
									"src": "24138:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "24720:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 862,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 857,
														"src": "24734:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24753:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24745:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 863,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "24745:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24745:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24734:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 876,
												"nodeType": "IfStatement",
												"src": "24730:89:0",
												"trueBody": {
													"id": 875,
													"nodeType": "Block",
													"src": "24757:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 871,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24805:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 870,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "24797:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 869,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "24797:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24797:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 868,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "24778:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24778:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 874,
															"nodeType": "RevertStatement",
															"src": "24771:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 878,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "24836:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24853:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24845:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 879,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24845:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24845:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 883,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "24857:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 877,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "24828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24828:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 885,
												"nodeType": "ExpressionStatement",
												"src": "24828:35:0"
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "24352:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "24673:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "24687:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "24679:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24704:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 887,
												"src": "24696:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24678:32:0"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24720:0:0"
									},
									"scope": 1014,
									"src": "24664:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 904,
										"nodeType": "Block",
										"src": "25480:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 898,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 890,
															"src": "25499:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "25506:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 900,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "25515:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25522:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 897,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															905,
															965
														],
														"referencedDeclaration": 965,
														"src": "25490:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25490:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "25490:37:0"
											}
										]
									},
									"documentation": {
										"id": 888,
										"nodeType": "StructuredDocumentation",
										"src": "24876:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 905,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "25415:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "25432:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "25424:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25424:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "25447:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "25439:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25439:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25464:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "25456:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25456:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25423:47:0"
									},
									"returnParameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25480:0:0"
									},
									"scope": 1014,
									"src": "25406:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 964,
										"nodeType": "Block",
										"src": "26464:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 917,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "26478:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26495:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26487:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 918,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "26487:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26487:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "26478:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 931,
												"nodeType": "IfStatement",
												"src": "26474:89:0",
												"trueBody": {
													"id": 930,
													"nodeType": "Block",
													"src": "26499:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 926,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26549:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "26541:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 924,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "26541:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "26541:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 923,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "26520:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26520:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 929,
															"nodeType": "RevertStatement",
															"src": "26513:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 932,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "26576:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26595:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26587:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 933,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "26587:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26587:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "26576:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 946,
												"nodeType": "IfStatement",
												"src": "26572:90:0",
												"trueBody": {
													"id": 945,
													"nodeType": "Block",
													"src": "26599:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 941,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "26648:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "26640:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 939,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "26640:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "26640:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 938,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "26620:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26620:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 944,
															"nodeType": "RevertStatement",
															"src": "26613:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 947,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 528,
																"src": "26671:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 950,
															"indexExpression": {
																"id": 948,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 908,
																"src": "26683:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "26671:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 951,
														"indexExpression": {
															"id": 949,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "26690:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26671:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 952,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "26701:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26671:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 954,
												"nodeType": "ExpressionStatement",
												"src": "26671:35:0"
											},
											{
												"condition": {
													"id": 955,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 914,
													"src": "26720:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 963,
												"nodeType": "IfStatement",
												"src": "26716:76:0",
												"trueBody": {
													"id": 962,
													"nodeType": "Block",
													"src": "26731:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 957,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 908,
																		"src": "26759:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 958,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "26766:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 959,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 912,
																		"src": "26775:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 956,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 428,
																	"src": "26750:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26750:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 961,
															"nodeType": "EmitStatement",
															"src": "26745:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 906,
										"nodeType": "StructuredDocumentation",
										"src": "25540:821:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "26375:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "26392:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "26384:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "26407:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "26399:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26399:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26424:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "26416:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26416:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "26436:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "26431:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 913,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26431:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26383:63:0"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26464:0:0"
									},
									"scope": 1014,
									"src": "26366:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "27169:388:0",
										"statements": [
											{
												"assignments": [
													976
												],
												"declarations": [
													{
														"constant": false,
														"id": 976,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "27187:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1012,
														"src": "27179:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 975,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "27179:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 981,
												"initialValue": {
													"arguments": [
														{
															"id": 978,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "27216:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 979,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "27223:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 977,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "27206:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27206:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27179:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 982,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "27245:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "27270:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 984,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "27270:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 983,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "27265:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27265:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 987,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "27279:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "27265:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27245:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1011,
												"nodeType": "IfStatement",
												"src": "27241:310:0",
												"trueBody": {
													"id": 1010,
													"nodeType": "Block",
													"src": "27284:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 989,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "27302:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 990,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 972,
																	"src": "27321:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27302:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 999,
															"nodeType": "IfStatement",
															"src": "27298:130:0",
															"trueBody": {
																"id": 998,
																"nodeType": "Block",
																"src": "27328:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 993,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 970,
																					"src": "27380:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 994,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 976,
																					"src": "27389:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 995,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 972,
																					"src": "27407:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 992,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "27353:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "27353:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 997,
																		"nodeType": "RevertStatement",
																		"src": "27346:67:0"
																	}
																]
															}
														},
														{
															"id": 1009,
															"nodeType": "UncheckedBlock",
															"src": "27441:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1001,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 968,
																				"src": "27478:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1002,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 970,
																				"src": "27485:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1005,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1003,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 976,
																					"src": "27494:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1004,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 972,
																					"src": "27513:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "27494:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1006,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "27520:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1000,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				905,
																				965
																			],
																			"referencedDeclaration": 965,
																			"src": "27469:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1007,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "27469:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1008,
																	"nodeType": "ExpressionStatement",
																	"src": "27469:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 966,
										"nodeType": "StructuredDocumentation",
										"src": "26804:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "27089:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "27113:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "27105:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27105:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "27128:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "27120:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27120:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27145:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "27137:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27137:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27104:47:0"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27169:0:0"
									},
									"scope": 1014,
									"src": "27080:477:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1111,
							"src": "17818:9741:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								419,
								428
							]
						},
						{
							"id": 1015,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "27729:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1017,
										"name": "Context",
										"nameLocations": [
											"28001:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 157,
										"src": "28001:7:0"
									},
									"id": 1018,
									"nodeType": "InheritanceSpecifier",
									"src": "28001:7:0"
								},
								{
									"baseName": {
										"id": 1019,
										"name": "ERC20",
										"nameLocations": [
											"28010:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1014,
										"src": "28010:5:0"
									},
									"id": 1020,
									"nodeType": "InheritanceSpecifier",
									"src": "28010:5:0"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1016,
								"nodeType": "StructuredDocumentation",
								"src": "27757:208:0",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 1055,
							"linearizedBaseContracts": [
								1055,
								1014,
								41,
								508,
								485,
								157
							],
							"name": "ERC20Burnable",
							"nameLocation": "27984:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "28180:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1027,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "28196:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28196:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1029,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "28210:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1026,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "28190:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28190:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "28190:26:0"
											}
										]
									},
									"documentation": {
										"id": 1021,
										"nodeType": "StructuredDocumentation",
										"src": "28022:109:0",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "28145:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28158:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "28150:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28150:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28149:15:0"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28180:0:0"
									},
									"scope": 1055,
									"src": "28136:87:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "28604:93:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1042,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "28630:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1043,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "28639:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28639:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1045,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "28653:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1041,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "28614:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28614:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "28614:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1049,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1036,
															"src": "28675:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1050,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "28684:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1048,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "28669:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28669:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "28669:21:0"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "28229:305:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "28548:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "28565:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "28557:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28582:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "28574:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28556:32:0"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28604:0:0"
									},
									"scope": 1055,
									"src": "28539:158:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1111,
							"src": "27966:733:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								419,
								428
							]
						},
						{
							"id": 1056,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "28741:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1057,
										"name": "ERC20",
										"nameLocations": [
											"28794:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1014,
										"src": "28794:5:0"
									},
									"id": 1058,
									"nodeType": "InheritanceSpecifier",
									"src": "28794:5:0"
								},
								{
									"baseName": {
										"id": 1059,
										"name": "ERC20Burnable",
										"nameLocations": [
											"28801:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1055,
										"src": "28801:13:0"
									},
									"id": 1060,
									"nodeType": "InheritanceSpecifier",
									"src": "28801:13:0"
								},
								{
									"baseName": {
										"id": 1061,
										"name": "Pausable",
										"nameLocations": [
											"28816:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 408,
										"src": "28816:8:0"
									},
									"id": 1062,
									"nodeType": "InheritanceSpecifier",
									"src": "28816:8:0"
								},
								{
									"baseName": {
										"id": 1063,
										"name": "Ownable",
										"nameLocations": [
											"28826:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "28826:7:0"
									},
									"id": 1064,
									"nodeType": "InheritanceSpecifier",
									"src": "28826:7:0"
								}
							],
							"canonicalName": "USDT_Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1110,
							"linearizedBaseContracts": [
								1110,
								302,
								408,
								1055,
								1014,
								41,
								508,
								485,
								157
							],
							"name": "USDT_Token",
							"nameLocation": "28780:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "28985:63:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1078,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "29001:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29005:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "29001:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030303030303030",
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29013:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000_by_1",
																	"typeString": "int_const 1000000000"
																},
																"value": "1000000000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29026:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1082,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 578,
																		"src": "29030:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "29030:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "29026:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29013:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1077,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "28995:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28995:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1087,
												"nodeType": "ExpressionStatement",
												"src": "28995:46:0"
											}
										]
									},
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "28840:70:0",
										"text": "Default Constructor With Initial Supply Arguments*"
									},
									"id": 1089,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5553445420546f6b656e",
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "28948:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_9654d7981f44a2b3ba3b25b667f4a6f8466aa8c8ec6e19e5dfa6a72f4d11c575",
														"typeString": "literal_string \"USDT Token\""
													},
													"value": "USDT Token"
												},
												{
													"hexValue": "55534454",
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "28962:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8b1a1d9c2b109e527c9134b25b1a1833b16b6594f92daa9f6d9b7a6024bce9d0",
														"typeString": "literal_string \"USDT\""
													},
													"value": "USDT"
												}
											],
											"id": 1072,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1069,
												"name": "ERC20",
												"nameLocations": [
													"28942:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1014,
												"src": "28942:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28942:27:0"
										},
										{
											"arguments": [
												{
													"id": 1074,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1067,
													"src": "28978:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1075,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1073,
												"name": "Ownable",
												"nameLocations": [
													"28970:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "28970:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "28970:14:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "28935:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "28927:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28927:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28926:15:0"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28985:0:0"
									},
									"scope": 1110,
									"src": "28915:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "29159:25:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1095,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "29169:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29169:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "29169:8:0"
											}
										]
									},
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "29054:66:0",
										"text": "Pause Token Function Controlled by Owner Only*"
									},
									"functionSelector": "8456cb59",
									"id": 1099,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1093,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1092,
												"name": "onlyOwner",
												"nameLocations": [
													"29149:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 213,
												"src": "29149:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29149:9:0"
										}
									],
									"name": "pause",
									"nameLocation": "29134:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29139:2:0"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29159:0:0"
									},
									"scope": 1110,
									"src": "29125:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "29299:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1105,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "29309:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29309:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "29309:10:0"
											}
										]
									},
									"documentation": {
										"id": 1100,
										"nodeType": "StructuredDocumentation",
										"src": "29190:68:0",
										"text": "Unpause Token Function Controlled by Owner Only*"
									},
									"functionSelector": "3f4ba83a",
									"id": 1109,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1103,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1102,
												"name": "onlyOwner",
												"nameLocations": [
													"29289:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 213,
												"src": "29289:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "29289:9:0"
										}
									],
									"name": "unpause",
									"nameLocation": "29272:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29279:2:0"
									},
									"returnParameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29299:0:0"
									},
									"scope": 1110,
									"src": "29263:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1111,
							"src": "28771:558:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40,
								168,
								173
							],
							"usedEvents": [
								179,
								311,
								316,
								419,
								428
							]
						}
					],
					"src": "177:29152:0"
				},
				"id": 0
			}
		}
	}
}