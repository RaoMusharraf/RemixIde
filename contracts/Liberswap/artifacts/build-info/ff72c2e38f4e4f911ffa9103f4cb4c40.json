{
	"id": "ff72c2e38f4e4f911ffa9103f4cb4c40",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Liberswap/swaping.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// Importing interfaces and utilities from OpenZeppelin Contracts library\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n///@title TokenSwap contract for swapping tokens, inheriting from Ownable for access control\n/// @author LiberSwap Team\n/// @notice Contarct is based on swaping the usd tokens to substrate and vice versa  \ncontract TokenSwap is Ownable {\n    using SafeERC20 for IERC20; // SafeERC20 library usage for safe token transfers\n\n    // State variables\n    address public Owner; // Variable to store the owner's address, redundant with Ownable's owner()\n\n    // Events for logging different types of token swaps\n    event swapToken(address sender, uint amount);\n    event substrateSwapToken(address sender, uint amount);\n    event Hold_USDM_Token(address sender, uint amount);\n\n    // Constant addresses for USDT, USDC, DAI, and USDM tokens\n    address constant usdt = 0xa5014eA627Ac22A63f2Bf3b46e26d408e72f55c1;\n    address constant usdc = 0x9951342D994001468506DF88F71A582867B50dd4;\n    address constant dai = 0x77F146ca2943294CC53e6c3B5980B572c961ae23;\n    address constant usdm = 0x4b3a514Dd71850277bBa82491f26dACDF089cb68;\n\n    // Mapping to track whitelisted addresses\n    mapping(address => bool) public whiteList;\n    // Array to store all whitelisted addresses for iteration\n    address[] public whilistedAddress;\n    // Nested mapping to track amounts of tokens held by users\n    mapping (address UserAddress=> mapping (address TokenAddress  => uint)) public userTokenAmount;\n    mapping (address UserAddress => uint) public userAmount;\n    // mapping (address UserAddress => uint Amount) public userTotalSwapAmount;\n    mapping (address UserAddress =>  mapping(string => uint Amount)) public userTotalSwapAmount;\n\n    // Variable to track current holdings in the contract\n    uint public currentHoldings;\n\n    // Veriable to track current overColleteralFeeAmount\n    uint public overColleteralFeeAmount;\n\n    // Constructor to set the initial owner of the contract\n    constructor(address initialOwner) Ownable(initialOwner) {\n        Owner = initialOwner;\n    }\n\n    /**\n     * @dev Adds an address to the whitelist.\n     * Only the owner of the contract can call this function.\n     * Emits an event once an address is successfully whitelisted.\n     * \n     * @param _address The address to be added to the whitelist.\n     */\n    function WhiteList(address _address) public onlyOwner{\n        require(!whiteList[_address],\"This Address is already WhiteListed!\");\n        whilistedAddress.push(_address);\n        whiteList[_address] = true;\n    }\n\n    /**\n     * @dev Allows users to swap tokens by transferring them to the contract or distribute a fee among whitelisted addresses.\n     * If the token being swapped is USDM, it is simply collected by the contract.\n     * For other tokens, a 0.3% fee is distributed among all whitelisted addresses, and the rest is collected by the contract.\n     * \n     * @param _ethToken The address of the ERC20 token to be swapped.\n     * @param _amount The amount of the token to be swapped.\n     */\n\n    function swapTokens(address _ethToken,uint256 _amount,string memory substrateAddress) public {\n        require(IERC20(_ethToken).allowance(msg.sender, address(this)) >= _amount, \"Allowance not set\");\n        require(IERC20(_ethToken).balanceOf(msg.sender) >= _amount, \"Insufficient balance\");\n        if(_ethToken == usdm){\n            IERC20(_ethToken).transferFrom(msg.sender, address(this), (_amount));\n            currentHoldings += (_amount);\n            userAmount[msg.sender] = _amount;\n            userTotalSwapAmount[msg.sender][substrateAddress] += _amount;\n            userTokenAmount[msg.sender][_ethToken] += _amount;\n            emit swapToken(msg.sender,_amount);\n        }\n        else{\n            overColleteralFeeAmount = (_amount*3)/1000;\n            uint eachWhilitedAddressFee = overColleteralFeeAmount/whilistedAddress.length;\n            for (uint i=0; i<whilistedAddress.length; i++) \n            {\n                IERC20(_ethToken).transferFrom(msg.sender, whilistedAddress[i], eachWhilitedAddressFee);\n            }\n            IERC20(_ethToken).transferFrom(msg.sender, address(this), (_amount-overColleteralFeeAmount));\n            currentHoldings += (_amount-overColleteralFeeAmount);\n            userAmount[msg.sender] = (_amount-overColleteralFeeAmount);\n            userTotalSwapAmount[msg.sender][substrateAddress] += (_amount-overColleteralFeeAmount);\n            userTokenAmount[msg.sender][_ethToken] += (_amount-overColleteralFeeAmount);\n            emit swapToken(msg.sender,(_amount-overColleteralFeeAmount));\n        }\n       \n    }\n    /**\n     * @dev Allows users to swap tokens back from the contract or distribute a fee among whitelisted addresses before sending back the tokens.\n     * If the token being swapped back is USDM, it is directly transferred to the sender.\n     * For other tokens, a 0.3% fee is distributed among all whitelisted addresses before sending the remaining tokens back to the sender.\n     * \n     * @param _ethToken The address of the ERC20 token to be swapped back.\n     * @param _amount The amount of the token to be swapped back.\n     */\n    function substrateSwapTokens(address _ethToken,uint256 _amount) public {\n        require(IERC20(_ethToken).balanceOf(address(this)) >= _amount, \"Insufficient balance\");\n        if(_ethToken == usdm){\n            IERC20(_ethToken).safeTransfer(msg.sender,_amount);\n            currentHoldings -= (_amount);\n            userAmount[msg.sender] = _amount;\n            userTokenAmount[msg.sender][_ethToken] -= _amount;\n            emit swapToken(msg.sender,_amount);\n        }\n        else{\n\n            overColleteralFeeAmount = (_amount*3)/1000;\n            uint eachWhilitedAddressFee = overColleteralFeeAmount/whilistedAddress.length;\n            for (uint i=0; i<whilistedAddress.length; i++) \n            {\n                IERC20(_ethToken).safeTransfer(whilistedAddress[i],eachWhilitedAddressFee);\n            }\n             IERC20(_ethToken).safeTransfer(msg.sender,(_amount-overColleteralFeeAmount));\n            currentHoldings -= (_amount-overColleteralFeeAmount);\n            userAmount[msg.sender] = (_amount-overColleteralFeeAmount);\n            userTokenAmount[msg.sender][_ethToken] -= (_amount-overColleteralFeeAmount);\n            emit substrateSwapToken(msg.sender,(_amount-overColleteralFeeAmount));\n        }\n    \n    }\n    /**\n     * @param _ethToken The address of the ERC20 token to be swapped back.\n     * Only owner can withdaraw the Overcolleteral fee.\n     */\n    function withdrawBalanceTokens(address _ethToken) public onlyOwner {\n        IERC20(_ethToken).safeTransfer(msg.sender, overColleteralFeeAmount);\n    }\n\n\n\n    /**\n     * @dev Removes an address from the whitelist. Only the owner can call this function.\n     * @param _address The address to be removed from the whitelist.\n     */\n    function removeFromWhiteList(address _address) public onlyOwner {\n        require(whiteList[_address], \"This Address does not exist!\");\n        whiteList[_address] = false;\n    }\n\n    /**\n     * @dev Returns the USDT token balance of this contract.\n     * @return holdings The amount of USDT tokens held by this contract.\n     */\n    function holdingOf_USDT(address holder) public view returns (uint holdings) {\n        return userTokenAmount[holder][usdt];\n        // return IERC20(usdt).balanceOf(holder);\n    }\n\n    /**\n     * @dev Returns the DAI token balance of this contract.\n     * @return holdings The amount of DAI tokens held by this contract.\n     */\n    function holdingOf_DAI(address holder) public view returns (uint holdings) {\n        return userTokenAmount[holder][dai];\n        // return IERC20(dai).balanceOf(holder);\n    }\n\n    /**\n     * @dev Returns the USDC token balance of this contract.\n     * @return holdings The amount of USDC tokens held by this contract.\n     */\n    function holdingOf_USDC(address holder) public view returns (uint holdings) {\n        return userTokenAmount[holder][usdc];\n        // return IERC20(usdc).balanceOf(holder);\n    }\n\n    /**\n     * @dev Returns the USDM token balance of this contract.\n     * @return holdings The amount of USDM tokens held by this contract.\n     */\n    function holdingOf_USDM(address holder) public view returns (uint holdings) {\n        return userTokenAmount[holder][usdm];\n        // return IERC20(usdm).balanceOf(holder);\n    }\n\n    /**\n     * @dev Returns the balance of a specific ERC20 token held by this contract.\n     * @param _ethToken The address of the ERC20 token.\n     * @return holdings The amount of the specified tokens held by this contract.\n     */\n    function holdingOfTokens(address _ethToken) public view returns (uint holdings) {\n        return userTokenAmount[msg.sender][_ethToken];\n        // return IERC20(_ethToken).balanceOf(address(this));\n    }\n\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212205efb1b99c15d71ee1223160b9449d152946caf457b016e2f1bd91047d3193e9664736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205efb1b99c15d71ee1223160b9449d152946caf457b016e2f1bd91047d3193e9664736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xFB SHL SWAP10 0xC1 0x5D PUSH18 0xEE1223160B9449D152946CAF457B016E2F1B 0xD9 LT SELFBALANCE 0xD3 NOT RETURNDATACOPY SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "751:5018:3:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;751:5018:3;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212205efb1b99c15d71ee1223160b9449d152946caf457b016e2f1bd91047d3193e9664736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E 0xFB SHL SWAP10 0xC1 0x5D PUSH18 0xEE1223160B9449D152946CAF457B016E2F1B 0xD9 LT SELFBALANCE 0xD3 NOT RETURNDATACOPY SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "751:5018:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205efb1b99c15d71ee1223160b9449d152946caf457b016e2f1bd91047d3193e9664736f6c63430008160033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Liberswap/swaping.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ab2b7458e123a4428190be37f7c3afb886b90f4fc2f1af1bb2ef028610aadd4e64736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ab2b7458e123a4428190be37f7c3afb886b90f4fc2f1af1bb2ef028610aadd4e64736f6c63430008160033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0x2B PUSH21 0x58E123A4428190BE37F7C3AFB886B90F4FC2F1AF1B 0xB2 0xEF MUL DUP7 LT 0xAA 0xDD 0x4E PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "195:6066:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220ab2b7458e123a4428190be37f7c3afb886b90f4fc2f1af1bb2ef028610aadd4e64736f6c63430008160033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0x2B PUSH21 0x58E123A4428190BE37F7C3AFB886B90F4FC2F1AF1B 0xB2 0xEF MUL DUP7 LT 0xAA 0xDD 0x4E PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "195:6066:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ab2b7458e123a4428190be37f7c3afb886b90f4fc2f1af1bb2ef028610aadd4e64736f6c63430008160033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Liberswap/swaping.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Liberswap/swaping.sol": {
				"TokenSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Hold_USDM_Token",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "substrateSwapToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "swapToken",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "WhiteList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentHoldings",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ethToken",
									"type": "address"
								}
							],
							"name": "holdingOfTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "holdings",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "holdingOf_DAI",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "holdings",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "holdingOf_USDC",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "holdings",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "holdingOf_USDM",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "holdings",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								}
							],
							"name": "holdingOf_USDT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "holdings",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "overColleteralFeeAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "removeFromWhiteList",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ethToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "substrateSwapTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ethToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "substrateAddress",
									"type": "string"
								}
							],
							"name": "swapTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "UserAddress",
									"type": "address"
								}
							],
							"name": "userAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "UserAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "TokenAddress",
									"type": "address"
								}
							],
							"name": "userTokenAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "UserAddress",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "userTotalSwapAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "Amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "whilistedAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "whiteList",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ethToken",
									"type": "address"
								}
							],
							"name": "withdrawBalanceTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "LiberSwap Team",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"WhiteList(address)": {
								"details": "Adds an address to the whitelist. Only the owner of the contract can call this function. Emits an event once an address is successfully whitelisted. ",
								"params": {
									"_address": "The address to be added to the whitelist."
								}
							},
							"holdingOfTokens(address)": {
								"details": "Returns the balance of a specific ERC20 token held by this contract.",
								"params": {
									"_ethToken": "The address of the ERC20 token."
								},
								"returns": {
									"holdings": "The amount of the specified tokens held by this contract."
								}
							},
							"holdingOf_DAI(address)": {
								"details": "Returns the DAI token balance of this contract.",
								"returns": {
									"holdings": "The amount of DAI tokens held by this contract."
								}
							},
							"holdingOf_USDC(address)": {
								"details": "Returns the USDC token balance of this contract.",
								"returns": {
									"holdings": "The amount of USDC tokens held by this contract."
								}
							},
							"holdingOf_USDM(address)": {
								"details": "Returns the USDM token balance of this contract.",
								"returns": {
									"holdings": "The amount of USDM tokens held by this contract."
								}
							},
							"holdingOf_USDT(address)": {
								"details": "Returns the USDT token balance of this contract.",
								"returns": {
									"holdings": "The amount of USDT tokens held by this contract."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"removeFromWhiteList(address)": {
								"details": "Removes an address from the whitelist. Only the owner can call this function.",
								"params": {
									"_address": "The address to be removed from the whitelist."
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"substrateSwapTokens(address,uint256)": {
								"details": "Allows users to swap tokens back from the contract or distribute a fee among whitelisted addresses before sending back the tokens. If the token being swapped back is USDM, it is directly transferred to the sender. For other tokens, a 0.3% fee is distributed among all whitelisted addresses before sending the remaining tokens back to the sender. ",
								"params": {
									"_amount": "The amount of the token to be swapped back.",
									"_ethToken": "The address of the ERC20 token to be swapped back."
								}
							},
							"swapTokens(address,uint256,string)": {
								"details": "Allows users to swap tokens by transferring them to the contract or distribute a fee among whitelisted addresses. If the token being swapped is USDM, it is simply collected by the contract. For other tokens, a 0.3% fee is distributed among all whitelisted addresses, and the rest is collected by the contract. ",
								"params": {
									"_amount": "The amount of the token to be swapped.",
									"_ethToken": "The address of the ERC20 token to be swapped."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"withdrawBalanceTokens(address)": {
								"params": {
									"_ethToken": "The address of the ERC20 token to be swapped back. Only owner can withdaraw the Overcolleteral fee."
								}
							}
						},
						"title": "TokenSwap contract for swapping tokens, inheriting from Ownable for access control",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Liberswap/swaping.sol\":514:9055  contract TokenSwap is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Liberswap/swaping.sol\":2181:2274  constructor(address initialOwner) Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Liberswap/swaping.sol\":2223:2235  initialOwner */\n  dup1\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":455:506   */\n  mstore\n    /* \"#utility.yul\":428:446   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/Liberswap/swaping.sol\":2247:2252  Owner */\n  0x01\n    /* \"contracts/Liberswap/swaping.sol\":2247:2267  Owner = initialOwner */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"contracts/Liberswap/swaping.sol\":514:9055  contract TokenSwap is Ownable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_17\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_17:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_18:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":309:512   */\ntag_15:\n    /* \"contracts/Liberswap/swaping.sol\":514:9055  contract TokenSwap is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Liberswap/swaping.sol\":514:9055  contract TokenSwap is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa3150978\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xcdb43478\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xcdb43478\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe1ad418e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf09f0aac\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xfca0a3d2\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xfd03fe90\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0xa3150978\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa4329677\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa7f696cf\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb4a99a4e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xcb8ff545\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x6bc20157\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x6bc20157\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70181206\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x9c2c67c9\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x01bf6648\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1f1a675d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2dd91a4c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x33fa13a4\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x372c12b1\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Liberswap/swaping.sol\":7094:7272  function removeFromWhiteList(address _address) public onlyOwner {... */\n    tag_3:\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contracts/Liberswap/swaping.sol\":1591:1685  mapping (address UserAddress=> mapping (address TokenAddress  => uint)) public userTokenAmount */\n    tag_4:\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      0x04\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_31:\n      mload(0x40)\n        /* \"#utility.yul\":794:819   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":782:784   */\n      0x20\n        /* \"#utility.yul\":767:785   */\n      add\n        /* \"contracts/Liberswap/swaping.sol\":1591:1685  mapping (address UserAddress=> mapping (address TokenAddress  => uint)) public userTokenAmount */\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Liberswap/swaping.sol\":2079:2114  uint public overColleteralFeeAmount */\n    tag_5:\n      tag_31\n      sload(0x08)\n      dup2\n      jump\n        /* \"contracts/Liberswap/swaping.sol\":5372:6608  function substrateSwapTokens(address _ethToken,uint256 _amount) public {... */\n    tag_6:\n      tag_27\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"contracts/Liberswap/swaping.sol\":1380:1421  mapping(address => bool) public whiteList */\n    tag_7:\n      tag_44\n      tag_45\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_45:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_44:\n      mload(0x40)\n        /* \"#utility.yul\":1254:1268   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1247:1269   */\n      iszero\n        /* \"#utility.yul\":1229:1270   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1217:1219   */\n      0x20\n        /* \"#utility.yul\":1202:1220   */\n      add\n        /* \"contracts/Liberswap/swaping.sol\":1380:1421  mapping(address => bool) public whiteList */\n      tag_35\n        /* \"#utility.yul\":1089:1276   */\n      jump\n        /* \"contracts/Liberswap/swaping.sol\":2544:2759  function WhiteList(address _address) public onlyOwner{... */\n    tag_8:\n      tag_27\n      tag_50\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n        /* \"contracts/Liberswap/swaping.sol\":8093:8272  function holdingOf_USDC(address holder) public view returns (uint holdings) {... */\n    tag_9:\n      tag_31\n      tag_53\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_53:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/swaping.sol\":8186:8209  userTokenAmount[holder] */\n      and\n        /* \"contracts/Liberswap/swaping.sol\":8154:8167  uint holdings */\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":8186:8209  userTokenAmount[holder] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":8186:8201  userTokenAmount */\n      0x04\n        /* \"contracts/Liberswap/swaping.sol\":8186:8209  userTokenAmount[holder] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Liberswap/swaping.sol\":1142:1184  0x9951342D994001468506DF88F71A582867B50dd4 */\n      0x9951342d994001468506df88f71a582867b50dd4\n        /* \"contracts/Liberswap/swaping.sol\":8186:8215  userTokenAmount[holder][usdc] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":8093:8272  function holdingOf_USDC(address holder) public view returns (uint holdings) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_27\n      tag_57\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_11:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_58:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1445:1477   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1427:1478   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1415:1417   */\n      0x20\n        /* \"#utility.yul\":1400:1418   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      tag_35\n        /* \"#utility.yul\":1281:1484   */\n      jump\n        /* \"contracts/Liberswap/swaping.sol\":1988:2015  uint public currentHoldings */\n    tag_12:\n      tag_31\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/Liberswap/swaping.sol\":7428:7607  function holdingOf_USDT(address holder) public view returns (uint holdings) {... */\n    tag_13:\n      tag_31\n      tag_66\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/swaping.sol\":7521:7544  userTokenAmount[holder] */\n      and\n        /* \"contracts/Liberswap/swaping.sol\":7489:7502  uint holdings */\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":7521:7544  userTokenAmount[holder] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":7521:7536  userTokenAmount */\n      0x04\n        /* \"contracts/Liberswap/swaping.sol\":7521:7544  userTokenAmount[holder] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Liberswap/swaping.sol\":1070:1112  0xa5014eA627Ac22A63f2Bf3b46e26d408e72f55c1 */\n      0xa5014ea627ac22a63f2bf3b46e26d408e72f55c1\n        /* \"contracts/Liberswap/swaping.sol\":7521:7550  userTokenAmount[holder][usdt] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":7428:7607  function holdingOf_USDT(address holder) public view returns (uint holdings) {... */\n      jump\n        /* \"contracts/Liberswap/swaping.sol\":8848:9052  function holdingOfTokens(address _ethToken) public view returns (uint holdings) {... */\n    tag_14:\n      tag_31\n      tag_70\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_70:\n        /* \"contracts/Liberswap/swaping.sol\":8961:8971  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":8913:8926  uint holdings */\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":8945:8972  userTokenAmount[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":8945:8960  userTokenAmount */\n      0x04\n        /* \"contracts/Liberswap/swaping.sol\":8945:8972  userTokenAmount[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/swaping.sol\":8945:8983  userTokenAmount[msg.sender][_ethToken] */\n      swap5\n      swap1\n      swap5\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":8848:9052  function holdingOfTokens(address _ethToken) public view returns (uint holdings) {... */\n      jump\n        /* \"contracts/Liberswap/swaping.sol\":7761:7937  function holdingOf_DAI(address holder) public view returns (uint holdings) {... */\n    tag_15:\n      tag_31\n      tag_74\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/swaping.sol\":7853:7876  userTokenAmount[holder] */\n      and\n        /* \"contracts/Liberswap/swaping.sol\":7821:7834  uint holdings */\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":7853:7876  userTokenAmount[holder] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":7853:7868  userTokenAmount */\n      0x04\n        /* \"contracts/Liberswap/swaping.sol\":7853:7876  userTokenAmount[holder] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Liberswap/swaping.sol\":1213:1255  0x77F146ca2943294CC53e6c3B5980B572c961ae23 */\n      0x77f146ca2943294cc53e6c3b5980b572c961ae23\n        /* \"contracts/Liberswap/swaping.sol\":7853:7881  userTokenAmount[holder][dai] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":7761:7937  function holdingOf_DAI(address holder) public view returns (uint holdings) {... */\n      jump\n        /* \"contracts/Liberswap/swaping.sol\":658:678  address public Owner */\n    tag_16:\n      sload(0x01)\n      tag_58\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Liberswap/swaping.sol\":3257:4830  function swapTokens(address _ethToken,uint256 _amount,string memory substrateAddress) public {... */\n    tag_17:\n      tag_27\n      tag_81\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n        /* \"contracts/Liberswap/swaping.sol\":6760:6911  function withdrawBalanceTokens(address _ethToken) public onlyOwner {... */\n    tag_18:\n      tag_27\n      tag_85\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"contracts/Liberswap/swaping.sol\":1691:1746  mapping (address UserAddress => uint) public userAmount */\n    tag_19:\n      tag_31\n      tag_88\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_88:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Liberswap/swaping.sol\":1489:1522  address[] public whilistedAddress */\n    tag_20:\n      tag_58\n      tag_92\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_27\n      tag_97\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n        /* \"contracts/Liberswap/swaping.sol\":8428:8607  function holdingOf_USDM(address holder) public view returns (uint holdings) {... */\n    tag_22:\n      tag_31\n      tag_100\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/swaping.sol\":8521:8544  userTokenAmount[holder] */\n      and\n        /* \"contracts/Liberswap/swaping.sol\":8489:8502  uint holdings */\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":8521:8544  userTokenAmount[holder] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":8521:8536  userTokenAmount */\n      0x04\n        /* \"contracts/Liberswap/swaping.sol\":8521:8544  userTokenAmount[holder] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Liberswap/swaping.sol\":1285:1327  0x4b3a514Dd71850277bBa82491f26dACDF089cb68 */\n      0x4b3a514dd71850277bba82491f26dacdf089cb68\n        /* \"contracts/Liberswap/swaping.sol\":8521:8550  userTokenAmount[holder][usdm] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":8428:8607  function holdingOf_USDM(address holder) public view returns (uint holdings) {... */\n      jump\n        /* \"contracts/Liberswap/swaping.sol\":1832:1923  mapping (address UserAddress =>  mapping(string => uint Amount)) public userTotalSwapAmount */\n    tag_23:\n      tag_31\n      tag_104\n      calldatasize\n      0x04\n      tag_105\n      jump\t// in\n    tag_104:\n      0x06\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      swap1\n      swap3\n      keccak256\n      dup2\n      mload\n      dup1\n      dup4\n      add\n      dup5\n      add\n      dup1\n      mload\n      swap3\n      dup2\n      mstore\n      swap1\n      dup5\n      add\n      swap3\n      swap1\n      swap4\n      add\n      swap2\n      swap1\n      swap2\n      keccak256\n      swap2\n      mstore\n      sload\n      dup2\n      jump\n        /* \"contracts/Liberswap/swaping.sol\":7094:7272  function removeFromWhiteList(address _address) public onlyOwner {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/swaping.sol\":7176:7195  whiteList[_address] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":7176:7185  whiteList */\n      0x02\n        /* \"contracts/Liberswap/swaping.sol\":7176:7195  whiteList[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Liberswap/swaping.sol\":7168:7228  require(whiteList[_address], \"This Address does not exist!\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3602:3604   */\n      0x20\n        /* \"contracts/Liberswap/swaping.sol\":7168:7228  require(whiteList[_address], \"This Address does not exist!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3584:3605   */\n      mstore\n        /* \"#utility.yul\":3641:3643   */\n      0x1c\n        /* \"#utility.yul\":3621:3639   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3614:3644   */\n      mstore\n        /* \"#utility.yul\":3680:3710   */\n      0x54686973204164647265737320646f6573206e6f742065786973742100000000\n        /* \"#utility.yul\":3660:3678   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3653:3711   */\n      mstore\n        /* \"#utility.yul\":3728:3746   */\n      0x64\n      add\n        /* \"contracts/Liberswap/swaping.sol\":7168:7228  require(whiteList[_address], \"This Address does not exist!\") */\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/swaping.sol\":7238:7257  whiteList[_address] */\n      and\n        /* \"contracts/Liberswap/swaping.sol\":7260:7265  false */\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":7238:7257  whiteList[_address] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":7238:7247  whiteList */\n      0x02\n        /* \"contracts/Liberswap/swaping.sol\":7238:7257  whiteList[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Liberswap/swaping.sol\":7238:7265  whiteList[_address] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/Liberswap/swaping.sol\":7094:7272  function removeFromWhiteList(address _address) public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Liberswap/swaping.sol\":5372:6608  function substrateSwapTokens(address _ethToken,uint256 _amount) public {... */\n    tag_43:\n        /* \"contracts/Liberswap/swaping.sol\":5461:5503  IERC20(_ethToken).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":5497:5501  this */\n      address\n        /* \"contracts/Liberswap/swaping.sol\":5461:5503  IERC20(_ethToken).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1427:1478   */\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":5507:5514  _amount */\n      dup2\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/swaping.sol\":5461:5488  IERC20(_ethToken).balanceOf */\n      dup5\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1400:1418   */\n      0x24\n      add\n        /* \"contracts/Liberswap/swaping.sol\":5461:5503  IERC20(_ethToken).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"contracts/Liberswap/swaping.sol\":5461:5514  IERC20(_ethToken).balanceOf(address(this)) >= _amount */\n      lt\n      iszero\n        /* \"contracts/Liberswap/swaping.sol\":5453:5539  require(IERC20(_ethToken).balanceOf(address(this)) >= _amount, \"Insufficient balance\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4148:4150   */\n      0x20\n        /* \"contracts/Liberswap/swaping.sol\":5453:5539  require(IERC20(_ethToken).balanceOf(address(this)) >= _amount, \"Insufficient balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4130:4151   */\n      mstore\n        /* \"#utility.yul\":4187:4189   */\n      0x14\n        /* \"#utility.yul\":4167:4185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4160:4190   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742062616c616e6365)\n        /* \"#utility.yul\":4206:4224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4199:4249   */\n      mstore\n        /* \"#utility.yul\":4266:4284   */\n      0x64\n      add\n        /* \"contracts/Liberswap/swaping.sol\":5453:5539  require(IERC20(_ethToken).balanceOf(address(this)) >= _amount, \"Insufficient balance\") */\n      tag_113\n        /* \"#utility.yul\":3946:4290   */\n      jump\n        /* \"contracts/Liberswap/swaping.sol\":5453:5539  require(IERC20(_ethToken).balanceOf(address(this)) >= _amount, \"Insufficient balance\") */\n    tag_121:\n      not(0x4b3a514dd71850277bba82491f26dacdf089cb67)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/swaping.sol\":5552:5569  _ethToken == usdm */\n      dup4\n      and\n      add\n        /* \"contracts/Liberswap/swaping.sol\":5549:6597  if(_ethToken == usdm){... */\n      tag_124\n      jumpi\n        /* \"contracts/Liberswap/swaping.sol\":5584:5634  IERC20(_ethToken).safeTransfer(msg.sender,_amount) */\n      tag_125\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/swaping.sol\":5584:5614  IERC20(_ethToken).safeTransfer */\n      dup4\n      and\n        /* \"contracts/Liberswap/swaping.sol\":5615:5625  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":5626:5633  _amount */\n      dup4\n        /* \"contracts/Liberswap/swaping.sol\":5584:5614  IERC20(_ethToken).safeTransfer */\n      tag_126\n        /* \"contracts/Liberswap/swaping.sol\":5584:5634  IERC20(_ethToken).safeTransfer(msg.sender,_amount) */\n      jump\t// in\n    tag_125:\n        /* \"contracts/Liberswap/swaping.sol\":5668:5675  _amount */\n      dup1\n        /* \"contracts/Liberswap/swaping.sol\":5648:5663  currentHoldings */\n      0x07\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":5648:5676  currentHoldings -= (_amount) */\n      dup3\n      dup3\n      sload\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":5701:5711  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":5690:5712  userAmount[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":5690:5700  userAmount */\n      0x05\n        /* \"contracts/Liberswap/swaping.sol\":5690:5712  userAmount[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Liberswap/swaping.sol\":5690:5722  userAmount[msg.sender] = _amount */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/Liberswap/swaping.sol\":5736:5751  userTokenAmount */\n      0x04\n        /* \"contracts/Liberswap/swaping.sol\":5736:5763  userTokenAmount[msg.sender] */\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/swaping.sol\":5736:5774  userTokenAmount[msg.sender][_ethToken] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/Liberswap/swaping.sol\":5736:5785  userTokenAmount[msg.sender][_ethToken] -= _amount */\n      dup1\n      sload\n        /* \"contracts/Liberswap/swaping.sol\":5715:5722  _amount */\n      dup4\n      swap3\n        /* \"contracts/Liberswap/swaping.sol\":5690:5712  userAmount[msg.sender] */\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":5736:5785  userTokenAmount[msg.sender][_ethToken] -= _amount */\n      tag_129\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":5715:5722  _amount */\n      dup5\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":5736:5785  userTokenAmount[msg.sender][_ethToken] -= _amount */\n      tag_128\n      jump\t// in\n    tag_129:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":5804:5833  swapToken(msg.sender,_amount) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/Liberswap/swaping.sol\":5814:5824  msg.sender */\n      caller\n        /* \"#utility.yul\":4734:4785   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4816:4818   */\n      0x20\n        /* \"#utility.yul\":4801:4819   */\n      dup2\n      add\n        /* \"#utility.yul\":4794:4828   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":5804:5833  swapToken(msg.sender,_amount) */\n      0xcc87ab2abfe87b272af9b77691e40b3d9186a0431f3d41a8e06d39614f460722\n      swap2\n        /* \"#utility.yul\":4707:4725   */\n      add\n        /* \"contracts/Liberswap/swaping.sol\":5804:5833  swapToken(msg.sender,_amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Liberswap/swaping.sol\":5372:6608  function substrateSwapTokens(address _ethToken,uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/swaping.sol\":5549:6597  if(_ethToken == usdm){... */\n    tag_124:\n        /* \"contracts/Liberswap/swaping.sol\":5910:5914  1000 */\n      0x03e8\n        /* \"contracts/Liberswap/swaping.sol\":5899:5908  _amount*3 */\n      tag_133\n        /* \"contracts/Liberswap/swaping.sol\":5899:5906  _amount */\n      dup3\n        /* \"contracts/Liberswap/swaping.sol\":5907:5908  3 */\n      0x03\n        /* \"contracts/Liberswap/swaping.sol\":5899:5908  _amount*3 */\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"contracts/Liberswap/swaping.sol\":5898:5914  (_amount*3)/1000 */\n      tag_135\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"contracts/Liberswap/swaping.sol\":5872:5895  overColleteralFeeAmount */\n      0x08\n        /* \"contracts/Liberswap/swaping.sol\":5872:5914  overColleteralFeeAmount = (_amount*3)/1000 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Liberswap/swaping.sol\":5982:5998  whilistedAddress */\n      0x03\n        /* \"contracts/Liberswap/swaping.sol\":5982:6005  whilistedAddress.length */\n      sload\n        /* \"contracts/Liberswap/swaping.sol\":5928:5955  uint eachWhilitedAddressFee */\n      0x00\n      swap2\n        /* \"contracts/Liberswap/swaping.sol\":5958:6005  overColleteralFeeAmount/whilistedAddress.length */\n      tag_137\n      swap2\n        /* \"contracts/Liberswap/swaping.sol\":5982:6005  whilistedAddress.length */\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":5958:6005  overColleteralFeeAmount/whilistedAddress.length */\n      tag_136\n      jump\t// in\n    tag_137:\n        /* \"contracts/Liberswap/swaping.sol\":5928:6005  uint eachWhilitedAddressFee = overColleteralFeeAmount/whilistedAddress.length */\n      swap1\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":6024:6030  uint i */\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":6019:6186  for (uint i=0; i<whilistedAddress.length; i++) ... */\n    tag_138:\n        /* \"contracts/Liberswap/swaping.sol\":6036:6052  whilistedAddress */\n      0x03\n        /* \"contracts/Liberswap/swaping.sol\":6036:6059  whilistedAddress.length */\n      sload\n        /* \"contracts/Liberswap/swaping.sol\":6034:6059  i<whilistedAddress.length */\n      dup2\n      lt\n        /* \"contracts/Liberswap/swaping.sol\":6019:6186  for (uint i=0; i<whilistedAddress.length; i++) ... */\n      iszero\n      tag_139\n      jumpi\n        /* \"contracts/Liberswap/swaping.sol\":6097:6171  IERC20(_ethToken).safeTransfer(whilistedAddress[i],eachWhilitedAddressFee) */\n      tag_141\n        /* \"contracts/Liberswap/swaping.sol\":6128:6144  whilistedAddress */\n      0x03\n        /* \"contracts/Liberswap/swaping.sol\":6145:6146  i */\n      dup3\n        /* \"contracts/Liberswap/swaping.sol\":6128:6147  whilistedAddress[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_143\n      jumpi\n      tag_143\n      tag_144\n      jump\t// in\n    tag_143:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/swaping.sol\":6097:6127  IERC20(_ethToken).safeTransfer */\n      dup7\n      dup2\n      and\n      swap2\n        /* \"contracts/Liberswap/swaping.sol\":6128:6147  whilistedAddress[i] */\n      and\n        /* \"contracts/Liberswap/swaping.sol\":6148:6170  eachWhilitedAddressFee */\n      dup5\n        /* \"contracts/Liberswap/swaping.sol\":6097:6127  IERC20(_ethToken).safeTransfer */\n      tag_126\n        /* \"contracts/Liberswap/swaping.sol\":6097:6171  IERC20(_ethToken).safeTransfer(whilistedAddress[i],eachWhilitedAddressFee) */\n      jump\t// in\n    tag_141:\n        /* \"contracts/Liberswap/swaping.sol\":6061:6064  i++ */\n      0x01\n      add\n        /* \"contracts/Liberswap/swaping.sol\":6019:6186  for (uint i=0; i<whilistedAddress.length; i++) ... */\n      jump(tag_138)\n    tag_139:\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":6200:6276  IERC20(_ethToken).safeTransfer(msg.sender,(_amount-overColleteralFeeAmount)) */\n      tag_146\n        /* \"contracts/Liberswap/swaping.sol\":6231:6241  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":6251:6274  overColleteralFeeAmount */\n      sload(0x08)\n        /* \"contracts/Liberswap/swaping.sol\":6243:6250  _amount */\n      dup5\n        /* \"contracts/Liberswap/swaping.sol\":6243:6274  _amount-overColleteralFeeAmount */\n      tag_147\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/swaping.sol\":6200:6230  IERC20(_ethToken).safeTransfer */\n      dup7\n      and\n      swap2\n        /* \"contracts/Liberswap/swaping.sol\":6200:6276  IERC20(_ethToken).safeTransfer(msg.sender,(_amount-overColleteralFeeAmount)) */\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":6200:6230  IERC20(_ethToken).safeTransfer */\n      tag_126\n        /* \"contracts/Liberswap/swaping.sol\":6200:6276  IERC20(_ethToken).safeTransfer(msg.sender,(_amount-overColleteralFeeAmount)) */\n      jump\t// in\n    tag_146:\n        /* \"contracts/Liberswap/swaping.sol\":6318:6341  overColleteralFeeAmount */\n      sload(0x08)\n        /* \"contracts/Liberswap/swaping.sol\":6310:6341  _amount-overColleteralFeeAmount */\n      tag_148\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":6310:6317  _amount */\n      dup4\n        /* \"contracts/Liberswap/swaping.sol\":6310:6341  _amount-overColleteralFeeAmount */\n      tag_128\n      jump\t// in\n    tag_148:\n        /* \"contracts/Liberswap/swaping.sol\":6290:6305  currentHoldings */\n      0x07\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":6290:6342  currentHoldings -= (_amount-overColleteralFeeAmount) */\n      dup3\n      dup3\n      sload\n      tag_149\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_149:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":6390:6413  overColleteralFeeAmount */\n      sload(0x08)\n        /* \"contracts/Liberswap/swaping.sol\":6382:6413  _amount-overColleteralFeeAmount */\n      tag_150\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":6382:6389  _amount */\n      dup4\n        /* \"contracts/Liberswap/swaping.sol\":6382:6413  _amount-overColleteralFeeAmount */\n      tag_128\n      jump\t// in\n    tag_150:\n        /* \"contracts/Liberswap/swaping.sol\":6367:6377  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":6356:6378  userAmount[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":6356:6366  userAmount */\n      0x05\n        /* \"contracts/Liberswap/swaping.sol\":6356:6378  userAmount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Liberswap/swaping.sol\":6356:6414  userAmount[msg.sender] = (_amount-overColleteralFeeAmount) */\n      sstore\n        /* \"contracts/Liberswap/swaping.sol\":6479:6502  overColleteralFeeAmount */\n      sload(0x08)\n        /* \"contracts/Liberswap/swaping.sol\":6471:6502  _amount-overColleteralFeeAmount */\n      tag_151\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":6471:6478  _amount */\n      dup4\n        /* \"contracts/Liberswap/swaping.sol\":6471:6502  _amount-overColleteralFeeAmount */\n      tag_128\n      jump\t// in\n    tag_151:\n        /* \"contracts/Liberswap/swaping.sol\":6444:6454  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":6428:6455  userTokenAmount[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":6428:6443  userTokenAmount */\n      0x04\n        /* \"contracts/Liberswap/swaping.sol\":6428:6455  userTokenAmount[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/swaping.sol\":6428:6466  userTokenAmount[msg.sender][_ethToken] */\n      dup9\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/Liberswap/swaping.sol\":6428:6503  userTokenAmount[msg.sender][_ethToken] -= (_amount-overColleteralFeeAmount) */\n      dup1\n      sload\n        /* \"contracts/Liberswap/swaping.sol\":6428:6466  userTokenAmount[msg.sender][_ethToken] */\n      swap1\n      swap2\n        /* \"contracts/Liberswap/swaping.sol\":6428:6455  userTokenAmount[msg.sender] */\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":6428:6503  userTokenAmount[msg.sender][_ethToken] -= (_amount-overColleteralFeeAmount) */\n      tag_152\n      swap1\n      dup5\n      swap1\n      tag_128\n      jump\t// in\n    tag_152:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":6561:6584  overColleteralFeeAmount */\n      sload(0x08)\n        /* \"contracts/Liberswap/swaping.sol\":6522:6586  substrateSwapToken(msg.sender,(_amount-overColleteralFeeAmount)) */\n      0xcf53ae9736a409c662fa8b1187549847acd41beb1b89fd026293fc2e19adaca7\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":6541:6551  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":6553:6584  _amount-overColleteralFeeAmount */\n      tag_153\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":6553:6560  _amount */\n      dup6\n        /* \"contracts/Liberswap/swaping.sol\":6553:6584  _amount-overColleteralFeeAmount */\n      tag_128\n      jump\t// in\n    tag_153:\n        /* \"contracts/Liberswap/swaping.sol\":6522:6586  substrateSwapToken(msg.sender,(_amount-overColleteralFeeAmount)) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4752:4784   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":4734:4785   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4816:4818   */\n      0x20\n        /* \"#utility.yul\":4801:4819   */\n      dup4\n      add\n        /* \"#utility.yul\":4794:4828   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4707:4725   */\n      add\n        /* \"contracts/Liberswap/swaping.sol\":6522:6586  substrateSwapToken(msg.sender,(_amount-overColleteralFeeAmount)) */\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Liberswap/swaping.sol\":5857:6597  {... */\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":5372:6608  function substrateSwapTokens(address _ethToken,uint256 _amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/swaping.sol\":2544:2759  function WhiteList(address _address) public onlyOwner{... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_156\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_156:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/swaping.sol\":2616:2635  whiteList[_address] */\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":2616:2625  whiteList */\n      0x02\n        /* \"contracts/Liberswap/swaping.sol\":2616:2635  whiteList[_address] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Liberswap/swaping.sol\":2615:2635  !whiteList[_address] */\n      iszero\n        /* \"contracts/Liberswap/swaping.sol\":2607:2675  require(!whiteList[_address],\"This Address is already WhiteListed!\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5568:5570   */\n      0x20\n        /* \"contracts/Liberswap/swaping.sol\":2607:2675  require(!whiteList[_address],\"This Address is already WhiteListed!\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5550:5571   */\n      mstore\n        /* \"#utility.yul\":5607:5609   */\n      0x24\n        /* \"#utility.yul\":5587:5605   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":5580:5610   */\n      mstore\n        /* \"#utility.yul\":5646:5680   */\n      0x54686973204164647265737320697320616c72656164792057686974654c6973\n        /* \"#utility.yul\":5626:5644   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5619:5681   */\n      mstore\n      shl(0xe0, 0x74656421)\n        /* \"#utility.yul\":5697:5715   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5690:5724   */\n      mstore\n        /* \"#utility.yul\":5741:5760   */\n      0x84\n      add\n        /* \"contracts/Liberswap/swaping.sol\":2607:2675  require(!whiteList[_address],\"This Address is already WhiteListed!\") */\n      tag_113\n        /* \"#utility.yul\":5366:5766   */\n      jump\n        /* \"contracts/Liberswap/swaping.sol\":2607:2675  require(!whiteList[_address],\"This Address is already WhiteListed!\") */\n    tag_158:\n        /* \"contracts/Liberswap/swaping.sol\":2685:2701  whilistedAddress */\n      0x03\n        /* \"contracts/Liberswap/swaping.sol\":2685:2716  whilistedAddress.push(_address) */\n      dup1\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      swap1\n      swap3\n      sstore\n      0xc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      dup4\n      or\n      swap1\n      sstore\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":2726:2745  whiteList[_address] */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":2726:2735  whiteList */\n      0x02\n        /* \"contracts/Liberswap/swaping.sol\":2685:2716  whilistedAddress.push(_address) */\n      0x20\n        /* \"contracts/Liberswap/swaping.sol\":2726:2745  whiteList[_address] */\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"contracts/Liberswap/swaping.sol\":2726:2752  whiteList[_address] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/Liberswap/swaping.sol\":2544:2759  function WhiteList(address _address) public onlyOwner{... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Liberswap/swaping.sol\":3257:4830  function swapTokens(address _ethToken,uint256 _amount,string memory substrateAddress) public {... */\n    tag_83:\n        /* \"contracts/Liberswap/swaping.sol\":3368:3422  IERC20(_ethToken).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":3396:3406  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":3368:3422  IERC20(_ethToken).allowance(msg.sender, address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5983:6017   */\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":3416:3420  this */\n      address\n        /* \"#utility.yul\":6033:6051   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6026:6069   */\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":3426:3433  _amount */\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/swaping.sol\":3368:3395  IERC20(_ethToken).allowance */\n      dup6\n      and\n      swap1\n      0xdd62ed3e\n      swap1\n        /* \"#utility.yul\":5918:5936   */\n      0x44\n      add\n        /* \"contracts/Liberswap/swaping.sol\":3368:3422  IERC20(_ethToken).allowance(msg.sender, address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_176\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_176:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_177\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_177:\n        /* \"contracts/Liberswap/swaping.sol\":3368:3433  IERC20(_ethToken).allowance(msg.sender, address(this)) >= _amount */\n      lt\n      iszero\n        /* \"contracts/Liberswap/swaping.sol\":3360:3455  require(IERC20(_ethToken).allowance(msg.sender, address(this)) >= _amount, \"Allowance not set\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6282:6284   */\n      0x20\n        /* \"contracts/Liberswap/swaping.sol\":3360:3455  require(IERC20(_ethToken).allowance(msg.sender, address(this)) >= _amount, \"Allowance not set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6264:6285   */\n      mstore\n        /* \"#utility.yul\":6321:6323   */\n      0x11\n        /* \"#utility.yul\":6301:6319   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6294:6324   */\n      mstore\n      shl(0x7a, 0x105b1b1bddd85b98d9481b9bdd081cd95d)\n        /* \"#utility.yul\":6340:6358   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6333:6380   */\n      mstore\n        /* \"#utility.yul\":6397:6415   */\n      0x64\n      add\n        /* \"contracts/Liberswap/swaping.sol\":3360:3455  require(IERC20(_ethToken).allowance(msg.sender, address(this)) >= _amount, \"Allowance not set\") */\n      tag_113\n        /* \"#utility.yul\":6080:6421   */\n      jump\n        /* \"contracts/Liberswap/swaping.sol\":3360:3455  require(IERC20(_ethToken).allowance(msg.sender, address(this)) >= _amount, \"Allowance not set\") */\n    tag_178:\n        /* \"contracts/Liberswap/swaping.sol\":3473:3512  IERC20(_ethToken).balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":3501:3511  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":3473:3512  IERC20(_ethToken).balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1427:1478   */\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":3516:3523  _amount */\n      dup3\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/swaping.sol\":3473:3500  IERC20(_ethToken).balanceOf */\n      dup6\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1400:1418   */\n      0x24\n      add\n        /* \"contracts/Liberswap/swaping.sol\":3473:3512  IERC20(_ethToken).balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_183\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_183:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_184\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_184:\n        /* \"contracts/Liberswap/swaping.sol\":3473:3523  IERC20(_ethToken).balanceOf(msg.sender) >= _amount */\n      lt\n      iszero\n        /* \"contracts/Liberswap/swaping.sol\":3465:3548  require(IERC20(_ethToken).balanceOf(msg.sender) >= _amount, \"Insufficient balance\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4148:4150   */\n      0x20\n        /* \"contracts/Liberswap/swaping.sol\":3465:3548  require(IERC20(_ethToken).balanceOf(msg.sender) >= _amount, \"Insufficient balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4130:4151   */\n      mstore\n        /* \"#utility.yul\":4187:4189   */\n      0x14\n        /* \"#utility.yul\":4167:4185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4160:4190   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742062616c616e6365)\n        /* \"#utility.yul\":4206:4224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4199:4249   */\n      mstore\n        /* \"#utility.yul\":4266:4284   */\n      0x64\n      add\n        /* \"contracts/Liberswap/swaping.sol\":3465:3548  require(IERC20(_ethToken).balanceOf(msg.sender) >= _amount, \"Insufficient balance\") */\n      tag_113\n        /* \"#utility.yul\":3946:4290   */\n      jump\n        /* \"contracts/Liberswap/swaping.sol\":3465:3548  require(IERC20(_ethToken).balanceOf(msg.sender) >= _amount, \"Insufficient balance\") */\n    tag_185:\n      not(0x4b3a514dd71850277bba82491f26dacdf089cb67)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/swaping.sol\":3561:3578  _ethToken == usdm */\n      dup5\n      and\n      add\n        /* \"contracts/Liberswap/swaping.sol\":3558:4816  if(_ethToken == usdm){... */\n      tag_187\n      jumpi\n        /* \"contracts/Liberswap/swaping.sol\":3593:3661  IERC20(_ethToken).transferFrom(msg.sender, address(this), (_amount)) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":3624:3634  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":3593:3661  IERC20(_ethToken).transferFrom(msg.sender, address(this), (_amount)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6666:6700   */\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":3644:3648  this */\n      address\n        /* \"#utility.yul\":6716:6734   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6709:6752   */\n      mstore\n        /* \"#utility.yul\":6768:6786   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6761:6795   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/swaping.sol\":3593:3623  IERC20(_ethToken).transferFrom */\n      dup5\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":6601:6619   */\n      0x64\n      add\n        /* \"contracts/Liberswap/swaping.sol\":3593:3661  IERC20(_ethToken).transferFrom(msg.sender, address(this), (_amount)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_191\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_192\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":3695:3702  _amount */\n      dup2\n        /* \"contracts/Liberswap/swaping.sol\":3675:3690  currentHoldings */\n      0x07\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":3675:3703  currentHoldings += (_amount) */\n      dup3\n      dup3\n      sload\n      tag_194\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":3728:3738  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":3717:3739  userAmount[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":3717:3727  userAmount */\n      0x05\n        /* \"contracts/Liberswap/swaping.sol\":3717:3739  userAmount[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Liberswap/swaping.sol\":3717:3749  userAmount[msg.sender] = _amount */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/Liberswap/swaping.sol\":3763:3782  userTotalSwapAmount */\n      0x06\n        /* \"contracts/Liberswap/swaping.sol\":3763:3794  userTotalSwapAmount[msg.sender] */\n      swap1\n      swap2\n      mstore\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Liberswap/swaping.sol\":3763:3812  userTotalSwapAmount[msg.sender][substrateAddress] */\n      swap1\n      mload\n        /* \"contracts/Liberswap/swaping.sol\":3742:3749  _amount */\n      dup4\n      swap2\n        /* \"contracts/Liberswap/swaping.sol\":3763:3794  userTotalSwapAmount[msg.sender] */\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":3763:3812  userTotalSwapAmount[msg.sender][substrateAddress] */\n      tag_196\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":3795:3811  substrateAddress */\n      dup5\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":3763:3812  userTotalSwapAmount[msg.sender][substrateAddress] */\n      tag_197\n      jump\t// in\n    tag_196:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":3763:3823  userTotalSwapAmount[msg.sender][substrateAddress] += _amount */\n      dup3\n      dup3\n      sload\n      tag_198\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_198:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":3853:3863  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":3837:3864  userTokenAmount[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":3837:3852  userTokenAmount */\n      0x04\n        /* \"contracts/Liberswap/swaping.sol\":3837:3864  userTokenAmount[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/swaping.sol\":3837:3875  userTokenAmount[msg.sender][_ethToken] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/Liberswap/swaping.sol\":3837:3886  userTokenAmount[msg.sender][_ethToken] += _amount */\n      dup1\n      sload\n        /* \"contracts/Liberswap/swaping.sol\":3879:3886  _amount */\n      dup5\n      swap3\n        /* \"contracts/Liberswap/swaping.sol\":3837:3864  userTokenAmount[msg.sender] */\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":3837:3886  userTokenAmount[msg.sender][_ethToken] += _amount */\n      tag_199\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":3879:3886  _amount */\n      dup5\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":3837:3886  userTokenAmount[msg.sender][_ethToken] += _amount */\n      tag_195\n      jump\t// in\n    tag_199:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":3905:3934  swapToken(msg.sender,_amount) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/Liberswap/swaping.sol\":3915:3925  msg.sender */\n      caller\n        /* \"#utility.yul\":4734:4785   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4816:4818   */\n      0x20\n        /* \"#utility.yul\":4801:4819   */\n      dup2\n      add\n        /* \"#utility.yul\":4794:4828   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":3905:3934  swapToken(msg.sender,_amount) */\n      0xcc87ab2abfe87b272af9b77691e40b3d9186a0431f3d41a8e06d39614f460722\n      swap2\n        /* \"#utility.yul\":4707:4725   */\n      add\n        /* \"contracts/Liberswap/swaping.sol\":3905:3934  swapToken(msg.sender,_amount) */\n      tag_154\n        /* \"#utility.yul\":4560:4834   */\n      jump\n        /* \"contracts/Liberswap/swaping.sol\":3558:4816  if(_ethToken == usdm){... */\n    tag_187:\n        /* \"contracts/Liberswap/swaping.sol\":4010:4014  1000 */\n      0x03e8\n        /* \"contracts/Liberswap/swaping.sol\":3999:4008  _amount*3 */\n      tag_202\n        /* \"contracts/Liberswap/swaping.sol\":3999:4006  _amount */\n      dup4\n        /* \"contracts/Liberswap/swaping.sol\":4007:4008  3 */\n      0x03\n        /* \"contracts/Liberswap/swaping.sol\":3999:4008  _amount*3 */\n      tag_134\n      jump\t// in\n    tag_202:\n        /* \"contracts/Liberswap/swaping.sol\":3998:4014  (_amount*3)/1000 */\n      tag_203\n      swap2\n      swap1\n      tag_136\n      jump\t// in\n    tag_203:\n        /* \"contracts/Liberswap/swaping.sol\":3972:3995  overColleteralFeeAmount */\n      0x08\n        /* \"contracts/Liberswap/swaping.sol\":3972:4014  overColleteralFeeAmount = (_amount*3)/1000 */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Liberswap/swaping.sol\":4082:4098  whilistedAddress */\n      0x03\n        /* \"contracts/Liberswap/swaping.sol\":4082:4105  whilistedAddress.length */\n      sload\n        /* \"contracts/Liberswap/swaping.sol\":4028:4055  uint eachWhilitedAddressFee */\n      0x00\n      swap2\n        /* \"contracts/Liberswap/swaping.sol\":4058:4105  overColleteralFeeAmount/whilistedAddress.length */\n      tag_204\n      swap2\n        /* \"contracts/Liberswap/swaping.sol\":4082:4105  whilistedAddress.length */\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":4058:4105  overColleteralFeeAmount/whilistedAddress.length */\n      tag_136\n      jump\t// in\n    tag_204:\n        /* \"contracts/Liberswap/swaping.sol\":4028:4105  uint eachWhilitedAddressFee = overColleteralFeeAmount/whilistedAddress.length */\n      swap1\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":4124:4130  uint i */\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":4119:4299  for (uint i=0; i<whilistedAddress.length; i++) ... */\n    tag_205:\n        /* \"contracts/Liberswap/swaping.sol\":4136:4152  whilistedAddress */\n      0x03\n        /* \"contracts/Liberswap/swaping.sol\":4136:4159  whilistedAddress.length */\n      sload\n        /* \"contracts/Liberswap/swaping.sol\":4134:4159  i<whilistedAddress.length */\n      dup2\n      lt\n        /* \"contracts/Liberswap/swaping.sol\":4119:4299  for (uint i=0; i<whilistedAddress.length; i++) ... */\n      iszero\n      tag_206\n      jumpi\n        /* \"contracts/Liberswap/swaping.sol\":4204:4213  _ethToken */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/swaping.sol\":4197:4227  IERC20(_ethToken).transferFrom */\n      and\n      0x23b872dd\n        /* \"contracts/Liberswap/swaping.sol\":4228:4238  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":4240:4256  whilistedAddress */\n      0x03\n        /* \"contracts/Liberswap/swaping.sol\":4257:4258  i */\n      dup5\n        /* \"contracts/Liberswap/swaping.sol\":4240:4259  whilistedAddress[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_209\n      jumpi\n      tag_209\n      tag_144\n      jump\t// in\n    tag_209:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n        /* \"contracts/Liberswap/swaping.sol\":4197:4284  IERC20(_ethToken).transferFrom(msg.sender, whilistedAddress[i], eachWhilitedAddressFee) */\n      mload(0x40)\n      0xe0\n      dup5\n      swap1\n      shl\n      not(sub(shl(0xe0, 0x01), 0x01))\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6684:6699   */\n      swap3\n      dup4\n      and\n        /* \"contracts/Liberswap/swaping.sol\":4197:4284  IERC20(_ethToken).transferFrom(msg.sender, whilistedAddress[i], eachWhilitedAddressFee) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6666:6700   */\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":4240:4259  whilistedAddress[i] */\n      swap2\n      and\n        /* \"#utility.yul\":6716:6734   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6709:6752   */\n      mstore\n        /* \"#utility.yul\":6768:6786   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6761:6795   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":6601:6619   */\n      0x64\n      add\n        /* \"contracts/Liberswap/swaping.sol\":4197:4284  IERC20(_ethToken).transferFrom(msg.sender, whilistedAddress[i], eachWhilitedAddressFee) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_213\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_213:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_214\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_214:\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":4161:4164  i++ */\n      0x01\n      add\n        /* \"contracts/Liberswap/swaping.sol\":4119:4299  for (uint i=0; i<whilistedAddress.length; i++) ... */\n      jump(tag_205)\n    tag_206:\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":4319:4328  _ethToken */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/swaping.sol\":4312:4342  IERC20(_ethToken).transferFrom */\n      and\n      0x23b872dd\n        /* \"contracts/Liberswap/swaping.sol\":4343:4353  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":4363:4367  this */\n      address\n        /* \"contracts/Liberswap/swaping.sol\":4379:4402  overColleteralFeeAmount */\n      sload(0x08)\n        /* \"contracts/Liberswap/swaping.sol\":4371:4378  _amount */\n      dup8\n        /* \"contracts/Liberswap/swaping.sol\":4371:4402  _amount-overColleteralFeeAmount */\n      tag_215\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_215:\n        /* \"contracts/Liberswap/swaping.sol\":4312:4404  IERC20(_ethToken).transferFrom(msg.sender, address(this), (_amount-overColleteralFeeAmount)) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup7\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6684:6699   */\n      swap4\n      dup5\n      and\n        /* \"contracts/Liberswap/swaping.sol\":4312:4404  IERC20(_ethToken).transferFrom(msg.sender, address(this), (_amount-overColleteralFeeAmount)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6666:6700   */\n      mstore\n        /* \"#utility.yul\":6736:6751   */\n      swap3\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":6716:6734   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":6709:6752   */\n      mstore\n        /* \"#utility.yul\":6768:6786   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6761:6795   */\n      mstore\n        /* \"#utility.yul\":6601:6619   */\n      0x64\n      add\n        /* \"contracts/Liberswap/swaping.sol\":4312:4404  IERC20(_ethToken).transferFrom(msg.sender, address(this), (_amount-overColleteralFeeAmount)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_218\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_218:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_219\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_219:\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":4446:4469  overColleteralFeeAmount */\n      sload(0x08)\n        /* \"contracts/Liberswap/swaping.sol\":4438:4469  _amount-overColleteralFeeAmount */\n      tag_220\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":4438:4445  _amount */\n      dup5\n        /* \"contracts/Liberswap/swaping.sol\":4438:4469  _amount-overColleteralFeeAmount */\n      tag_128\n      jump\t// in\n    tag_220:\n        /* \"contracts/Liberswap/swaping.sol\":4418:4433  currentHoldings */\n      0x07\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":4418:4470  currentHoldings += (_amount-overColleteralFeeAmount) */\n      dup3\n      dup3\n      sload\n      tag_221\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_221:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":4518:4541  overColleteralFeeAmount */\n      sload(0x08)\n        /* \"contracts/Liberswap/swaping.sol\":4510:4541  _amount-overColleteralFeeAmount */\n      tag_222\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":4510:4517  _amount */\n      dup5\n        /* \"contracts/Liberswap/swaping.sol\":4510:4541  _amount-overColleteralFeeAmount */\n      tag_128\n      jump\t// in\n    tag_222:\n        /* \"contracts/Liberswap/swaping.sol\":4495:4505  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":4484:4506  userAmount[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":4484:4494  userAmount */\n      0x05\n        /* \"contracts/Liberswap/swaping.sol\":4484:4506  userAmount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Liberswap/swaping.sol\":4484:4542  userAmount[msg.sender] = (_amount-overColleteralFeeAmount) */\n      sstore\n        /* \"contracts/Liberswap/swaping.sol\":4618:4641  overColleteralFeeAmount */\n      sload(0x08)\n        /* \"contracts/Liberswap/swaping.sol\":4610:4641  _amount-overColleteralFeeAmount */\n      tag_223\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":4610:4617  _amount */\n      dup5\n        /* \"contracts/Liberswap/swaping.sol\":4610:4641  _amount-overColleteralFeeAmount */\n      tag_128\n      jump\t// in\n    tag_223:\n        /* \"contracts/Liberswap/swaping.sol\":4576:4586  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":4556:4587  userTotalSwapAmount[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":4556:4575  userTotalSwapAmount */\n      0x06\n        /* \"contracts/Liberswap/swaping.sol\":4556:4587  userTotalSwapAmount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/Liberswap/swaping.sol\":4556:4605  userTotalSwapAmount[msg.sender][substrateAddress] */\n      swap1\n      mload\n      tag_224\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":4588:4604  substrateAddress */\n      dup6\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":4556:4605  userTotalSwapAmount[msg.sender][substrateAddress] */\n      tag_197\n      jump\t// in\n    tag_224:\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n      0x00\n        /* \"contracts/Liberswap/swaping.sol\":4556:4642  userTotalSwapAmount[msg.sender][substrateAddress] += (_amount-overColleteralFeeAmount) */\n      dup3\n      dup3\n      sload\n      tag_225\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_225:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":4707:4730  overColleteralFeeAmount */\n      sload(0x08)\n        /* \"contracts/Liberswap/swaping.sol\":4699:4730  _amount-overColleteralFeeAmount */\n      tag_226\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":4699:4706  _amount */\n      dup5\n        /* \"contracts/Liberswap/swaping.sol\":4699:4730  _amount-overColleteralFeeAmount */\n      tag_128\n      jump\t// in\n    tag_226:\n        /* \"contracts/Liberswap/swaping.sol\":4672:4682  msg.sender */\n      caller\n        /* \"contracts/Liberswap/swaping.sol\":4656:4683  userTokenAmount[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Liberswap/swaping.sol\":4656:4671  userTokenAmount */\n      0x04\n        /* \"contracts/Liberswap/swaping.sol\":4656:4683  userTokenAmount[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/swaping.sol\":4656:4694  userTokenAmount[msg.sender][_ethToken] */\n      dup10\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/Liberswap/swaping.sol\":4656:4731  userTokenAmount[msg.sender][_ethToken] += (_amount-overColleteralFeeAmount) */\n      dup1\n      sload\n        /* \"contracts/Liberswap/swaping.sol\":4656:4694  userTokenAmount[msg.sender][_ethToken] */\n      swap1\n      swap2\n        /* \"contracts/Liberswap/swaping.sol\":4656:4683  userTokenAmount[msg.sender] */\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":4656:4731  userTokenAmount[msg.sender][_ethToken] += (_amount-overColleteralFeeAmount) */\n      tag_227\n      swap1\n      dup5\n      swap1\n      tag_195\n      jump\t// in\n    tag_227:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":4780:4803  overColleteralFeeAmount */\n      sload(0x08)\n        /* \"contracts/Liberswap/swaping.sol\":4750:4805  swapToken(msg.sender,(_amount-overColleteralFeeAmount)) */\n      0xcc87ab2abfe87b272af9b77691e40b3d9186a0431f3d41a8e06d39614f460722\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":4760:4770  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":4772:4803  _amount-overColleteralFeeAmount */\n      tag_228\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":4772:4779  _amount */\n      dup7\n        /* \"contracts/Liberswap/swaping.sol\":4772:4803  _amount-overColleteralFeeAmount */\n      tag_128\n      jump\t// in\n    tag_228:\n        /* \"contracts/Liberswap/swaping.sol\":4750:4805  swapToken(msg.sender,(_amount-overColleteralFeeAmount)) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4752:4784   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":4734:4785   */\n      dup4\n      mstore\n        /* \"#utility.yul\":4816:4818   */\n      0x20\n        /* \"#utility.yul\":4801:4819   */\n      dup4\n      add\n        /* \"#utility.yul\":4794:4828   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4707:4725   */\n      add\n        /* \"contracts/Liberswap/swaping.sol\":4750:4805  swapToken(msg.sender,(_amount-overColleteralFeeAmount)) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Liberswap/swaping.sol\":3958:4816  {... */\n      pop\n        /* \"contracts/Liberswap/swaping.sol\":3558:4816  if(_ethToken == usdm){... */\n    tag_201:\n        /* \"contracts/Liberswap/swaping.sol\":3257:4830  function swapTokens(address _ethToken,uint256 _amount,string memory substrateAddress) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/swaping.sol\":6760:6911  function withdrawBalanceTokens(address _ethToken) public onlyOwner {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_231\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_231:\n        /* \"contracts/Liberswap/swaping.sol\":6880:6903  overColleteralFeeAmount */\n      sload(0x08)\n        /* \"contracts/Liberswap/swaping.sol\":6837:6904  IERC20(_ethToken).safeTransfer(msg.sender, overColleteralFeeAmount) */\n      tag_233\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Liberswap/swaping.sol\":6837:6867  IERC20(_ethToken).safeTransfer */\n      dup4\n      and\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":6868:6878  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Liberswap/swaping.sol\":6837:6867  IERC20(_ethToken).safeTransfer */\n      tag_126\n        /* \"contracts/Liberswap/swaping.sol\":6837:6904  IERC20(_ethToken).safeTransfer(msg.sender, overColleteralFeeAmount) */\n      jump\t// in\n    tag_233:\n        /* \"contracts/Liberswap/swaping.sol\":6760:6911  function withdrawBalanceTokens(address _ethToken) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Liberswap/swaping.sol\":1489:1522  address[] public whilistedAddress */\n    tag_94:\n      0x03\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_234\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_234:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_237\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1427:1478   */\n      mstore\n        /* \"#utility.yul\":1400:1418   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      tag_113\n        /* \"#utility.yul\":1281:1484   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_233\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1427:1478   */\n      mstore\n        /* \"#utility.yul\":1400:1418   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_113\n        /* \"#utility.yul\":1281:1484   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4752:4784   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4734:4785   */\n      mstore\n        /* \"#utility.yul\":4801:4819   */\n      0x44\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4794:4828   */\n      dup5\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":4707:4725   */\n      0x64\n      swap1\n      swap2\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_201\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_253\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_257\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      tag_258\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_259\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_260\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_201\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      shl(0xe0, 0x5274afe7)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1445:1477   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1427:1478   */\n      mstore\n        /* \"#utility.yul\":1400:1418   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      tag_113\n        /* \"#utility.yul\":1281:1484   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_264\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_265\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_263:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_265:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0xcd786059)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1427:1478   */\n      mstore\n        /* \"#utility.yul\":1400:1418   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      tag_113\n        /* \"#utility.yul\":1281:1484   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_269\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_269:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_273\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_272)\n    tag_273:\n      0x60\n      swap2\n      pop\n    tag_272:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_274\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_275\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_266:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_275:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_277\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_278\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_279\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_266)\n    tag_277:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_281\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_281:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1445:1477   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1427:1478   */\n      mstore\n        /* \"#utility.yul\":1400:1418   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      tag_113\n        /* \"#utility.yul\":1281:1484   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_282:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      jump(tag_266)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_279:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      tag_285\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_285:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:187   */\n    tag_287:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_294\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_294:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_29:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_296:\n        /* \"#utility.yul\":343:372   */\n      tag_264\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_287\n      jump\t// in\n        /* \"#utility.yul\":383:643   */\n    tag_33:\n        /* \"#utility.yul\":451:457   */\n      0x00\n        /* \"#utility.yul\":459:465   */\n      dup1\n        /* \"#utility.yul\":512:514   */\n      0x40\n        /* \"#utility.yul\":500:509   */\n      dup4\n        /* \"#utility.yul\":491:498   */\n      dup6\n        /* \"#utility.yul\":487:510   */\n      sub\n        /* \"#utility.yul\":483:515   */\n      slt\n        /* \"#utility.yul\":480:532   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":528:529   */\n      0x00\n        /* \"#utility.yul\":525:526   */\n      dup1\n        /* \"#utility.yul\":518:530   */\n      revert\n        /* \"#utility.yul\":480:532   */\n    tag_299:\n        /* \"#utility.yul\":551:580   */\n      tag_300\n        /* \"#utility.yul\":570:579   */\n      dup4\n        /* \"#utility.yul\":551:580   */\n      tag_287\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":541:580   */\n      swap2\n      pop\n        /* \"#utility.yul\":599:637   */\n      tag_301\n        /* \"#utility.yul\":633:635   */\n      0x20\n        /* \"#utility.yul\":622:631   */\n      dup5\n        /* \"#utility.yul\":618:636   */\n      add\n        /* \"#utility.yul\":599:637   */\n      tag_287\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":589:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":383:643   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":830:1084   */\n    tag_42:\n        /* \"#utility.yul\":898:904   */\n      0x00\n        /* \"#utility.yul\":906:912   */\n      dup1\n        /* \"#utility.yul\":959:961   */\n      0x40\n        /* \"#utility.yul\":947:956   */\n      dup4\n        /* \"#utility.yul\":938:945   */\n      dup6\n        /* \"#utility.yul\":934:957   */\n      sub\n        /* \"#utility.yul\":930:962   */\n      slt\n        /* \"#utility.yul\":927:979   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":975:976   */\n      0x00\n        /* \"#utility.yul\":972:973   */\n      dup1\n        /* \"#utility.yul\":965:977   */\n      revert\n        /* \"#utility.yul\":927:979   */\n    tag_304:\n        /* \"#utility.yul\":998:1027   */\n      tag_305\n        /* \"#utility.yul\":1017:1026   */\n      dup4\n        /* \"#utility.yul\":998:1027   */\n      tag_287\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":988:1027   */\n      swap5\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1059:1077   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1046:1078   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":830:1084   */\n      jump\t// out\n        /* \"#utility.yul\":1489:1616   */\n    tag_288:\n        /* \"#utility.yul\":1550:1560   */\n      0x4e487b71\n        /* \"#utility.yul\":1545:1548   */\n      0xe0\n        /* \"#utility.yul\":1541:1561   */\n      shl\n        /* \"#utility.yul\":1538:1539   */\n      0x00\n        /* \"#utility.yul\":1531:1562   */\n      mstore\n        /* \"#utility.yul\":1581:1585   */\n      0x41\n        /* \"#utility.yul\":1578:1579   */\n      0x04\n        /* \"#utility.yul\":1571:1586   */\n      mstore\n        /* \"#utility.yul\":1605:1609   */\n      0x24\n        /* \"#utility.yul\":1602:1603   */\n      0x00\n        /* \"#utility.yul\":1595:1610   */\n      revert\n        /* \"#utility.yul\":1621:2340   */\n    tag_289:\n        /* \"#utility.yul\":1664:1669   */\n      0x00\n        /* \"#utility.yul\":1717:1720   */\n      dup3\n        /* \"#utility.yul\":1710:1714   */\n      0x1f\n        /* \"#utility.yul\":1702:1708   */\n      dup4\n        /* \"#utility.yul\":1698:1715   */\n      add\n        /* \"#utility.yul\":1694:1721   */\n      slt\n        /* \"#utility.yul\":1684:1739   */\n      tag_310\n      jumpi\n        /* \"#utility.yul\":1735:1736   */\n      0x00\n        /* \"#utility.yul\":1732:1733   */\n      dup1\n        /* \"#utility.yul\":1725:1737   */\n      revert\n        /* \"#utility.yul\":1684:1739   */\n    tag_310:\n        /* \"#utility.yul\":1771:1777   */\n      dup2\n        /* \"#utility.yul\":1758:1778   */\n      calldataload\n        /* \"#utility.yul\":1797:1815   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1834:1836   */\n      dup1\n        /* \"#utility.yul\":1830:1832   */\n      dup3\n        /* \"#utility.yul\":1827:1837   */\n      gt\n        /* \"#utility.yul\":1824:1860   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":1840:1858   */\n      tag_312\n      tag_288\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":1915:1917   */\n      0x40\n        /* \"#utility.yul\":1909:1918   */\n      mload\n        /* \"#utility.yul\":1883:1885   */\n      0x1f\n        /* \"#utility.yul\":1969:1982   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1965:1987   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1989:1991   */\n      0x3f\n        /* \"#utility.yul\":1961:1992   */\n      add\n        /* \"#utility.yul\":1957:1997   */\n      and\n        /* \"#utility.yul\":1945:1998   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2013:2031   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":2033:2055   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":2010:2056   */\n      or\n        /* \"#utility.yul\":2007:2079   */\n      iszero\n      tag_314\n      jumpi\n        /* \"#utility.yul\":2059:2077   */\n      tag_314\n      tag_288\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":2099:2109   */\n      dup2\n        /* \"#utility.yul\":2095:2097   */\n      0x40\n        /* \"#utility.yul\":2088:2110   */\n      mstore\n        /* \"#utility.yul\":2134:2136   */\n      dup4\n        /* \"#utility.yul\":2126:2132   */\n      dup2\n        /* \"#utility.yul\":2119:2137   */\n      mstore\n        /* \"#utility.yul\":2180:2183   */\n      dup7\n        /* \"#utility.yul\":2173:2177   */\n      0x20\n        /* \"#utility.yul\":2168:2170   */\n      dup6\n        /* \"#utility.yul\":2160:2166   */\n      dup9\n        /* \"#utility.yul\":2156:2171   */\n      add\n        /* \"#utility.yul\":2152:2178   */\n      add\n        /* \"#utility.yul\":2149:2184   */\n      gt\n        /* \"#utility.yul\":2146:2201   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":2197:2198   */\n      0x00\n        /* \"#utility.yul\":2194:2195   */\n      dup1\n        /* \"#utility.yul\":2187:2199   */\n      revert\n        /* \"#utility.yul\":2146:2201   */\n    tag_315:\n        /* \"#utility.yul\":2261:2263   */\n      dup4\n        /* \"#utility.yul\":2254:2258   */\n      0x20\n        /* \"#utility.yul\":2246:2252   */\n      dup8\n        /* \"#utility.yul\":2242:2259   */\n      add\n        /* \"#utility.yul\":2235:2239   */\n      0x20\n        /* \"#utility.yul\":2227:2233   */\n      dup4\n        /* \"#utility.yul\":2223:2240   */\n      add\n        /* \"#utility.yul\":2210:2264   */\n      calldatacopy\n        /* \"#utility.yul\":2308:2309   */\n      0x00\n        /* \"#utility.yul\":2301:2305   */\n      0x20\n        /* \"#utility.yul\":2296:2298   */\n      dup6\n        /* \"#utility.yul\":2288:2294   */\n      dup4\n        /* \"#utility.yul\":2284:2299   */\n      add\n        /* \"#utility.yul\":2280:2306   */\n      add\n        /* \"#utility.yul\":2273:2310   */\n      mstore\n        /* \"#utility.yul\":2328:2334   */\n      dup1\n        /* \"#utility.yul\":2319:2334   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1621:2340   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2345:2809   */\n    tag_82:\n        /* \"#utility.yul\":2432:2438   */\n      0x00\n        /* \"#utility.yul\":2440:2446   */\n      dup1\n        /* \"#utility.yul\":2448:2454   */\n      0x00\n        /* \"#utility.yul\":2501:2503   */\n      0x60\n        /* \"#utility.yul\":2489:2498   */\n      dup5\n        /* \"#utility.yul\":2480:2487   */\n      dup7\n        /* \"#utility.yul\":2476:2499   */\n      sub\n        /* \"#utility.yul\":2472:2504   */\n      slt\n        /* \"#utility.yul\":2469:2521   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":2517:2518   */\n      0x00\n        /* \"#utility.yul\":2514:2515   */\n      dup1\n        /* \"#utility.yul\":2507:2519   */\n      revert\n        /* \"#utility.yul\":2469:2521   */\n    tag_317:\n        /* \"#utility.yul\":2540:2569   */\n      tag_318\n        /* \"#utility.yul\":2559:2568   */\n      dup5\n        /* \"#utility.yul\":2540:2569   */\n      tag_287\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":2530:2569   */\n      swap3\n      pop\n        /* \"#utility.yul\":2616:2618   */\n      0x20\n        /* \"#utility.yul\":2605:2614   */\n      dup5\n        /* \"#utility.yul\":2601:2619   */\n      add\n        /* \"#utility.yul\":2588:2620   */\n      calldataload\n        /* \"#utility.yul\":2578:2620   */\n      swap2\n      pop\n        /* \"#utility.yul\":2671:2673   */\n      0x40\n        /* \"#utility.yul\":2660:2669   */\n      dup5\n        /* \"#utility.yul\":2656:2674   */\n      add\n        /* \"#utility.yul\":2643:2675   */\n      calldataload\n        /* \"#utility.yul\":2698:2716   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2690:2696   */\n      dup2\n        /* \"#utility.yul\":2687:2717   */\n      gt\n        /* \"#utility.yul\":2684:2734   */\n      iszero\n      tag_319\n      jumpi\n        /* \"#utility.yul\":2730:2731   */\n      0x00\n        /* \"#utility.yul\":2727:2728   */\n      dup1\n        /* \"#utility.yul\":2720:2732   */\n      revert\n        /* \"#utility.yul\":2684:2734   */\n    tag_319:\n        /* \"#utility.yul\":2753:2803   */\n      tag_320\n        /* \"#utility.yul\":2795:2802   */\n      dup7\n        /* \"#utility.yul\":2786:2792   */\n      dup3\n        /* \"#utility.yul\":2775:2784   */\n      dup8\n        /* \"#utility.yul\":2771:2793   */\n      add\n        /* \"#utility.yul\":2753:2803   */\n      tag_289\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":2743:2803   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2345:2809   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2814:2994   */\n    tag_93:\n        /* \"#utility.yul\":2873:2879   */\n      0x00\n        /* \"#utility.yul\":2926:2928   */\n      0x20\n        /* \"#utility.yul\":2914:2923   */\n      dup3\n        /* \"#utility.yul\":2905:2912   */\n      dup5\n        /* \"#utility.yul\":2901:2924   */\n      sub\n        /* \"#utility.yul\":2897:2929   */\n      slt\n        /* \"#utility.yul\":2894:2946   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":2942:2943   */\n      0x00\n        /* \"#utility.yul\":2939:2940   */\n      dup1\n        /* \"#utility.yul\":2932:2944   */\n      revert\n        /* \"#utility.yul\":2894:2946   */\n    tag_322:\n      pop\n        /* \"#utility.yul\":2965:2988   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2814:2994   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2999:3395   */\n    tag_105:\n        /* \"#utility.yul\":3077:3083   */\n      0x00\n        /* \"#utility.yul\":3085:3091   */\n      dup1\n        /* \"#utility.yul\":3138:3140   */\n      0x40\n        /* \"#utility.yul\":3126:3135   */\n      dup4\n        /* \"#utility.yul\":3117:3124   */\n      dup6\n        /* \"#utility.yul\":3113:3136   */\n      sub\n        /* \"#utility.yul\":3109:3141   */\n      slt\n        /* \"#utility.yul\":3106:3158   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":3154:3155   */\n      0x00\n        /* \"#utility.yul\":3151:3152   */\n      dup1\n        /* \"#utility.yul\":3144:3156   */\n      revert\n        /* \"#utility.yul\":3106:3158   */\n    tag_324:\n        /* \"#utility.yul\":3177:3206   */\n      tag_325\n        /* \"#utility.yul\":3196:3205   */\n      dup4\n        /* \"#utility.yul\":3177:3206   */\n      tag_287\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":3167:3206   */\n      swap2\n      pop\n        /* \"#utility.yul\":3257:3259   */\n      0x20\n        /* \"#utility.yul\":3246:3255   */\n      dup4\n        /* \"#utility.yul\":3242:3260   */\n      add\n        /* \"#utility.yul\":3229:3261   */\n      calldataload\n        /* \"#utility.yul\":3284:3302   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3276:3282   */\n      dup2\n        /* \"#utility.yul\":3273:3303   */\n      gt\n        /* \"#utility.yul\":3270:3320   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":3316:3317   */\n      0x00\n        /* \"#utility.yul\":3313:3314   */\n      dup1\n        /* \"#utility.yul\":3306:3318   */\n      revert\n        /* \"#utility.yul\":3270:3320   */\n    tag_326:\n        /* \"#utility.yul\":3339:3389   */\n      tag_327\n        /* \"#utility.yul\":3381:3388   */\n      dup6\n        /* \"#utility.yul\":3372:3378   */\n      dup3\n        /* \"#utility.yul\":3361:3370   */\n      dup7\n        /* \"#utility.yul\":3357:3379   */\n      add\n        /* \"#utility.yul\":3339:3389   */\n      tag_289\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":3329:3389   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2999:3395   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3757:3941   */\n    tag_120:\n        /* \"#utility.yul\":3827:3833   */\n      0x00\n        /* \"#utility.yul\":3880:3882   */\n      0x20\n        /* \"#utility.yul\":3868:3877   */\n      dup3\n        /* \"#utility.yul\":3859:3866   */\n      dup5\n        /* \"#utility.yul\":3855:3878   */\n      sub\n        /* \"#utility.yul\":3851:3883   */\n      slt\n        /* \"#utility.yul\":3848:3900   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":3896:3897   */\n      0x00\n        /* \"#utility.yul\":3893:3894   */\n      dup1\n        /* \"#utility.yul\":3886:3898   */\n      revert\n        /* \"#utility.yul\":3848:3900   */\n    tag_330:\n      pop\n        /* \"#utility.yul\":3919:3935   */\n      mload\n      swap2\n        /* \"#utility.yul\":3757:3941   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4295:4422   */\n    tag_290:\n        /* \"#utility.yul\":4356:4366   */\n      0x4e487b71\n        /* \"#utility.yul\":4351:4354   */\n      0xe0\n        /* \"#utility.yul\":4347:4367   */\n      shl\n        /* \"#utility.yul\":4344:4345   */\n      0x00\n        /* \"#utility.yul\":4337:4368   */\n      mstore\n        /* \"#utility.yul\":4387:4391   */\n      0x11\n        /* \"#utility.yul\":4384:4385   */\n      0x04\n        /* \"#utility.yul\":4377:4392   */\n      mstore\n        /* \"#utility.yul\":4411:4415   */\n      0x24\n        /* \"#utility.yul\":4408:4409   */\n      0x00\n        /* \"#utility.yul\":4401:4416   */\n      revert\n        /* \"#utility.yul\":4427:4555   */\n    tag_128:\n        /* \"#utility.yul\":4494:4503   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":4515:4526   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":4512:4549   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":4529:4547   */\n      tag_263\n      tag_290\n      jump\t// in\n        /* \"#utility.yul\":4839:5007   */\n    tag_134:\n        /* \"#utility.yul\":4912:4921   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":4943:4952   */\n      dup2\n      iszero\n        /* \"#utility.yul\":4960:4975   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":4954:4976   */\n      dup5\n      eq\n        /* \"#utility.yul\":4940:4977   */\n      or\n        /* \"#utility.yul\":4930:5001   */\n      tag_263\n      jumpi\n        /* \"#utility.yul\":4981:4999   */\n      tag_263\n      tag_290\n      jump\t// in\n        /* \"#utility.yul\":5012:5229   */\n    tag_136:\n        /* \"#utility.yul\":5052:5053   */\n      0x00\n        /* \"#utility.yul\":5078:5079   */\n      dup3\n        /* \"#utility.yul\":5068:5200   */\n      tag_341\n      jumpi\n        /* \"#utility.yul\":5122:5132   */\n      0x4e487b71\n        /* \"#utility.yul\":5117:5120   */\n      0xe0\n        /* \"#utility.yul\":5113:5133   */\n      shl\n        /* \"#utility.yul\":5110:5111   */\n      0x00\n        /* \"#utility.yul\":5103:5134   */\n      mstore\n        /* \"#utility.yul\":5157:5161   */\n      0x12\n        /* \"#utility.yul\":5154:5155   */\n      0x04\n        /* \"#utility.yul\":5147:5162   */\n      mstore\n        /* \"#utility.yul\":5185:5189   */\n      0x24\n        /* \"#utility.yul\":5182:5183   */\n      0x00\n        /* \"#utility.yul\":5175:5190   */\n      revert\n        /* \"#utility.yul\":5068:5200   */\n    tag_341:\n      pop\n        /* \"#utility.yul\":5214:5223   */\n      div\n      swap1\n        /* \"#utility.yul\":5012:5229   */\n      jump\t// out\n        /* \"#utility.yul\":5234:5361   */\n    tag_144:\n        /* \"#utility.yul\":5295:5305   */\n      0x4e487b71\n        /* \"#utility.yul\":5290:5293   */\n      0xe0\n        /* \"#utility.yul\":5286:5306   */\n      shl\n        /* \"#utility.yul\":5283:5284   */\n      0x00\n        /* \"#utility.yul\":5276:5307   */\n      mstore\n        /* \"#utility.yul\":5326:5330   */\n      0x32\n        /* \"#utility.yul\":5323:5324   */\n      0x04\n        /* \"#utility.yul\":5316:5331   */\n      mstore\n        /* \"#utility.yul\":5350:5354   */\n      0x24\n        /* \"#utility.yul\":5347:5348   */\n      0x00\n        /* \"#utility.yul\":5340:5355   */\n      revert\n        /* \"#utility.yul\":6806:7083   */\n    tag_193:\n        /* \"#utility.yul\":6873:6879   */\n      0x00\n        /* \"#utility.yul\":6926:6928   */\n      0x20\n        /* \"#utility.yul\":6914:6923   */\n      dup3\n        /* \"#utility.yul\":6905:6912   */\n      dup5\n        /* \"#utility.yul\":6901:6924   */\n      sub\n        /* \"#utility.yul\":6897:6929   */\n      slt\n        /* \"#utility.yul\":6894:6946   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":6942:6943   */\n      0x00\n        /* \"#utility.yul\":6939:6940   */\n      dup1\n        /* \"#utility.yul\":6932:6944   */\n      revert\n        /* \"#utility.yul\":6894:6946   */\n    tag_348:\n        /* \"#utility.yul\":6974:6983   */\n      dup2\n        /* \"#utility.yul\":6968:6984   */\n      mload\n        /* \"#utility.yul\":7027:7032   */\n      dup1\n        /* \"#utility.yul\":7020:7033   */\n      iszero\n        /* \"#utility.yul\":7013:7034   */\n      iszero\n        /* \"#utility.yul\":7006:7011   */\n      dup2\n        /* \"#utility.yul\":7003:7035   */\n      eq\n        /* \"#utility.yul\":6993:7053   */\n      tag_266\n      jumpi\n        /* \"#utility.yul\":7049:7050   */\n      0x00\n        /* \"#utility.yul\":7046:7047   */\n      dup1\n        /* \"#utility.yul\":7039:7051   */\n      revert\n        /* \"#utility.yul\":7088:7213   */\n    tag_195:\n        /* \"#utility.yul\":7153:7162   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":7174:7184   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7171:7207   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":7187:7205   */\n      tag_263\n      tag_290\n      jump\t// in\n        /* \"#utility.yul\":7218:7468   */\n    tag_291:\n        /* \"#utility.yul\":7303:7304   */\n      0x00\n        /* \"#utility.yul\":7313:7426   */\n    tag_354:\n        /* \"#utility.yul\":7327:7333   */\n      dup4\n        /* \"#utility.yul\":7324:7325   */\n      dup2\n        /* \"#utility.yul\":7321:7334   */\n      lt\n        /* \"#utility.yul\":7313:7426   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":7403:7414   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":7397:7415   */\n      mload\n        /* \"#utility.yul\":7384:7395   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":7377:7416   */\n      mstore\n        /* \"#utility.yul\":7349:7351   */\n      0x20\n        /* \"#utility.yul\":7342:7352   */\n      add\n        /* \"#utility.yul\":7313:7426   */\n      jump(tag_354)\n    tag_356:\n      pop\n      pop\n        /* \"#utility.yul\":7460:7461   */\n      0x00\n        /* \"#utility.yul\":7442:7458   */\n      swap2\n      add\n        /* \"#utility.yul\":7435:7462   */\n      mstore\n        /* \"#utility.yul\":7218:7468   */\n      jump\t// out\n        /* \"#utility.yul\":7473:7762   */\n    tag_197:\n        /* \"#utility.yul\":7604:7607   */\n      0x00\n        /* \"#utility.yul\":7642:7648   */\n      dup3\n        /* \"#utility.yul\":7636:7649   */\n      mload\n        /* \"#utility.yul\":7658:7724   */\n      tag_358\n        /* \"#utility.yul\":7717:7723   */\n      dup2\n        /* \"#utility.yul\":7712:7715   */\n      dup5\n        /* \"#utility.yul\":7705:7709   */\n      0x20\n        /* \"#utility.yul\":7697:7703   */\n      dup8\n        /* \"#utility.yul\":7693:7710   */\n      add\n        /* \"#utility.yul\":7658:7724   */\n      tag_291\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":7740:7756   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":7473:7762   */\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202c1ebf214d0e9b9af7b416df2e411e4d5b3f4fd19adc51b748d1225248124b8464736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_910": {
									"entryPoint": null,
									"id": 910,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 139,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:514:7",
										"nodeType": "YulBlock",
										"src": "0:514:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:209:7",
													"nodeType": "YulBlock",
													"src": "95:209:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:7",
																"nodeType": "YulBlock",
																"src": "141:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:7",
																					"nodeType": "YulLiteral",
																					"src": "150:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:7",
																					"nodeType": "YulLiteral",
																					"src": "153:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:7"
																			},
																			"nativeSrc": "143:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:7"
																		},
																		"nativeSrc": "143:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:7"
																		},
																		"nativeSrc": "112:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:7",
																		"nodeType": "YulLiteral",
																		"src": "137:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:7"
																},
																"nativeSrc": "108:32:7",
																"nodeType": "YulFunctionCall",
																"src": "108:32:7"
															},
															"nativeSrc": "105:52:7",
															"nodeType": "YulIf",
															"src": "105:52:7"
														},
														{
															"nativeSrc": "166:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "185:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "179:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:7"
																},
																"nativeSrc": "179:16:7",
																"nodeType": "YulFunctionCall",
																"src": "179:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "170:5:7",
																	"nodeType": "YulTypedName",
																	"src": "170:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "258:16:7",
																"nodeType": "YulBlock",
																"src": "258:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "267:1:7",
																					"nodeType": "YulLiteral",
																					"src": "267:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "270:1:7",
																					"nodeType": "YulLiteral",
																					"src": "270:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "260:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:7"
																			},
																			"nativeSrc": "260:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:7"
																		},
																		"nativeSrc": "260:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "217:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "228:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "243:3:7",
																										"nodeType": "YulLiteral",
																										"src": "243:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "248:1:7",
																										"nodeType": "YulLiteral",
																										"src": "248:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "239:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:7"
																								},
																								"nativeSrc": "239:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "252:1:7",
																								"nodeType": "YulLiteral",
																								"src": "252:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "235:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:7"
																						},
																						"nativeSrc": "235:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "224:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:7"
																				},
																				"nativeSrc": "224:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "214:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:7"
																		},
																		"nativeSrc": "214:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "207:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:7"
																},
																"nativeSrc": "207:50:7",
																"nodeType": "YulFunctionCall",
																"src": "207:50:7"
															},
															"nativeSrc": "204:70:7",
															"nodeType": "YulIf",
															"src": "204:70:7"
														},
														{
															"nativeSrc": "283:15:7",
															"nodeType": "YulAssignment",
															"src": "283:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "293:5:7",
																"nodeType": "YulIdentifier",
																"src": "293:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "283:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14:290:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:7",
														"nodeType": "YulTypedName",
														"src": "61:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:7",
														"nodeType": "YulTypedName",
														"src": "72:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:7",
														"nodeType": "YulTypedName",
														"src": "84:6:7",
														"type": ""
													}
												],
												"src": "14:290:7"
											},
											{
												"body": {
													"nativeSrc": "410:102:7",
													"nodeType": "YulBlock",
													"src": "410:102:7",
													"statements": [
														{
															"nativeSrc": "420:26:7",
															"nodeType": "YulAssignment",
															"src": "420:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "432:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "432:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:2:7",
																		"nodeType": "YulLiteral",
																		"src": "443:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "428:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "428:3:7"
																},
																"nativeSrc": "428:18:7",
																"nodeType": "YulFunctionCall",
																"src": "428:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "420:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "420:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "462:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "477:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "477:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "493:3:7",
																								"nodeType": "YulLiteral",
																								"src": "493:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "498:1:7",
																								"nodeType": "YulLiteral",
																								"src": "498:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "489:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "489:3:7"
																						},
																						"nativeSrc": "489:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "489:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "502:1:7",
																						"nodeType": "YulLiteral",
																						"src": "502:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "485:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "485:3:7"
																				},
																				"nativeSrc": "485:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "485:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "473:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:7"
																		},
																		"nativeSrc": "473:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "473:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "455:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "455:6:7"
																},
																"nativeSrc": "455:51:7",
																"nodeType": "YulFunctionCall",
																"src": "455:51:7"
															},
															"nativeSrc": "455:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "455:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "309:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "379:9:7",
														"nodeType": "YulTypedName",
														"src": "379:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "390:6:7",
														"nodeType": "YulTypedName",
														"src": "390:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "401:4:7",
														"nodeType": "YulTypedName",
														"src": "401:4:7",
														"type": ""
													}
												],
												"src": "309:203:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1515 CODESIZE SUB DUP1 PUSH2 0x1515 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xDA JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5C JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x65 DUP2 PUSH2 0x8B JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x107 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xEA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x100 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1401 DUP1 PUSH2 0x114 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x132 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA3150978 GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0xCDB43478 GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xCDB43478 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xE1AD418E EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xF09F0AAC EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xFCA0A3D2 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xFD03FE90 EQ PUSH2 0x3ED JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3150978 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xA4329677 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xA7F696CF EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0xCB8FF545 EQ PUSH2 0x33B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6BC20157 GT PUSH2 0xFA JUMPI DUP1 PUSH4 0x6BC20157 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x70181206 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x9C2C67C9 EQ PUSH2 0x25C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1BF6648 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x1F1A675D EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x2DD91A4C EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x33FA13A4 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x372C12B1 EQ PUSH2 0x1A4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x149 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x159 CALLDATASIZE PUSH1 0x4 PUSH2 0x1129 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x115A JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17F JUMP JUMPDEST PUSH2 0x149 PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0x7AB JUMP JUMPDEST PUSH2 0x175 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0x9951342D994001468506DF88F71A582867B50DD4 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x88D JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17F JUMP JUMPDEST PUSH2 0x175 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xA5014EA627AC22A63F2BF3B46E26D408E72F55C1 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0x1110 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0x77F146CA2943294CC53E6C3B5980B572C961AE23 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x244 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x349 CALLDATASIZE PUSH1 0x4 PUSH2 0x121F JUMP JUMPDEST PUSH2 0x8A0 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x35C CALLDATASIZE PUSH1 0x4 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0xE0B JUMP JUMPDEST PUSH2 0x175 PUSH2 0x36F CALLDATASIZE PUSH1 0x4 PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x1272 JUMP JUMPDEST PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x149 PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0xE57 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0x4B3A514DD71850277BBA82491F26DACDF089CB68 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x3FB CALLDATASIZE PUSH1 0x4 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x430 PUSH2 0xE91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973204164647265737320646F6573206E6F742065786973742100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x500 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x12D4 JUMP JUMPDEST LT ISZERO PUSH2 0x569 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x493 JUMP JUMPDEST PUSH20 0x4B3A514DD71850277BBA82491F26DACDF089CB67 NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADD PUSH2 0x636 JUMPI PUSH2 0x5A2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP4 PUSH2 0xEBD JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x4 DUP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x5F4 SWAP1 DUP5 SWAP1 PUSH2 0x12FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xCC87AB2ABFE87B272AF9B77691E40B3D9186A0431F3D41A8E06D39614F460722 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x644 DUP3 PUSH1 0x3 PUSH2 0x1312 JUMP JUMPDEST PUSH2 0x64E SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH0 SWAP2 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x6AC JUMPI PUSH2 0x6A4 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x686 JUMPI PUSH2 0x686 PUSH2 0x1348 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND DUP5 PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x666 JUMP JUMPDEST POP PUSH2 0x6D0 CALLER PUSH1 0x8 SLOAD DUP5 PUSH2 0x6BF SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 SWAP1 PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x6DD SWAP1 DUP4 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6ED SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH2 0x6FF SWAP1 DUP4 PUSH2 0x12FF JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x8 SLOAD PUSH2 0x71B SWAP1 DUP4 PUSH2 0x12FF JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x74D SWAP1 DUP5 SWAP1 PUSH2 0x12FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH32 0xCF53AE9736A409C662FA8B1187549847ACD41BEB1B89FD026293FC2E19ADACA7 SWAP1 CALLER SWAP1 PUSH2 0x783 SWAP1 DUP6 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x7B3 PUSH2 0xE91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x827 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x54686973204164647265737320697320616C72656164792057686974654C6973 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x74656421 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x493 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD SWAP1 SWAP3 SSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND DUP4 OR SWAP1 SSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x895 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0x89E PUSH0 PUSH2 0xF0F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8EA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x90E SWAP2 SWAP1 PUSH2 0x12D4 JUMP JUMPDEST LT ISZERO PUSH2 0x950 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1B1BDDD85B98D9481B9BDD081CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x493 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x994 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B8 SWAP2 SWAP1 PUSH2 0x12D4 JUMP JUMPDEST LT ISZERO PUSH2 0x9FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x493 JUMP JUMPDEST PUSH20 0x4B3A514DD71850277BBA82491F26DACDF089CB67 NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ADD PUSH2 0xB68 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA72 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA96 SWAP2 SWAP1 PUSH2 0x135C JUMP JUMPDEST POP DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAA8 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD DUP4 SWAP2 SWAP1 PUSH2 0xADA SWAP1 DUP5 SWAP1 PUSH2 0x13B0 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAF6 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xB2D SWAP1 DUP5 SWAP1 PUSH2 0x137B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xCC87AB2ABFE87B272AF9B77691E40B3D9186A0431F3D41A8E06D39614F460722 SWAP2 ADD PUSH2 0x79E JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0xB76 DUP4 PUSH1 0x3 PUSH2 0x1312 JUMP JUMPDEST PUSH2 0xB80 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH0 SWAP2 PUSH2 0xB94 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xC4E JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xBC5 JUMPI PUSH2 0xBC5 PUSH2 0x1348 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP5 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC21 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC45 SWAP2 SWAP1 PUSH2 0x135C JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xB98 JUMP JUMPDEST POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS PUSH1 0x8 SLOAD DUP8 PUSH2 0xC6E SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCBF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCE3 SWAP2 SWAP1 PUSH2 0x135C JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0xCF1 SWAP1 DUP5 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD01 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH2 0xD13 SWAP1 DUP5 PUSH2 0x12FF JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x8 SLOAD PUSH2 0xD2F SWAP1 DUP5 PUSH2 0x12FF JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0xD4C SWAP1 DUP6 SWAP1 PUSH2 0x13B0 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD68 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH2 0xD7A SWAP1 DUP5 PUSH2 0x12FF JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0xDAC SWAP1 DUP5 SWAP1 PUSH2 0x137B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH32 0xCC87AB2ABFE87B272AF9B77691E40B3D9186A0431F3D41A8E06D39614F460722 SWAP1 CALLER SWAP1 PUSH2 0xDE2 SWAP1 DUP7 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xE13 PUSH2 0xE91 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0xE2C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 CALLER SWAP1 PUSH2 0xEBD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE3E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xE5F PUSH2 0xE91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE88 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x493 JUMP JUMPDEST PUSH2 0xE2C DUP2 PUSH2 0xF0F JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x89E JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x493 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xE06 SWAP1 DUP5 SWAP1 PUSH2 0xF5E JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF72 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0xFBF JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 EQ ISZERO DUP1 ISZERO PUSH2 0xF96 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xF94 SWAP2 SWAP1 PUSH2 0x135C JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xE06 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x493 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xFCC DUP4 DUP4 PUSH0 PUSH2 0xFD5 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xFFA JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x493 JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1015 SWAP2 SWAP1 PUSH2 0x13B0 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x104F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1064 DUP7 DUP4 DUP4 PUSH2 0x1070 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1085 JUMPI PUSH2 0x1080 DUP3 PUSH2 0x10CC JUMP JUMPDEST PUSH2 0x1069 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x109C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x10C5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x493 JUMP JUMPDEST POP DUP1 PUSH2 0x1069 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x10DC JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x110B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1120 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFCC DUP3 PUSH2 0x10F5 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x113A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1143 DUP4 PUSH2 0x10F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1151 PUSH1 0x20 DUP5 ADD PUSH2 0x10F5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x116B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1174 DUP4 PUSH2 0x10F5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11C0 JUMPI PUSH2 0x11C0 PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x11E8 JUMPI PUSH2 0x11E8 PUSH2 0x1182 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1200 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1231 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x123A DUP5 PUSH2 0x10F5 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x125C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1268 DUP7 DUP3 DUP8 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1282 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x129A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12A3 DUP4 PUSH2 0x10F5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12BE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12CA DUP6 DUP3 DUP7 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xFCF JUMPI PUSH2 0xFCF PUSH2 0x12EB JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xFCF JUMPI PUSH2 0xFCF PUSH2 0x12EB JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1343 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x136C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1069 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xFCF JUMPI PUSH2 0xFCF PUSH2 0x12EB JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13A8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1390 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x13C1 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x138E JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x1E 0xBF 0x21 0x4D 0xE SWAP12 SWAP11 0xF7 0xB4 AND 0xDF 0x2E COINBASE 0x1E 0x4D JUMPDEST EXTCODEHASH 0x4F 0xD1 SWAP11 0xDC MLOAD 0xB7 BASEFEE 0xD1 0x22 MSTORE BASEFEE SLT 0x4B DUP5 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "514:8541:6:-:0;;;2181:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2223:12;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;455:51:7;428:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;2247:5:6::1;:20:::0;;-1:-1:-1;;;;;;2247:20:6::1;-1:-1:-1::0;;;;;2247:20:6;;;::::1;::::0;;;::::1;::::0;;514:8541;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:290:7:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:7;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:7:o;309:203::-;514:8541:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Owner_840": {
									"entryPoint": null,
									"id": 840,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@WhiteList_939": {
									"entryPoint": 1963,
									"id": 939,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_callOptionalReturn_501": {
									"entryPoint": 3934,
									"id": 501,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3729,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_816": {
									"entryPoint": null,
									"id": 816,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_803": {
									"entryPoint": 4300,
									"id": 803,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3855,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@currentHoldings_895": {
									"entryPoint": null,
									"id": 895,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_671": {
									"entryPoint": 4053,
									"id": 671,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_625": {
									"entryPoint": 4031,
									"id": 625,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@holdingOfTokens_1414": {
									"entryPoint": null,
									"id": 1414,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@holdingOf_DAI_1368": {
									"entryPoint": null,
									"id": 1368,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@holdingOf_USDC_1383": {
									"entryPoint": null,
									"id": 1383,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@holdingOf_USDM_1398": {
									"entryPoint": null,
									"id": 1398,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@holdingOf_USDT_1353": {
									"entryPoint": null,
									"id": 1353,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@overColleteralFeeAmount_897": {
									"entryPoint": null,
									"id": 897,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeFromWhiteList_1338": {
									"entryPoint": 1064,
									"id": 1338,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2189,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransfer_311": {
									"entryPoint": 3773,
									"id": 311,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@substrateSwapTokens_1298": {
									"entryPoint": 1212,
									"id": 1298,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@swapTokens_1143": {
									"entryPoint": 2208,
									"id": 1143,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 3671,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userAmount_887": {
									"entryPoint": null,
									"id": 887,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userTokenAmount_883": {
									"entryPoint": null,
									"id": 883,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userTotalSwapAmount_893": {
									"entryPoint": null,
									"id": 893,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_763": {
									"entryPoint": 4208,
									"id": 763,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@whilistedAddress_877": {
									"entryPoint": 3631,
									"id": 877,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@whiteList_874": {
									"entryPoint": null,
									"id": 874,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawBalanceTokens_1316": {
									"entryPoint": 3595,
									"id": 1316,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 4341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 4502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_string_memory_ptr": {
									"entryPoint": 4745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_string_memory_ptr": {
									"entryPoint": 4639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4820,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_69cc1d0091f450c9f1b40951e04a8e02ae8a28f18820a3d492d53b3c2bca82f7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_96f12f93478a3768b4b822c9ec935962a88f68f145f33917ac63ab3e2a411fe3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b7f5bbf01babd612ff41adb253311ab3eccd8d56664e3b6ae54fa2e62b1bbfb0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5006,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 4843,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4936,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4482,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8056:7",
										"nodeType": "YulBlock",
										"src": "0:8056:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:7",
													"nodeType": "YulBlock",
													"src": "63:124:7",
													"statements": [
														{
															"nativeSrc": "73:29:7",
															"nodeType": "YulAssignment",
															"src": "73:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:7"
																},
																"nativeSrc": "82:20:7",
																"nodeType": "YulFunctionCall",
																"src": "82:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:7",
																"nodeType": "YulBlock",
																"src": "165:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:7",
																					"nodeType": "YulLiteral",
																					"src": "174:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:7",
																					"nodeType": "YulLiteral",
																					"src": "177:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:7"
																			},
																			"nativeSrc": "167:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:7"
																		},
																		"nativeSrc": "167:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:7",
																										"nodeType": "YulLiteral",
																										"src": "150:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:7",
																										"nodeType": "YulLiteral",
																										"src": "155:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:7"
																								},
																								"nativeSrc": "146:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:7",
																								"nodeType": "YulLiteral",
																								"src": "159:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:7"
																						},
																						"nativeSrc": "142:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:7"
																				},
																				"nativeSrc": "131:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:7"
																		},
																		"nativeSrc": "121:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:7"
																},
																"nativeSrc": "114:50:7",
																"nodeType": "YulFunctionCall",
																"src": "114:50:7"
															},
															"nativeSrc": "111:70:7",
															"nodeType": "YulIf",
															"src": "111:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:7",
														"nodeType": "YulTypedName",
														"src": "42:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:7",
														"nodeType": "YulTypedName",
														"src": "53:5:7",
														"type": ""
													}
												],
												"src": "14:173:7"
											},
											{
												"body": {
													"nativeSrc": "262:116:7",
													"nodeType": "YulBlock",
													"src": "262:116:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "308:16:7",
																"nodeType": "YulBlock",
																"src": "308:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "317:1:7",
																					"nodeType": "YulLiteral",
																					"src": "317:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "320:1:7",
																					"nodeType": "YulLiteral",
																					"src": "320:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "310:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:7"
																			},
																			"nativeSrc": "310:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:7"
																		},
																		"nativeSrc": "310:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "283:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "292:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "279:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:7"
																		},
																		"nativeSrc": "279:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "304:2:7",
																		"nodeType": "YulLiteral",
																		"src": "304:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "275:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:7"
																},
																"nativeSrc": "275:32:7",
																"nodeType": "YulFunctionCall",
																"src": "275:32:7"
															},
															"nativeSrc": "272:52:7",
															"nodeType": "YulIf",
															"src": "272:52:7"
														},
														{
															"nativeSrc": "333:39:7",
															"nodeType": "YulAssignment",
															"src": "333:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "343:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:7"
																},
																"nativeSrc": "343:29:7",
																"nodeType": "YulFunctionCall",
																"src": "343:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "333:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "192:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "228:9:7",
														"nodeType": "YulTypedName",
														"src": "228:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "239:7:7",
														"nodeType": "YulTypedName",
														"src": "239:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "251:6:7",
														"nodeType": "YulTypedName",
														"src": "251:6:7",
														"type": ""
													}
												],
												"src": "192:186:7"
											},
											{
												"body": {
													"nativeSrc": "470:173:7",
													"nodeType": "YulBlock",
													"src": "470:173:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "516:16:7",
																"nodeType": "YulBlock",
																"src": "516:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "525:1:7",
																					"nodeType": "YulLiteral",
																					"src": "525:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "528:1:7",
																					"nodeType": "YulLiteral",
																					"src": "528:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "518:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "518:6:7"
																			},
																			"nativeSrc": "518:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "518:12:7"
																		},
																		"nativeSrc": "518:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "518:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "491:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "491:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "500:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "500:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "487:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "487:3:7"
																		},
																		"nativeSrc": "487:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "487:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "512:2:7",
																		"nodeType": "YulLiteral",
																		"src": "512:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "483:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "483:3:7"
																},
																"nativeSrc": "483:32:7",
																"nodeType": "YulFunctionCall",
																"src": "483:32:7"
															},
															"nativeSrc": "480:52:7",
															"nodeType": "YulIf",
															"src": "480:52:7"
														},
														{
															"nativeSrc": "541:39:7",
															"nodeType": "YulAssignment",
															"src": "541:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "570:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "570:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "551:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "551:18:7"
																},
																"nativeSrc": "551:29:7",
																"nodeType": "YulFunctionCall",
																"src": "551:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "541:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:7"
																}
															]
														},
														{
															"nativeSrc": "589:48:7",
															"nodeType": "YulAssignment",
															"src": "589:48:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "622:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "622:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "633:2:7",
																				"nodeType": "YulLiteral",
																				"src": "633:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "618:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "618:3:7"
																		},
																		"nativeSrc": "618:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "618:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "599:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "599:18:7"
																},
																"nativeSrc": "599:38:7",
																"nodeType": "YulFunctionCall",
																"src": "599:38:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "589:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "383:260:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "428:9:7",
														"nodeType": "YulTypedName",
														"src": "428:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "439:7:7",
														"nodeType": "YulTypedName",
														"src": "439:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "451:6:7",
														"nodeType": "YulTypedName",
														"src": "451:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "459:6:7",
														"nodeType": "YulTypedName",
														"src": "459:6:7",
														"type": ""
													}
												],
												"src": "383:260:7"
											},
											{
												"body": {
													"nativeSrc": "749:76:7",
													"nodeType": "YulBlock",
													"src": "749:76:7",
													"statements": [
														{
															"nativeSrc": "759:26:7",
															"nodeType": "YulAssignment",
															"src": "759:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "771:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "771:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "782:2:7",
																		"nodeType": "YulLiteral",
																		"src": "782:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "767:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "767:3:7"
																},
																"nativeSrc": "767:18:7",
																"nodeType": "YulFunctionCall",
																"src": "767:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "759:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "759:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "801:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "801:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "812:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "812:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "794:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "794:6:7"
																},
																"nativeSrc": "794:25:7",
																"nodeType": "YulFunctionCall",
																"src": "794:25:7"
															},
															"nativeSrc": "794:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "794:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "648:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "718:9:7",
														"nodeType": "YulTypedName",
														"src": "718:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "729:6:7",
														"nodeType": "YulTypedName",
														"src": "729:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "740:4:7",
														"nodeType": "YulTypedName",
														"src": "740:4:7",
														"type": ""
													}
												],
												"src": "648:177:7"
											},
											{
												"body": {
													"nativeSrc": "917:167:7",
													"nodeType": "YulBlock",
													"src": "917:167:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "963:16:7",
																"nodeType": "YulBlock",
																"src": "963:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "972:1:7",
																					"nodeType": "YulLiteral",
																					"src": "972:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "975:1:7",
																					"nodeType": "YulLiteral",
																					"src": "975:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "965:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "965:6:7"
																			},
																			"nativeSrc": "965:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "965:12:7"
																		},
																		"nativeSrc": "965:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "965:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "938:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "938:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "947:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "947:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "934:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "934:3:7"
																		},
																		"nativeSrc": "934:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "934:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "959:2:7",
																		"nodeType": "YulLiteral",
																		"src": "959:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "930:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "930:3:7"
																},
																"nativeSrc": "930:32:7",
																"nodeType": "YulFunctionCall",
																"src": "930:32:7"
															},
															"nativeSrc": "927:52:7",
															"nodeType": "YulIf",
															"src": "927:52:7"
														},
														{
															"nativeSrc": "988:39:7",
															"nodeType": "YulAssignment",
															"src": "988:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1017:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1017:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "998:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "998:18:7"
																},
																"nativeSrc": "998:29:7",
																"nodeType": "YulFunctionCall",
																"src": "998:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "988:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "988:6:7"
																}
															]
														},
														{
															"nativeSrc": "1036:42:7",
															"nodeType": "YulAssignment",
															"src": "1036:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1063:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1063:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1074:2:7",
																				"nodeType": "YulLiteral",
																				"src": "1074:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1059:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1059:3:7"
																		},
																		"nativeSrc": "1059:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1059:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1046:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1046:12:7"
																},
																"nativeSrc": "1046:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1046:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1036:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1036:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "830:254:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "875:9:7",
														"nodeType": "YulTypedName",
														"src": "875:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "886:7:7",
														"nodeType": "YulTypedName",
														"src": "886:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "898:6:7",
														"nodeType": "YulTypedName",
														"src": "898:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "906:6:7",
														"nodeType": "YulTypedName",
														"src": "906:6:7",
														"type": ""
													}
												],
												"src": "830:254:7"
											},
											{
												"body": {
													"nativeSrc": "1184:92:7",
													"nodeType": "YulBlock",
													"src": "1184:92:7",
													"statements": [
														{
															"nativeSrc": "1194:26:7",
															"nodeType": "YulAssignment",
															"src": "1194:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1206:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1206:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1217:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1217:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1202:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1202:3:7"
																},
																"nativeSrc": "1202:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1202:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1194:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1194:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1236:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1236:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1261:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1261:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1254:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1254:6:7"
																				},
																				"nativeSrc": "1254:14:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1254:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1247:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1247:6:7"
																		},
																		"nativeSrc": "1247:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1247:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1229:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1229:6:7"
																},
																"nativeSrc": "1229:41:7",
																"nodeType": "YulFunctionCall",
																"src": "1229:41:7"
															},
															"nativeSrc": "1229:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "1229:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1089:187:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1153:9:7",
														"nodeType": "YulTypedName",
														"src": "1153:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1164:6:7",
														"nodeType": "YulTypedName",
														"src": "1164:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1175:4:7",
														"nodeType": "YulTypedName",
														"src": "1175:4:7",
														"type": ""
													}
												],
												"src": "1089:187:7"
											},
											{
												"body": {
													"nativeSrc": "1382:102:7",
													"nodeType": "YulBlock",
													"src": "1382:102:7",
													"statements": [
														{
															"nativeSrc": "1392:26:7",
															"nodeType": "YulAssignment",
															"src": "1392:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1404:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1404:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1400:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1400:3:7"
																},
																"nativeSrc": "1400:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1400:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1392:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1392:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1434:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1434:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1449:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1449:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1465:3:7",
																								"nodeType": "YulLiteral",
																								"src": "1465:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1470:1:7",
																								"nodeType": "YulLiteral",
																								"src": "1470:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "1461:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1461:3:7"
																						},
																						"nativeSrc": "1461:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1461:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1474:1:7",
																						"nodeType": "YulLiteral",
																						"src": "1474:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1457:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1457:3:7"
																				},
																				"nativeSrc": "1457:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1457:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1445:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1445:3:7"
																		},
																		"nativeSrc": "1445:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1427:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1427:6:7"
																},
																"nativeSrc": "1427:51:7",
																"nodeType": "YulFunctionCall",
																"src": "1427:51:7"
															},
															"nativeSrc": "1427:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "1427:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1281:203:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1351:9:7",
														"nodeType": "YulTypedName",
														"src": "1351:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1362:6:7",
														"nodeType": "YulTypedName",
														"src": "1362:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1373:4:7",
														"nodeType": "YulTypedName",
														"src": "1373:4:7",
														"type": ""
													}
												],
												"src": "1281:203:7"
											},
											{
												"body": {
													"nativeSrc": "1521:95:7",
													"nodeType": "YulBlock",
													"src": "1521:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1545:3:7",
																				"nodeType": "YulLiteral",
																				"src": "1545:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1550:10:7",
																				"nodeType": "YulLiteral",
																				"src": "1550:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1541:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1541:3:7"
																		},
																		"nativeSrc": "1541:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1541:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:7"
																},
																"nativeSrc": "1531:31:7",
																"nodeType": "YulFunctionCall",
																"src": "1531:31:7"
															},
															"nativeSrc": "1531:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "1531:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1578:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1578:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1581:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1581:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1571:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1571:6:7"
																},
																"nativeSrc": "1571:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1571:15:7"
															},
															"nativeSrc": "1571:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1571:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1602:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1602:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1605:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1605:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1595:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1595:6:7"
																},
																"nativeSrc": "1595:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1595:15:7"
															},
															"nativeSrc": "1595:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1595:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1489:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1489:127:7"
											},
											{
												"body": {
													"nativeSrc": "1674:666:7",
													"nodeType": "YulBlock",
													"src": "1674:666:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1723:16:7",
																"nodeType": "YulBlock",
																"src": "1723:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1732:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1732:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1735:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1735:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1725:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1725:6:7"
																			},
																			"nativeSrc": "1725:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1725:12:7"
																		},
																		"nativeSrc": "1725:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1725:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "1702:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1702:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1710:4:7",
																						"nodeType": "YulLiteral",
																						"src": "1710:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1698:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1698:3:7"
																				},
																				"nativeSrc": "1698:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1698:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "1717:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "1717:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1694:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1694:3:7"
																		},
																		"nativeSrc": "1694:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1694:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1687:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1687:6:7"
																},
																"nativeSrc": "1687:35:7",
																"nodeType": "YulFunctionCall",
																"src": "1687:35:7"
															},
															"nativeSrc": "1684:55:7",
															"nodeType": "YulIf",
															"src": "1684:55:7"
														},
														{
															"nativeSrc": "1748:30:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1748:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1771:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1771:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1758:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1758:12:7"
																},
																"nativeSrc": "1758:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1758:20:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1752:2:7",
																	"nodeType": "YulTypedName",
																	"src": "1752:2:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1787:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1787:28:7",
															"value": {
																"kind": "number",
																"nativeSrc": "1797:18:7",
																"nodeType": "YulLiteral",
																"src": "1797:18:7",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "1791:2:7",
																	"nodeType": "YulTypedName",
																	"src": "1791:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1838:22:7",
																"nodeType": "YulBlock",
																"src": "1838:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1840:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1840:16:7"
																			},
																			"nativeSrc": "1840:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1840:18:7"
																		},
																		"nativeSrc": "1840:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1840:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1830:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "1830:2:7"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "1834:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "1834:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1827:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1827:2:7"
																},
																"nativeSrc": "1827:10:7",
																"nodeType": "YulFunctionCall",
																"src": "1827:10:7"
															},
															"nativeSrc": "1824:36:7",
															"nodeType": "YulIf",
															"src": "1824:36:7"
														},
														{
															"nativeSrc": "1869:17:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1869:17:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1883:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1883:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "1879:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1879:3:7"
																},
																"nativeSrc": "1879:7:7",
																"nodeType": "YulFunctionCall",
																"src": "1879:7:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "1873:2:7",
																	"nodeType": "YulTypedName",
																	"src": "1873:2:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1895:23:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1895:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1915:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1915:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1909:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1909:5:7"
																},
																"nativeSrc": "1909:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1909:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1899:6:7",
																	"nodeType": "YulTypedName",
																	"src": "1899:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1927:71:7",
															"nodeType": "YulVariableDeclaration",
															"src": "1927:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1949:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1949:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "1973:2:7",
																										"nodeType": "YulIdentifier",
																										"src": "1973:2:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1977:4:7",
																										"nodeType": "YulLiteral",
																										"src": "1977:4:7",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1969:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "1969:3:7"
																								},
																								"nativeSrc": "1969:13:7",
																								"nodeType": "YulFunctionCall",
																								"src": "1969:13:7"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "1984:2:7",
																								"nodeType": "YulIdentifier",
																								"src": "1984:2:7"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "1965:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1965:3:7"
																						},
																						"nativeSrc": "1965:22:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1965:22:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1989:2:7",
																						"nodeType": "YulLiteral",
																						"src": "1989:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1961:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1961:3:7"
																				},
																				"nativeSrc": "1961:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1961:31:7"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "1994:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "1994:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1957:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:7"
																		},
																		"nativeSrc": "1957:40:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1957:40:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1945:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:7"
																},
																"nativeSrc": "1945:53:7",
																"nodeType": "YulFunctionCall",
																"src": "1945:53:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "1931:10:7",
																	"nodeType": "YulTypedName",
																	"src": "1931:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2057:22:7",
																"nodeType": "YulBlock",
																"src": "2057:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2059:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2059:16:7"
																			},
																			"nativeSrc": "2059:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2059:18:7"
																		},
																		"nativeSrc": "2059:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2059:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2016:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "2016:10:7"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "2028:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "2028:2:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2013:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2013:2:7"
																		},
																		"nativeSrc": "2013:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2013:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2036:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "2036:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2048:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2048:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2033:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2033:2:7"
																		},
																		"nativeSrc": "2033:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2033:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2010:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2010:2:7"
																},
																"nativeSrc": "2010:46:7",
																"nodeType": "YulFunctionCall",
																"src": "2010:46:7"
															},
															"nativeSrc": "2007:72:7",
															"nodeType": "YulIf",
															"src": "2007:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2095:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2095:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2099:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "2099:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2088:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2088:6:7"
																},
																"nativeSrc": "2088:22:7",
																"nodeType": "YulFunctionCall",
																"src": "2088:22:7"
															},
															"nativeSrc": "2088:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "2088:22:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2126:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2126:6:7"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "2134:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "2134:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2119:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2119:6:7"
																},
																"nativeSrc": "2119:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2119:18:7"
															},
															"nativeSrc": "2119:18:7",
															"nodeType": "YulExpressionStatement",
															"src": "2119:18:7"
														},
														{
															"body": {
																"nativeSrc": "2185:16:7",
																"nodeType": "YulBlock",
																"src": "2185:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2194:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2194:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2197:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2197:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2187:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2187:6:7"
																			},
																			"nativeSrc": "2187:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2187:12:7"
																		},
																		"nativeSrc": "2187:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2187:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2160:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2160:6:7"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "2168:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "2168:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2156:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2156:3:7"
																				},
																				"nativeSrc": "2156:15:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2156:15:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2173:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2173:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2152:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2152:3:7"
																		},
																		"nativeSrc": "2152:26:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2152:26:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2180:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2180:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2149:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2149:2:7"
																},
																"nativeSrc": "2149:35:7",
																"nodeType": "YulFunctionCall",
																"src": "2149:35:7"
															},
															"nativeSrc": "2146:55:7",
															"nodeType": "YulIf",
															"src": "2146:55:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2227:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2227:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2235:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2235:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2223:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2223:3:7"
																		},
																		"nativeSrc": "2223:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2223:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2246:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2246:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2254:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2254:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2242:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2242:3:7"
																		},
																		"nativeSrc": "2242:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2242:17:7"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "2261:2:7",
																		"nodeType": "YulIdentifier",
																		"src": "2261:2:7"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2210:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2210:12:7"
																},
																"nativeSrc": "2210:54:7",
																"nodeType": "YulFunctionCall",
																"src": "2210:54:7"
															},
															"nativeSrc": "2210:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "2210:54:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "2288:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2288:6:7"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "2296:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "2296:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2284:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2284:3:7"
																				},
																				"nativeSrc": "2284:15:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2284:15:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2301:4:7",
																				"nodeType": "YulLiteral",
																				"src": "2301:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2280:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2280:3:7"
																		},
																		"nativeSrc": "2280:26:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2280:26:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2308:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2308:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2273:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2273:6:7"
																},
																"nativeSrc": "2273:37:7",
																"nodeType": "YulFunctionCall",
																"src": "2273:37:7"
															},
															"nativeSrc": "2273:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "2273:37:7"
														},
														{
															"nativeSrc": "2319:15:7",
															"nodeType": "YulAssignment",
															"src": "2319:15:7",
															"value": {
																"name": "memPtr",
																"nativeSrc": "2328:6:7",
																"nodeType": "YulIdentifier",
																"src": "2328:6:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2319:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2319:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nativeSrc": "1621:719:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1648:6:7",
														"nodeType": "YulTypedName",
														"src": "1648:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1656:3:7",
														"nodeType": "YulTypedName",
														"src": "1656:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1664:5:7",
														"nodeType": "YulTypedName",
														"src": "1664:5:7",
														"type": ""
													}
												],
												"src": "1621:719:7"
											},
											{
												"body": {
													"nativeSrc": "2459:350:7",
													"nodeType": "YulBlock",
													"src": "2459:350:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2505:16:7",
																"nodeType": "YulBlock",
																"src": "2505:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2514:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2514:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2517:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2507:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2507:6:7"
																			},
																			"nativeSrc": "2507:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2507:12:7"
																		},
																		"nativeSrc": "2507:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2507:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2480:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2480:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2489:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2489:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2476:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2476:3:7"
																		},
																		"nativeSrc": "2476:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2476:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2501:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2501:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2472:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2472:3:7"
																},
																"nativeSrc": "2472:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2472:32:7"
															},
															"nativeSrc": "2469:52:7",
															"nodeType": "YulIf",
															"src": "2469:52:7"
														},
														{
															"nativeSrc": "2530:39:7",
															"nodeType": "YulAssignment",
															"src": "2530:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2559:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2559:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2540:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2540:18:7"
																},
																"nativeSrc": "2540:29:7",
																"nodeType": "YulFunctionCall",
																"src": "2540:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2530:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2530:6:7"
																}
															]
														},
														{
															"nativeSrc": "2578:42:7",
															"nodeType": "YulAssignment",
															"src": "2578:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2605:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2605:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2616:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2616:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2601:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2601:3:7"
																		},
																		"nativeSrc": "2601:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2601:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2588:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2588:12:7"
																},
																"nativeSrc": "2588:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2588:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2578:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2578:6:7"
																}
															]
														},
														{
															"nativeSrc": "2629:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2629:46:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2660:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2660:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2671:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2671:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2656:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2656:3:7"
																		},
																		"nativeSrc": "2656:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2656:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2643:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2643:12:7"
																},
																"nativeSrc": "2643:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2643:32:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2633:6:7",
																	"nodeType": "YulTypedName",
																	"src": "2633:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2718:16:7",
																"nodeType": "YulBlock",
																"src": "2718:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2727:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2727:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2730:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2730:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2720:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2720:6:7"
																			},
																			"nativeSrc": "2720:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2720:12:7"
																		},
																		"nativeSrc": "2720:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2720:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2690:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2690:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2698:18:7",
																		"nodeType": "YulLiteral",
																		"src": "2698:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2687:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2687:2:7"
																},
																"nativeSrc": "2687:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2687:30:7"
															},
															"nativeSrc": "2684:50:7",
															"nodeType": "YulIf",
															"src": "2684:50:7"
														},
														{
															"nativeSrc": "2743:60:7",
															"nodeType": "YulAssignment",
															"src": "2743:60:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2775:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2775:9:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2786:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2786:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2771:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2771:3:7"
																		},
																		"nativeSrc": "2771:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2771:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "2795:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "2795:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "2753:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "2753:17:7"
																},
																"nativeSrc": "2753:50:7",
																"nodeType": "YulFunctionCall",
																"src": "2753:50:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2743:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2743:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_string_memory_ptr",
												"nativeSrc": "2345:464:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2409:9:7",
														"nodeType": "YulTypedName",
														"src": "2409:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2420:7:7",
														"nodeType": "YulTypedName",
														"src": "2420:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2432:6:7",
														"nodeType": "YulTypedName",
														"src": "2432:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2440:6:7",
														"nodeType": "YulTypedName",
														"src": "2440:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2448:6:7",
														"nodeType": "YulTypedName",
														"src": "2448:6:7",
														"type": ""
													}
												],
												"src": "2345:464:7"
											},
											{
												"body": {
													"nativeSrc": "2884:110:7",
													"nodeType": "YulBlock",
													"src": "2884:110:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2930:16:7",
																"nodeType": "YulBlock",
																"src": "2930:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2939:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2939:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2942:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2942:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2932:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:7"
																			},
																			"nativeSrc": "2932:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2932:12:7"
																		},
																		"nativeSrc": "2932:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2932:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2905:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2905:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2914:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2914:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2901:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2901:3:7"
																		},
																		"nativeSrc": "2901:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2901:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2926:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2926:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2897:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2897:3:7"
																},
																"nativeSrc": "2897:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2897:32:7"
															},
															"nativeSrc": "2894:52:7",
															"nodeType": "YulIf",
															"src": "2894:52:7"
														},
														{
															"nativeSrc": "2955:33:7",
															"nodeType": "YulAssignment",
															"src": "2955:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2978:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2978:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2965:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2965:12:7"
																},
																"nativeSrc": "2965:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2965:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2955:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2955:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2814:180:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2850:9:7",
														"nodeType": "YulTypedName",
														"src": "2850:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2861:7:7",
														"nodeType": "YulTypedName",
														"src": "2861:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2873:6:7",
														"nodeType": "YulTypedName",
														"src": "2873:6:7",
														"type": ""
													}
												],
												"src": "2814:180:7"
											},
											{
												"body": {
													"nativeSrc": "3096:299:7",
													"nodeType": "YulBlock",
													"src": "3096:299:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3142:16:7",
																"nodeType": "YulBlock",
																"src": "3142:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3151:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3151:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3154:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3154:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3144:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3144:6:7"
																			},
																			"nativeSrc": "3144:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3144:12:7"
																		},
																		"nativeSrc": "3144:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3144:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3117:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3117:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3126:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3126:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3113:3:7"
																		},
																		"nativeSrc": "3113:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3113:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3138:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3138:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3109:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3109:3:7"
																},
																"nativeSrc": "3109:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3109:32:7"
															},
															"nativeSrc": "3106:52:7",
															"nodeType": "YulIf",
															"src": "3106:52:7"
														},
														{
															"nativeSrc": "3167:39:7",
															"nodeType": "YulAssignment",
															"src": "3167:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3196:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3196:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3177:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3177:18:7"
																},
																"nativeSrc": "3177:29:7",
																"nodeType": "YulFunctionCall",
																"src": "3177:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3167:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3167:6:7"
																}
															]
														},
														{
															"nativeSrc": "3215:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3215:46:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3246:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3246:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3257:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3257:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3242:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3242:3:7"
																		},
																		"nativeSrc": "3242:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3242:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3229:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "3229:12:7"
																},
																"nativeSrc": "3229:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3229:32:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3219:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3219:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3304:16:7",
																"nodeType": "YulBlock",
																"src": "3304:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3313:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3313:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3316:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3316:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3306:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3306:6:7"
																			},
																			"nativeSrc": "3306:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3306:12:7"
																		},
																		"nativeSrc": "3306:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3306:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3276:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3276:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3284:18:7",
																		"nodeType": "YulLiteral",
																		"src": "3284:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3273:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3273:2:7"
																},
																"nativeSrc": "3273:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3273:30:7"
															},
															"nativeSrc": "3270:50:7",
															"nodeType": "YulIf",
															"src": "3270:50:7"
														},
														{
															"nativeSrc": "3329:60:7",
															"nodeType": "YulAssignment",
															"src": "3329:60:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3361:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3361:9:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3372:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3372:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3357:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3357:3:7"
																		},
																		"nativeSrc": "3357:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3357:22:7"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3381:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "3381:7:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "3339:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3339:17:7"
																},
																"nativeSrc": "3339:50:7",
																"nodeType": "YulFunctionCall",
																"src": "3339:50:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3329:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3329:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_memory_ptr",
												"nativeSrc": "2999:396:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3054:9:7",
														"nodeType": "YulTypedName",
														"src": "3054:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3065:7:7",
														"nodeType": "YulTypedName",
														"src": "3065:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3077:6:7",
														"nodeType": "YulTypedName",
														"src": "3077:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3085:6:7",
														"nodeType": "YulTypedName",
														"src": "3085:6:7",
														"type": ""
													}
												],
												"src": "2999:396:7"
											},
											{
												"body": {
													"nativeSrc": "3574:178:7",
													"nodeType": "YulBlock",
													"src": "3574:178:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3591:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3591:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3602:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3602:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3584:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3584:6:7"
																},
																"nativeSrc": "3584:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3584:21:7"
															},
															"nativeSrc": "3584:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "3584:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3625:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3625:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3636:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3636:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3621:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3621:3:7"
																		},
																		"nativeSrc": "3621:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3621:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3641:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3641:2:7",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3614:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3614:6:7"
																},
																"nativeSrc": "3614:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3614:30:7"
															},
															"nativeSrc": "3614:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "3614:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3675:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nativeSrc": "3660:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:18:7"
																	},
																	{
																		"hexValue": "54686973204164647265737320646f6573206e6f7420657869737421",
																		"kind": "string",
																		"nativeSrc": "3680:30:7",
																		"nodeType": "YulLiteral",
																		"src": "3680:30:7",
																		"type": "",
																		"value": "This Address does not exist!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3653:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3653:6:7"
																},
																"nativeSrc": "3653:58:7",
																"nodeType": "YulFunctionCall",
																"src": "3653:58:7"
															},
															"nativeSrc": "3653:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "3653:58:7"
														},
														{
															"nativeSrc": "3720:26:7",
															"nodeType": "YulAssignment",
															"src": "3720:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3732:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3732:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3743:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3743:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3728:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3728:3:7"
																},
																"nativeSrc": "3728:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3728:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3720:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3720:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_96f12f93478a3768b4b822c9ec935962a88f68f145f33917ac63ab3e2a411fe3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3400:352:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3551:9:7",
														"nodeType": "YulTypedName",
														"src": "3551:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3565:4:7",
														"nodeType": "YulTypedName",
														"src": "3565:4:7",
														"type": ""
													}
												],
												"src": "3400:352:7"
											},
											{
												"body": {
													"nativeSrc": "3838:103:7",
													"nodeType": "YulBlock",
													"src": "3838:103:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3884:16:7",
																"nodeType": "YulBlock",
																"src": "3884:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3893:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3893:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3896:1:7",
																					"nodeType": "YulLiteral",
																					"src": "3896:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3886:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3886:6:7"
																			},
																			"nativeSrc": "3886:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3886:12:7"
																		},
																		"nativeSrc": "3886:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3886:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3859:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3859:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3868:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3868:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3855:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3855:3:7"
																		},
																		"nativeSrc": "3855:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3855:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3880:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3880:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3851:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3851:3:7"
																},
																"nativeSrc": "3851:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3851:32:7"
															},
															"nativeSrc": "3848:52:7",
															"nodeType": "YulIf",
															"src": "3848:52:7"
														},
														{
															"nativeSrc": "3909:26:7",
															"nodeType": "YulAssignment",
															"src": "3909:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3925:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3925:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3919:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3919:5:7"
																},
																"nativeSrc": "3919:16:7",
																"nodeType": "YulFunctionCall",
																"src": "3919:16:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3909:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3909:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "3757:184:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3804:9:7",
														"nodeType": "YulTypedName",
														"src": "3804:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3815:7:7",
														"nodeType": "YulTypedName",
														"src": "3815:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3827:6:7",
														"nodeType": "YulTypedName",
														"src": "3827:6:7",
														"type": ""
													}
												],
												"src": "3757:184:7"
											},
											{
												"body": {
													"nativeSrc": "4120:170:7",
													"nodeType": "YulBlock",
													"src": "4120:170:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4137:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4137:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4148:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4148:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4130:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4130:6:7"
																},
																"nativeSrc": "4130:21:7",
																"nodeType": "YulFunctionCall",
																"src": "4130:21:7"
															},
															"nativeSrc": "4130:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "4130:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4171:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4171:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4182:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4182:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4167:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4167:3:7"
																		},
																		"nativeSrc": "4167:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4167:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4187:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4187:2:7",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4160:6:7"
																},
																"nativeSrc": "4160:30:7",
																"nodeType": "YulFunctionCall",
																"src": "4160:30:7"
															},
															"nativeSrc": "4160:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "4160:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4210:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4210:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4221:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4221:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4206:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4206:3:7"
																		},
																		"nativeSrc": "4206:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4206:18:7"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "4226:22:7",
																		"nodeType": "YulLiteral",
																		"src": "4226:22:7",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4199:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4199:6:7"
																},
																"nativeSrc": "4199:50:7",
																"nodeType": "YulFunctionCall",
																"src": "4199:50:7"
															},
															"nativeSrc": "4199:50:7",
															"nodeType": "YulExpressionStatement",
															"src": "4199:50:7"
														},
														{
															"nativeSrc": "4258:26:7",
															"nodeType": "YulAssignment",
															"src": "4258:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4270:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4270:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4281:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4281:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4266:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4266:3:7"
																},
																"nativeSrc": "4266:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4266:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4258:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4258:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3946:344:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4097:9:7",
														"nodeType": "YulTypedName",
														"src": "4097:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4111:4:7",
														"nodeType": "YulTypedName",
														"src": "4111:4:7",
														"type": ""
													}
												],
												"src": "3946:344:7"
											},
											{
												"body": {
													"nativeSrc": "4327:95:7",
													"nodeType": "YulBlock",
													"src": "4327:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4344:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4344:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4351:3:7",
																				"nodeType": "YulLiteral",
																				"src": "4351:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4356:10:7",
																				"nodeType": "YulLiteral",
																				"src": "4356:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4347:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4347:3:7"
																		},
																		"nativeSrc": "4347:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4347:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4337:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4337:6:7"
																},
																"nativeSrc": "4337:31:7",
																"nodeType": "YulFunctionCall",
																"src": "4337:31:7"
															},
															"nativeSrc": "4337:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "4337:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4384:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4384:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4387:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4387:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4377:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4377:6:7"
																},
																"nativeSrc": "4377:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4377:15:7"
															},
															"nativeSrc": "4377:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4377:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4408:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4408:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4411:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4411:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4401:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4401:6:7"
																},
																"nativeSrc": "4401:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4401:15:7"
															},
															"nativeSrc": "4401:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "4401:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4295:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "4295:127:7"
											},
											{
												"body": {
													"nativeSrc": "4476:79:7",
													"nodeType": "YulBlock",
													"src": "4476:79:7",
													"statements": [
														{
															"nativeSrc": "4486:17:7",
															"nodeType": "YulAssignment",
															"src": "4486:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4498:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4498:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4501:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4501:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "4494:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4494:3:7"
																},
																"nativeSrc": "4494:9:7",
																"nodeType": "YulFunctionCall",
																"src": "4494:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "4486:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4486:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4527:22:7",
																"nodeType": "YulBlock",
																"src": "4527:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4529:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4529:16:7"
																			},
																			"nativeSrc": "4529:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4529:18:7"
																		},
																		"nativeSrc": "4529:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4529:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "4518:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4518:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "4524:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4524:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4515:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4515:2:7"
																},
																"nativeSrc": "4515:11:7",
																"nodeType": "YulFunctionCall",
																"src": "4515:11:7"
															},
															"nativeSrc": "4512:37:7",
															"nodeType": "YulIf",
															"src": "4512:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "4427:128:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4458:1:7",
														"nodeType": "YulTypedName",
														"src": "4458:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4461:1:7",
														"nodeType": "YulTypedName",
														"src": "4461:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "4467:4:7",
														"nodeType": "YulTypedName",
														"src": "4467:4:7",
														"type": ""
													}
												],
												"src": "4427:128:7"
											},
											{
												"body": {
													"nativeSrc": "4689:145:7",
													"nodeType": "YulBlock",
													"src": "4689:145:7",
													"statements": [
														{
															"nativeSrc": "4699:26:7",
															"nodeType": "YulAssignment",
															"src": "4699:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4711:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4711:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4722:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4722:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4707:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4707:3:7"
																},
																"nativeSrc": "4707:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4707:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4699:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4699:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4741:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4741:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4756:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "4756:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4772:3:7",
																								"nodeType": "YulLiteral",
																								"src": "4772:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4777:1:7",
																								"nodeType": "YulLiteral",
																								"src": "4777:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4768:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4768:3:7"
																						},
																						"nativeSrc": "4768:11:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4768:11:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4781:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4781:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4764:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4764:3:7"
																				},
																				"nativeSrc": "4764:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4764:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4752:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4752:3:7"
																		},
																		"nativeSrc": "4752:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4752:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4734:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4734:6:7"
																},
																"nativeSrc": "4734:51:7",
																"nodeType": "YulFunctionCall",
																"src": "4734:51:7"
															},
															"nativeSrc": "4734:51:7",
															"nodeType": "YulExpressionStatement",
															"src": "4734:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4805:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4805:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4816:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4816:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4801:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4801:3:7"
																		},
																		"nativeSrc": "4801:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4801:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4821:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4821:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4794:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4794:6:7"
																},
																"nativeSrc": "4794:34:7",
																"nodeType": "YulFunctionCall",
																"src": "4794:34:7"
															},
															"nativeSrc": "4794:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "4794:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "4560:274:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4650:9:7",
														"nodeType": "YulTypedName",
														"src": "4650:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4661:6:7",
														"nodeType": "YulTypedName",
														"src": "4661:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4669:6:7",
														"nodeType": "YulTypedName",
														"src": "4669:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4680:4:7",
														"nodeType": "YulTypedName",
														"src": "4680:4:7",
														"type": ""
													}
												],
												"src": "4560:274:7"
											},
											{
												"body": {
													"nativeSrc": "4891:116:7",
													"nodeType": "YulBlock",
													"src": "4891:116:7",
													"statements": [
														{
															"nativeSrc": "4901:20:7",
															"nodeType": "YulAssignment",
															"src": "4901:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4916:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4916:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4919:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "4919:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4912:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4912:3:7"
																},
																"nativeSrc": "4912:9:7",
																"nodeType": "YulFunctionCall",
																"src": "4912:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4901:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4901:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4979:22:7",
																"nodeType": "YulBlock",
																"src": "4979:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4981:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "4981:16:7"
																			},
																			"nativeSrc": "4981:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4981:18:7"
																		},
																		"nativeSrc": "4981:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4981:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4950:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "4950:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4943:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "4943:6:7"
																				},
																				"nativeSrc": "4943:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4943:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4957:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "4957:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4964:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "4964:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4973:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "4973:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4960:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "4960:3:7"
																						},
																						"nativeSrc": "4960:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "4960:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4954:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "4954:2:7"
																				},
																				"nativeSrc": "4954:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4954:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4940:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "4940:2:7"
																		},
																		"nativeSrc": "4940:37:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4940:37:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4933:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4933:6:7"
																},
																"nativeSrc": "4933:45:7",
																"nodeType": "YulFunctionCall",
																"src": "4933:45:7"
															},
															"nativeSrc": "4930:71:7",
															"nodeType": "YulIf",
															"src": "4930:71:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4839:168:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4870:1:7",
														"nodeType": "YulTypedName",
														"src": "4870:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4873:1:7",
														"nodeType": "YulTypedName",
														"src": "4873:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4879:7:7",
														"nodeType": "YulTypedName",
														"src": "4879:7:7",
														"type": ""
													}
												],
												"src": "4839:168:7"
											},
											{
												"body": {
													"nativeSrc": "5058:171:7",
													"nodeType": "YulBlock",
													"src": "5058:171:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5089:111:7",
																"nodeType": "YulBlock",
																"src": "5089:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5110:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5110:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5117:3:7",
																							"nodeType": "YulLiteral",
																							"src": "5117:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5122:10:7",
																							"nodeType": "YulLiteral",
																							"src": "5122:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "5113:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5113:3:7"
																					},
																					"nativeSrc": "5113:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5113:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5103:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5103:6:7"
																			},
																			"nativeSrc": "5103:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5103:31:7"
																		},
																		"nativeSrc": "5103:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5103:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5154:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5154:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5157:4:7",
																					"nodeType": "YulLiteral",
																					"src": "5157:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5147:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5147:6:7"
																			},
																			"nativeSrc": "5147:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5147:15:7"
																		},
																		"nativeSrc": "5147:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5147:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5182:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5182:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5185:4:7",
																					"nodeType": "YulLiteral",
																					"src": "5185:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5175:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "5175:6:7"
																			},
																			"nativeSrc": "5175:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5175:15:7"
																		},
																		"nativeSrc": "5175:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5175:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5078:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5078:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5071:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5071:6:7"
																},
																"nativeSrc": "5071:9:7",
																"nodeType": "YulFunctionCall",
																"src": "5071:9:7"
															},
															"nativeSrc": "5068:132:7",
															"nodeType": "YulIf",
															"src": "5068:132:7"
														},
														{
															"nativeSrc": "5209:14:7",
															"nodeType": "YulAssignment",
															"src": "5209:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5218:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5218:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5221:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "5221:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5214:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5214:3:7"
																},
																"nativeSrc": "5214:9:7",
																"nodeType": "YulFunctionCall",
																"src": "5214:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5209:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "5209:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5012:217:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5043:1:7",
														"nodeType": "YulTypedName",
														"src": "5043:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5046:1:7",
														"nodeType": "YulTypedName",
														"src": "5046:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5052:1:7",
														"nodeType": "YulTypedName",
														"src": "5052:1:7",
														"type": ""
													}
												],
												"src": "5012:217:7"
											},
											{
												"body": {
													"nativeSrc": "5266:95:7",
													"nodeType": "YulBlock",
													"src": "5266:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5283:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5283:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5290:3:7",
																				"nodeType": "YulLiteral",
																				"src": "5290:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5295:10:7",
																				"nodeType": "YulLiteral",
																				"src": "5295:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5286:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5286:3:7"
																		},
																		"nativeSrc": "5286:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5286:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5276:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5276:6:7"
																},
																"nativeSrc": "5276:31:7",
																"nodeType": "YulFunctionCall",
																"src": "5276:31:7"
															},
															"nativeSrc": "5276:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "5276:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5323:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5323:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5326:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5326:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5316:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5316:6:7"
																},
																"nativeSrc": "5316:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5316:15:7"
															},
															"nativeSrc": "5316:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5316:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5347:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5347:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5350:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5350:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5340:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:7"
																},
																"nativeSrc": "5340:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5340:15:7"
															},
															"nativeSrc": "5340:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "5340:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "5234:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5234:127:7"
											},
											{
												"body": {
													"nativeSrc": "5540:226:7",
													"nodeType": "YulBlock",
													"src": "5540:226:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5557:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5557:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5568:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5568:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5550:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5550:6:7"
																},
																"nativeSrc": "5550:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5550:21:7"
															},
															"nativeSrc": "5550:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "5550:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5591:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5591:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5602:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5602:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5587:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5587:3:7"
																		},
																		"nativeSrc": "5587:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5587:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5607:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5607:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5580:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5580:6:7"
																},
																"nativeSrc": "5580:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5580:30:7"
															},
															"nativeSrc": "5580:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "5580:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5630:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5630:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5641:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5641:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5626:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5626:3:7"
																		},
																		"nativeSrc": "5626:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5626:18:7"
																	},
																	{
																		"hexValue": "54686973204164647265737320697320616c72656164792057686974654c6973",
																		"kind": "string",
																		"nativeSrc": "5646:34:7",
																		"nodeType": "YulLiteral",
																		"src": "5646:34:7",
																		"type": "",
																		"value": "This Address is already WhiteLis"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5619:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5619:6:7"
																},
																"nativeSrc": "5619:62:7",
																"nodeType": "YulFunctionCall",
																"src": "5619:62:7"
															},
															"nativeSrc": "5619:62:7",
															"nodeType": "YulExpressionStatement",
															"src": "5619:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5701:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5701:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5712:2:7",
																				"nodeType": "YulLiteral",
																				"src": "5712:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5697:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5697:3:7"
																		},
																		"nativeSrc": "5697:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5697:18:7"
																	},
																	{
																		"hexValue": "74656421",
																		"kind": "string",
																		"nativeSrc": "5717:6:7",
																		"nodeType": "YulLiteral",
																		"src": "5717:6:7",
																		"type": "",
																		"value": "ted!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5690:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5690:6:7"
																},
																"nativeSrc": "5690:34:7",
																"nodeType": "YulFunctionCall",
																"src": "5690:34:7"
															},
															"nativeSrc": "5690:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "5690:34:7"
														},
														{
															"nativeSrc": "5733:27:7",
															"nodeType": "YulAssignment",
															"src": "5733:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5745:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5745:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5756:3:7",
																		"nodeType": "YulLiteral",
																		"src": "5756:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5741:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5741:3:7"
																},
																"nativeSrc": "5741:19:7",
																"nodeType": "YulFunctionCall",
																"src": "5741:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5733:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5733:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_69cc1d0091f450c9f1b40951e04a8e02ae8a28f18820a3d492d53b3c2bca82f7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5366:400:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5517:9:7",
														"nodeType": "YulTypedName",
														"src": "5517:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5531:4:7",
														"nodeType": "YulTypedName",
														"src": "5531:4:7",
														"type": ""
													}
												],
												"src": "5366:400:7"
											},
											{
												"body": {
													"nativeSrc": "5900:175:7",
													"nodeType": "YulBlock",
													"src": "5900:175:7",
													"statements": [
														{
															"nativeSrc": "5910:26:7",
															"nodeType": "YulAssignment",
															"src": "5910:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5922:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5922:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5933:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5933:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5918:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5918:3:7"
																},
																"nativeSrc": "5918:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5918:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5910:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5910:4:7"
																}
															]
														},
														{
															"nativeSrc": "5945:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5945:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5963:3:7",
																				"nodeType": "YulLiteral",
																				"src": "5963:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5968:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5968:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "5959:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5959:3:7"
																		},
																		"nativeSrc": "5959:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5959:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5972:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5972:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "5955:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5955:3:7"
																},
																"nativeSrc": "5955:19:7",
																"nodeType": "YulFunctionCall",
																"src": "5955:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5949:2:7",
																	"nodeType": "YulTypedName",
																	"src": "5949:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5990:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5990:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6005:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6005:6:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "6013:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "6013:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6001:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6001:3:7"
																		},
																		"nativeSrc": "6001:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6001:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5983:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5983:6:7"
																},
																"nativeSrc": "5983:34:7",
																"nodeType": "YulFunctionCall",
																"src": "5983:34:7"
															},
															"nativeSrc": "5983:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "5983:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6037:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6037:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6048:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6048:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6033:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6033:3:7"
																		},
																		"nativeSrc": "6033:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6033:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6057:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6057:6:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "6065:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "6065:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6053:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6053:3:7"
																		},
																		"nativeSrc": "6053:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6053:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6026:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6026:6:7"
																},
																"nativeSrc": "6026:43:7",
																"nodeType": "YulFunctionCall",
																"src": "6026:43:7"
															},
															"nativeSrc": "6026:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "6026:43:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "5771:304:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5861:9:7",
														"nodeType": "YulTypedName",
														"src": "5861:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5872:6:7",
														"nodeType": "YulTypedName",
														"src": "5872:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5880:6:7",
														"nodeType": "YulTypedName",
														"src": "5880:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5891:4:7",
														"nodeType": "YulTypedName",
														"src": "5891:4:7",
														"type": ""
													}
												],
												"src": "5771:304:7"
											},
											{
												"body": {
													"nativeSrc": "6254:167:7",
													"nodeType": "YulBlock",
													"src": "6254:167:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6271:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6271:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6282:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6282:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6264:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6264:6:7"
																},
																"nativeSrc": "6264:21:7",
																"nodeType": "YulFunctionCall",
																"src": "6264:21:7"
															},
															"nativeSrc": "6264:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "6264:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6305:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6305:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6316:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6316:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6301:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6301:3:7"
																		},
																		"nativeSrc": "6301:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6301:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6321:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6321:2:7",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6294:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6294:6:7"
																},
																"nativeSrc": "6294:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6294:30:7"
															},
															"nativeSrc": "6294:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "6294:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6344:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6344:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6355:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6355:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6340:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6340:3:7"
																		},
																		"nativeSrc": "6340:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6340:18:7"
																	},
																	{
																		"hexValue": "416c6c6f77616e6365206e6f7420736574",
																		"kind": "string",
																		"nativeSrc": "6360:19:7",
																		"nodeType": "YulLiteral",
																		"src": "6360:19:7",
																		"type": "",
																		"value": "Allowance not set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6333:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6333:6:7"
																},
																"nativeSrc": "6333:47:7",
																"nodeType": "YulFunctionCall",
																"src": "6333:47:7"
															},
															"nativeSrc": "6333:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "6333:47:7"
														},
														{
															"nativeSrc": "6389:26:7",
															"nodeType": "YulAssignment",
															"src": "6389:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6401:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6401:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6412:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6412:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6397:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6397:3:7"
																},
																"nativeSrc": "6397:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6397:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6389:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6389:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b7f5bbf01babd612ff41adb253311ab3eccd8d56664e3b6ae54fa2e62b1bbfb0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6080:341:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6231:9:7",
														"nodeType": "YulTypedName",
														"src": "6231:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6245:4:7",
														"nodeType": "YulTypedName",
														"src": "6245:4:7",
														"type": ""
													}
												],
												"src": "6080:341:7"
											},
											{
												"body": {
													"nativeSrc": "6583:218:7",
													"nodeType": "YulBlock",
													"src": "6583:218:7",
													"statements": [
														{
															"nativeSrc": "6593:26:7",
															"nodeType": "YulAssignment",
															"src": "6593:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6605:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6605:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6616:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6616:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6601:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6601:3:7"
																},
																"nativeSrc": "6601:18:7",
																"nodeType": "YulFunctionCall",
																"src": "6601:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6593:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6593:4:7"
																}
															]
														},
														{
															"nativeSrc": "6628:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6628:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6646:3:7",
																				"nodeType": "YulLiteral",
																				"src": "6646:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6651:1:7",
																				"nodeType": "YulLiteral",
																				"src": "6651:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6642:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6642:3:7"
																		},
																		"nativeSrc": "6642:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6642:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6655:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6655:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6638:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6638:3:7"
																},
																"nativeSrc": "6638:19:7",
																"nodeType": "YulFunctionCall",
																"src": "6638:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6632:2:7",
																	"nodeType": "YulTypedName",
																	"src": "6632:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6688:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6688:6:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "6696:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "6696:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6684:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6684:3:7"
																		},
																		"nativeSrc": "6684:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6684:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6666:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6666:6:7"
																},
																"nativeSrc": "6666:34:7",
																"nodeType": "YulFunctionCall",
																"src": "6666:34:7"
															},
															"nativeSrc": "6666:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "6666:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6720:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6720:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6731:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6731:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6716:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6716:3:7"
																		},
																		"nativeSrc": "6716:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6716:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6740:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6740:6:7"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "6748:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "6748:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6736:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6736:3:7"
																		},
																		"nativeSrc": "6736:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6736:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6709:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6709:6:7"
																},
																"nativeSrc": "6709:43:7",
																"nodeType": "YulFunctionCall",
																"src": "6709:43:7"
															},
															"nativeSrc": "6709:43:7",
															"nodeType": "YulExpressionStatement",
															"src": "6709:43:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6772:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6772:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6783:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6783:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6768:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6768:3:7"
																		},
																		"nativeSrc": "6768:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6768:18:7"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6788:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6788:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6761:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6761:6:7"
																},
																"nativeSrc": "6761:34:7",
																"nodeType": "YulFunctionCall",
																"src": "6761:34:7"
															},
															"nativeSrc": "6761:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "6761:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6426:375:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6536:9:7",
														"nodeType": "YulTypedName",
														"src": "6536:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6547:6:7",
														"nodeType": "YulTypedName",
														"src": "6547:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6555:6:7",
														"nodeType": "YulTypedName",
														"src": "6555:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6563:6:7",
														"nodeType": "YulTypedName",
														"src": "6563:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6574:4:7",
														"nodeType": "YulTypedName",
														"src": "6574:4:7",
														"type": ""
													}
												],
												"src": "6426:375:7"
											},
											{
												"body": {
													"nativeSrc": "6884:199:7",
													"nodeType": "YulBlock",
													"src": "6884:199:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6930:16:7",
																"nodeType": "YulBlock",
																"src": "6930:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6939:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6939:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6942:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6942:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6932:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6932:6:7"
																			},
																			"nativeSrc": "6932:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6932:12:7"
																		},
																		"nativeSrc": "6932:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6932:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6905:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6905:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6914:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6914:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6901:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6901:3:7"
																		},
																		"nativeSrc": "6901:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6901:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6926:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6926:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6897:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6897:3:7"
																},
																"nativeSrc": "6897:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6897:32:7"
															},
															"nativeSrc": "6894:52:7",
															"nodeType": "YulIf",
															"src": "6894:52:7"
														},
														{
															"nativeSrc": "6955:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6955:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6974:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "6974:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6968:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "6968:5:7"
																},
																"nativeSrc": "6968:16:7",
																"nodeType": "YulFunctionCall",
																"src": "6968:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "6959:5:7",
																	"nodeType": "YulTypedName",
																	"src": "6959:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7037:16:7",
																"nodeType": "YulBlock",
																"src": "7037:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7046:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7046:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7049:1:7",
																					"nodeType": "YulLiteral",
																					"src": "7049:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7039:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7039:6:7"
																			},
																			"nativeSrc": "7039:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7039:12:7"
																		},
																		"nativeSrc": "7039:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7039:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7006:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7006:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "7027:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "7027:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "7020:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "7020:6:7"
																						},
																						"nativeSrc": "7020:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "7020:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7013:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "7013:6:7"
																				},
																				"nativeSrc": "7013:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7013:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7003:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "7003:2:7"
																		},
																		"nativeSrc": "7003:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7003:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6996:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6996:6:7"
																},
																"nativeSrc": "6996:40:7",
																"nodeType": "YulFunctionCall",
																"src": "6996:40:7"
															},
															"nativeSrc": "6993:60:7",
															"nodeType": "YulIf",
															"src": "6993:60:7"
														},
														{
															"nativeSrc": "7062:15:7",
															"nodeType": "YulAssignment",
															"src": "7062:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "7072:5:7",
																"nodeType": "YulIdentifier",
																"src": "7072:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7062:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7062:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "6806:277:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6850:9:7",
														"nodeType": "YulTypedName",
														"src": "6850:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6861:7:7",
														"nodeType": "YulTypedName",
														"src": "6861:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6873:6:7",
														"nodeType": "YulTypedName",
														"src": "6873:6:7",
														"type": ""
													}
												],
												"src": "6806:277:7"
											},
											{
												"body": {
													"nativeSrc": "7136:77:7",
													"nodeType": "YulBlock",
													"src": "7136:77:7",
													"statements": [
														{
															"nativeSrc": "7146:16:7",
															"nodeType": "YulAssignment",
															"src": "7146:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7157:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7157:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7160:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7160:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7153:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7153:3:7"
																},
																"nativeSrc": "7153:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7153:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7146:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7146:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7185:22:7",
																"nodeType": "YulBlock",
																"src": "7185:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7187:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7187:16:7"
																			},
																			"nativeSrc": "7187:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7187:18:7"
																		},
																		"nativeSrc": "7187:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7187:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7177:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7177:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7180:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7180:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7174:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7174:2:7"
																},
																"nativeSrc": "7174:10:7",
																"nodeType": "YulFunctionCall",
																"src": "7174:10:7"
															},
															"nativeSrc": "7171:36:7",
															"nodeType": "YulIf",
															"src": "7171:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "7088:125:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7119:1:7",
														"nodeType": "YulTypedName",
														"src": "7119:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7122:1:7",
														"nodeType": "YulTypedName",
														"src": "7122:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7128:3:7",
														"nodeType": "YulTypedName",
														"src": "7128:3:7",
														"type": ""
													}
												],
												"src": "7088:125:7"
											},
											{
												"body": {
													"nativeSrc": "7284:184:7",
													"nodeType": "YulBlock",
													"src": "7284:184:7",
													"statements": [
														{
															"nativeSrc": "7294:10:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7294:10:7",
															"value": {
																"kind": "number",
																"nativeSrc": "7303:1:7",
																"nodeType": "YulLiteral",
																"src": "7303:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "7298:1:7",
																	"nodeType": "YulTypedName",
																	"src": "7298:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7363:63:7",
																"nodeType": "YulBlock",
																"src": "7363:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "7388:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "7388:3:7"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "7393:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "7393:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "7384:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "7384:3:7"
																					},
																					"nativeSrc": "7384:11:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7384:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "7407:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "7407:3:7"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "7412:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "7412:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "7403:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "7403:3:7"
																							},
																							"nativeSrc": "7403:11:7",
																							"nodeType": "YulFunctionCall",
																							"src": "7403:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "7397:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "7397:5:7"
																					},
																					"nativeSrc": "7397:18:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7397:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7377:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7377:6:7"
																			},
																			"nativeSrc": "7377:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7377:39:7"
																		},
																		"nativeSrc": "7377:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7377:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "7324:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7324:1:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7327:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7327:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7321:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7321:2:7"
																},
																"nativeSrc": "7321:13:7",
																"nodeType": "YulFunctionCall",
																"src": "7321:13:7"
															},
															"nativeSrc": "7313:113:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7335:19:7",
																"nodeType": "YulBlock",
																"src": "7335:19:7",
																"statements": [
																	{
																		"nativeSrc": "7337:15:7",
																		"nodeType": "YulAssignment",
																		"src": "7337:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "7346:1:7",
																					"nodeType": "YulIdentifier",
																					"src": "7346:1:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7349:2:7",
																					"nodeType": "YulLiteral",
																					"src": "7349:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7342:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7342:3:7"
																			},
																			"nativeSrc": "7342:10:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7342:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "7337:1:7",
																				"nodeType": "YulIdentifier",
																				"src": "7337:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7317:3:7",
																"nodeType": "YulBlock",
																"src": "7317:3:7",
																"statements": []
															},
															"src": "7313:113:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7446:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7446:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7451:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7451:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7442:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7442:3:7"
																		},
																		"nativeSrc": "7442:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7442:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7460:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7460:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7435:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7435:6:7"
																},
																"nativeSrc": "7435:27:7",
																"nodeType": "YulFunctionCall",
																"src": "7435:27:7"
															},
															"nativeSrc": "7435:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "7435:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "7218:250:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7262:3:7",
														"nodeType": "YulTypedName",
														"src": "7262:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7267:3:7",
														"nodeType": "YulTypedName",
														"src": "7267:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7272:6:7",
														"nodeType": "YulTypedName",
														"src": "7272:6:7",
														"type": ""
													}
												],
												"src": "7218:250:7"
											},
											{
												"body": {
													"nativeSrc": "7612:150:7",
													"nodeType": "YulBlock",
													"src": "7612:150:7",
													"statements": [
														{
															"nativeSrc": "7622:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7622:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7642:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7642:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7636:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7636:5:7"
																},
																"nativeSrc": "7636:13:7",
																"nodeType": "YulFunctionCall",
																"src": "7636:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7626:6:7",
																	"nodeType": "YulTypedName",
																	"src": "7626:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7697:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7697:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7705:4:7",
																				"nodeType": "YulLiteral",
																				"src": "7705:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7693:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7693:3:7"
																		},
																		"nativeSrc": "7693:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7693:17:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7712:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7712:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7717:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7717:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7658:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "7658:34:7"
																},
																"nativeSrc": "7658:66:7",
																"nodeType": "YulFunctionCall",
																"src": "7658:66:7"
															},
															"nativeSrc": "7658:66:7",
															"nodeType": "YulExpressionStatement",
															"src": "7658:66:7"
														},
														{
															"nativeSrc": "7733:23:7",
															"nodeType": "YulAssignment",
															"src": "7733:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7744:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7744:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7749:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7749:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7740:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7740:3:7"
																},
																"nativeSrc": "7740:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7740:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7733:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7733:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7473:289:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7588:3:7",
														"nodeType": "YulTypedName",
														"src": "7588:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7593:6:7",
														"nodeType": "YulTypedName",
														"src": "7593:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7604:3:7",
														"nodeType": "YulTypedName",
														"src": "7604:3:7",
														"type": ""
													}
												],
												"src": "7473:289:7"
											},
											{
												"body": {
													"nativeSrc": "7904:150:7",
													"nodeType": "YulBlock",
													"src": "7904:150:7",
													"statements": [
														{
															"nativeSrc": "7914:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7914:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7934:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7928:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7928:5:7"
																},
																"nativeSrc": "7928:13:7",
																"nodeType": "YulFunctionCall",
																"src": "7928:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7918:6:7",
																	"nodeType": "YulTypedName",
																	"src": "7918:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7989:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7989:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7997:4:7",
																				"nodeType": "YulLiteral",
																				"src": "7997:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7985:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7985:3:7"
																		},
																		"nativeSrc": "7985:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7985:17:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8004:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8004:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8009:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8009:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7950:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "7950:34:7"
																},
																"nativeSrc": "7950:66:7",
																"nodeType": "YulFunctionCall",
																"src": "7950:66:7"
															},
															"nativeSrc": "7950:66:7",
															"nodeType": "YulExpressionStatement",
															"src": "7950:66:7"
														},
														{
															"nativeSrc": "8025:23:7",
															"nodeType": "YulAssignment",
															"src": "8025:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8036:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8036:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8041:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8041:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8032:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8032:3:7"
																},
																"nativeSrc": "8032:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8032:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8025:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8025:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7767:287:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7880:3:7",
														"nodeType": "YulTypedName",
														"src": "7880:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7885:6:7",
														"nodeType": "YulTypedName",
														"src": "7885:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7896:3:7",
														"nodeType": "YulTypedName",
														"src": "7896:3:7",
														"type": ""
													}
												],
												"src": "7767:287:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_96f12f93478a3768b4b822c9ec935962a88f68f145f33917ac63ab3e2a411fe3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"This Address does not exist!\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_69cc1d0091f450c9f1b40951e04a8e02ae8a28f18820a3d492d53b3c2bca82f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"This Address is already WhiteLis\")\n        mstore(add(headStart, 96), \"ted!\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_b7f5bbf01babd612ff41adb253311ab3eccd8d56664e3b6ae54fa2e62b1bbfb0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Allowance not set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610132575f3560e01c8063a3150978116100b4578063cdb4347811610079578063cdb434781461034e578063e1ad418e14610361578063f09f0aac14610380578063f2fde38b14610393578063fca0a3d2146103a6578063fd03fe90146103ed575f80fd5b8063a315097814610265578063a4329677146102ac578063a7f696cf146102e1578063b4a99a4e14610328578063cb8ff5451461033b575f80fd5b80636bc20157116100fa5780636bc20157146101d657806370181206146101e9578063715018a6146102305780638da5cb5b146102385780639c2c67c91461025c575f80fd5b806301bf6648146101365780631f1a675d1461014b5780632dd91a4c1461018857806333fa13a414610191578063372c12b1146101a4575b5f80fd5b610149610144366004611110565b610428565b005b610175610159366004611129565b600460209081525f928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b61017560085481565b61014961019f36600461115a565b6104bc565b6101c66101b2366004611110565b60026020525f908152604090205460ff1681565b604051901515815260200161017f565b6101496101e4366004611110565b6107ab565b6101756101f7366004611110565b6001600160a01b03165f908152600460209081526040808320739951342d994001468506df88f71a582867b50dd4845290915290205490565b61014961088d565b5f546001600160a01b03165b6040516001600160a01b03909116815260200161017f565b61017560075481565b610175610273366004611110565b6001600160a01b03165f90815260046020908152604080832073a5014ea627ac22a63f2bf3b46e26d408e72f55c1845290915290205490565b6101756102ba366004611110565b335f9081526004602090815260408083206001600160a01b03949094168352929052205490565b6101756102ef366004611110565b6001600160a01b03165f9081526004602090815260408083207377f146ca2943294cc53e6c3b5980b572c961ae23845290915290205490565b600154610244906001600160a01b031681565b61014961034936600461121f565b6108a0565b61014961035c366004611110565b610e0b565b61017561036f366004611110565b60056020525f908152604090205481565b61024461038e366004611272565b610e2f565b6101496103a1366004611110565b610e57565b6101756103b4366004611110565b6001600160a01b03165f908152600460209081526040808320734b3a514dd71850277bba82491f26dacdf089cb68845290915290205490565b6101756103fb366004611289565b600660209081525f9283526040909220815180830184018051928152908401929093019190912091525481565b610430610e91565b6001600160a01b0381165f9081526002602052604090205460ff1661049c5760405162461bcd60e51b815260206004820152601c60248201527f54686973204164647265737320646f6573206e6f74206578697374210000000060448201526064015b60405180910390fd5b6001600160a01b03165f908152600260205260409020805460ff19169055565b6040516370a0823160e01b815230600482015281906001600160a01b038416906370a0823190602401602060405180830381865afa158015610500573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061052491906112d4565b10156105695760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610493565b734b3a514dd71850277bba82491f26dacdf089cb67196001600160a01b03831601610636576105a26001600160a01b0383163383610ebd565b8060075f8282546105b391906112ff565b9091555050335f908152600560209081526040808320849055600482528083206001600160a01b0386168452909152812080548392906105f49084906112ff565b909155505060408051338152602081018390527fcc87ab2abfe87b272af9b77691e40b3d9186a0431f3d41a8e06d39614f460722910160405180910390a15050565b6103e8610644826003611312565b61064e9190611329565b60088190556003545f916106629190611329565b90505f5b6003548110156106ac576106a46003828154811061068657610686611348565b5f918252602090912001546001600160a01b03868116911684610ebd565b600101610666565b506106d033600854846106bf91906112ff565b6001600160a01b0386169190610ebd565b6008546106dd90836112ff565b60075f8282546106ed91906112ff565b90915550506008546106ff90836112ff565b335f9081526005602052604090205560085461071b90836112ff565b335f9081526004602090815260408083206001600160a01b03881684529091528120805490919061074d9084906112ff565b90915550506008547fcf53ae9736a409c662fa8b1187549847acd41beb1b89fd026293fc2e19adaca790339061078390856112ff565b604080516001600160a01b0390931683526020830191909152015b60405180910390a1505050565b6107b3610e91565b6001600160a01b0381165f9081526002602052604090205460ff16156108275760405162461bcd60e51b8152602060048201526024808201527f54686973204164647265737320697320616c72656164792057686974654c69736044820152637465642160e01b6064820152608401610493565b6003805460018181019092557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b039093166001600160a01b0319909316831790555f91825260026020526040909120805460ff19169091179055565b610895610e91565b61089e5f610f0f565b565b604051636eb1769f60e11b815233600482015230602482015282906001600160a01b0385169063dd62ed3e90604401602060405180830381865afa1580156108ea573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061090e91906112d4565b10156109505760405162461bcd60e51b8152602060048201526011602482015270105b1b1bddd85b98d9481b9bdd081cd95d607a1b6044820152606401610493565b6040516370a0823160e01b815233600482015282906001600160a01b038516906370a0823190602401602060405180830381865afa158015610994573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109b891906112d4565b10156109fd5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610493565b734b3a514dd71850277bba82491f26dacdf089cb67196001600160a01b03841601610b68576040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038416906323b872dd906064016020604051808303815f875af1158015610a72573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a96919061135c565b508160075f828254610aa8919061137b565b9091555050335f9081526005602090815260408083208590556006909152908190209051839190610ada9084906113b0565b90815260200160405180910390205f828254610af6919061137b565b9091555050335f9081526004602090815260408083206001600160a01b038716845290915281208054849290610b2d90849061137b565b909155505060408051338152602081018490527fcc87ab2abfe87b272af9b77691e40b3d9186a0431f3d41a8e06d39614f460722910161079e565b6103e8610b76836003611312565b610b809190611329565b60088190556003545f91610b949190611329565b90505f5b600354811015610c4e57846001600160a01b03166323b872dd3360038481548110610bc557610bc5611348565b5f9182526020909120015460405160e084901b6001600160e01b03191681526001600160a01b03928316600482015291166024820152604481018590526064016020604051808303815f875af1158015610c21573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c45919061135c565b50600101610b98565b50836001600160a01b03166323b872dd333060085487610c6e91906112ff565b6040516001600160e01b031960e086901b1681526001600160a01b03938416600482015292909116602483015260448201526064016020604051808303815f875af1158015610cbf573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ce3919061135c565b50600854610cf190846112ff565b60075f828254610d01919061137b565b9091555050600854610d1390846112ff565b335f90815260056020526040902055600854610d2f90846112ff565b335f90815260066020526040908190209051610d4c9085906113b0565b90815260200160405180910390205f828254610d68919061137b565b9091555050600854610d7a90846112ff565b335f9081526004602090815260408083206001600160a01b038916845290915281208054909190610dac90849061137b565b90915550506008547fcc87ab2abfe87b272af9b77691e40b3d9186a0431f3d41a8e06d39614f460722903390610de290866112ff565b604080516001600160a01b03909316835260208301919091520160405180910390a1505b505050565b610e13610e91565b600854610e2c906001600160a01b038316903390610ebd565b50565b60038181548110610e3e575f80fd5b5f918252602090912001546001600160a01b0316905081565b610e5f610e91565b6001600160a01b038116610e8857604051631e4fbdf760e01b81525f6004820152602401610493565b610e2c81610f0f565b5f546001600160a01b0316331461089e5760405163118cdaa760e01b8152336004820152602401610493565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610e06908490610f5e565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f610f726001600160a01b03841683610fbf565b905080515f14158015610f96575080806020019051810190610f94919061135c565b155b15610e0657604051635274afe760e01b81526001600160a01b0384166004820152602401610493565b6060610fcc83835f610fd5565b90505b92915050565b606081471015610ffa5760405163cd78605960e01b8152306004820152602401610493565b5f80856001600160a01b0316848660405161101591906113b0565b5f6040518083038185875af1925050503d805f811461104f576040519150601f19603f3d011682016040523d82523d5f602084013e611054565b606091505b5091509150611064868383611070565b925050505b9392505050565b60608261108557611080826110cc565b611069565b815115801561109c57506001600160a01b0384163b155b156110c557604051639996b31560e01b81526001600160a01b0385166004820152602401610493565b5080611069565b8051156110dc5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80356001600160a01b038116811461110b575f80fd5b919050565b5f60208284031215611120575f80fd5b610fcc826110f5565b5f806040838503121561113a575f80fd5b611143836110f5565b9150611151602084016110f5565b90509250929050565b5f806040838503121561116b575f80fd5b611174836110f5565b946020939093013593505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126111a5575f80fd5b813567ffffffffffffffff808211156111c0576111c0611182565b604051601f8301601f19908116603f011681019082821181831017156111e8576111e8611182565b81604052838152866020858801011115611200575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f805f60608486031215611231575f80fd5b61123a846110f5565b925060208401359150604084013567ffffffffffffffff81111561125c575f80fd5b61126886828701611196565b9150509250925092565b5f60208284031215611282575f80fd5b5035919050565b5f806040838503121561129a575f80fd5b6112a3836110f5565b9150602083013567ffffffffffffffff8111156112be575f80fd5b6112ca85828601611196565b9150509250929050565b5f602082840312156112e4575f80fd5b5051919050565b634e487b7160e01b5f52601160045260245ffd5b81810381811115610fcf57610fcf6112eb565b8082028115828204841417610fcf57610fcf6112eb565b5f8261134357634e487b7160e01b5f52601260045260245ffd5b500490565b634e487b7160e01b5f52603260045260245ffd5b5f6020828403121561136c575f80fd5b81518015158114611069575f80fd5b80820180821115610fcf57610fcf6112eb565b5f5b838110156113a8578181015183820152602001611390565b50505f910152565b5f82516113c181846020870161138e565b919091019291505056fea26469706673582212202c1ebf214d0e9b9af7b416df2e411e4d5b3f4fd19adc51b748d1225248124b8464736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x132 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA3150978 GT PUSH2 0xB4 JUMPI DUP1 PUSH4 0xCDB43478 GT PUSH2 0x79 JUMPI DUP1 PUSH4 0xCDB43478 EQ PUSH2 0x34E JUMPI DUP1 PUSH4 0xE1AD418E EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xF09F0AAC EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xFCA0A3D2 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xFD03FE90 EQ PUSH2 0x3ED JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3150978 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0xA4329677 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xA7F696CF EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0xB4A99A4E EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0xCB8FF545 EQ PUSH2 0x33B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6BC20157 GT PUSH2 0xFA JUMPI DUP1 PUSH4 0x6BC20157 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x70181206 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x9C2C67C9 EQ PUSH2 0x25C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1BF6648 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x1F1A675D EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x2DD91A4C EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x33FA13A4 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x372C12B1 EQ PUSH2 0x1A4 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x149 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0x428 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x175 PUSH2 0x159 CALLDATASIZE PUSH1 0x4 PUSH2 0x1129 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x115A JUMP JUMPDEST PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x1C6 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17F JUMP JUMPDEST PUSH2 0x149 PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0x7AB JUMP JUMPDEST PUSH2 0x175 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0x9951342D994001468506DF88F71A582867B50DD4 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x88D JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17F JUMP JUMPDEST PUSH2 0x175 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xA5014EA627AC22A63F2BF3B46E26D408E72F55C1 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x2BA CALLDATASIZE PUSH1 0x4 PUSH2 0x1110 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0x77F146CA2943294CC53E6C3B5980B572C961AE23 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x244 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x349 CALLDATASIZE PUSH1 0x4 PUSH2 0x121F JUMP JUMPDEST PUSH2 0x8A0 JUMP JUMPDEST PUSH2 0x149 PUSH2 0x35C CALLDATASIZE PUSH1 0x4 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0xE0B JUMP JUMPDEST PUSH2 0x175 PUSH2 0x36F CALLDATASIZE PUSH1 0x4 PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x244 PUSH2 0x38E CALLDATASIZE PUSH1 0x4 PUSH2 0x1272 JUMP JUMPDEST PUSH2 0xE2F JUMP JUMPDEST PUSH2 0x149 PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1110 JUMP JUMPDEST PUSH2 0xE57 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x3B4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1110 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0x4B3A514DD71850277BBA82491F26DACDF089CB68 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x175 PUSH2 0x3FB CALLDATASIZE PUSH1 0x4 PUSH2 0x1289 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 DUP4 ADD DUP5 ADD DUP1 MLOAD SWAP3 DUP2 MSTORE SWAP1 DUP5 ADD SWAP3 SWAP1 SWAP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP2 MSTORE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x430 PUSH2 0xE91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x49C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686973204164647265737320646F6573206E6F742065786973742100000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x500 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x12D4 JUMP JUMPDEST LT ISZERO PUSH2 0x569 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x493 JUMP JUMPDEST PUSH20 0x4B3A514DD71850277BBA82491F26DACDF089CB67 NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ADD PUSH2 0x636 JUMPI PUSH2 0x5A2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER DUP4 PUSH2 0xEBD JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x4 DUP3 MSTORE DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x5F4 SWAP1 DUP5 SWAP1 PUSH2 0x12FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0xCC87AB2ABFE87B272AF9B77691E40B3D9186A0431F3D41A8E06D39614F460722 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0x644 DUP3 PUSH1 0x3 PUSH2 0x1312 JUMP JUMPDEST PUSH2 0x64E SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH0 SWAP2 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x6AC JUMPI PUSH2 0x6A4 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x686 JUMPI PUSH2 0x686 PUSH2 0x1348 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 AND DUP5 PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x666 JUMP JUMPDEST POP PUSH2 0x6D0 CALLER PUSH1 0x8 SLOAD DUP5 PUSH2 0x6BF SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 SWAP1 PUSH2 0xEBD JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x6DD SWAP1 DUP4 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6ED SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH2 0x6FF SWAP1 DUP4 PUSH2 0x12FF JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x8 SLOAD PUSH2 0x71B SWAP1 DUP4 PUSH2 0x12FF JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x74D SWAP1 DUP5 SWAP1 PUSH2 0x12FF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH32 0xCF53AE9736A409C662FA8B1187549847ACD41BEB1B89FD026293FC2E19ADACA7 SWAP1 CALLER SWAP1 PUSH2 0x783 SWAP1 DUP6 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x7B3 PUSH2 0xE91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x827 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x54686973204164647265737320697320616C72656164792057686974654C6973 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x74656421 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x493 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD SWAP1 SWAP3 SSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND DUP4 OR SWAP1 SSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x895 PUSH2 0xE91 JUMP JUMPDEST PUSH2 0x89E PUSH0 PUSH2 0xF0F JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8EA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x90E SWAP2 SWAP1 PUSH2 0x12D4 JUMP JUMPDEST LT ISZERO PUSH2 0x950 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1B1BDDD85B98D9481B9BDD081CD95D PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x493 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x994 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B8 SWAP2 SWAP1 PUSH2 0x12D4 JUMP JUMPDEST LT ISZERO PUSH2 0x9FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x493 JUMP JUMPDEST PUSH20 0x4B3A514DD71850277BBA82491F26DACDF089CB67 NOT PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ADD PUSH2 0xB68 JUMPI PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA72 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA96 SWAP2 SWAP1 PUSH2 0x135C JUMP JUMPDEST POP DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAA8 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD DUP4 SWAP2 SWAP1 PUSH2 0xADA SWAP1 DUP5 SWAP1 PUSH2 0x13B0 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAF6 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xB2D SWAP1 DUP5 SWAP1 PUSH2 0x137B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xCC87AB2ABFE87B272AF9B77691E40B3D9186A0431F3D41A8E06D39614F460722 SWAP2 ADD PUSH2 0x79E JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0xB76 DUP4 PUSH1 0x3 PUSH2 0x1312 JUMP JUMPDEST PUSH2 0xB80 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD PUSH0 SWAP2 PUSH2 0xB94 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0xC4E JUMPI DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xBC5 JUMPI PUSH2 0xBC5 PUSH2 0x1348 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0xE0 DUP5 SWAP1 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC21 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC45 SWAP2 SWAP1 PUSH2 0x135C JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xB98 JUMP JUMPDEST POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER ADDRESS PUSH1 0x8 SLOAD DUP8 PUSH2 0xC6E SWAP2 SWAP1 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCBF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCE3 SWAP2 SWAP1 PUSH2 0x135C JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH2 0xCF1 SWAP1 DUP5 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD01 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH2 0xD13 SWAP1 DUP5 PUSH2 0x12FF JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH1 0x8 SLOAD PUSH2 0xD2F SWAP1 DUP5 PUSH2 0x12FF JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP1 MLOAD PUSH2 0xD4C SWAP1 DUP6 SWAP1 PUSH2 0x13B0 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD68 SWAP2 SWAP1 PUSH2 0x137B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH2 0xD7A SWAP1 DUP5 PUSH2 0x12FF JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0xDAC SWAP1 DUP5 SWAP1 PUSH2 0x137B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x8 SLOAD PUSH32 0xCC87AB2ABFE87B272AF9B77691E40B3D9186A0431F3D41A8E06D39614F460722 SWAP1 CALLER SWAP1 PUSH2 0xDE2 SWAP1 DUP7 PUSH2 0x12FF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xE13 PUSH2 0xE91 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0xE2C SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 CALLER SWAP1 PUSH2 0xEBD JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE3E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xE5F PUSH2 0xE91 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xE88 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x493 JUMP JUMPDEST PUSH2 0xE2C DUP2 PUSH2 0xF0F JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x89E JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x493 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xE06 SWAP1 DUP5 SWAP1 PUSH2 0xF5E JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF72 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP4 PUSH2 0xFBF JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH0 EQ ISZERO DUP1 ISZERO PUSH2 0xF96 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xF94 SWAP2 SWAP1 PUSH2 0x135C JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xE06 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5274AFE7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x493 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xFCC DUP4 DUP4 PUSH0 PUSH2 0xFD5 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0xFFA JUMPI PUSH1 0x40 MLOAD PUSH4 0xCD786059 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x493 JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1015 SWAP2 SWAP1 PUSH2 0x13B0 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x104F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1064 DUP7 DUP4 DUP4 PUSH2 0x1070 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1085 JUMPI PUSH2 0x1080 DUP3 PUSH2 0x10CC JUMP JUMPDEST PUSH2 0x1069 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x109C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x10C5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x493 JUMP JUMPDEST POP DUP1 PUSH2 0x1069 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x10DC JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x110B JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1120 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFCC DUP3 PUSH2 0x10F5 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x113A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1143 DUP4 PUSH2 0x10F5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1151 PUSH1 0x20 DUP5 ADD PUSH2 0x10F5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x116B JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1174 DUP4 PUSH2 0x10F5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x11A5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x11C0 JUMPI PUSH2 0x11C0 PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x11E8 JUMPI PUSH2 0x11E8 PUSH2 0x1182 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1200 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1231 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x123A DUP5 PUSH2 0x10F5 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x125C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1268 DUP7 DUP3 DUP8 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1282 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x129A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12A3 DUP4 PUSH2 0x10F5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12BE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12CA DUP6 DUP3 DUP7 ADD PUSH2 0x1196 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12E4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xFCF JUMPI PUSH2 0xFCF PUSH2 0x12EB JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xFCF JUMPI PUSH2 0xFCF PUSH2 0x12EB JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1343 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x136C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1069 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xFCF JUMPI PUSH2 0xFCF PUSH2 0x12EB JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x13A8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1390 JUMP JUMPDEST POP POP PUSH0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH0 DUP3 MLOAD PUSH2 0x13C1 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x138E JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C 0x1E 0xBF 0x21 0x4D 0xE SWAP12 SWAP11 0xF7 0xB4 AND 0xDF 0x2E COINBASE 0x1E 0x4D JUMPDEST EXTCODEHASH 0x4F 0xD1 SWAP11 0xDC MLOAD 0xB7 BASEFEE 0xD1 0x22 MSTORE BASEFEE SLT 0x4B DUP5 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "514:8541:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7094:178;;;;;;:::i;:::-;;:::i;:::-;;1591:94;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:25:7;;;782:2;767:18;1591:94:6;;;;;;;;2079:35;;;;;;5372:1236;;;;;;:::i;:::-;;:::i;1380:41::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1254:14:7;;1247:22;1229:41;;1217:2;1202:18;1380:41:6;1089:187:7;2544:215:6;;;;;;:::i;:::-;;:::i;8093:179::-;;;;;;:::i;:::-;-1:-1:-1;;;;;8186:23:6;8154:13;8186:23;;;:15;:23;;;;;;;;1142:42;8186:29;;;;;;;;;8093:179;2293:101:0;;;:::i;1638:85::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;;-1:-1:-1;;;;;1445:32:7;;;1427:51;;1415:2;1400:18;1638:85:0;1281:203:7;1988:27:6;;;;;;7428:179;;;;;;:::i;:::-;-1:-1:-1;;;;;7521:23:6;7489:13;7521:23;;;:15;:23;;;;;;;;1070:42;7521:29;;;;;;;;;7428:179;8848:204;;;;;;:::i;:::-;8961:10;8913:13;8945:27;;;:15;:27;;;;;;;;-1:-1:-1;;;;;8945:38:6;;;;;;;;;;;;8848:204;7761:176;;;;;;:::i;:::-;-1:-1:-1;;;;;7853:23:6;7821:13;7853:23;;;:15;:23;;;;;;;;1213:42;7853:28;;;;;;;;;7761:176;658:20;;;;;-1:-1:-1;;;;;658:20:6;;;3257:1573;;;;;;:::i;:::-;;:::i;6760:151::-;;;;;;:::i;:::-;;:::i;1691:55::-;;;;;;:::i;:::-;;;;;;;;;;;;;;1489:33;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;8428:179:6:-;;;;;;:::i;:::-;-1:-1:-1;;;;;8521:23:6;8489:13;8521:23;;;:15;:23;;;;;;;;1285:42;8521:29;;;;;;;;;8428:179;1832:91;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7094:178;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;7176:19:6;::::1;;::::0;;;:9:::1;:19;::::0;;;;;::::1;;7168:60;;;::::0;-1:-1:-1;;;7168:60:6;;3602:2:7;7168:60:6::1;::::0;::::1;3584:21:7::0;3641:2;3621:18;;;3614:30;3680;3660:18;;;3653:58;3728:18;;7168:60:6::1;;;;;;;;;-1:-1:-1::0;;;;;7238:19:6::1;7260:5;7238:19:::0;;;:9:::1;:19;::::0;;;;:27;;-1:-1:-1;;7238:27:6::1;::::0;;7094:178::o;5372:1236::-;5461:42;;-1:-1:-1;;;5461:42:6;;5497:4;5461:42;;;1427:51:7;5507:7:6;;-1:-1:-1;;;;;5461:27:6;;;;;1400:18:7;;5461:42:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;5453:86;;;;-1:-1:-1;;;5453:86:6;;4148:2:7;5453:86:6;;;4130:21:7;4187:2;4167:18;;;4160:30;-1:-1:-1;;;4206:18:7;;;4199:50;4266:18;;5453:86:6;3946:344:7;5453:86:6;-1:-1:-1;;;;;;;5552:17:6;;;5549:1048;;5584:50;-1:-1:-1;;;;;5584:30:6;;5615:10;5626:7;5584:30;:50::i;:::-;5668:7;5648:15;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;5701:10:6;5690:22;;;;:10;:22;;;;;;;;:32;;;5736:15;:27;;;;;-1:-1:-1;;;;;5736:38:6;;;;;;;;;:49;;5715:7;;5690:22;5736:49;;5715:7;;5736:49;:::i;:::-;;;;-1:-1:-1;;5804:29:6;;;5814:10;4734:51:7;;4816:2;4801:18;;4794:34;;;5804:29:6;;4707:18:7;5804:29:6;;;;;;;5372:1236;;:::o;5549:1048::-;5910:4;5899:9;:7;5907:1;5899:9;:::i;:::-;5898:16;;;;:::i;:::-;5872:23;:42;;;5982:16;:23;5928:27;;5958:47;;5982:23;5958:47;:::i;:::-;5928:77;;6024:6;6019:167;6036:16;:23;6034:25;;6019:167;;;6097:74;6128:16;6145:1;6128:19;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;6097:30:6;;;;6128:19;6148:22;6097:30;:74::i;:::-;6061:3;;6019:167;;;;6200:76;6231:10;6251:23;;6243:7;:31;;;;:::i;:::-;-1:-1:-1;;;;;6200:30:6;;;:76;:30;:76::i;:::-;6318:23;;6310:31;;:7;:31;:::i;:::-;6290:15;;:52;;;;;;;:::i;:::-;;;;-1:-1:-1;;6390:23:6;;6382:31;;:7;:31;:::i;:::-;6367:10;6356:22;;;;:10;:22;;;;;:58;6479:23;;6471:31;;:7;:31;:::i;:::-;6444:10;6428:27;;;;:15;:27;;;;;;;;-1:-1:-1;;;;;6428:38:6;;;;;;;;;:75;;:38;;:27;:75;;;;;:::i;:::-;;;;-1:-1:-1;;6561:23:6;;6522:64;;6541:10;;6553:31;;:7;:31;:::i;:::-;6522:64;;;-1:-1:-1;;;;;4752:32:7;;;4734:51;;4816:2;4801:18;;4794:34;;;;4707:18;6522:64:6;;;;;;;;5857:740;5372:1236;;:::o;2544:215::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;2616:19:6;::::1;;::::0;;;:9:::1;:19;::::0;;;;;::::1;;2615:20;2607:68;;;::::0;-1:-1:-1;;;2607:68:6;;5568:2:7;2607:68:6::1;::::0;::::1;5550:21:7::0;5607:2;5587:18;;;5580:30;5646:34;5626:18;;;5619:62;-1:-1:-1;;;5697:18:7;;;5690:34;5741:19;;2607:68:6::1;5366:400:7::0;2607:68:6::1;2685:16;:31:::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;2685:31:6;;::::1;-1:-1:-1::0;;;;;;2685:31:6;;::::1;::::0;::::1;::::0;;-1:-1:-1;2726:19:6;;;:9:::1;2685:31;2726:19:::0;;;;;:26;;-1:-1:-1;;2726:26:6::1;::::0;;::::1;::::0;;2544:215::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;3257:1573:6:-;3368:54;;-1:-1:-1;;;3368:54:6;;3396:10;3368:54;;;5983:34:7;3416:4:6;6033:18:7;;;6026:43;3426:7:6;;-1:-1:-1;;;;;3368:27:6;;;;;5918:18:7;;3368:54:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;;3360:95;;;;-1:-1:-1;;;3360:95:6;;6282:2:7;3360:95:6;;;6264:21:7;6321:2;6301:18;;;6294:30;-1:-1:-1;;;6340:18:7;;;6333:47;6397:18;;3360:95:6;6080:341:7;3360:95:6;3473:39;;-1:-1:-1;;;3473:39:6;;3501:10;3473:39;;;1427:51:7;3516:7:6;;-1:-1:-1;;;;;3473:27:6;;;;;1400:18:7;;3473:39:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;3465:83;;;;-1:-1:-1;;;3465:83:6;;4148:2:7;3465:83:6;;;4130:21:7;4187:2;4167:18;;;4160:30;-1:-1:-1;;;4206:18:7;;;4199:50;4266:18;;3465:83:6;3946:344:7;3465:83:6;-1:-1:-1;;;;;;;3561:17:6;;;3558:1258;;3593:68;;-1:-1:-1;;;3593:68:6;;3624:10;3593:68;;;6666:34:7;3644:4:6;6716:18:7;;;6709:43;6768:18;;;6761:34;;;-1:-1:-1;;;;;3593:30:6;;;;;6601:18:7;;3593:68:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3695:7;3675:15;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;;3728:10:6;3717:22;;;;:10;:22;;;;;;;;:32;;;3763:19;:31;;;;;;;:49;;3742:7;;3763:31;:49;;3795:16;;3763:49;:::i;:::-;;;;;;;;;;;;;;:60;;;;;;;:::i;:::-;;;;-1:-1:-1;;3853:10:6;3837:27;;;;:15;:27;;;;;;;;-1:-1:-1;;;;;3837:38:6;;;;;;;;;:49;;3879:7;;3837:27;:49;;3879:7;;3837:49;:::i;:::-;;;;-1:-1:-1;;3905:29:6;;;3915:10;4734:51:7;;4816:2;4801:18;;4794:34;;;3905:29:6;;4707:18:7;3905:29:6;4560:274:7;3558:1258:6;4010:4;3999:9;:7;4007:1;3999:9;:::i;:::-;3998:16;;;;:::i;:::-;3972:23;:42;;;4082:16;:23;4028:27;;4058:47;;4082:23;4058:47;:::i;:::-;4028:77;;4124:6;4119:180;4136:16;:23;4134:25;;4119:180;;;4204:9;-1:-1:-1;;;;;4197:30:6;;4228:10;4240:16;4257:1;4240:19;;;;;;;;:::i;:::-;;;;;;;;;;;4197:87;;;;;;-1:-1:-1;;;;;;4197:87:6;;;-1:-1:-1;;;;;6684:15:7;;;4197:87:6;;;6666:34:7;4240:19:6;;6716:18:7;;;6709:43;6768:18;;;6761:34;;;6601:18;;4197:87:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4161:3:6;;4119:180;;;;4319:9;-1:-1:-1;;;;;4312:30:6;;4343:10;4363:4;4379:23;;4371:7;:31;;;;:::i;:::-;4312:92;;-1:-1:-1;;;;;;4312:92:6;;;;;;;-1:-1:-1;;;;;6684:15:7;;;4312:92:6;;;6666:34:7;6736:15;;;;6716:18;;;6709:43;6768:18;;;6761:34;6601:18;;4312:92:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4446:23:6;;4438:31;;:7;:31;:::i;:::-;4418:15;;:52;;;;;;;:::i;:::-;;;;-1:-1:-1;;4518:23:6;;4510:31;;:7;:31;:::i;:::-;4495:10;4484:22;;;;:10;:22;;;;;:58;4618:23;;4610:31;;:7;:31;:::i;:::-;4576:10;4556:31;;;;:19;:31;;;;;;;:49;;;;4588:16;;4556:49;:::i;:::-;;;;;;;;;;;;;;:86;;;;;;;:::i;:::-;;;;-1:-1:-1;;4707:23:6;;4699:31;;:7;:31;:::i;:::-;4672:10;4656:27;;;;:15;:27;;;;;;;;-1:-1:-1;;;;;4656:38:6;;;;;;;;;:75;;:38;;:27;:75;;;;;:::i;:::-;;;;-1:-1:-1;;4780:23:6;;4750:55;;4760:10;;4772:31;;:7;:31;:::i;:::-;4750:55;;;-1:-1:-1;;;;;4752:32:7;;;4734:51;;4816:2;4801:18;;4794:34;;;;4707:18;4750:55:6;;;;;;;3958:858;3558:1258;3257:1573;;;:::o;6760:151::-;1531:13:0;:11;:13::i;:::-;6880:23:6::1;::::0;6837:67:::1;::::0;-1:-1:-1;;;;;6837:30:6;::::1;::::0;6868:10:::1;::::0;6837:30:::1;:67::i;:::-;6760:151:::0;:::o;1489:33::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1489:33:6;;-1:-1:-1;1489:33:6;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;1427:51:7::0;1400:18;;2672:31:0::1;1281:203:7::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;1796:162::-:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;1427:51:7;1400:18;;1901:40:0;1281:203:7;1303:160:3;1412:43;;;-1:-1:-1;;;;;4752:32:7;;1412:43:3;;;4734:51:7;4801:18;;;;4794:34;;;1412:43:3;;;;;;;;;;4707:18:7;;;;1412:43:3;;;;;;;;-1:-1:-1;;;;;1412:43:3;-1:-1:-1;;;1412:43:3;;;1385:71;;1405:5;;1385:19;:71::i;2912:187:0:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;4059:629:3:-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:3;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:3;;-1:-1:-1;;;;;1445:32:7;;4631:40:3;;;1427:51:7;1400:18;;4631:40:3;1281:203:7;2705:151:4;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3359:41;;-1:-1:-1;;;3359:41:4;;3394:4;3359:41;;;1427:51:7;1400:18;;3359:41:4;1281:203:7;3303:108:4;3421:12;3435:23;3462:6;-1:-1:-1;;;;;3462:11:4;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:4;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:4;;-1:-1:-1;;;;;1445:32:7;;5121:24:4;;;1427:51:7;1400:18;;5121:24:4;1281:203:7;5041:119:4;-1:-1:-1;5180:10:4;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:4;;;;;;;;;;;14:173:7;82:20;;-1:-1:-1;;;;;131:31:7;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;830:254::-;898:6;906;959:2;947:9;938:7;934:23;930:32;927:52;;;975:1;972;965:12;927:52;998:29;1017:9;998:29;:::i;:::-;988:39;1074:2;1059:18;;;;1046:32;;-1:-1:-1;;;830:254:7:o;1489:127::-;1550:10;1545:3;1541:20;1538:1;1531:31;1581:4;1578:1;1571:15;1605:4;1602:1;1595:15;1621:719;1664:5;1717:3;1710:4;1702:6;1698:17;1694:27;1684:55;;1735:1;1732;1725:12;1684:55;1771:6;1758:20;1797:18;1834:2;1830;1827:10;1824:36;;;1840:18;;:::i;:::-;1915:2;1909:9;1883:2;1969:13;;-1:-1:-1;;1965:22:7;;;1989:2;1961:31;1957:40;1945:53;;;2013:18;;;2033:22;;;2010:46;2007:72;;;2059:18;;:::i;:::-;2099:10;2095:2;2088:22;2134:2;2126:6;2119:18;2180:3;2173:4;2168:2;2160:6;2156:15;2152:26;2149:35;2146:55;;;2197:1;2194;2187:12;2146:55;2261:2;2254:4;2246:6;2242:17;2235:4;2227:6;2223:17;2210:54;2308:1;2301:4;2296:2;2288:6;2284:15;2280:26;2273:37;2328:6;2319:15;;;;;;1621:719;;;;:::o;2345:464::-;2432:6;2440;2448;2501:2;2489:9;2480:7;2476:23;2472:32;2469:52;;;2517:1;2514;2507:12;2469:52;2540:29;2559:9;2540:29;:::i;:::-;2530:39;;2616:2;2605:9;2601:18;2588:32;2578:42;;2671:2;2660:9;2656:18;2643:32;2698:18;2690:6;2687:30;2684:50;;;2730:1;2727;2720:12;2684:50;2753;2795:7;2786:6;2775:9;2771:22;2753:50;:::i;:::-;2743:60;;;2345:464;;;;;:::o;2814:180::-;2873:6;2926:2;2914:9;2905:7;2901:23;2897:32;2894:52;;;2942:1;2939;2932:12;2894:52;-1:-1:-1;2965:23:7;;2814:180;-1:-1:-1;2814:180:7:o;2999:396::-;3077:6;3085;3138:2;3126:9;3117:7;3113:23;3109:32;3106:52;;;3154:1;3151;3144:12;3106:52;3177:29;3196:9;3177:29;:::i;:::-;3167:39;;3257:2;3246:9;3242:18;3229:32;3284:18;3276:6;3273:30;3270:50;;;3316:1;3313;3306:12;3270:50;3339;3381:7;3372:6;3361:9;3357:22;3339:50;:::i;:::-;3329:60;;;2999:396;;;;;:::o;3757:184::-;3827:6;3880:2;3868:9;3859:7;3855:23;3851:32;3848:52;;;3896:1;3893;3886:12;3848:52;-1:-1:-1;3919:16:7;;3757:184;-1:-1:-1;3757:184:7:o;4295:127::-;4356:10;4351:3;4347:20;4344:1;4337:31;4387:4;4384:1;4377:15;4411:4;4408:1;4401:15;4427:128;4494:9;;;4515:11;;;4512:37;;;4529:18;;:::i;4839:168::-;4912:9;;;4943;;4960:15;;;4954:22;;4940:37;4930:71;;4981:18;;:::i;5012:217::-;5052:1;5078;5068:132;;5122:10;5117:3;5113:20;5110:1;5103:31;5157:4;5154:1;5147:15;5185:4;5182:1;5175:15;5068:132;-1:-1:-1;5214:9:7;;5012:217::o;5234:127::-;5295:10;5290:3;5286:20;5283:1;5276:31;5326:4;5323:1;5316:15;5350:4;5347:1;5340:15;6806:277;6873:6;6926:2;6914:9;6905:7;6901:23;6897:32;6894:52;;;6942:1;6939;6932:12;6894:52;6974:9;6968:16;7027:5;7020:13;7013:21;7006:5;7003:32;6993:60;;7049:1;7046;7039:12;7088:125;7153:9;;;7174:10;;;7171:36;;;7187:18;;:::i;7218:250::-;7303:1;7313:113;7327:6;7324:1;7321:13;7313:113;;;7403:11;;;7397:18;7384:11;;;7377:39;7349:2;7342:10;7313:113;;;-1:-1:-1;;7460:1:7;7442:16;;7435:27;7218:250::o;7473:289::-;7604:3;7642:6;7636:13;7658:66;7717:6;7712:3;7705:4;7697:6;7693:17;7658:66;:::i;:::-;7740:16;;;;;7473:289;-1:-1:-1;;7473:289:7:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1024200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Owner()": "2425",
								"WhiteList(address)": "77490",
								"currentHoldings()": "2394",
								"holdingOfTokens(address)": "2649",
								"holdingOf_DAI(address)": "2666",
								"holdingOf_USDC(address)": "2644",
								"holdingOf_USDM(address)": "2709",
								"holdingOf_USDT(address)": "2622",
								"overColleteralFeeAmount()": "2351",
								"owner()": "2407",
								"removeFromWhiteList(address)": "29001",
								"renounceOwnership()": "infinite",
								"substrateSwapTokens(address,uint256)": "infinite",
								"swapTokens(address,uint256,string)": "infinite",
								"transferOwnership(address)": "28421",
								"userAmount(address)": "2553",
								"userTokenAmount(address,address)": "infinite",
								"userTotalSwapAmount(address,string)": "infinite",
								"whilistedAddress(uint256)": "4677",
								"whiteList(address)": "2644",
								"withdrawBalanceTokens(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 514,
									"end": 9055,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 514,
									"end": 9055,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 514,
									"end": 9055,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2181,
									"end": 2274,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2181,
									"end": 2274,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2223,
									"end": 2235,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 455,
									"end": 506,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 428,
									"end": 446,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 428,
									"end": 446,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2247,
									"end": 2252,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2247,
									"end": 2267,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2247,
									"end": 2267,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2247,
									"end": 2267,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2247,
									"end": 2267,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2247,
									"end": 2267,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2247,
									"end": 2267,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2247,
									"end": 2267,
									"modifierDepth": 1,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2247,
									"end": 2267,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2247,
									"end": 2267,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2247,
									"end": 2267,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2247,
									"end": 2267,
									"modifierDepth": 1,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2247,
									"end": 2267,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2247,
									"end": 2267,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 514,
									"end": 9055,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 514,
									"end": 9055,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 309,
									"end": 512,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 309,
									"end": 512,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 514,
									"end": 9055,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 514,
									"end": 9055,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 514,
									"end": 9055,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 514,
									"end": 9055,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 514,
									"end": 9055,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 514,
									"end": 9055,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 514,
									"end": 9055,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202c1ebf214d0e9b9af7b416df2e411e4d5b3f4fd19adc51b748d1225248124b8464736f6c63430008160033",
									".code": [
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "A3150978"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "CDB43478"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "CDB43478"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "E1AD418E"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "F09F0AAC"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "FCA0A3D2"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "FD03FE90"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "A3150978"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "A4329677"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "A7F696CF"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "B4A99A4E"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "CB8FF545"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "6BC20157"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "6BC20157"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "70181206"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "9C2C67C9"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "1BF6648"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "1F1A675D"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "2DD91A4C"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "33FA13A4"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "372C12B1"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 514,
											"end": 9055,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7094,
											"end": 7272,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7094,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7094,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 7094,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 7094,
											"end": 7272,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7094,
											"end": 7272,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7094,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 7094,
											"end": 7272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7094,
											"end": 7272,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 7094,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7094,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 7094,
											"end": 7272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7094,
											"end": 7272,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 7094,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7094,
											"end": 7272,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1591,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 794,
											"end": 819,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 794,
											"end": 819,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 794,
											"end": 819,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 782,
											"end": 784,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 767,
											"end": 785,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1591,
											"end": 1685,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2079,
											"end": 2114,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2079,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2079,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2079,
											"end": 2114,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2079,
											"end": 2114,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2079,
											"end": 2114,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2079,
											"end": 2114,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5372,
											"end": 6608,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 5372,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5372,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 5372,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 5372,
											"end": 6608,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5372,
											"end": 6608,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5372,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 5372,
											"end": 6608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5372,
											"end": 6608,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 5372,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5372,
											"end": 6608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 5372,
											"end": 6608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1380,
											"end": 1421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1254,
											"end": 1268,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1254,
											"end": 1268,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1269,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1229,
											"end": 1270,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1229,
											"end": 1270,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1217,
											"end": 1219,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1202,
											"end": 1220,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1380,
											"end": 1421,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 1089,
											"end": 1276,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2544,
											"end": 2759,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2544,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 2544,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2544,
											"end": 2759,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2759,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2544,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2544,
											"end": 2759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2759,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2544,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2544,
											"end": 2759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8093,
											"end": 8272,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 8093,
											"end": 8272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8093,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 8093,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 8093,
											"end": 8272,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8093,
											"end": 8272,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8093,
											"end": 8272,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 8093,
											"end": 8272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8093,
											"end": 8272,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 8093,
											"end": 8272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8186,
											"end": 8209,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8154,
											"end": 8167,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8186,
											"end": 8209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8186,
											"end": 8209,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8186,
											"end": 8209,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8186,
											"end": 8201,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8186,
											"end": 8209,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8186,
											"end": 8209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8186,
											"end": 8209,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8186,
											"end": 8209,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8186,
											"end": 8209,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8186,
											"end": 8209,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8186,
											"end": 8209,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8186,
											"end": 8209,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1142,
											"end": 1184,
											"name": "PUSH",
											"source": 6,
											"value": "9951342D994001468506DF88F71A582867B50DD4"
										},
										{
											"begin": 8186,
											"end": 8215,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8186,
											"end": 8215,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8186,
											"end": 8215,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8186,
											"end": 8215,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8186,
											"end": 8215,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8186,
											"end": 8215,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8186,
											"end": 8215,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8186,
											"end": 8215,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8186,
											"end": 8215,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8093,
											"end": 8272,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1445,
											"end": 1477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1445,
											"end": 1477,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1445,
											"end": 1477,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1478,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1427,
											"end": 1478,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1415,
											"end": 1417,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1281,
											"end": 1484,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1988,
											"end": 2015,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1988,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1988,
											"end": 2015,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1988,
											"end": 2015,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 2015,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1988,
											"end": 2015,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7607,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 7428,
											"end": 7607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 7428,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 7428,
											"end": 7607,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7607,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7428,
											"end": 7607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 7428,
											"end": 7607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7607,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 7428,
											"end": 7607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7521,
											"end": 7544,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7489,
											"end": 7502,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7521,
											"end": 7544,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7521,
											"end": 7544,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7521,
											"end": 7544,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7521,
											"end": 7536,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7521,
											"end": 7544,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7521,
											"end": 7544,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7521,
											"end": 7544,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7521,
											"end": 7544,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7521,
											"end": 7544,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7521,
											"end": 7544,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7521,
											"end": 7544,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7521,
											"end": 7544,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1070,
											"end": 1112,
											"name": "PUSH",
											"source": 6,
											"value": "A5014EA627AC22A63F2BF3B46E26D408E72F55C1"
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7428,
											"end": 7607,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8848,
											"end": 9052,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 8848,
											"end": 9052,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8848,
											"end": 9052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 8848,
											"end": 9052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 8848,
											"end": 9052,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8848,
											"end": 9052,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8848,
											"end": 9052,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 8848,
											"end": 9052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8848,
											"end": 9052,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 8848,
											"end": 9052,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8961,
											"end": 8971,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8913,
											"end": 8926,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8945,
											"end": 8972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8972,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8972,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8960,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8945,
											"end": 8972,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8945,
											"end": 8972,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8972,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8972,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8972,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8945,
											"end": 8972,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8972,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8972,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8945,
											"end": 8983,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8983,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8983,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8983,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8983,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8983,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8983,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8983,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8983,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8945,
											"end": 8983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8848,
											"end": 9052,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 7937,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 7761,
											"end": 7937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 7937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 7761,
											"end": 7937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 7761,
											"end": 7937,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 7937,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7761,
											"end": 7937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 7761,
											"end": 7937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 7937,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 7761,
											"end": 7937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7853,
											"end": 7876,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7821,
											"end": 7834,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7853,
											"end": 7876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7876,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7876,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7868,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7853,
											"end": 7876,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7853,
											"end": 7876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7876,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7876,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7876,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7853,
											"end": 7876,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7876,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7876,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1255,
											"name": "PUSH",
											"source": 6,
											"value": "77F146CA2943294CC53E6C3B5980B572C961AE23"
										},
										{
											"begin": 7853,
											"end": 7881,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7881,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7881,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7881,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7881,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7881,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7761,
											"end": 7937,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 658,
											"end": 678,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 658,
											"end": 678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 658,
											"end": 678,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 658,
											"end": 678,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 658,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 658,
											"end": 678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 658,
											"end": 678,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 658,
											"end": 678,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 658,
											"end": 678,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 4830,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 3257,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 3257,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 3257,
											"end": 4830,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 4830,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3257,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 3257,
											"end": 4830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 4830,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 3257,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 4830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3257,
											"end": 4830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6911,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 6760,
											"end": 6911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 6760,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 6760,
											"end": 6911,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6911,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6760,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 6760,
											"end": 6911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6911,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 6760,
											"end": 6911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 6760,
											"end": 6911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1746,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1691,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1691,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1691,
											"end": 1746,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1746,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1691,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1691,
											"end": 1746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1746,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1691,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1746,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1691,
											"end": 1746,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1691,
											"end": 1746,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1746,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1691,
											"end": 1746,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1746,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1746,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1746,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1691,
											"end": 1746,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1746,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1746,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1746,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1746,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1489,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1489,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8428,
											"end": 8607,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 8428,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 8428,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8428,
											"end": 8607,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8607,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8428,
											"end": 8607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 8428,
											"end": 8607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8607,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8428,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8521,
											"end": 8544,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8489,
											"end": 8502,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8521,
											"end": 8544,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8521,
											"end": 8544,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8521,
											"end": 8544,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8521,
											"end": 8536,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8521,
											"end": 8544,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8521,
											"end": 8544,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8521,
											"end": 8544,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8521,
											"end": 8544,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8521,
											"end": 8544,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8521,
											"end": 8544,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8521,
											"end": 8544,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8521,
											"end": 8544,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1285,
											"end": 1327,
											"name": "PUSH",
											"source": 6,
											"value": "4B3A514DD71850277BBA82491F26DACDF089CB68"
										},
										{
											"begin": 8521,
											"end": 8550,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8521,
											"end": 8550,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8521,
											"end": 8550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8521,
											"end": 8550,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8521,
											"end": 8550,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8521,
											"end": 8550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8521,
											"end": 8550,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8521,
											"end": 8550,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8521,
											"end": 8550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8428,
											"end": 8607,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1832,
											"end": 1923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1832,
											"end": 1923,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7094,
											"end": 7272,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 7094,
											"end": 7272,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7176,
											"end": 7195,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7176,
											"end": 7195,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7176,
											"end": 7195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7176,
											"end": 7195,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7176,
											"end": 7195,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7176,
											"end": 7195,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7176,
											"end": 7185,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7176,
											"end": 7195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7176,
											"end": 7195,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7176,
											"end": 7195,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7176,
											"end": 7195,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7176,
											"end": 7195,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7176,
											"end": 7195,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7176,
											"end": 7195,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7176,
											"end": 7195,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7168,
											"end": 7228,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 7168,
											"end": 7228,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7168,
											"end": 7228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7168,
											"end": 7228,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7168,
											"end": 7228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7168,
											"end": 7228,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3602,
											"end": 3604,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7168,
											"end": 7228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7168,
											"end": 7228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7168,
											"end": 7228,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3584,
											"end": 3605,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3641,
											"end": 3643,
											"name": "PUSH",
											"source": 7,
											"value": "1C"
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3614,
											"end": 3644,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3680,
											"end": 3710,
											"name": "PUSH",
											"source": 7,
											"value": "54686973204164647265737320646F6573206E6F742065786973742100000000"
										},
										{
											"begin": 3660,
											"end": 3678,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3660,
											"end": 3678,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3678,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3653,
											"end": 3711,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3728,
											"end": 3746,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3728,
											"end": 3746,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7168,
											"end": 7228,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 7168,
											"end": 7228,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7168,
											"end": 7228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7168,
											"end": 7228,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7168,
											"end": 7228,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7168,
											"end": 7228,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7168,
											"end": 7228,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7168,
											"end": 7228,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7168,
											"end": 7228,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7168,
											"end": 7228,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 7168,
											"end": 7228,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7238,
											"end": 7257,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7260,
											"end": 7265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7238,
											"end": 7257,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7238,
											"end": 7257,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7238,
											"end": 7257,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7238,
											"end": 7247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7238,
											"end": 7257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7238,
											"end": 7257,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7238,
											"end": 7257,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7238,
											"end": 7257,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7238,
											"end": 7257,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7238,
											"end": 7265,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7238,
											"end": 7265,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7238,
											"end": 7265,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7238,
											"end": 7265,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7238,
											"end": 7265,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7094,
											"end": 7272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5372,
											"end": 6608,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 5372,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5497,
											"end": 5501,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1478,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5507,
											"end": 5514,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5507,
											"end": 5514,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5461,
											"end": 5488,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5488,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5488,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5488,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 5461,
											"end": 5488,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5461,
											"end": 5503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 5461,
											"end": 5503,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5514,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5461,
											"end": 5514,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4151,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4187,
											"end": 4189,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 4167,
											"end": 4185,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4167,
											"end": 4185,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4167,
											"end": 4185,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4206,
											"end": 4224,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4206,
											"end": 4224,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4206,
											"end": 4224,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4199,
											"end": 4249,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4266,
											"end": 4284,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4266,
											"end": 4284,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3946,
											"end": 4290,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B3A514DD71850277BBA82491F26DACDF089CB67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5552,
											"end": 5569,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5552,
											"end": 5569,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5552,
											"end": 5569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5549,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5549,
											"end": 6597,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5584,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5584,
											"end": 5614,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5584,
											"end": 5614,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5615,
											"end": 5625,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5626,
											"end": 5633,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5584,
											"end": 5614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5584,
											"end": 5634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5584,
											"end": 5634,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 5584,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5668,
											"end": 5675,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5648,
											"end": 5663,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5648,
											"end": 5663,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5648,
											"end": 5676,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5648,
											"end": 5676,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5648,
											"end": 5676,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5648,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5648,
											"end": 5676,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5648,
											"end": 5676,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5648,
											"end": 5676,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5648,
											"end": 5676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5648,
											"end": 5676,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5648,
											"end": 5676,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5648,
											"end": 5676,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5648,
											"end": 5676,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5648,
											"end": 5676,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5701,
											"end": 5711,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5712,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5690,
											"end": 5712,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5712,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5712,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5700,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5690,
											"end": 5712,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5690,
											"end": 5712,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5712,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5712,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5712,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5690,
											"end": 5712,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5712,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5712,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5722,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5722,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5722,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5751,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5736,
											"end": 5763,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5763,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5763,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5763,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5763,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5736,
											"end": 5774,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5774,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5774,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5774,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5774,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5774,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5774,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5774,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5785,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5785,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5715,
											"end": 5722,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5715,
											"end": 5722,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5712,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5736,
											"end": 5785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5715,
											"end": 5722,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5715,
											"end": 5722,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5785,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5736,
											"end": 5785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5785,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5736,
											"end": 5785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5785,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5785,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5736,
											"end": 5785,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5804,
											"end": 5833,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5804,
											"end": 5833,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5804,
											"end": 5833,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5814,
											"end": 5824,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4785,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4734,
											"end": 4785,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4818,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4794,
											"end": 4828,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4794,
											"end": 4828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4794,
											"end": 4828,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5804,
											"end": 5833,
											"name": "PUSH",
											"source": 6,
											"value": "CC87AB2ABFE87B272AF9B77691E40B3D9186A0431F3D41A8E06D39614F460722"
										},
										{
											"begin": 5804,
											"end": 5833,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4707,
											"end": 4725,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5804,
											"end": 5833,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5804,
											"end": 5833,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5804,
											"end": 5833,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5804,
											"end": 5833,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5804,
											"end": 5833,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5804,
											"end": 5833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5804,
											"end": 5833,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 5372,
											"end": 6608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5372,
											"end": 6608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5372,
											"end": 6608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5549,
											"end": 6597,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5549,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5910,
											"end": 5914,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 5899,
											"end": 5908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 5899,
											"end": 5906,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5907,
											"end": 5908,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5899,
											"end": 5908,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 5899,
											"end": 5908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5899,
											"end": 5908,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 5899,
											"end": 5908,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5898,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 5898,
											"end": 5914,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5898,
											"end": 5914,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5898,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5898,
											"end": 5914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5898,
											"end": 5914,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 5898,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5872,
											"end": 5895,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5872,
											"end": 5914,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5872,
											"end": 5914,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5872,
											"end": 5914,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 5998,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5982,
											"end": 6005,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5928,
											"end": 5955,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5928,
											"end": 5955,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5958,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5958,
											"end": 6005,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5982,
											"end": 6005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5958,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5958,
											"end": 6005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5958,
											"end": 6005,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5958,
											"end": 6005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5928,
											"end": 6005,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5928,
											"end": 6005,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6024,
											"end": 6030,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6186,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6019,
											"end": 6186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6036,
											"end": 6052,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6036,
											"end": 6059,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6059,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6059,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6019,
											"end": 6186,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6019,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 6019,
											"end": 6186,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6171,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 6128,
											"end": 6144,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6145,
											"end": 6146,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6128,
											"end": 6147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6128,
											"end": 6147,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6128,
											"end": 6147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6128,
											"end": 6147,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6128,
											"end": 6147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 6128,
											"end": 6147,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6128,
											"end": 6147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 6128,
											"end": 6147,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 6128,
											"end": 6147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6128,
											"end": 6147,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 6128,
											"end": 6147,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6128,
											"end": 6147,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6128,
											"end": 6147,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6128,
											"end": 6147,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6128,
											"end": 6147,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6128,
											"end": 6147,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6128,
											"end": 6147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6128,
											"end": 6147,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6128,
											"end": 6147,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6128,
											"end": 6147,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6128,
											"end": 6147,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6097,
											"end": 6127,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6127,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6127,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6128,
											"end": 6147,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6148,
											"end": 6170,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 6097,
											"end": 6171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6097,
											"end": 6171,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 6097,
											"end": 6171,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6061,
											"end": 6064,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6061,
											"end": 6064,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6019,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6019,
											"end": 6186,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6019,
											"end": 6186,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 6019,
											"end": 6186,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6019,
											"end": 6186,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6200,
											"end": 6276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 6231,
											"end": 6241,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6251,
											"end": 6274,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6251,
											"end": 6274,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6243,
											"end": 6250,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6243,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 6243,
											"end": 6274,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6243,
											"end": 6274,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6243,
											"end": 6274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 6243,
											"end": 6274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6243,
											"end": 6274,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 6243,
											"end": 6274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6200,
											"end": 6230,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6200,
											"end": 6230,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6200,
											"end": 6230,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6200,
											"end": 6276,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6200,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 6200,
											"end": 6276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6200,
											"end": 6276,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 6200,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6318,
											"end": 6341,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6318,
											"end": 6341,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6310,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 6310,
											"end": 6341,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6310,
											"end": 6317,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6310,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 6310,
											"end": 6341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6310,
											"end": 6341,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 6310,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6305,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 6290,
											"end": 6305,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6290,
											"end": 6342,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6342,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6342,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 6290,
											"end": 6342,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6342,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6342,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 6290,
											"end": 6342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6342,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 6290,
											"end": 6342,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6342,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6342,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6290,
											"end": 6342,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6390,
											"end": 6413,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6390,
											"end": 6413,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 6382,
											"end": 6413,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6389,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 6382,
											"end": 6413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6413,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 6382,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6367,
											"end": 6377,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6356,
											"end": 6378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6378,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6378,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6366,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6356,
											"end": 6378,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6356,
											"end": 6378,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6378,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6356,
											"end": 6378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6378,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6356,
											"end": 6414,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6479,
											"end": 6502,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6479,
											"end": 6502,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6471,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 6471,
											"end": 6502,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6471,
											"end": 6478,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6471,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 6471,
											"end": 6502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6471,
											"end": 6502,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 6471,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6444,
											"end": 6454,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6443,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6428,
											"end": 6466,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6466,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6466,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6466,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6466,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6466,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6466,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6503,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6503,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 6428,
											"end": 6503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6503,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 6428,
											"end": 6503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6503,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 6428,
											"end": 6503,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6503,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6428,
											"end": 6503,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6561,
											"end": 6584,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6561,
											"end": 6584,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6586,
											"name": "PUSH",
											"source": 6,
											"value": "CF53AE9736A409C662FA8B1187549847ACD41BEB1B89FD026293FC2E19ADACA7"
										},
										{
											"begin": 6522,
											"end": 6586,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6551,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6541,
											"end": 6551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6553,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 6553,
											"end": 6584,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6553,
											"end": 6560,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6553,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 6553,
											"end": 6584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6553,
											"end": 6584,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 6553,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6586,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6522,
											"end": 6586,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6586,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4752,
											"end": 4784,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4784,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4784,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4734,
											"end": 4785,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4734,
											"end": 4785,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4818,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4794,
											"end": 4828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4794,
											"end": 4828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4794,
											"end": 4828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4794,
											"end": 4828,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4707,
											"end": 4725,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6522,
											"end": 6586,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 6522,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6586,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6522,
											"end": 6586,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6586,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6586,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6586,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6586,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6586,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 5857,
											"end": 6597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5372,
											"end": 6608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5372,
											"end": 6608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5372,
											"end": 6608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2759,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2544,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2616,
											"end": 2635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2635,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2616,
											"end": 2635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2635,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2616,
											"end": 2635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2616,
											"end": 2635,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2635,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2616,
											"end": 2635,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2635,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2635,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2635,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2616,
											"end": 2635,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2615,
											"end": 2635,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2607,
											"end": 2675,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2607,
											"end": 2675,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2607,
											"end": 2675,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2675,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5568,
											"end": 5570,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2607,
											"end": 2675,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2607,
											"end": 2675,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2607,
											"end": 2675,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5550,
											"end": 5571,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5607,
											"end": 5609,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5587,
											"end": 5605,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5587,
											"end": 5605,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5587,
											"end": 5605,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5580,
											"end": 5610,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5646,
											"end": 5680,
											"name": "PUSH",
											"source": 7,
											"value": "54686973204164647265737320697320616C72656164792057686974654C6973"
										},
										{
											"begin": 5626,
											"end": 5644,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5626,
											"end": 5644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5626,
											"end": 5644,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5619,
											"end": 5681,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "74656421"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5697,
											"end": 5715,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5697,
											"end": 5715,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5697,
											"end": 5715,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5690,
											"end": 5724,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5741,
											"end": 5760,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 5741,
											"end": 5760,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2607,
											"end": 2675,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 5366,
											"end": 5766,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2607,
											"end": 2675,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 2607,
											"end": 2675,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2716,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "PUSH",
											"source": 6,
											"value": "C2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B"
										},
										{
											"begin": 2685,
											"end": 2716,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2716,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2716,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2716,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2716,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2745,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2735,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2685,
											"end": 2716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2745,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2745,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2726,
											"end": 2745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2745,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2745,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2752,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2752,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2726,
											"end": 2752,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2752,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2752,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2726,
											"end": 2752,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2544,
											"end": 2759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3257,
											"end": 4830,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 3257,
											"end": 4830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3406,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 6017,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3416,
											"end": 3420,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6026,
											"end": 6069,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3433,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3433,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3368,
											"end": 3395,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3395,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3395,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3395,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 3368,
											"end": 3395,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3368,
											"end": 3422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3368,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3360,
											"end": 3455,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3455,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3360,
											"end": 3455,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3360,
											"end": 3455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6282,
											"end": 6284,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3360,
											"end": 3455,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3360,
											"end": 3455,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6264,
											"end": 6285,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6321,
											"end": 6323,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6301,
											"end": 6319,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6294,
											"end": 6324,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1B1BDDD85B98D9481B9BDD081CD95D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6340,
											"end": 6358,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6340,
											"end": 6358,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6340,
											"end": 6358,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6333,
											"end": 6380,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6397,
											"end": 6415,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6397,
											"end": 6415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 6080,
											"end": 6421,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3360,
											"end": 3455,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 3360,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3511,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1478,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3516,
											"end": 3523,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3516,
											"end": 3523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 3473,
											"end": 3500,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3473,
											"end": 3512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 3473,
											"end": 3512,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3523,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3523,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3465,
											"end": 3548,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3548,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3465,
											"end": 3548,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3465,
											"end": 3548,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3548,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4150,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3548,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3465,
											"end": 3548,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3465,
											"end": 3548,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4130,
											"end": 4151,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4187,
											"end": 4189,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 4167,
											"end": 4185,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4167,
											"end": 4185,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4167,
											"end": 4185,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4160,
											"end": 4190,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4206,
											"end": 4224,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4206,
											"end": 4224,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4206,
											"end": 4224,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4199,
											"end": 4249,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4266,
											"end": 4284,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4266,
											"end": 4284,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3946,
											"end": 4290,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3548,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 3465,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B3A514DD71850277BBA82491F26DACDF089CB67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3561,
											"end": 3578,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3578,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3561,
											"end": 3578,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3558,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3558,
											"end": 4816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3624,
											"end": 3634,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6700,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3644,
											"end": 3648,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 6716,
											"end": 6734,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6716,
											"end": 6734,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6716,
											"end": 6734,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6709,
											"end": 6752,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6768,
											"end": 6786,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6768,
											"end": 6786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6768,
											"end": 6786,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6761,
											"end": 6795,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6761,
											"end": 6795,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6761,
											"end": 6795,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3593,
											"end": 3623,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3623,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3623,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3623,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 3593,
											"end": 3623,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6601,
											"end": 6619,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6601,
											"end": 6619,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3593,
											"end": 3661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3593,
											"end": 3661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3695,
											"end": 3702,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3675,
											"end": 3690,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3675,
											"end": 3703,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3703,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3703,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3675,
											"end": 3703,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3675,
											"end": 3703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3703,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3675,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3703,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3703,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3728,
											"end": 3738,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3739,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3717,
											"end": 3739,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3739,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3739,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3727,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3717,
											"end": 3739,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3717,
											"end": 3739,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3739,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3739,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3739,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3717,
											"end": 3739,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3739,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3739,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3749,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3749,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3782,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3763,
											"end": 3794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3794,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3794,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3794,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3794,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3812,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3812,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3742,
											"end": 3749,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3742,
											"end": 3749,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3763,
											"end": 3812,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3795,
											"end": 3811,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3795,
											"end": 3811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 3763,
											"end": 3812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3812,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 3763,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3812,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3812,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3812,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3812,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3763,
											"end": 3812,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3812,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3763,
											"end": 3812,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3812,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3812,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3812,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3812,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3812,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3763,
											"end": 3823,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3823,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3823,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3763,
											"end": 3823,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3823,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3763,
											"end": 3823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3823,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 3763,
											"end": 3823,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3823,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3823,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3823,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3853,
											"end": 3863,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3852,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3837,
											"end": 3875,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3875,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3875,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3875,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3875,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3875,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3875,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3875,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3886,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3886,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3879,
											"end": 3886,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3879,
											"end": 3886,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3864,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 3837,
											"end": 3886,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3879,
											"end": 3886,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3879,
											"end": 3886,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3837,
											"end": 3886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3886,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 3837,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3886,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3886,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3837,
											"end": 3886,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3905,
											"end": 3934,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3905,
											"end": 3934,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3905,
											"end": 3934,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3915,
											"end": 3925,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4734,
											"end": 4785,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4734,
											"end": 4785,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4818,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4794,
											"end": 4828,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4794,
											"end": 4828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4794,
											"end": 4828,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3905,
											"end": 3934,
											"name": "PUSH",
											"source": 6,
											"value": "CC87AB2ABFE87B272AF9B77691E40B3D9186A0431F3D41A8E06D39614F460722"
										},
										{
											"begin": 3905,
											"end": 3934,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4707,
											"end": 4725,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3905,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 4560,
											"end": 4834,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3558,
											"end": 4816,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 3558,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4010,
											"end": 4014,
											"name": "PUSH",
											"source": 6,
											"value": "3E8"
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3999,
											"end": 4006,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4007,
											"end": 4008,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3999,
											"end": 4008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 3999,
											"end": 4008,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 3998,
											"end": 4014,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4014,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4014,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3998,
											"end": 4014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3998,
											"end": 4014,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 3998,
											"end": 4014,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3972,
											"end": 3995,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3972,
											"end": 4014,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3972,
											"end": 4014,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3972,
											"end": 4014,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4082,
											"end": 4098,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4082,
											"end": 4105,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4055,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4028,
											"end": 4055,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 4058,
											"end": 4105,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4082,
											"end": 4105,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4105,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 4058,
											"end": 4105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4058,
											"end": 4105,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 4058,
											"end": 4105,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4105,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4105,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4124,
											"end": 4130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4299,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 4119,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4136,
											"end": 4152,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4136,
											"end": 4159,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4134,
											"end": 4159,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4134,
											"end": 4159,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4119,
											"end": 4299,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4119,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 4119,
											"end": 4299,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4204,
											"end": 4213,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4197,
											"end": 4227,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4227,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 4228,
											"end": 4238,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4256,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4257,
											"end": 4258,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4259,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4259,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 4240,
											"end": 4259,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 4240,
											"end": 4259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 4240,
											"end": 4259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4259,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 4240,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4240,
											"end": 4259,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4259,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4259,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4240,
											"end": 4259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4259,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4259,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4259,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6684,
											"end": 6699,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6699,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6699,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6700,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4259,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4259,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6716,
											"end": 6734,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6716,
											"end": 6734,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6716,
											"end": 6734,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6709,
											"end": 6752,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6768,
											"end": 6786,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6768,
											"end": 6786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6768,
											"end": 6786,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6761,
											"end": 6795,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6761,
											"end": 6795,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6761,
											"end": 6795,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6619,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6601,
											"end": 6619,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 4197,
											"end": 4284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 4197,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4161,
											"end": 4164,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4161,
											"end": 4164,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4119,
											"end": 4299,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 4119,
											"end": 4299,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4119,
											"end": 4299,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 4119,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4119,
											"end": 4299,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4319,
											"end": 4328,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4312,
											"end": 4342,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4342,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 4343,
											"end": 4353,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4363,
											"end": 4367,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 4379,
											"end": 4402,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4379,
											"end": 4402,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4371,
											"end": 4378,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4371,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4371,
											"end": 4402,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4371,
											"end": 4402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4371,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4371,
											"end": 4402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4371,
											"end": 4402,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4371,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6684,
											"end": 6699,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6699,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6684,
											"end": 6699,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6666,
											"end": 6700,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6736,
											"end": 6751,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6736,
											"end": 6751,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6736,
											"end": 6751,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6736,
											"end": 6751,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6716,
											"end": 6734,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6716,
											"end": 6734,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6716,
											"end": 6734,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6709,
											"end": 6752,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6768,
											"end": 6786,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 6768,
											"end": 6786,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6768,
											"end": 6786,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6761,
											"end": 6795,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6601,
											"end": 6619,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6601,
											"end": 6619,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 4312,
											"end": 4404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 4312,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4446,
											"end": 4469,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4446,
											"end": 4469,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4438,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 4438,
											"end": 4469,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4438,
											"end": 4445,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4438,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4438,
											"end": 4469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4438,
											"end": 4469,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 4438,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4433,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4418,
											"end": 4433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4418,
											"end": 4470,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4470,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4470,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 4418,
											"end": 4470,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4470,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4418,
											"end": 4470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4470,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 4418,
											"end": 4470,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4470,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4470,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4518,
											"end": 4541,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4518,
											"end": 4541,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 4510,
											"end": 4541,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 4517,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 4541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4510,
											"end": 4541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4510,
											"end": 4541,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 4510,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4495,
											"end": 4505,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4484,
											"end": 4506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4484,
											"end": 4506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4484,
											"end": 4506,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4484,
											"end": 4506,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4484,
											"end": 4494,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4484,
											"end": 4506,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4484,
											"end": 4506,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4484,
											"end": 4506,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4484,
											"end": 4506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4484,
											"end": 4506,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4484,
											"end": 4542,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4618,
											"end": 4641,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4618,
											"end": 4641,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4610,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 4610,
											"end": 4641,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4610,
											"end": 4617,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4610,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4610,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4610,
											"end": 4641,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 4610,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4576,
											"end": 4586,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4587,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4556,
											"end": 4587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4587,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4587,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4575,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4556,
											"end": 4587,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4556,
											"end": 4587,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4587,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4556,
											"end": 4587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4587,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4587,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4605,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 4556,
											"end": 4605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4588,
											"end": 4604,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4588,
											"end": 4604,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 4556,
											"end": 4605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4605,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 4556,
											"end": 4605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4605,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4605,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4556,
											"end": 4605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4605,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4556,
											"end": 4605,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4605,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4605,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4605,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4556,
											"end": 4642,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4642,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4642,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 4556,
											"end": 4642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4556,
											"end": 4642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4642,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 4556,
											"end": 4642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4642,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4707,
											"end": 4730,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4707,
											"end": 4730,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4699,
											"end": 4730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 4699,
											"end": 4730,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4699,
											"end": 4706,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4699,
											"end": 4730,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4699,
											"end": 4730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4699,
											"end": 4730,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 4699,
											"end": 4730,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4672,
											"end": 4682,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4683,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4656,
											"end": 4683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4683,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4683,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4671,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4656,
											"end": 4683,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4656,
											"end": 4683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4683,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4683,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4683,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4656,
											"end": 4683,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4683,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4683,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4656,
											"end": 4694,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4694,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4694,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4694,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4694,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4694,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4694,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4694,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4694,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4731,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4731,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4694,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4694,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4683,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4656,
											"end": 4731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4731,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 4656,
											"end": 4731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4731,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 4656,
											"end": 4731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4731,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 4731,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4780,
											"end": 4803,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4780,
											"end": 4803,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4805,
											"name": "PUSH",
											"source": 6,
											"value": "CC87AB2ABFE87B272AF9B77691E40B3D9186A0431F3D41A8E06D39614F460722"
										},
										{
											"begin": 4750,
											"end": 4805,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4760,
											"end": 4770,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4760,
											"end": 4770,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4772,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 4772,
											"end": 4803,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4772,
											"end": 4779,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4772,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 4772,
											"end": 4803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4772,
											"end": 4803,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 4772,
											"end": 4803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4805,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4750,
											"end": 4805,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4805,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4752,
											"end": 4784,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4784,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4784,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4734,
											"end": 4785,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4734,
											"end": 4785,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4816,
											"end": 4818,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4794,
											"end": 4828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4794,
											"end": 4828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4794,
											"end": 4828,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4794,
											"end": 4828,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4707,
											"end": 4725,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4750,
											"end": 4805,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4750,
											"end": 4805,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4805,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4805,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4805,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4805,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4750,
											"end": 4805,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3958,
											"end": 4816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3558,
											"end": 4816,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 3558,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 4830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 4830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 4830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3257,
											"end": 4830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6911,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 6760,
											"end": 6911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6880,
											"end": 6903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6880,
											"end": 6903,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6837,
											"end": 6904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 6837,
											"end": 6904,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6837,
											"end": 6867,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6837,
											"end": 6867,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6837,
											"end": 6867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6868,
											"end": 6878,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6868,
											"end": 6878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6837,
											"end": 6867,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 6837,
											"end": 6904,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6837,
											"end": 6904,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 6837,
											"end": 6904,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6760,
											"end": 6911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1489,
											"end": 1522,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1489,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1478,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1281,
											"end": 1484,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1427,
											"end": 1478,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1281,
											"end": 1484,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4752,
											"end": 4784,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4784,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4734,
											"end": 4785,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4801,
											"end": 4819,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4794,
											"end": 4828,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4794,
											"end": 4828,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4794,
											"end": 4828,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4707,
											"end": 4725,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4707,
											"end": 4725,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4707,
											"end": 4725,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4707,
											"end": 4725,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 3,
											"value": "253"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5274AFE7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1445,
											"end": 1477,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1445,
											"end": 1477,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1427,
											"end": 1478,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1281,
											"end": 1484,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 4
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CD786059"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1478,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1281,
											"end": 1484,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1445,
											"end": 1477,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1445,
											"end": 1477,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1478,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1400,
											"end": 1418,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1281,
											"end": 1484,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 383,
											"end": 643,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 383,
											"end": 643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 451,
											"end": 457,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 459,
											"end": 465,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 512,
											"end": 514,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 509,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 491,
											"end": 498,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 487,
											"end": 510,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 483,
											"end": 515,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 480,
											"end": 532,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 480,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 518,
											"end": 530,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 480,
											"end": 532,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 480,
											"end": 532,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 570,
											"end": 579,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 551,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 551,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 551,
											"end": 580,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 551,
											"end": 580,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 541,
											"end": 580,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 541,
											"end": 580,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 622,
											"end": 631,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 599,
											"end": 637,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 599,
											"end": 637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 599,
											"end": 637,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 599,
											"end": 637,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 589,
											"end": 637,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 589,
											"end": 637,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 383,
											"end": 643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 383,
											"end": 643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 383,
											"end": 643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 830,
											"end": 1084,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 830,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 898,
											"end": 904,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 912,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 959,
											"end": 961,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 947,
											"end": 956,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 938,
											"end": 945,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 934,
											"end": 957,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 930,
											"end": 962,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 927,
											"end": 979,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 927,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 927,
											"end": 979,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 975,
											"end": 976,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 972,
											"end": 973,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 965,
											"end": 977,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 927,
											"end": 979,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 927,
											"end": 979,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 1017,
											"end": 1026,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 998,
											"end": 1027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 998,
											"end": 1027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 988,
											"end": 1027,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1046,
											"end": 1078,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1046,
											"end": 1078,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 830,
											"end": 1084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1489,
											"end": 1616,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 1489,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1550,
											"end": 1560,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 1545,
											"end": 1548,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1541,
											"end": 1561,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1538,
											"end": 1539,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1562,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1581,
											"end": 1585,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1578,
											"end": 1579,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1571,
											"end": 1586,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1605,
											"end": 1609,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1602,
											"end": 1603,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1610,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1621,
											"end": 2340,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 1621,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1669,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1717,
											"end": 1720,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1714,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1702,
											"end": 1708,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1698,
											"end": 1715,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1694,
											"end": 1721,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1739,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 1684,
											"end": 1739,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1735,
											"end": 1736,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1732,
											"end": 1733,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1725,
											"end": 1737,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1739,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 1684,
											"end": 1739,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1771,
											"end": 1777,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1758,
											"end": 1778,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1797,
											"end": 1815,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1834,
											"end": 1836,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1830,
											"end": 1832,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1827,
											"end": 1837,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1860,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 1824,
											"end": 1860,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1840,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 1840,
											"end": 1858,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 1840,
											"end": 1858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1840,
											"end": 1858,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 1840,
											"end": 1858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1917,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1909,
											"end": 1918,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1883,
											"end": 1885,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1969,
											"end": 1982,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1969,
											"end": 1982,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1965,
											"end": 1987,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1965,
											"end": 1987,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1965,
											"end": 1987,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1989,
											"end": 1991,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 1961,
											"end": 1992,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1957,
											"end": 1997,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1945,
											"end": 1998,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1945,
											"end": 1998,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1945,
											"end": 1998,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2031,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2031,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2031,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2033,
											"end": 2055,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2033,
											"end": 2055,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2033,
											"end": 2055,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2010,
											"end": 2056,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2079,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2007,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 2007,
											"end": 2079,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 2059,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 2059,
											"end": 2077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2059,
											"end": 2077,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 2059,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2099,
											"end": 2109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2095,
											"end": 2097,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2088,
											"end": 2110,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2136,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2126,
											"end": 2132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2180,
											"end": 2183,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2173,
											"end": 2177,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2168,
											"end": 2170,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2166,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 2156,
											"end": 2171,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2178,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2149,
											"end": 2184,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2146,
											"end": 2201,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2146,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 2146,
											"end": 2201,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2197,
											"end": 2198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2194,
											"end": 2195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2187,
											"end": 2199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2146,
											"end": 2201,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 2146,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2261,
											"end": 2263,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2254,
											"end": 2258,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2246,
											"end": 2252,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2242,
											"end": 2259,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2235,
											"end": 2239,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2227,
											"end": 2233,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2223,
											"end": 2240,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2210,
											"end": 2264,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 2308,
											"end": 2309,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2305,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2296,
											"end": 2298,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2284,
											"end": 2299,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2280,
											"end": 2306,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2273,
											"end": 2310,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2328,
											"end": 2334,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2334,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2334,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2334,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2334,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2334,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2319,
											"end": 2334,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1621,
											"end": 2340,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1621,
											"end": 2340,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1621,
											"end": 2340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1621,
											"end": 2340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1621,
											"end": 2340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2345,
											"end": 2809,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2345,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2440,
											"end": 2446,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2448,
											"end": 2454,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2501,
											"end": 2503,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2489,
											"end": 2498,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2480,
											"end": 2487,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2476,
											"end": 2499,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2472,
											"end": 2504,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2517,
											"end": 2518,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2515,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2507,
											"end": 2519,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 2469,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 2559,
											"end": 2568,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 2540,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 2540,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2569,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2530,
											"end": 2569,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2616,
											"end": 2618,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2605,
											"end": 2614,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2601,
											"end": 2619,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2588,
											"end": 2620,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2620,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2578,
											"end": 2620,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2671,
											"end": 2673,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2660,
											"end": 2669,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2674,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2643,
											"end": 2675,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2716,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2690,
											"end": 2696,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2687,
											"end": 2717,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2734,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 2684,
											"end": 2734,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2730,
											"end": 2731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2720,
											"end": 2732,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2684,
											"end": 2734,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 2684,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2753,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 2795,
											"end": 2802,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2784,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2771,
											"end": 2793,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2753,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 2753,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2753,
											"end": 2803,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 2753,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2803,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2803,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2743,
											"end": 2803,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2345,
											"end": 2809,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2345,
											"end": 2809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2345,
											"end": 2809,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2345,
											"end": 2809,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2345,
											"end": 2809,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2345,
											"end": 2809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2814,
											"end": 2994,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 2814,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2873,
											"end": 2879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2928,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2914,
											"end": 2923,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2905,
											"end": 2912,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 2924,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2897,
											"end": 2929,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2894,
											"end": 2946,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2894,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2894,
											"end": 2946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2942,
											"end": 2943,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2932,
											"end": 2944,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2894,
											"end": 2946,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2894,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2965,
											"end": 2988,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2965,
											"end": 2988,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2814,
											"end": 2994,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2814,
											"end": 2994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3395,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 2999,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3083,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3085,
											"end": 3091,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3138,
											"end": 3140,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3126,
											"end": 3135,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3117,
											"end": 3124,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3113,
											"end": 3136,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3109,
											"end": 3141,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3106,
											"end": 3158,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3106,
											"end": 3158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 3106,
											"end": 3158,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3154,
											"end": 3155,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3152,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3144,
											"end": 3156,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3106,
											"end": 3158,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 3106,
											"end": 3158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 3196,
											"end": 3205,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 3177,
											"end": 3206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3167,
											"end": 3206,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3167,
											"end": 3206,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3259,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3246,
											"end": 3255,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3242,
											"end": 3260,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3229,
											"end": 3261,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3284,
											"end": 3302,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3276,
											"end": 3282,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3273,
											"end": 3303,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3270,
											"end": 3320,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3270,
											"end": 3320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 3270,
											"end": 3320,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3317,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3313,
											"end": 3314,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3306,
											"end": 3318,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3270,
											"end": 3320,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 3270,
											"end": 3320,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 3381,
											"end": 3388,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3372,
											"end": 3378,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3361,
											"end": 3370,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3357,
											"end": 3379,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 3339,
											"end": 3389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3389,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 3339,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3389,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3329,
											"end": 3389,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3395,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3395,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3395,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3395,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3395,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2999,
											"end": 3395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3757,
											"end": 3941,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 3757,
											"end": 3941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3827,
											"end": 3833,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3880,
											"end": 3882,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3868,
											"end": 3877,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3859,
											"end": 3866,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3855,
											"end": 3878,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3851,
											"end": 3883,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3900,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 3848,
											"end": 3900,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 3897,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3893,
											"end": 3894,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3886,
											"end": 3898,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3848,
											"end": 3900,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 3848,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3919,
											"end": 3935,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3919,
											"end": 3935,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3757,
											"end": 3941,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3757,
											"end": 3941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4295,
											"end": 4422,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 4295,
											"end": 4422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4356,
											"end": 4366,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 4351,
											"end": 4354,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4347,
											"end": 4367,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4344,
											"end": 4345,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4337,
											"end": 4368,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4387,
											"end": 4391,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4384,
											"end": 4385,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4377,
											"end": 4392,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4411,
											"end": 4415,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4408,
											"end": 4409,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4416,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4427,
											"end": 4555,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 4427,
											"end": 4555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4503,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4503,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4503,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4526,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4512,
											"end": 4549,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4512,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 4512,
											"end": 4549,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4529,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 4529,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 4529,
											"end": 4547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4839,
											"end": 5007,
											"name": "tag",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 4839,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 4921,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 4921,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4912,
											"end": 4921,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4952,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4943,
											"end": 4952,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 4975,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 4975,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 4975,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 4976,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 4976,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 4940,
											"end": 4977,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4930,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 4930,
											"end": 5001,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4981,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 4981,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 4981,
											"end": 4999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5012,
											"end": 5229,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 5012,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5052,
											"end": 5053,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5078,
											"end": 5079,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5200,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 5068,
											"end": 5200,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5122,
											"end": 5132,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 5117,
											"end": 5120,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5113,
											"end": 5133,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5110,
											"end": 5111,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5103,
											"end": 5134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5161,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5147,
											"end": 5162,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5185,
											"end": 5189,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5182,
											"end": 5183,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5175,
											"end": 5190,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5200,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 5068,
											"end": 5200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5214,
											"end": 5223,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5214,
											"end": 5223,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5012,
											"end": 5229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5234,
											"end": 5361,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 5234,
											"end": 5361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5295,
											"end": 5305,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 5290,
											"end": 5293,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 5283,
											"end": 5284,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5276,
											"end": 5307,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5326,
											"end": 5330,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 5323,
											"end": 5324,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5316,
											"end": 5331,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5350,
											"end": 5354,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5347,
											"end": 5348,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5355,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6806,
											"end": 7083,
											"name": "tag",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 6806,
											"end": 7083,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6873,
											"end": 6879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6926,
											"end": 6928,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6914,
											"end": 6923,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6905,
											"end": 6912,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6901,
											"end": 6924,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6897,
											"end": 6929,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6894,
											"end": 6946,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6894,
											"end": 6946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 6894,
											"end": 6946,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6942,
											"end": 6943,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6939,
											"end": 6940,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6932,
											"end": 6944,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6894,
											"end": 6946,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 6894,
											"end": 6946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6974,
											"end": 6983,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 6984,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7027,
											"end": 7032,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7020,
											"end": 7033,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7013,
											"end": 7034,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7006,
											"end": 7011,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7003,
											"end": 7035,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6993,
											"end": 7053,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 6993,
											"end": 7053,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7049,
											"end": 7050,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7039,
											"end": 7051,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7088,
											"end": 7213,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 7088,
											"end": 7213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7153,
											"end": 7162,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7153,
											"end": 7162,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7153,
											"end": 7162,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7174,
											"end": 7184,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7174,
											"end": 7184,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7174,
											"end": 7184,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7171,
											"end": 7207,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7171,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 7171,
											"end": 7207,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7187,
											"end": 7205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 7187,
											"end": 7205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 7187,
											"end": 7205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7468,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 7218,
											"end": 7468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7303,
											"end": 7304,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7313,
											"end": 7426,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 7313,
											"end": 7426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7327,
											"end": 7333,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7324,
											"end": 7325,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7321,
											"end": 7334,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7313,
											"end": 7426,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7313,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 7313,
											"end": 7426,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7403,
											"end": 7414,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7403,
											"end": 7414,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7403,
											"end": 7414,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7397,
											"end": 7415,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7384,
											"end": 7395,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7384,
											"end": 7395,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7384,
											"end": 7395,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7377,
											"end": 7416,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7349,
											"end": 7351,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7342,
											"end": 7352,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7313,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 7313,
											"end": 7426,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7313,
											"end": 7426,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 7313,
											"end": 7426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7460,
											"end": 7461,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7442,
											"end": 7458,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7442,
											"end": 7458,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7435,
											"end": 7462,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7218,
											"end": 7468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7473,
											"end": 7762,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 7473,
											"end": 7762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7604,
											"end": 7607,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7642,
											"end": 7648,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7636,
											"end": 7649,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7658,
											"end": 7724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 7717,
											"end": 7723,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7712,
											"end": 7715,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7705,
											"end": 7709,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7697,
											"end": 7703,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7693,
											"end": 7710,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7658,
											"end": 7724,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 7658,
											"end": 7724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7658,
											"end": 7724,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 7658,
											"end": 7724,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7740,
											"end": 7756,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7740,
											"end": 7756,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7740,
											"end": 7756,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7740,
											"end": 7756,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7740,
											"end": 7756,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7473,
											"end": 7762,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7473,
											"end": 7762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Liberswap/swaping.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Owner()": "b4a99a4e",
							"WhiteList(address)": "6bc20157",
							"currentHoldings()": "9c2c67c9",
							"holdingOfTokens(address)": "a4329677",
							"holdingOf_DAI(address)": "a7f696cf",
							"holdingOf_USDC(address)": "70181206",
							"holdingOf_USDM(address)": "fca0a3d2",
							"holdingOf_USDT(address)": "a3150978",
							"overColleteralFeeAmount()": "2dd91a4c",
							"owner()": "8da5cb5b",
							"removeFromWhiteList(address)": "01bf6648",
							"renounceOwnership()": "715018a6",
							"substrateSwapTokens(address,uint256)": "33fa13a4",
							"swapTokens(address,uint256,string)": "cb8ff545",
							"transferOwnership(address)": "f2fde38b",
							"userAmount(address)": "e1ad418e",
							"userTokenAmount(address,address)": "1f1a675d",
							"userTotalSwapAmount(address,string)": "fd03fe90",
							"whilistedAddress(uint256)": "f09f0aac",
							"whiteList(address)": "372c12b1",
							"withdrawBalanceTokens(address)": "cdb43478"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Hold_USDM_Token\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"substrateSwapToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"swapToken\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"WhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentHoldings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ethToken\",\"type\":\"address\"}],\"name\":\"holdingOfTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"holdings\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"holdingOf_DAI\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"holdings\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"holdingOf_USDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"holdings\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"holdingOf_USDM\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"holdings\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"holdingOf_USDT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"holdings\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"overColleteralFeeAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeFromWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ethToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"substrateSwapTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ethToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"substrateAddress\",\"type\":\"string\"}],\"name\":\"swapTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"UserAddress\",\"type\":\"address\"}],\"name\":\"userAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"UserAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"TokenAddress\",\"type\":\"address\"}],\"name\":\"userTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"UserAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"userTotalSwapAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"Amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"whilistedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ethToken\",\"type\":\"address\"}],\"name\":\"withdrawBalanceTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"LiberSwap Team\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"WhiteList(address)\":{\"details\":\"Adds an address to the whitelist. Only the owner of the contract can call this function. Emits an event once an address is successfully whitelisted. \",\"params\":{\"_address\":\"The address to be added to the whitelist.\"}},\"holdingOfTokens(address)\":{\"details\":\"Returns the balance of a specific ERC20 token held by this contract.\",\"params\":{\"_ethToken\":\"The address of the ERC20 token.\"},\"returns\":{\"holdings\":\"The amount of the specified tokens held by this contract.\"}},\"holdingOf_DAI(address)\":{\"details\":\"Returns the DAI token balance of this contract.\",\"returns\":{\"holdings\":\"The amount of DAI tokens held by this contract.\"}},\"holdingOf_USDC(address)\":{\"details\":\"Returns the USDC token balance of this contract.\",\"returns\":{\"holdings\":\"The amount of USDC tokens held by this contract.\"}},\"holdingOf_USDM(address)\":{\"details\":\"Returns the USDM token balance of this contract.\",\"returns\":{\"holdings\":\"The amount of USDM tokens held by this contract.\"}},\"holdingOf_USDT(address)\":{\"details\":\"Returns the USDT token balance of this contract.\",\"returns\":{\"holdings\":\"The amount of USDT tokens held by this contract.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeFromWhiteList(address)\":{\"details\":\"Removes an address from the whitelist. Only the owner can call this function.\",\"params\":{\"_address\":\"The address to be removed from the whitelist.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"substrateSwapTokens(address,uint256)\":{\"details\":\"Allows users to swap tokens back from the contract or distribute a fee among whitelisted addresses before sending back the tokens. If the token being swapped back is USDM, it is directly transferred to the sender. For other tokens, a 0.3% fee is distributed among all whitelisted addresses before sending the remaining tokens back to the sender. \",\"params\":{\"_amount\":\"The amount of the token to be swapped back.\",\"_ethToken\":\"The address of the ERC20 token to be swapped back.\"}},\"swapTokens(address,uint256,string)\":{\"details\":\"Allows users to swap tokens by transferring them to the contract or distribute a fee among whitelisted addresses. If the token being swapped is USDM, it is simply collected by the contract. For other tokens, a 0.3% fee is distributed among all whitelisted addresses, and the rest is collected by the contract. \",\"params\":{\"_amount\":\"The amount of the token to be swapped.\",\"_ethToken\":\"The address of the ERC20 token to be swapped.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdrawBalanceTokens(address)\":{\"params\":{\"_ethToken\":\"The address of the ERC20 token to be swapped back. Only owner can withdaraw the Overcolleteral fee.\"}}},\"title\":\"TokenSwap contract for swapping tokens, inheriting from Ownable for access control\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contarct is based on swaping the usd tokens to substrate and vice versa  \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Liberswap/swaping.sol\":\"TokenSwap\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"contracts/Liberswap/swaping.sol\":{\"keccak256\":\"0x96e8d5597726a3bb1ac985c05465177fbfaa7cbc60f92247a8b2868153805570\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://94939a3be2d4d093747548460eed562d96820680af935ba8955126417e60cfaf\",\"dweb:/ipfs/QmUNffivqYQiaXFKrVuJJ8n3ZZm8FazS9h4gxUKn9DFmQa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contracts/Liberswap/swaping.sol:TokenSwap",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 840,
								"contract": "contracts/Liberswap/swaping.sol:TokenSwap",
								"label": "Owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 874,
								"contract": "contracts/Liberswap/swaping.sol:TokenSwap",
								"label": "whiteList",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 877,
								"contract": "contracts/Liberswap/swaping.sol:TokenSwap",
								"label": "whilistedAddress",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 883,
								"contract": "contracts/Liberswap/swaping.sol:TokenSwap",
								"label": "userTokenAmount",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 887,
								"contract": "contracts/Liberswap/swaping.sol:TokenSwap",
								"label": "userAmount",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 893,
								"contract": "contracts/Liberswap/swaping.sol:TokenSwap",
								"label": "userTotalSwapAmount",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))"
							},
							{
								"astId": 895,
								"contract": "contracts/Liberswap/swaping.sol:TokenSwap",
								"label": "currentHoldings",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 897,
								"contract": "contracts/Liberswap/swaping.sol:TokenSwap",
								"label": "overColleteralFeeAmount",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(string => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_string_memory_ptr,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_string_memory_ptr,t_uint256)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contarct is based on swaping the usd tokens to substrate and vice versa  ",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							826
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 827,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 826,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 826,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								826
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 225,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 225,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 225,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 225,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 225,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 225,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							261
						]
					},
					"id": 262,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 228,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:2",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 261,
							"linearizedBaseContracts": [
								261
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:2",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3022:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3045:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3070:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3093:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3119:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 238,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3136:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 240,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3155:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 242,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:2"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:2"
									},
									"scope": 261,
									"src": "2997:183:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:2",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 254,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "3501:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:2"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "3539:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:2"
									},
									"scope": 261,
									"src": "3485:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:2",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 260,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:2"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 260,
												"src": "3791:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 257,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:2"
									},
									"scope": 261,
									"src": "3740:60:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 262,
							"src": "2113:1689:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							804
						],
						"IERC20": [
							225
						],
						"IERC20Permit": [
							261
						],
						"SafeERC20": [
							551
						]
					},
					"id": 552,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 263,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 265,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 226,
							"src": "141:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 264,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 225,
										"src": "149:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 267,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 262,
							"src": "179:60:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 266,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 261,
										"src": "187:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 269,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 552,
							"sourceUnit": 805,
							"src": "240:51:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 268,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 804,
										"src": "248:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 551,
							"linearizedBaseContracts": [
								551
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 273,
									"libraryName": {
										"id": 271,
										"name": "Address",
										"nameLocations": [
											"781:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 804,
										"src": "781:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:3",
									"typeName": {
										"id": 272,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:3",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 278,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "907:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:3"
									},
									"src": "876:46:3"
								},
								{
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:3",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 287,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1043:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1060:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1086:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:3"
									},
									"src": "1004:109:3"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "1375:88:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 299,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "1405:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 302,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 291,
																		"src": "1427:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:3",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 192,
																	"src": "1427:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 304,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 293,
																			"src": "1444:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 305,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 295,
																			"src": "1448:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 306,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 300,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:3",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 298,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1385:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:3"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:3",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1325:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 290,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 289,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "1325:6:3"
													},
													"referencedDeclaration": 225,
													"src": "1325:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1339:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "1351:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:3"
									},
									"scope": 551,
									"src": "1303:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "1792:98:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 325,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "1822:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 328,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "1844:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:3",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 224,
																	"src": "1844:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 330,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 317,
																			"src": "1865:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 331,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 319,
																			"src": "1871:2:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 332,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 321,
																			"src": "1875:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 333,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 326,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:3",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 324,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "1802:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:3"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:3",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1728:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 314,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 313,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "1728:6:3"
													},
													"referencedDeclaration": 225,
													"src": "1728:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1742:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1756:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1768:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:3"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:3"
									},
									"scope": 551,
									"src": "1702:188:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 368,
										"nodeType": "Block",
										"src": "2167:139:3",
										"statements": [
											{
												"assignments": [
													350
												],
												"declarations": [
													{
														"constant": false,
														"id": 350,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 368,
														"src": "2177:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 349,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 359,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 355,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$551",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$551",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 353,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 357,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2231:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 351,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2200:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:3",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 202,
														"src": "2200:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 361,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "2262:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 362,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "2269:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 363,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 350,
																"src": "2278:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 364,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "2293:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 360,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "2249:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:3"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:3",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2112:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 340,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "2112:6:3"
													},
													"referencedDeclaration": 225,
													"src": "2112:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2126:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2143:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:3"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:3"
									},
									"scope": 551,
									"src": "2081:225:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "2607:370:3",
										"statements": [
											{
												"id": 410,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:3",
												"statements": [
													{
														"assignments": [
															381
														],
														"declarations": [
															{
																"constant": false,
																"id": 381,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:3",
																"nodeType": "VariableDeclaration",
																"scope": 410,
																"src": "2641:24:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 380,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 390,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 386,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$551",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$551",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 385,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 384,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 388,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "2699:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 382,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "2668:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:3",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 202,
																"src": "2668:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:3"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 391,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "2725:16:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 392,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "2744:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 401,
														"nodeType": "IfStatement",
														"src": "2721:160:3",
														"trueBody": {
															"id": 400,
															"nodeType": "Block",
															"src": "2763:118:3",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 395,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 375,
																				"src": "2821:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 396,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 381,
																				"src": "2830:16:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 397,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 377,
																				"src": "2848:17:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 394,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "2788:32:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 399,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:3"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 403,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "2907:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 404,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "2914:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 405,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 381,
																		"src": "2923:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 406,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 377,
																		"src": "2942:17:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 402,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 459,
																"src": "2894:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 409,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:3"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:3",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2540:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 372,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 371,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "2540:6:3"
													},
													"referencedDeclaration": 225,
													"src": "2540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2554:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2571:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:3"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:3"
									},
									"scope": 551,
									"src": "2509:468:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "3373:303:3",
										"statements": [
											{
												"assignments": [
													424
												],
												"declarations": [
													{
														"constant": false,
														"id": 424,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 458,
														"src": "3383:25:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 423,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 433,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 427,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "3426:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:3",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 212,
															"src": "3426:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 429,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "3442:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 430,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 420,
																	"src": "3451:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 431,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 425,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:3",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:3"
											},
											{
												"condition": {
													"id": 438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:3",
													"subExpression": {
														"arguments": [
															{
																"id": 435,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "3498:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 436,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "3505:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 434,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "3474:23:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 457,
												"nodeType": "IfStatement",
												"src": "3469:201:3",
												"trueBody": {
													"id": 456,
													"nodeType": "Block",
													"src": "3520:150:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 440,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "3554:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 443,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 416,
																					"src": "3576:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$225",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 444,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:3",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 212,
																				"src": "3576:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 445,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 418,
																						"src": "3592:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 446,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 447,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 441,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:3",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 439,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "3534:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 450,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 452,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 416,
																		"src": "3639:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 453,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 424,
																		"src": "3646:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 451,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "3619:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 455,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:3",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3318:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 415,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 414,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "3318:6:3"
													},
													"referencedDeclaration": 225,
													"src": "3318:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3332:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3349:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:3"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:3"
									},
									"scope": 551,
									"src": "3296:380:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "4129:559:3",
										"statements": [
											{
												"assignments": [
													469
												],
												"declarations": [
													{
														"constant": false,
														"id": 469,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 500,
														"src": "4478:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 468,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 477,
												"initialValue": {
													"arguments": [
														{
															"id": 475,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "4532:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 472,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 463,
																	"src": "4512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 470,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:3",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 625,
														"src": "4504:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 478,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 469,
																"src": "4551:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:3",
														"subExpression": {
															"arguments": [
																{
																	"id": 484,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 469,
																	"src": "4589:10:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 486,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 485,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:3",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 487,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 482,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:3",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 499,
												"nodeType": "IfStatement",
												"src": "4547:135:3",
												"trueBody": {
													"id": 498,
													"nodeType": "Block",
													"src": "4610:72:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 494,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 463,
																				"src": "4664:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$225",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$225",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 492,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 491,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 278,
																	"src": "4631:24:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 497,
															"nodeType": "RevertStatement",
															"src": "4624:47:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4088:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 462,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 461,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "4088:6:3"
													},
													"referencedDeclaration": 225,
													"src": "4088:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4102:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 464,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:3"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:3"
									},
									"scope": 551,
									"src": "4059:629:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "5278:489:3",
										"statements": [
											{
												"assignments": [
													513,
													515
												],
												"declarations": [
													{
														"constant": false,
														"id": 513,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "5574:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 512,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 515,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "5588:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 514,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 523,
												"initialValue": {
													"arguments": [
														{
															"id": 521,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 507,
															"src": "5635:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 518,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "5623:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:3",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 524,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "5657:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 536,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 528,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 525,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 515,
																				"src": "5669:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:3",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 531,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 515,
																				"src": "5706:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 533,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 532,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 534,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 529,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:3",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 537,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 541,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 505,
																			"src": "5738:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$225",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$225",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 539,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:3",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 511,
												"id": 548,
												"nodeType": "Return",
												"src": "5650:110:3"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5222:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 504,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 503,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "5222:6:3"
													},
													"referencedDeclaration": 225,
													"src": "5222:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5236:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 506,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:3"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "5272:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 509,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:3"
									},
									"scope": 551,
									"src": "5189:578:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 552,
							"src": "751:5018:3",
							"usedErrors": [
								278,
								287
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							804
						]
					},
					"id": 805,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 553,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 554,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 804,
							"linearizedBaseContracts": [
								804
							],
							"name": "Address",
							"nameLocation": "203:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:4",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 559,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "349:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:4"
									},
									"src": "316:50:4"
								},
								{
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:4",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 564,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "475:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:4"
									},
									"src": "452:39:4"
								},
								{
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:4",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 567,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:4"
									},
									"src": "591:24:4"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "1602:260:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 577,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																],
																"id": 576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 575,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:4",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 580,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "1640:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 590,
												"nodeType": "IfStatement",
												"src": "1612:109:4",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "1648:73:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 585,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			],
																			"id": 584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 583,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 582,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "1669:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 588,
															"nodeType": "RevertStatement",
															"src": "1662:48:4"
														}
													]
												}
											},
											{
												"assignments": [
													592,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 592,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 607,
														"src": "1732:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 591,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 599,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 593,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "1750:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 595,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "1772:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:4"
											},
											{
												"condition": {
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:4",
													"subExpression": {
														"id": 600,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "1798:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 606,
												"nodeType": "IfStatement",
												"src": "1793:63:4",
												"trueBody": {
													"id": 605,
													"nodeType": "Block",
													"src": "1807:49:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 602,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "1828:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 604,
															"nodeType": "RevertStatement",
															"src": "1821:24:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1550:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "1577:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:4"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:4"
									},
									"scope": 804,
									"src": "1531:331:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 624,
										"nodeType": "Block",
										"src": "2794:62:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 619,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "2833:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "2841:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 618,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "2811:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 617,
												"id": 623,
												"nodeType": "Return",
												"src": "2804:45:4"
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2727:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2743:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 612,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:4"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "2780:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 615,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:4"
									},
									"scope": 804,
									"src": "2705:151:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "3293:279:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 639,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$804",
																		"typeString": "library Address"
																	}
																],
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 637,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:4",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 642,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 632,
														"src": "3331:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 652,
												"nodeType": "IfStatement",
												"src": "3303:108:4",
												"trueBody": {
													"id": 651,
													"nodeType": "Block",
													"src": "3338:73:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 647,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$804",
																					"typeString": "library Address"
																				}
																			],
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 645,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 644,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "3359:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 650,
															"nodeType": "RevertStatement",
															"src": "3352:48:4"
														}
													]
												}
											},
											{
												"assignments": [
													654,
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 654,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 670,
														"src": "3421:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 653,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 670,
														"src": "3435:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 655,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 663,
												"initialValue": {
													"arguments": [
														{
															"id": 661,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "3488:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 657,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "3462:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 659,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "3481:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 665,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "3537:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 666,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "3545:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 667,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "3554:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 664,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "3510:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 636,
												"id": 669,
												"nodeType": "Return",
												"src": "3503:62:4"
											}
										]
									},
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3211:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3227:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 629,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3246:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:4"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "3279:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:4"
									},
									"scope": 804,
									"src": "3180:392:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "3811:154:4",
										"statements": [
											{
												"assignments": [
													682,
													684
												],
												"declarations": [
													{
														"constant": false,
														"id": 682,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "3822:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 681,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 684,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "3836:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 683,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 689,
												"initialValue": {
													"arguments": [
														{
															"id": 687,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "3881:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 685,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "3863:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 691,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "3930:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "3938:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 693,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "3947:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 690,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "3903:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 680,
												"id": 695,
												"nodeType": "Return",
												"src": "3896:62:4"
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3739:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3755:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 675,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:4"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3797:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 678,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:4"
									},
									"scope": 804,
									"src": "3711:254:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "4203:156:4",
										"statements": [
											{
												"assignments": [
													708,
													710
												],
												"declarations": [
													{
														"constant": false,
														"id": 708,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "4214:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 707,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 710,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "4228:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 709,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 715,
												"initialValue": {
													"arguments": [
														{
															"id": 713,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "4275:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 711,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "4255:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 717,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "4324:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "4332:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 719,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "4341:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 716,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "4297:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 706,
												"id": 721,
												"nodeType": "Return",
												"src": "4290:62:4"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4136:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4152:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:4"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "4189:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 704,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:4"
									},
									"scope": 804,
									"src": "4106:253:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "4783:424:4",
										"statements": [
											{
												"condition": {
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:4",
													"subExpression": {
														"id": 735,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "4798:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 760,
													"nodeType": "Block",
													"src": "4857:344:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 742,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 730,
																			"src": "5045:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 746,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 726,
																				"src": "5071:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:4",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:4",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 757,
															"nodeType": "IfStatement",
															"src": "5041:119:4",
															"trueBody": {
																"id": 756,
																"nodeType": "Block",
																"src": "5096:64:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 753,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 726,
																					"src": "5138:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 752,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 564,
																				"src": "5121:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 755,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 758,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 730,
																"src": "5180:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 734,
															"id": 759,
															"nodeType": "Return",
															"src": "5173:17:4"
														}
													]
												},
												"id": 761,
												"nodeType": "IfStatement",
												"src": "4793:408:4",
												"trueBody": {
													"id": 741,
													"nodeType": "Block",
													"src": "4807:44:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 738,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 730,
																		"src": "4829:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 737,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "4821:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 740,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4670:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4694:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 727,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4716:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 729,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:4"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "4769:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 732,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:4"
									},
									"scope": 804,
									"src": "4625:582:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "5509:122:4",
										"statements": [
											{
												"condition": {
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:4",
													"subExpression": {
														"id": 773,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "5524:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 782,
													"nodeType": "Block",
													"src": "5583:42:4",
													"statements": [
														{
															"expression": {
																"id": 780,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "5604:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 772,
															"id": 781,
															"nodeType": "Return",
															"src": "5597:17:4"
														}
													]
												},
												"id": 783,
												"nodeType": "IfStatement",
												"src": "5519:106:4",
												"trueBody": {
													"id": 779,
													"nodeType": "Block",
													"src": "5533:44:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 776,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 768,
																		"src": "5555:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 775,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "5547:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 778,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:4",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5433:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 765,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5447:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 767,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:4"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "5495:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 770,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:4"
									},
									"scope": 804,
									"src": "5407:224:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "5798:461:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 791,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "5874:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "6204:49:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 797,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "6225:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 799,
															"nodeType": "RevertStatement",
															"src": "6218:24:4"
														}
													]
												},
												"id": 801,
												"nodeType": "IfStatement",
												"src": "5870:383:4",
												"trueBody": {
													"id": 796,
													"nodeType": "Block",
													"src": "5897:301:4",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:4",
																"nodeType": "YulBlock",
																"src": "6055:133:4",
																"statements": [
																	{
																		"nativeSrc": "6073:40:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:4",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:4"
																			},
																			"nativeSrc": "6096:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:4",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:4",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:4",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:4"
																					},
																					"nativeSrc": "6137:19:4",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:4",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:4"
																			},
																			"nativeSrc": "6130:44:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:4"
																		},
																		"nativeSrc": "6130:44:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "shanghai",
															"externalReferences": [
																{
																	"declaration": 788,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 788,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:4",
																	"valueSize": 1
																}
															],
															"id": 795,
															"nodeType": "InlineAssembly",
															"src": "6046:142:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:4",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "5760:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 787,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:4"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:4"
									},
									"scope": 804,
									"src": "5743:516:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 805,
							"src": "195:6066:4",
							"usedErrors": [
								559,
								564,
								567
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							826
						]
					},
					"id": 827,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 806,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 807,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 826,
							"linearizedBaseContracts": [
								826
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 812,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 811,
												"id": 814,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 826,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 821,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 820,
												"id": 823,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 818,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 826,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 827,
							"src": "624:235:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:759:5"
				},
				"id": 5
			},
			"contracts/Liberswap/swaping.sol": {
				"ast": {
					"absolutePath": "contracts/Liberswap/swaping.sol",
					"exportedSymbols": {
						"Address": [
							804
						],
						"Context": [
							826
						],
						"IERC20": [
							225
						],
						"IERC20Permit": [
							261
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							551
						],
						"TokenSwap": [
							1415
						]
					},
					"id": 1416,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 828,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 829,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1416,
							"sourceUnit": 226,
							"src": "131:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 830,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1416,
							"sourceUnit": 552,
							"src": "188:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 831,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1416,
							"sourceUnit": 148,
							"src": "254:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 833,
										"name": "Ownable",
										"nameLocations": [
											"536:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "536:7:6"
									},
									"id": 834,
									"nodeType": "InheritanceSpecifier",
									"src": "536:7:6"
								}
							],
							"canonicalName": "TokenSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 832,
								"nodeType": "StructuredDocumentation",
								"src": "308:206:6",
								"text": "@title TokenSwap contract for swapping tokens, inheriting from Ownable for access control\n @author LiberSwap Team\n @notice Contarct is based on swaping the usd tokens to substrate and vice versa  "
							},
							"fullyImplemented": true,
							"id": 1415,
							"linearizedBaseContracts": [
								1415,
								147,
								826
							],
							"name": "TokenSwap",
							"nameLocation": "523:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 838,
									"libraryName": {
										"id": 835,
										"name": "SafeERC20",
										"nameLocations": [
											"556:9:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 551,
										"src": "556:9:6"
									},
									"nodeType": "UsingForDirective",
									"src": "550:27:6",
									"typeName": {
										"id": 837,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 836,
											"name": "IERC20",
											"nameLocations": [
												"570:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "570:6:6"
										},
										"referencedDeclaration": 225,
										"src": "570:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "b4a99a4e",
									"id": 840,
									"mutability": "mutable",
									"name": "Owner",
									"nameLocation": "673:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "658:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 839,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "658:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "cc87ab2abfe87b272af9b77691e40b3d9186a0431f3d41a8e06d39614f460722",
									"id": 846,
									"name": "swapToken",
									"nameLocation": "823:9:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "841:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "833:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "854:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "849:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "849:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "832:29:6"
									},
									"src": "817:45:6"
								},
								{
									"anonymous": false,
									"eventSelector": "cf53ae9736a409c662fa8b1187549847acd41beb1b89fd026293fc2e19adaca7",
									"id": 852,
									"name": "substrateSwapToken",
									"nameLocation": "873:18:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "900:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "892:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "913:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "908:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "908:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:29:6"
									},
									"src": "867:54:6"
								},
								{
									"anonymous": false,
									"eventSelector": "e90fdaf1ebe9ad8ab1edd544a94c7381925e8933ec126ac9066cdcc01473cd82",
									"id": 858,
									"name": "Hold_USDM_Token",
									"nameLocation": "932:15:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "956:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "948:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "948:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "969:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "964:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "964:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "947:29:6"
									},
									"src": "926:51:6"
								},
								{
									"constant": true,
									"id": 861,
									"mutability": "constant",
									"name": "usdt",
									"nameLocation": "1063:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "1046:66:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 859,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1046:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307861353031346541363237416332324136336632426633623436653236643430386537326635356331",
										"id": 860,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1070:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xa5014eA627Ac22A63f2Bf3b46e26d408e72f55c1"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 864,
									"mutability": "constant",
									"name": "usdc",
									"nameLocation": "1135:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "1118:66:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 862,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1118:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307839393531333432443939343030313436383530364446383846373141353832383637423530646434",
										"id": 863,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1142:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x9951342D994001468506DF88F71A582867B50dd4"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 867,
									"mutability": "constant",
									"name": "dai",
									"nameLocation": "1207:3:6",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "1190:65:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 865,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1190:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307837374631343663613239343332393443433533653663334235393830423537326339363161653233",
										"id": 866,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1213:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x77F146ca2943294CC53e6c3B5980B572c961ae23"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 870,
									"mutability": "constant",
									"name": "usdm",
									"nameLocation": "1278:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "1261:66:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 868,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1261:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307834623361353134446437313835303237376242613832343931663236644143444630383963623638",
										"id": 869,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1285:42:6",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x4b3a514Dd71850277bBa82491f26dACDF089cb68"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "372c12b1",
									"id": 874,
									"mutability": "mutable",
									"name": "whiteList",
									"nameLocation": "1412:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "1380:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 873,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 871,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1388:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1380:24:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 872,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1399:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f09f0aac",
									"id": 877,
									"mutability": "mutable",
									"name": "whilistedAddress",
									"nameLocation": "1506:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "1489:33:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 875,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1489:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 876,
										"nodeType": "ArrayTypeName",
										"src": "1489:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1f1a675d",
									"id": 883,
									"mutability": "mutable",
									"name": "userTokenAmount",
									"nameLocation": "1670:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "1591:94:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 882,
										"keyName": "UserAddress",
										"keyNameLocation": "1608:11:6",
										"keyType": {
											"id": 878,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1600:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1591:71:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 881,
											"keyName": "TokenAddress",
											"keyNameLocation": "1639:12:6",
											"keyType": {
												"id": 879,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1631:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1622:39:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 880,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1656:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e1ad418e",
									"id": 887,
									"mutability": "mutable",
									"name": "userAmount",
									"nameLocation": "1736:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "1691:55:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 886,
										"keyName": "UserAddress",
										"keyNameLocation": "1708:11:6",
										"keyType": {
											"id": 884,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1700:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1691:37:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 885,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1723:4:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fd03fe90",
									"id": 893,
									"mutability": "mutable",
									"name": "userTotalSwapAmount",
									"nameLocation": "1904:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "1832:91:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(string => uint256))"
									},
									"typeName": {
										"id": 892,
										"keyName": "UserAddress",
										"keyNameLocation": "1849:11:6",
										"keyType": {
											"id": 888,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1841:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1832:64:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(string => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 891,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 889,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1873:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"nodeType": "Mapping",
											"src": "1865:30:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
												"typeString": "mapping(string => uint256)"
											},
											"valueName": "Amount",
											"valueNameLocation": "1888:6:6",
											"valueType": {
												"id": 890,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1883:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9c2c67c9",
									"id": 895,
									"mutability": "mutable",
									"name": "currentHoldings",
									"nameLocation": "2000:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "1988:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 894,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1988:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2dd91a4c",
									"id": 897,
									"mutability": "mutable",
									"name": "overColleteralFeeAmount",
									"nameLocation": "2091:23:6",
									"nodeType": "VariableDeclaration",
									"scope": 1415,
									"src": "2079:35:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 896,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "2079:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 909,
										"nodeType": "Block",
										"src": "2237:37:6",
										"statements": [
											{
												"expression": {
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 905,
														"name": "Owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "2247:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 906,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "2255:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2247:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "2247:20:6"
											}
										]
									},
									"id": 910,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 902,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 899,
													"src": "2223:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 903,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 901,
												"name": "Ownable",
												"nameLocations": [
													"2215:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2215:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2215:21:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2201:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 910,
												"src": "2193:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2193:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2192:22:6"
									},
									"returnParameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2237:0:6"
									},
									"scope": 1415,
									"src": "2181:93:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 938,
										"nodeType": "Block",
										"src": "2597:162:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2615:20:6",
															"subExpression": {
																"baseExpression": {
																	"id": 919,
																	"name": "whiteList",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "2616:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 921,
																"indexExpression": {
																	"id": 920,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "2626:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2616:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973204164647265737320697320616c72656164792057686974654c697374656421",
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2636:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_69cc1d0091f450c9f1b40951e04a8e02ae8a28f18820a3d492d53b3c2bca82f7",
																"typeString": "literal_string \"This Address is already WhiteListed!\""
															},
															"value": "This Address is already WhiteListed!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_69cc1d0091f450c9f1b40951e04a8e02ae8a28f18820a3d492d53b3c2bca82f7",
																"typeString": "literal_string \"This Address is already WhiteListed!\""
															}
														],
														"id": 918,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2607:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2607:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 925,
												"nodeType": "ExpressionStatement",
												"src": "2607:68:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 929,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "2707:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 926,
															"name": "whilistedAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "2685:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2702:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2685:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2685:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 931,
												"nodeType": "ExpressionStatement",
												"src": "2685:31:6"
											},
											{
												"expression": {
													"id": 936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 932,
															"name": "whiteList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "2726:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 934,
														"indexExpression": {
															"id": 933,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "2736:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2726:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 935,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2748:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2726:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 937,
												"nodeType": "ExpressionStatement",
												"src": "2726:26:6"
											}
										]
									},
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "2280:259:6",
										"text": " @dev Adds an address to the whitelist.\n Only the owner of the contract can call this function.\n Emits an event once an address is successfully whitelisted.\n \n @param _address The address to be added to the whitelist."
									},
									"functionSelector": "6bc20157",
									"id": 939,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 916,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 915,
												"name": "onlyOwner",
												"nameLocations": [
													"2588:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2588:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2588:9:6"
										}
									],
									"name": "WhiteList",
									"nameLocation": "2553:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "2571:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "2563:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2563:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2562:18:6"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2597:0:6"
									},
									"scope": 1415,
									"src": "2544:215:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "3350:1480:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 954,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3396:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3400:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3396:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 958,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3416:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenSwap_$1415",
																					"typeString": "contract TokenSwap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenSwap_$1415",
																					"typeString": "contract TokenSwap"
																				}
																			],
																			"id": 957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3408:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 956,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3408:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3408:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 951,
																				"name": "_ethToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 942,
																				"src": "3375:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 950,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 225,
																			"src": "3368:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3368:17:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3386:9:6",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 202,
																	"src": "3368:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3368:54:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 961,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "3426:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3368:65:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c6c6f77616e6365206e6f7420736574",
															"id": 963,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3435:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b7f5bbf01babd612ff41adb253311ab3eccd8d56664e3b6ae54fa2e62b1bbfb0",
																"typeString": "literal_string \"Allowance not set\""
															},
															"value": "Allowance not set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b7f5bbf01babd612ff41adb253311ab3eccd8d56664e3b6ae54fa2e62b1bbfb0",
																"typeString": "literal_string \"Allowance not set\""
															}
														],
														"id": 949,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3360:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3360:95:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 965,
												"nodeType": "ExpressionStatement",
												"src": "3360:95:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 971,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3501:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3505:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3501:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 968,
																				"name": "_ethToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 942,
																				"src": "3480:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 967,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 225,
																			"src": "3473:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3473:17:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3491:9:6",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 182,
																	"src": "3473:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3473:39:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 974,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 944,
																"src": "3516:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3473:50:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3525:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 966,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3465:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3465:83:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "3465:83:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 979,
														"name": "_ethToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "3561:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 980,
														"name": "usdm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "3574:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3561:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1140,
													"nodeType": "Block",
													"src": "3958:858:6",
													"statements": [
														{
															"expression": {
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1033,
																	"name": "overColleteralFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 897,
																	"src": "3972:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1036,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1034,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 944,
																					"src": "3999:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "33",
																					"id": 1035,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4007:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_3_by_1",
																						"typeString": "int_const 3"
																					},
																					"value": "3"
																				},
																				"src": "3999:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1037,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3998:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31303030",
																		"id": 1038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4010:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000_by_1",
																			"typeString": "int_const 1000"
																		},
																		"value": "1000"
																	},
																	"src": "3998:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3972:42:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1041,
															"nodeType": "ExpressionStatement",
															"src": "3972:42:6"
														},
														{
															"assignments": [
																1043
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1043,
																	"mutability": "mutable",
																	"name": "eachWhilitedAddressFee",
																	"nameLocation": "4033:22:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1140,
																	"src": "4028:27:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1042,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "4028:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1048,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1047,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1044,
																	"name": "overColleteralFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 897,
																	"src": "4058:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"expression": {
																		"id": 1045,
																		"name": "whilistedAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "4082:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1046,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4099:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "4082:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4058:47:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4028:77:6"
														},
														{
															"body": {
																"id": 1072,
																"nodeType": "Block",
																"src": "4179:120:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1064,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "4228:3:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1065,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4232:6:6",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "4228:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"baseExpression": {
																						"id": 1066,
																						"name": "whilistedAddress",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 877,
																						"src": "4240:16:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_storage",
																							"typeString": "address[] storage ref"
																						}
																					},
																					"id": 1068,
																					"indexExpression": {
																						"id": 1067,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1050,
																						"src": "4257:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4240:19:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1069,
																					"name": "eachWhilitedAddressFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1043,
																					"src": "4261:22:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1061,
																							"name": "_ethToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 942,
																							"src": "4204:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1060,
																						"name": "IERC20",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 225,
																						"src": "4197:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																							"typeString": "type(contract IERC20)"
																						}
																					},
																					"id": 1062,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4197:17:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$225",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1063,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4215:12:6",
																				"memberName": "transferFrom",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 224,
																				"src": "4197:30:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4197:87:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1071,
																		"nodeType": "ExpressionStatement",
																		"src": "4197:87:6"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1053,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1050,
																	"src": "4134:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1054,
																		"name": "whilistedAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "4136:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4153:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "4136:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4134:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1073,
															"initializationExpression": {
																"assignments": [
																	1050
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1050,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "4129:1:6",
																		"nodeType": "VariableDeclaration",
																		"scope": 1073,
																		"src": "4124:6:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1049,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "4124:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1052,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1051,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4131:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "4124:8:6"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 1058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "4161:3:6",
																	"subExpression": {
																		"id": 1057,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1050,
																		"src": "4161:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1059,
																"nodeType": "ExpressionStatement",
																"src": "4161:3:6"
															},
															"nodeType": "ForStatement",
															"src": "4119:180:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1078,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4343:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4347:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4343:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1082,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4363:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenSwap_$1415",
																					"typeString": "contract TokenSwap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenSwap_$1415",
																					"typeString": "contract TokenSwap"
																				}
																			],
																			"id": 1081,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4355:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1080,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4355:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4355:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1086,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1084,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 944,
																					"src": "4371:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1085,
																					"name": "overColleteralFeeAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "4379:23:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4371:31:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1087,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4370:33:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1075,
																				"name": "_ethToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 942,
																				"src": "4319:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1074,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 225,
																			"src": "4312:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4312:17:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1077,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4330:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 224,
																	"src": "4312:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4312:92:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1089,
															"nodeType": "ExpressionStatement",
															"src": "4312:92:6"
														},
														{
															"expression": {
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1090,
																	"name": "currentHoldings",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 895,
																	"src": "4418:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1093,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1091,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "4438:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1092,
																				"name": "overColleteralFeeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 897,
																				"src": "4446:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4438:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1094,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4437:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4418:52:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1096,
															"nodeType": "ExpressionStatement",
															"src": "4418:52:6"
														},
														{
															"expression": {
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1097,
																		"name": "userAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 887,
																		"src": "4484:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1100,
																	"indexExpression": {
																		"expression": {
																			"id": 1098,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4495:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4499:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4495:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4484:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1103,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1101,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "4510:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1102,
																				"name": "overColleteralFeeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 897,
																				"src": "4518:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4510:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1104,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4509:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4484:58:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1106,
															"nodeType": "ExpressionStatement",
															"src": "4484:58:6"
														},
														{
															"expression": {
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1107,
																			"name": "userTotalSwapAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 893,
																			"src": "4556:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(string memory => uint256))"
																			}
																		},
																		"id": 1111,
																		"indexExpression": {
																			"expression": {
																				"id": 1108,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4576:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4580:6:6",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4576:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4556:31:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																			"typeString": "mapping(string memory => uint256)"
																		}
																	},
																	"id": 1112,
																	"indexExpression": {
																		"id": 1110,
																		"name": "substrateAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 946,
																		"src": "4588:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4556:49:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1113,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "4610:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1114,
																				"name": "overColleteralFeeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 897,
																				"src": "4618:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4610:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1116,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4609:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4556:86:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1118,
															"nodeType": "ExpressionStatement",
															"src": "4556:86:6"
														},
														{
															"expression": {
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1119,
																			"name": "userTokenAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 883,
																			"src": "4656:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1123,
																		"indexExpression": {
																			"expression": {
																				"id": 1120,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4672:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4676:6:6",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4672:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4656:27:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1124,
																	"indexExpression": {
																		"id": 1122,
																		"name": "_ethToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "4684:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4656:38:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1125,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "4699:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1126,
																				"name": "overColleteralFeeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 897,
																				"src": "4707:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4699:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1128,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4698:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4656:75:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1130,
															"nodeType": "ExpressionStatement",
															"src": "4656:75:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1132,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4760:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4764:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4760:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1136,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1134,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 944,
																					"src": "4772:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1135,
																					"name": "overColleteralFeeAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "4780:23:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4772:31:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1137,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4771:33:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1131,
																	"name": "swapToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "4750:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4750:55:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1139,
															"nodeType": "EmitStatement",
															"src": "4745:60:6"
														}
													]
												},
												"id": 1141,
												"nodeType": "IfStatement",
												"src": "3558:1258:6",
												"trueBody": {
													"id": 1032,
													"nodeType": "Block",
													"src": "3579:366:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 986,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3624:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3628:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3624:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 990,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3644:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenSwap_$1415",
																					"typeString": "contract TokenSwap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenSwap_$1415",
																					"typeString": "contract TokenSwap"
																				}
																			],
																			"id": 989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3636:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 988,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3636:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3636:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"id": 992,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 944,
																				"src": "3652:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 993,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3651:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 983,
																				"name": "_ethToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 942,
																				"src": "3600:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 982,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 225,
																			"src": "3593:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3593:17:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3611:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 224,
																	"src": "3593:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3593:68:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 995,
															"nodeType": "ExpressionStatement",
															"src": "3593:68:6"
														},
														{
															"expression": {
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 996,
																	"name": "currentHoldings",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 895,
																	"src": "3675:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"components": [
																		{
																			"id": 997,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 944,
																			"src": "3695:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 998,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3694:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3675:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1000,
															"nodeType": "ExpressionStatement",
															"src": "3675:28:6"
														},
														{
															"expression": {
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1001,
																		"name": "userAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 887,
																		"src": "3717:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1004,
																	"indexExpression": {
																		"expression": {
																			"id": 1002,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3728:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3732:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3728:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3717:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1005,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "3742:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3717:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1007,
															"nodeType": "ExpressionStatement",
															"src": "3717:32:6"
														},
														{
															"expression": {
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1008,
																			"name": "userTotalSwapAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 893,
																			"src": "3763:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_string_memory_ptr_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(string memory => uint256))"
																			}
																		},
																		"id": 1012,
																		"indexExpression": {
																			"expression": {
																				"id": 1009,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3783:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3787:6:6",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3783:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3763:31:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_uint256_$",
																			"typeString": "mapping(string memory => uint256)"
																		}
																	},
																	"id": 1013,
																	"indexExpression": {
																		"id": 1011,
																		"name": "substrateAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 946,
																		"src": "3795:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3763:49:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1014,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "3816:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3763:60:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1016,
															"nodeType": "ExpressionStatement",
															"src": "3763:60:6"
														},
														{
															"expression": {
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1017,
																			"name": "userTokenAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 883,
																			"src": "3837:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1021,
																		"indexExpression": {
																			"expression": {
																				"id": 1018,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3853:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3857:6:6",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3853:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3837:27:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1022,
																	"indexExpression": {
																		"id": 1020,
																		"name": "_ethToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "3865:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3837:38:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1023,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "3879:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3837:49:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1025,
															"nodeType": "ExpressionStatement",
															"src": "3837:49:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1027,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3915:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3919:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3915:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1029,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 944,
																		"src": "3926:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1026,
																	"name": "swapToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "3905:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3905:29:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1031,
															"nodeType": "EmitStatement",
															"src": "3900:34:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 940,
										"nodeType": "StructuredDocumentation",
										"src": "2765:486:6",
										"text": " @dev Allows users to swap tokens by transferring them to the contract or distribute a fee among whitelisted addresses.\n If the token being swapped is USDM, it is simply collected by the contract.\n For other tokens, a 0.3% fee is distributed among all whitelisted addresses, and the rest is collected by the contract.\n \n @param _ethToken The address of the ERC20 token to be swapped.\n @param _amount The amount of the token to be swapped."
									},
									"functionSelector": "cb8ff545",
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokens",
									"nameLocation": "3266:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "_ethToken",
												"nameLocation": "3285:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "3277:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3277:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "3303:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "3295:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3295:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "substrateAddress",
												"nameLocation": "3325:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "3311:30:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 945,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3311:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3276:66:6"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3350:0:6"
									},
									"scope": 1415,
									"src": "3257:1573:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1297,
										"nodeType": "Block",
										"src": "5443:1165:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1158,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "5497:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenSwap_$1415",
																					"typeString": "contract TokenSwap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenSwap_$1415",
																					"typeString": "contract TokenSwap"
																				}
																			],
																			"id": 1157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5489:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1156,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5489:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5489:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1153,
																				"name": "_ethToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1146,
																				"src": "5468:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1152,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 225,
																			"src": "5461:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5461:17:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5479:9:6",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 182,
																	"src": "5461:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5461:42:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1161,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "5507:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5461:53:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5516:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 1151,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5453:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5453:86:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "5453:86:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1166,
														"name": "_ethToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "5552:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1167,
														"name": "usdm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "5565:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1295,
													"nodeType": "Block",
													"src": "5857:740:6",
													"statements": [
														{
															"expression": {
																"id": 1213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1206,
																	"name": "overColleteralFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 897,
																	"src": "5872:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1209,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1207,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1148,
																					"src": "5899:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"hexValue": "33",
																					"id": 1208,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "5907:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_3_by_1",
																						"typeString": "int_const 3"
																					},
																					"value": "3"
																				},
																				"src": "5899:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1210,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5898:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31303030",
																		"id": 1211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5910:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000_by_1",
																			"typeString": "int_const 1000"
																		},
																		"value": "1000"
																	},
																	"src": "5898:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5872:42:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1214,
															"nodeType": "ExpressionStatement",
															"src": "5872:42:6"
														},
														{
															"assignments": [
																1216
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1216,
																	"mutability": "mutable",
																	"name": "eachWhilitedAddressFee",
																	"nameLocation": "5933:22:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1295,
																	"src": "5928:27:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1215,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "5928:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1221,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1217,
																	"name": "overColleteralFeeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 897,
																	"src": "5958:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"expression": {
																		"id": 1218,
																		"name": "whilistedAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "5982:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5999:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5982:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5958:47:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5928:77:6"
														},
														{
															"body": {
																"id": 1243,
																"nodeType": "Block",
																"src": "6079:107:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 1237,
																						"name": "whilistedAddress",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 877,
																						"src": "6128:16:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_address_$dyn_storage",
																							"typeString": "address[] storage ref"
																						}
																					},
																					"id": 1239,
																					"indexExpression": {
																						"id": 1238,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1223,
																						"src": "6145:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "6128:19:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1240,
																					"name": "eachWhilitedAddressFee",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1216,
																					"src": "6148:22:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1234,
																							"name": "_ethToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1146,
																							"src": "6104:9:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1233,
																						"name": "IERC20",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 225,
																						"src": "6097:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																							"typeString": "type(contract IERC20)"
																						}
																					},
																					"id": 1235,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6097:17:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$225",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1236,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6115:12:6",
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 311,
																				"src": "6097:30:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 1241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6097:74:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1242,
																		"nodeType": "ExpressionStatement",
																		"src": "6097:74:6"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1226,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1223,
																	"src": "6034:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1227,
																		"name": "whilistedAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "6036:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6053:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6036:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6034:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1244,
															"initializationExpression": {
																"assignments": [
																	1223
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1223,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "6029:1:6",
																		"nodeType": "VariableDeclaration",
																		"scope": 1244,
																		"src": "6024:6:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1222,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "6024:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1225,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6031:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "6024:8:6"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "6061:3:6",
																	"subExpression": {
																		"id": 1230,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1223,
																		"src": "6061:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1232,
																"nodeType": "ExpressionStatement",
																"src": "6061:3:6"
															},
															"nodeType": "ForStatement",
															"src": "6019:167:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1249,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6231:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6235:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6231:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1253,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1251,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1148,
																					"src": "6243:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1252,
																					"name": "overColleteralFeeAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "6251:23:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6243:31:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1254,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6242:33:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1246,
																				"name": "_ethToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1146,
																				"src": "6207:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1245,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 225,
																			"src": "6200:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6200:17:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6218:12:6",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 311,
																	"src": "6200:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6200:76:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1256,
															"nodeType": "ExpressionStatement",
															"src": "6200:76:6"
														},
														{
															"expression": {
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1257,
																	"name": "currentHoldings",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 895,
																	"src": "6290:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1258,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1148,
																				"src": "6310:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1259,
																				"name": "overColleteralFeeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 897,
																				"src": "6318:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6310:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1261,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6309:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6290:52:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1263,
															"nodeType": "ExpressionStatement",
															"src": "6290:52:6"
														},
														{
															"expression": {
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1264,
																		"name": "userAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 887,
																		"src": "6356:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1267,
																	"indexExpression": {
																		"expression": {
																			"id": 1265,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6367:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6371:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6367:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6356:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1268,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1148,
																				"src": "6382:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1269,
																				"name": "overColleteralFeeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 897,
																				"src": "6390:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6382:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1271,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6381:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6356:58:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1273,
															"nodeType": "ExpressionStatement",
															"src": "6356:58:6"
														},
														{
															"expression": {
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1274,
																			"name": "userTokenAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 883,
																			"src": "6428:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1278,
																		"indexExpression": {
																			"expression": {
																				"id": 1275,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "6444:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6448:6:6",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "6444:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6428:27:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1279,
																	"indexExpression": {
																		"id": 1277,
																		"name": "_ethToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1146,
																		"src": "6456:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6428:38:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1280,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1148,
																				"src": "6471:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1281,
																				"name": "overColleteralFeeAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 897,
																				"src": "6479:23:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6471:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1283,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "6470:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6428:75:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1285,
															"nodeType": "ExpressionStatement",
															"src": "6428:75:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1287,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6541:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6545:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6541:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1291,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1289,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1148,
																					"src": "6553:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1290,
																					"name": "overColleteralFeeAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 897,
																					"src": "6561:23:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6553:31:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1292,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6552:33:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1286,
																	"name": "substrateSwapToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 852,
																	"src": "6522:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6522:64:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1294,
															"nodeType": "EmitStatement",
															"src": "6517:69:6"
														}
													]
												},
												"id": 1296,
												"nodeType": "IfStatement",
												"src": "5549:1048:6",
												"trueBody": {
													"id": 1205,
													"nodeType": "Block",
													"src": "5570:274:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1173,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5615:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5619:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5615:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1175,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1148,
																		"src": "5626:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1170,
																				"name": "_ethToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1146,
																				"src": "5591:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1169,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 225,
																			"src": "5584:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5584:17:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5602:12:6",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 311,
																	"src": "5584:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5584:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1177,
															"nodeType": "ExpressionStatement",
															"src": "5584:50:6"
														},
														{
															"expression": {
																"id": 1181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1178,
																	"name": "currentHoldings",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 895,
																	"src": "5648:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"components": [
																		{
																			"id": 1179,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1148,
																			"src": "5668:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1180,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5667:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5648:28:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1182,
															"nodeType": "ExpressionStatement",
															"src": "5648:28:6"
														},
														{
															"expression": {
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1183,
																		"name": "userAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 887,
																		"src": "5690:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1186,
																	"indexExpression": {
																		"expression": {
																			"id": 1184,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5701:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5705:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5701:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5690:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1187,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "5715:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5690:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1189,
															"nodeType": "ExpressionStatement",
															"src": "5690:32:6"
														},
														{
															"expression": {
																"id": 1197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1190,
																			"name": "userTokenAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 883,
																			"src": "5736:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1194,
																		"indexExpression": {
																			"expression": {
																				"id": 1191,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5752:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5756:6:6",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "5752:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5736:27:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1195,
																	"indexExpression": {
																		"id": 1193,
																		"name": "_ethToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1146,
																		"src": "5764:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5736:38:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1196,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "5778:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5736:49:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1198,
															"nodeType": "ExpressionStatement",
															"src": "5736:49:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1200,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5814:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5818:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5814:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1202,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1148,
																		"src": "5825:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1199,
																	"name": "swapToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "5804:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5804:29:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1204,
															"nodeType": "EmitStatement",
															"src": "5799:34:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1144,
										"nodeType": "StructuredDocumentation",
										"src": "4835:532:6",
										"text": " @dev Allows users to swap tokens back from the contract or distribute a fee among whitelisted addresses before sending back the tokens.\n If the token being swapped back is USDM, it is directly transferred to the sender.\n For other tokens, a 0.3% fee is distributed among all whitelisted addresses before sending the remaining tokens back to the sender.\n \n @param _ethToken The address of the ERC20 token to be swapped back.\n @param _amount The amount of the token to be swapped back."
									},
									"functionSelector": "33fa13a4",
									"id": 1298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "substrateSwapTokens",
									"nameLocation": "5381:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "_ethToken",
												"nameLocation": "5409:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "5401:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5401:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5427:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "5419:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5400:35:6"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:6"
									},
									"scope": 1415,
									"src": "5372:1236:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1315,
										"nodeType": "Block",
										"src": "6827:84:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1310,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6868:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6872:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6868:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1312,
															"name": "overColleteralFeeAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "6880:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1307,
																	"name": "_ethToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1301,
																	"src": "6844:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1306,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "6837:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6837:17:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6855:12:6",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 311,
														"src": "6837:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6837:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1314,
												"nodeType": "ExpressionStatement",
												"src": "6837:67:6"
											}
										]
									},
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "6613:142:6",
										"text": " @param _ethToken The address of the ERC20 token to be swapped back.\n Only owner can withdaraw the Overcolleteral fee."
									},
									"functionSelector": "cdb43478",
									"id": 1316,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1304,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1303,
												"name": "onlyOwner",
												"nameLocations": [
													"6817:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6817:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6817:9:6"
										}
									],
									"name": "withdrawBalanceTokens",
									"nameLocation": "6769:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "_ethToken",
												"nameLocation": "6799:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "6791:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6791:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6790:19:6"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6827:0:6"
									},
									"scope": 1415,
									"src": "6760:151:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1337,
										"nodeType": "Block",
										"src": "7158:114:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1325,
																"name": "whiteList",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 874,
																"src": "7176:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1327,
															"indexExpression": {
																"id": 1326,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1319,
																"src": "7186:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7176:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973204164647265737320646f6573206e6f7420657869737421",
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7197:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_96f12f93478a3768b4b822c9ec935962a88f68f145f33917ac63ab3e2a411fe3",
																"typeString": "literal_string \"This Address does not exist!\""
															},
															"value": "This Address does not exist!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_96f12f93478a3768b4b822c9ec935962a88f68f145f33917ac63ab3e2a411fe3",
																"typeString": "literal_string \"This Address does not exist!\""
															}
														],
														"id": 1324,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7168:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7168:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "7168:60:6"
											},
											{
												"expression": {
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1331,
															"name": "whiteList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "7238:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1333,
														"indexExpression": {
															"id": 1332,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "7248:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7238:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7260:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "7238:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1336,
												"nodeType": "ExpressionStatement",
												"src": "7238:27:6"
											}
										]
									},
									"documentation": {
										"id": 1317,
										"nodeType": "StructuredDocumentation",
										"src": "6919:170:6",
										"text": " @dev Removes an address from the whitelist. Only the owner can call this function.\n @param _address The address to be removed from the whitelist."
									},
									"functionSelector": "01bf6648",
									"id": 1338,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1322,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1321,
												"name": "onlyOwner",
												"nameLocations": [
													"7148:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "7148:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7148:9:6"
										}
									],
									"name": "removeFromWhiteList",
									"nameLocation": "7103:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "7131:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "7123:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7122:18:6"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7158:0:6"
									},
									"scope": 1415,
									"src": "7094:178:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "7504:103:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1346,
															"name": "userTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "7521:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1348,
														"indexExpression": {
															"id": 1347,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1341,
															"src": "7537:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7521:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1350,
													"indexExpression": {
														"id": 1349,
														"name": "usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 861,
														"src": "7545:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7521:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1345,
												"id": 1351,
												"nodeType": "Return",
												"src": "7514:36:6"
											}
										]
									},
									"documentation": {
										"id": 1339,
										"nodeType": "StructuredDocumentation",
										"src": "7278:145:6",
										"text": " @dev Returns the USDT token balance of this contract.\n @return holdings The amount of USDT tokens held by this contract."
									},
									"functionSelector": "a3150978",
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "holdingOf_USDT",
									"nameLocation": "7437:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "7460:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "7452:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7452:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7451:16:6"
									},
									"returnParameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "holdings",
												"nameLocation": "7494:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "7489:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1343,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7489:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7488:15:6"
									},
									"scope": 1415,
									"src": "7428:179:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1367,
										"nodeType": "Block",
										"src": "7836:101:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1361,
															"name": "userTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "7853:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1363,
														"indexExpression": {
															"id": 1362,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "7869:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7853:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1365,
													"indexExpression": {
														"id": 1364,
														"name": "dai",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 867,
														"src": "7877:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7853:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1360,
												"id": 1366,
												"nodeType": "Return",
												"src": "7846:35:6"
											}
										]
									},
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "7613:143:6",
										"text": " @dev Returns the DAI token balance of this contract.\n @return holdings The amount of DAI tokens held by this contract."
									},
									"functionSelector": "a7f696cf",
									"id": 1368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "holdingOf_DAI",
									"nameLocation": "7770:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "7792:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "7784:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7784:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7783:16:6"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "holdings",
												"nameLocation": "7826:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1368,
												"src": "7821:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "7821:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7820:15:6"
									},
									"scope": 1415,
									"src": "7761:176:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1382,
										"nodeType": "Block",
										"src": "8169:103:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1376,
															"name": "userTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "8186:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1378,
														"indexExpression": {
															"id": 1377,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "8202:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8186:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1380,
													"indexExpression": {
														"id": 1379,
														"name": "usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "8210:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8186:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1375,
												"id": 1381,
												"nodeType": "Return",
												"src": "8179:36:6"
											}
										]
									},
									"documentation": {
										"id": 1369,
										"nodeType": "StructuredDocumentation",
										"src": "7943:145:6",
										"text": " @dev Returns the USDC token balance of this contract.\n @return holdings The amount of USDC tokens held by this contract."
									},
									"functionSelector": "70181206",
									"id": 1383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "holdingOf_USDC",
									"nameLocation": "8102:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "8125:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "8117:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8117:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8116:16:6"
									},
									"returnParameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "holdings",
												"nameLocation": "8159:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1383,
												"src": "8154:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1373,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8154:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8153:15:6"
									},
									"scope": 1415,
									"src": "8093:179:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1397,
										"nodeType": "Block",
										"src": "8504:103:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1391,
															"name": "userTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "8521:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1393,
														"indexExpression": {
															"id": 1392,
															"name": "holder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1386,
															"src": "8537:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8521:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1395,
													"indexExpression": {
														"id": 1394,
														"name": "usdm",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "8545:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8521:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1390,
												"id": 1396,
												"nodeType": "Return",
												"src": "8514:36:6"
											}
										]
									},
									"documentation": {
										"id": 1384,
										"nodeType": "StructuredDocumentation",
										"src": "8278:145:6",
										"text": " @dev Returns the USDM token balance of this contract.\n @return holdings The amount of USDM tokens held by this contract."
									},
									"functionSelector": "fca0a3d2",
									"id": 1398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "holdingOf_USDM",
									"nameLocation": "8437:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1386,
												"mutability": "mutable",
												"name": "holder",
												"nameLocation": "8460:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "8452:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8452:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8451:16:6"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "holdings",
												"nameLocation": "8494:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "8489:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8489:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8488:15:6"
									},
									"scope": 1415,
									"src": "8428:179:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "8928:124:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1406,
															"name": "userTokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "8945:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1409,
														"indexExpression": {
															"expression": {
																"id": 1407,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8961:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8965:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8961:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8945:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1411,
													"indexExpression": {
														"id": 1410,
														"name": "_ethToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1401,
														"src": "8973:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8945:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1405,
												"id": 1412,
												"nodeType": "Return",
												"src": "8938:45:6"
											}
										]
									},
									"documentation": {
										"id": 1399,
										"nodeType": "StructuredDocumentation",
										"src": "8613:230:6",
										"text": " @dev Returns the balance of a specific ERC20 token held by this contract.\n @param _ethToken The address of the ERC20 token.\n @return holdings The amount of the specified tokens held by this contract."
									},
									"functionSelector": "a4329677",
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "holdingOfTokens",
									"nameLocation": "8857:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "_ethToken",
												"nameLocation": "8881:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "8873:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8873:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8872:19:6"
									},
									"returnParameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "holdings",
												"nameLocation": "8918:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "8913:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1403,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "8913:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8912:15:6"
									},
									"scope": 1415,
									"src": "8848:204:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1416,
							"src": "514:8541:6",
							"usedErrors": [
								13,
								18,
								278,
								559,
								564,
								567
							],
							"usedEvents": [
								24,
								846,
								852,
								858
							]
						}
					],
					"src": "32:9023:6"
				},
				"id": 6
			}
		}
	}
}