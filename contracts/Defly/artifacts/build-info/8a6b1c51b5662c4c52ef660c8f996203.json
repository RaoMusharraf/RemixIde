{
	"id": "8a6b1c51b5662c4c52ef660c8f996203",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Defly/NFTStakingStart.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.9;\n\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"./IIERC721.sol\";\n\ncontract NFTStaking is Ownable,IERC721Receiver{\n\n    using SafeERC20 for IERC20;\n    using Counters for Counters.Counter;\n    Counters.Counter public category1;\n    Counters.Counter public category2;\n    Counters.Counter public category3;\n    Counters.Counter public category4;\n    address public ERC721address;\n    address public ERC20Address;\n    uint256 public TotalRemaningToken;\n    struct Detail{\n        uint tokens;\n        uint day;\n        uint StartTime;\n        uint NFT;\n        bool DepositToken;\n    }\n    mapping (address => Detail) public Staker;\n    // ============ Constructor ============\n    /* \n        @dev get _ERC721address and _ERC20Address\n        @param _ERC721address address of the minting NFT contract\n        @param _ERC20Address address of the minting Token contract\n    */\n    constructor(address _ERC721address, address _ERC20Address) {\n        ERC721address = _ERC721address;\n        ERC20Address = _ERC20Address;\n    }\n    // ============ Deposit FUNCTIONS ============\n    /* \n        @dev get token id  of NFT and Days for Stake \n        @param TokenId id of NFT \n    */\n    function deposit(uint TokenId,uint Days) public {\n        require (!Staker[msg.sender].DepositToken,\"You Already Deposit NFT\");\n        if(Days == 15){\n            category1.increment();\n            require(category1.current() <=1000,\"15 Days Category is Full !!!\");\n            Staker[msg.sender] = Detail(5000,Days,block.timestamp,TokenId,true);\n            IERC721(ERC721address).safeTransferFrom(msg.sender,address(this),TokenId,\"\");\n        }\n        else if(Days == 30){\n            category2.increment();\n            require(category2.current() <=750,\"30 Days Category is Full !!!\");\n            Staker[msg.sender] = Detail(7500,Days,block.timestamp,TokenId,true);\n            IERC721(ERC721address).safeTransferFrom(msg.sender,address(this),TokenId,\"\");\n        }\n        else if(Days == 60){\n            category3.increment();\n            require(category3.current() <=500,\"60 Days Category is Full !!!\");\n            Staker[msg.sender] = Detail(12500,Days,block.timestamp,TokenId,true);\n            IERC721(ERC721address).safeTransferFrom(msg.sender,address(this),TokenId,\"\");\n        }\n        else if(Days == 90){\n            category4.increment();\n            require(category4.current() <=250,\"90 Days Category is Full !!!\");\n            Staker[msg.sender] = Detail(17500,Days,block.timestamp,TokenId,true);\n            IERC721(ERC721address).safeTransferFrom(msg.sender,address(this),TokenId,\"\");\n        }\n        else{\n            revert(\"Sellect Days 15,30,60,90 !!!\");\n        }    \n    }\n    // ============ Withdraw FUNCTIONS ============\n    /* \n        @dev get address and move NFTs and reward to the given address  \n        @param _to address of the staker \n    */\n    function withdraw (address _to) public {\n        require (Staker[_to].DepositToken,\"Please First Deposit NFT !!!\");\n        uint Time = ((block.timestamp - Staker[_to].StartTime)/(24*60*60));\n        if(Time < Staker[_to].day){\n            uint TokenDays = Time*(Staker[_to].tokens/Staker[_to].day);\n            uint fine = (2*TokenDays)/100;\n            IERC20(ERC20Address).safeTransfer(_to, TokenDays - fine);\n            IERC20(ERC20Address).safeTransfer(0x000000000000000000000000000000000000dEaD, fine);\n            IERC721(ERC721address).safeTransferFrom(address(this), _to,Staker[_to].NFT,\"\");\n            TotalRemaningToken -= TokenDays;\n            delete Staker[_to];\n        }\n        else{\n            IERC20(ERC20Address).safeTransfer(_to, Staker[_to].tokens);\n            IERC721(ERC721address).safeTransferFrom(address(this), _to,Staker[_to].NFT,\"\");\n            TotalRemaningToken -= Staker[_to].tokens;\n            delete Staker[_to];\n        } \n        if(Staker[_to].day == 15){\n            category1.decrement();\n        }\n        else if(Staker[_to].day == 30){\n            category2.decrement();   \n        }\n        else if(Staker[_to].day == 60){\n            category3.decrement();   \n        }\n        else if(Staker[_to].day == 90){\n            category4.decrement();   \n        }  \n    }\n    \n    // ============= Admin Add Token Function ==============\n    /*\n        @dev Owner add tokens into contract with this function\n        @param These tokens are used as rewards for staking\n        @param Only Owner can call this function\n    */\n    function AdminAddToken(uint _amount) public onlyOwner{\n        TotalRemaningToken += _amount;\n        IERC20(ERC20Address).safeTransferFrom(msg.sender, address(this) ,_amount);\n    }\n    function onERC721Received(address,address,uint256,bytes calldata) external pure override returns (bytes4) {\n        return IERC721Receiver.onERC721Received.selector;\n    }\n}"
			},
			"contracts/Defly/IIERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.4;\n\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IIERC721 {\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function safeMint(address to, string memory uri,uint256 price ,uint8 typ) external ;\n}"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bbcb1fd435e5744a5b541c709a8f7209eca403ec3ecfbdbe7bdc2822cdbb6f3d64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bbcb1fd435e5744a5b541c709a8f7209eca403ec3ecfbdbe7bdc2822cdbb6f3d64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xCB 0x1F 0xD4 CALLDATALOAD 0xE5 PUSH21 0x4A5B541C709A8F7209ECA403EC3ECFBDBE7BDC2822 0xCD 0xBB PUSH16 0x3D64736F6C6343000812003300000000 ",
							"sourceMap": "707:3748:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bbcb1fd435e5744a5b541c709a8f7209eca403ec3ecfbdbe7bdc2822cdbb6f3d64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xCB 0x1F 0xD4 CALLDATALOAD 0xE5 PUSH21 0x4A5B541C709A8F7209ECA403EC3ECFBDBE7BDC2822 0xCD 0xBB PUSH16 0x3D64736F6C6343000812003300000000 ",
							"sourceMap": "707:3748:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bbcb1fd435e5744a5b541c709a8f7209eca403ec3ecfbdbe7bdc2822cdbb6f3d64736f6c63430008120033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Defly/IIERC721.sol",
								"contracts/Defly/NFTStakingStart.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122056388b4bd61a0a82b1b5642110ef2e3e47829ce58d55205c0109152159a2901a64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122056388b4bd61a0a82b1b5642110ef2e3e47829ce58d55205c0109152159a2901a64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP CODESIZE DUP12 0x4B 0xD6 BYTE EXP DUP3 0xB1 0xB5 PUSH5 0x2110EF2E3E SELFBALANCE DUP3 SWAP13 0xE5 DUP14 SSTORE KECCAK256 0x5C ADD MULMOD ISZERO 0x21 MSIZE LOG2 SWAP1 BYTE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:8964:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122056388b4bd61a0a82b1b5642110ef2e3e47829ce58d55205c0109152159a2901a64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP CODESIZE DUP12 0x4B 0xD6 BYTE EXP DUP3 0xB1 0xB5 PUSH5 0x2110EF2E3E SELFBALANCE DUP3 SWAP13 0xE5 DUP14 SSTORE KECCAK256 0x5C ADD MULMOD ISZERO 0x21 MSIZE LOG2 SWAP1 BYTE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:8964:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122056388b4bd61a0a82b1b5642110ef2e3e47829ce58d55205c0109152159a2901a64736f6c63430008120033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Defly/IIERC721.sol",
								"contracts/Defly/NFTStakingStart.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d62dfdcaba135cbc26190bb2cbc792be170c4c531659147f0dc3c72a79058d3964736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d62dfdcaba135cbc26190bb2cbc792be170c4c531659147f0dc3c72a79058d3964736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0x2D REVERT 0xCA 0xBA SGT 0x5C 0xBC 0x26 NOT SIGNEXTEND 0xB2 0xCB 0xC7 SWAP3 0xBE OR 0xC 0x4C MSTORE8 AND MSIZE EQ PUSH32 0xDC3C72A79058D3964736F6C6343000812003300000000000000000000000000 ",
							"sourceMap": "424:971:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d62dfdcaba135cbc26190bb2cbc792be170c4c531659147f0dc3c72a79058d3964736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0x2D REVERT 0xCA 0xBA SGT 0x5C 0xBC 0x26 NOT SIGNEXTEND 0xB2 0xCB 0xC7 SWAP3 0xBE OR 0xC 0x4C MSTORE8 AND MSIZE EQ PUSH32 0xDC3C72A79058D3964736F6C6343000812003300000000000000000000000000 ",
							"sourceMap": "424:971:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d62dfdcaba135cbc26190bb2cbc792be170c4c531659147f0dc3c72a79058d3964736f6c63430008120033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Defly/IIERC721.sol",
								"contracts/Defly/NFTStakingStart.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Defly/IIERC721.sol": {
				"IIERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "typ",
									"type": "uint8"
								}
							],
							"name": "safeMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"kind": "dev",
						"methods": {
							"safeMint(address,string,uint256,uint8)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"safeMint(address,string,uint256,uint8)": "64ac7814"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"typ\",\"type\":\"uint8\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"kind\":\"dev\",\"methods\":{\"safeMint(address,string,uint256,uint8)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Defly/IIERC721.sol\":\"IIERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Defly/IIERC721.sol\":{\"keccak256\":\"0xef5ff57a7808b26072a271617baa5af1bf24bfe0004f04d84046b7be0867e086\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c5a4af92092f5fe055d6194aef29e64ab9201b19707c9103fc0ed67c313d3fc\",\"dweb:/ipfs/Qmay9egwhxDa8mGNgkohchRxkmuRz7v6KEnpPfswaMVTUa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Defly/NFTStakingStart.sol": {
				"NFTStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ERC721address",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_ERC20Address",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "AdminAddToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ERC20Address",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ERC721address",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "Staker",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokens",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "day",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "StartTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "NFT",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "DepositToken",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TotalRemaningToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "category1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "category2",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "category3",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "category4",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "TokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "Days",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Defly/NFTStakingStart.sol\":402:5142  contract NFTStaking is Ownable,IERC721Receiver{... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Defly/NFTStakingStart.sol\":1213:1357  constructor(address _ERC721address, address _ERC20Address) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/Defly/NFTStakingStart.sol\":1298:1312  _ERC721address */\n  dup2\n    /* \"contracts/Defly/NFTStakingStart.sol\":1282:1295  ERC721address */\n  0x05\n  0x00\n    /* \"contracts/Defly/NFTStakingStart.sol\":1282:1312  ERC721address = _ERC721address */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Defly/NFTStakingStart.sol\":1337:1350  _ERC20Address */\n  dup1\n    /* \"contracts/Defly/NFTStakingStart.sol\":1322:1334  ERC20Address */\n  0x06\n  0x00\n    /* \"contracts/Defly/NFTStakingStart.sol\":1322:1350  ERC20Address = _ERC20Address */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Defly/NFTStakingStart.sol\":1213:1357  constructor(address _ERC721address, address _ERC20Address) {... */\n  pop\n  pop\n    /* \"contracts/Defly/NFTStakingStart.sol\":402:5142  contract NFTStaking is Ownable,IERC721Receiver{... */\n  jump(tag_12)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_28\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_30\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_31:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_33\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_36\n  tag_16\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":949:1068   */\ntag_35:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_37\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_21\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_38\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/Defly/NFTStakingStart.sol\":402:5142  contract NFTStaking is Ownable,IERC721Receiver{... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Defly/NFTStakingStart.sol\":402:5142  contract NFTStaking is Ownable,IERC721Receiver{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa6021ace\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xc0cd40ee\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xc0cd40ee\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf7d252f4\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0xa6021ace\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xb10558ab\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb4e929d4\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb7171a2e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x4930e5d1\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x4930e5d1\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x51cff8d9\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3f431230\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x41fcd29a\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Defly/NFTStakingStart.sol\":4969:5140  function onERC721Received(address,address,uint256,bytes calldata) external pure override returns (bytes4) {... */\n    tag_3:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Defly/NFTStakingStart.sol\":528:561  Counters.Counter public category1 */\n    tag_4:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Defly/NFTStakingStart.sol\":645:678  Counters.Counter public category4 */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Defly/NFTStakingStart.sol\":751:784  uint256 public TotalRemaningToken */\n    tag_6:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Defly/NFTStakingStart.sol\":3210:4525  function withdraw (address _to) public {... */\n    tag_7:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_9:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Defly/NFTStakingStart.sol\":718:745  address public ERC20Address */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Defly/NFTStakingStart.sol\":567:600  Counters.Counter public category2 */\n    tag_11:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Defly/NFTStakingStart.sol\":923:964  mapping (address => Detail) public Staker */\n    tag_12:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Defly/NFTStakingStart.sol\":684:712  address public ERC721address */\n    tag_13:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Defly/NFTStakingStart.sol\":4782:4964  function AdminAddToken(uint _amount) public onlyOwner{... */\n    tag_14:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      stop\n        /* \"contracts/Defly/NFTStakingStart.sol\":1516:3023  function deposit(uint TokenId,uint Days) public {... */\n    tag_15:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      stop\n        /* \"contracts/Defly/NFTStakingStart.sol\":606:639  Counters.Counter public category3 */\n    tag_17:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Defly/NFTStakingStart.sol\":4969:5140  function onERC721Received(address,address,uint256,bytes calldata) external pure override returns (bytes4) {... */\n    tag_24:\n        /* \"contracts/Defly/NFTStakingStart.sol\":5067:5073  bytes4 */\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":5092:5133  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"contracts/Defly/NFTStakingStart.sol\":5085:5133  return IERC721Receiver.onERC721Received.selector */\n      swap1\n      pop\n        /* \"contracts/Defly/NFTStakingStart.sol\":4969:5140  function onERC721Received(address,address,uint256,bytes calldata) external pure override returns (bytes4) {... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Defly/NFTStakingStart.sol\":528:561  Counters.Counter public category1 */\n    tag_28:\n      0x01\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/Defly/NFTStakingStart.sol\":645:678  Counters.Counter public category4 */\n    tag_32:\n      0x04\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/Defly/NFTStakingStart.sol\":751:784  uint256 public TotalRemaningToken */\n    tag_35:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/Defly/NFTStakingStart.sol\":3210:4525  function withdraw (address _to) public {... */\n    tag_40:\n        /* \"contracts/Defly/NFTStakingStart.sol\":3268:3274  Staker */\n      0x08\n        /* \"contracts/Defly/NFTStakingStart.sol\":3268:3279  Staker[_to] */\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":3275:3278  _to */\n      dup3\n        /* \"contracts/Defly/NFTStakingStart.sol\":3268:3279  Staker[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Defly/NFTStakingStart.sol\":3268:3292  Staker[_to].DepositToken */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Defly/NFTStakingStart.sol\":3259:3324  require (Staker[_to].DepositToken,\"Please First Deposit NFT !!!\") */\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"contracts/Defly/NFTStakingStart.sol\":3334:3343  uint Time */\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":3390:3398  24*60*60 */\n      0x015180\n        /* \"contracts/Defly/NFTStakingStart.sol\":3366:3372  Staker */\n      0x08\n        /* \"contracts/Defly/NFTStakingStart.sol\":3366:3377  Staker[_to] */\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":3373:3376  _to */\n      dup5\n        /* \"contracts/Defly/NFTStakingStart.sol\":3366:3377  Staker[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Defly/NFTStakingStart.sol\":3366:3387  Staker[_to].StartTime */\n      0x02\n      add\n      sload\n        /* \"contracts/Defly/NFTStakingStart.sol\":3348:3363  block.timestamp */\n      timestamp\n        /* \"contracts/Defly/NFTStakingStart.sol\":3348:3387  block.timestamp - Staker[_to].StartTime */\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"contracts/Defly/NFTStakingStart.sol\":3347:3399  (block.timestamp - Staker[_to].StartTime)/(24*60*60) */\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n        /* \"contracts/Defly/NFTStakingStart.sol\":3334:3400  uint Time = ((block.timestamp - Staker[_to].StartTime)/(24*60*60)) */\n      swap1\n      pop\n        /* \"contracts/Defly/NFTStakingStart.sol\":3420:3426  Staker */\n      0x08\n        /* \"contracts/Defly/NFTStakingStart.sol\":3420:3431  Staker[_to] */\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":3427:3430  _to */\n      dup4\n        /* \"contracts/Defly/NFTStakingStart.sol\":3420:3431  Staker[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Defly/NFTStakingStart.sol\":3420:3435  Staker[_to].day */\n      0x01\n      add\n      sload\n        /* \"contracts/Defly/NFTStakingStart.sol\":3413:3417  Time */\n      dup2\n        /* \"contracts/Defly/NFTStakingStart.sol\":3413:3435  Time < Staker[_to].day */\n      lt\n        /* \"contracts/Defly/NFTStakingStart.sol\":3410:4172  if(Time < Staker[_to].day){... */\n      iszero\n      tag_84\n      jumpi\n        /* \"contracts/Defly/NFTStakingStart.sol\":3450:3464  uint TokenDays */\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":3492:3498  Staker */\n      0x08\n        /* \"contracts/Defly/NFTStakingStart.sol\":3492:3503  Staker[_to] */\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":3499:3502  _to */\n      dup5\n        /* \"contracts/Defly/NFTStakingStart.sol\":3492:3503  Staker[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Defly/NFTStakingStart.sol\":3492:3507  Staker[_to].day */\n      0x01\n      add\n      sload\n        /* \"contracts/Defly/NFTStakingStart.sol\":3473:3479  Staker */\n      0x08\n        /* \"contracts/Defly/NFTStakingStart.sol\":3473:3484  Staker[_to] */\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":3480:3483  _to */\n      dup6\n        /* \"contracts/Defly/NFTStakingStart.sol\":3473:3484  Staker[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Defly/NFTStakingStart.sol\":3473:3491  Staker[_to].tokens */\n      0x00\n      add\n      sload\n        /* \"contracts/Defly/NFTStakingStart.sol\":3473:3507  Staker[_to].tokens/Staker[_to].day */\n      tag_85\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_85:\n        /* \"contracts/Defly/NFTStakingStart.sol\":3467:3471  Time */\n      dup3\n        /* \"contracts/Defly/NFTStakingStart.sol\":3467:3508  Time*(Staker[_to].tokens/Staker[_to].day) */\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"contracts/Defly/NFTStakingStart.sol\":3450:3508  uint TokenDays = Time*(Staker[_to].tokens/Staker[_to].day) */\n      swap1\n      pop\n        /* \"contracts/Defly/NFTStakingStart.sol\":3522:3531  uint fine */\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":3548:3551  100 */\n      0x64\n        /* \"contracts/Defly/NFTStakingStart.sol\":3537:3546  TokenDays */\n      dup3\n        /* \"contracts/Defly/NFTStakingStart.sol\":3535:3536  2 */\n      0x02\n        /* \"contracts/Defly/NFTStakingStart.sol\":3535:3546  2*TokenDays */\n      tag_88\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_88:\n        /* \"contracts/Defly/NFTStakingStart.sol\":3534:3551  (2*TokenDays)/100 */\n      tag_89\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_89:\n        /* \"contracts/Defly/NFTStakingStart.sol\":3522:3551  uint fine = (2*TokenDays)/100 */\n      swap1\n      pop\n        /* \"contracts/Defly/NFTStakingStart.sol\":3565:3621  IERC20(ERC20Address).safeTransfer(_to, TokenDays - fine) */\n      tag_90\n        /* \"contracts/Defly/NFTStakingStart.sol\":3599:3602  _to */\n      dup5\n        /* \"contracts/Defly/NFTStakingStart.sol\":3616:3620  fine */\n      dup3\n        /* \"contracts/Defly/NFTStakingStart.sol\":3604:3613  TokenDays */\n      dup5\n        /* \"contracts/Defly/NFTStakingStart.sol\":3604:3620  TokenDays - fine */\n      tag_91\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_91:\n        /* \"contracts/Defly/NFTStakingStart.sol\":3572:3584  ERC20Address */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Defly/NFTStakingStart.sol\":3565:3598  IERC20(ERC20Address).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_92\n      swap1\n        /* \"contracts/Defly/NFTStakingStart.sol\":3565:3621  IERC20(ERC20Address).safeTransfer(_to, TokenDays - fine) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_90:\n        /* \"contracts/Defly/NFTStakingStart.sol\":3635:3718  IERC20(ERC20Address).safeTransfer(0x000000000000000000000000000000000000dEaD, fine) */\n      tag_93\n        /* \"contracts/Defly/NFTStakingStart.sol\":3669:3711  0x000000000000000000000000000000000000dEaD */\n      0xdead\n        /* \"contracts/Defly/NFTStakingStart.sol\":3713:3717  fine */\n      dup3\n        /* \"contracts/Defly/NFTStakingStart.sol\":3642:3654  ERC20Address */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Defly/NFTStakingStart.sol\":3635:3668  IERC20(ERC20Address).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_92\n      swap1\n        /* \"contracts/Defly/NFTStakingStart.sol\":3635:3718  IERC20(ERC20Address).safeTransfer(0x000000000000000000000000000000000000dEaD, fine) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_93:\n        /* \"contracts/Defly/NFTStakingStart.sol\":3740:3753  ERC721address */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Defly/NFTStakingStart.sol\":3732:3771  IERC721(ERC721address).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb88d4fde\n        /* \"contracts/Defly/NFTStakingStart.sol\":3780:3784  this */\n      address\n        /* \"contracts/Defly/NFTStakingStart.sol\":3787:3790  _to */\n      dup7\n        /* \"contracts/Defly/NFTStakingStart.sol\":3791:3797  Staker */\n      0x08\n        /* \"contracts/Defly/NFTStakingStart.sol\":3791:3802  Staker[_to] */\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":3798:3801  _to */\n      dup10\n        /* \"contracts/Defly/NFTStakingStart.sol\":3791:3802  Staker[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Defly/NFTStakingStart.sol\":3791:3806  Staker[_to].NFT */\n      0x03\n      add\n      sload\n        /* \"contracts/Defly/NFTStakingStart.sol\":3732:3810  IERC721(ERC721address).safeTransferFrom(address(this), _to,Staker[_to].NFT,\"\") */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Defly/NFTStakingStart.sol\":3846:3855  TokenDays */\n      dup2\n        /* \"contracts/Defly/NFTStakingStart.sol\":3824:3842  TotalRemaningToken */\n      0x07\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":3824:3855  TotalRemaningToken -= TokenDays */\n      dup3\n      dup3\n      sload\n      tag_99\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_99:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Defly/NFTStakingStart.sol\":3876:3882  Staker */\n      0x08\n        /* \"contracts/Defly/NFTStakingStart.sol\":3876:3887  Staker[_to] */\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":3883:3886  _to */\n      dup6\n        /* \"contracts/Defly/NFTStakingStart.sol\":3876:3887  Staker[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":3869:3887  delete Staker[_to] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x04\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/Defly/NFTStakingStart.sol\":3436:3898  {... */\n      pop\n      pop\n        /* \"contracts/Defly/NFTStakingStart.sol\":3410:4172  if(Time < Staker[_to].day){... */\n      jump(tag_100)\n    tag_84:\n        /* \"contracts/Defly/NFTStakingStart.sol\":3925:3983  IERC20(ERC20Address).safeTransfer(_to, Staker[_to].tokens) */\n      tag_101\n        /* \"contracts/Defly/NFTStakingStart.sol\":3959:3962  _to */\n      dup3\n        /* \"contracts/Defly/NFTStakingStart.sol\":3964:3970  Staker */\n      0x08\n        /* \"contracts/Defly/NFTStakingStart.sol\":3964:3975  Staker[_to] */\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":3971:3974  _to */\n      dup6\n        /* \"contracts/Defly/NFTStakingStart.sol\":3964:3975  Staker[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Defly/NFTStakingStart.sol\":3964:3982  Staker[_to].tokens */\n      0x00\n      add\n      sload\n        /* \"contracts/Defly/NFTStakingStart.sol\":3932:3944  ERC20Address */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Defly/NFTStakingStart.sol\":3925:3958  IERC20(ERC20Address).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_92\n      swap1\n        /* \"contracts/Defly/NFTStakingStart.sol\":3925:3983  IERC20(ERC20Address).safeTransfer(_to, Staker[_to].tokens) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_101:\n        /* \"contracts/Defly/NFTStakingStart.sol\":4005:4018  ERC721address */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Defly/NFTStakingStart.sol\":3997:4036  IERC721(ERC721address).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb88d4fde\n        /* \"contracts/Defly/NFTStakingStart.sol\":4045:4049  this */\n      address\n        /* \"contracts/Defly/NFTStakingStart.sol\":4052:4055  _to */\n      dup5\n        /* \"contracts/Defly/NFTStakingStart.sol\":4056:4062  Staker */\n      0x08\n        /* \"contracts/Defly/NFTStakingStart.sol\":4056:4067  Staker[_to] */\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":4063:4066  _to */\n      dup8\n        /* \"contracts/Defly/NFTStakingStart.sol\":4056:4067  Staker[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Defly/NFTStakingStart.sol\":4056:4071  Staker[_to].NFT */\n      0x03\n      add\n      sload\n        /* \"contracts/Defly/NFTStakingStart.sol\":3997:4075  IERC721(ERC721address).safeTransferFrom(address(this), _to,Staker[_to].NFT,\"\") */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_102:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Defly/NFTStakingStart.sol\":4111:4117  Staker */\n      0x08\n        /* \"contracts/Defly/NFTStakingStart.sol\":4111:4122  Staker[_to] */\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":4118:4121  _to */\n      dup4\n        /* \"contracts/Defly/NFTStakingStart.sol\":4111:4122  Staker[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Defly/NFTStakingStart.sol\":4111:4129  Staker[_to].tokens */\n      0x00\n      add\n      sload\n        /* \"contracts/Defly/NFTStakingStart.sol\":4089:4107  TotalRemaningToken */\n      0x07\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":4089:4129  TotalRemaningToken -= Staker[_to].tokens */\n      dup3\n      dup3\n      sload\n      tag_106\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_106:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Defly/NFTStakingStart.sol\":4150:4156  Staker */\n      0x08\n        /* \"contracts/Defly/NFTStakingStart.sol\":4150:4161  Staker[_to] */\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":4157:4160  _to */\n      dup4\n        /* \"contracts/Defly/NFTStakingStart.sol\":4150:4161  Staker[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":4143:4161  delete Staker[_to] */\n      dup1\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x04\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n      pop\n      pop\n        /* \"contracts/Defly/NFTStakingStart.sol\":3410:4172  if(Time < Staker[_to].day){... */\n    tag_100:\n        /* \"contracts/Defly/NFTStakingStart.sol\":4204:4206  15 */\n      0x0f\n        /* \"contracts/Defly/NFTStakingStart.sol\":4185:4191  Staker */\n      0x08\n        /* \"contracts/Defly/NFTStakingStart.sol\":4185:4196  Staker[_to] */\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":4192:4195  _to */\n      dup5\n        /* \"contracts/Defly/NFTStakingStart.sol\":4185:4196  Staker[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Defly/NFTStakingStart.sol\":4185:4200  Staker[_to].day */\n      0x01\n      add\n      sload\n        /* \"contracts/Defly/NFTStakingStart.sol\":4185:4206  Staker[_to].day == 15 */\n      sub\n        /* \"contracts/Defly/NFTStakingStart.sol\":4182:4517  if(Staker[_to].day == 15){... */\n      tag_107\n      jumpi\n        /* \"contracts/Defly/NFTStakingStart.sol\":4221:4242  category1.decrement() */\n      tag_108\n        /* \"contracts/Defly/NFTStakingStart.sol\":4221:4230  category1 */\n      0x01\n        /* \"contracts/Defly/NFTStakingStart.sol\":4221:4240  category1.decrement */\n      tag_109\n        /* \"contracts/Defly/NFTStakingStart.sol\":4221:4242  category1.decrement() */\n      jump\t// in\n    tag_108:\n        /* \"contracts/Defly/NFTStakingStart.sol\":4182:4517  if(Staker[_to].day == 15){... */\n      jump(tag_110)\n    tag_107:\n        /* \"contracts/Defly/NFTStakingStart.sol\":4289:4291  30 */\n      0x1e\n        /* \"contracts/Defly/NFTStakingStart.sol\":4270:4276  Staker */\n      0x08\n        /* \"contracts/Defly/NFTStakingStart.sol\":4270:4281  Staker[_to] */\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":4277:4280  _to */\n      dup5\n        /* \"contracts/Defly/NFTStakingStart.sol\":4270:4281  Staker[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Defly/NFTStakingStart.sol\":4270:4285  Staker[_to].day */\n      0x01\n      add\n      sload\n        /* \"contracts/Defly/NFTStakingStart.sol\":4270:4291  Staker[_to].day == 30 */\n      sub\n        /* \"contracts/Defly/NFTStakingStart.sol\":4267:4517  if(Staker[_to].day == 30){... */\n      tag_111\n      jumpi\n        /* \"contracts/Defly/NFTStakingStart.sol\":4306:4327  category2.decrement() */\n      tag_112\n        /* \"contracts/Defly/NFTStakingStart.sol\":4306:4315  category2 */\n      0x02\n        /* \"contracts/Defly/NFTStakingStart.sol\":4306:4325  category2.decrement */\n      tag_109\n        /* \"contracts/Defly/NFTStakingStart.sol\":4306:4327  category2.decrement() */\n      jump\t// in\n    tag_112:\n        /* \"contracts/Defly/NFTStakingStart.sol\":4267:4517  if(Staker[_to].day == 30){... */\n      jump(tag_113)\n    tag_111:\n        /* \"contracts/Defly/NFTStakingStart.sol\":4377:4379  60 */\n      0x3c\n        /* \"contracts/Defly/NFTStakingStart.sol\":4358:4364  Staker */\n      0x08\n        /* \"contracts/Defly/NFTStakingStart.sol\":4358:4369  Staker[_to] */\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":4365:4368  _to */\n      dup5\n        /* \"contracts/Defly/NFTStakingStart.sol\":4358:4369  Staker[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Defly/NFTStakingStart.sol\":4358:4373  Staker[_to].day */\n      0x01\n      add\n      sload\n        /* \"contracts/Defly/NFTStakingStart.sol\":4358:4379  Staker[_to].day == 60 */\n      sub\n        /* \"contracts/Defly/NFTStakingStart.sol\":4355:4517  if(Staker[_to].day == 60){... */\n      tag_114\n      jumpi\n        /* \"contracts/Defly/NFTStakingStart.sol\":4394:4415  category3.decrement() */\n      tag_115\n        /* \"contracts/Defly/NFTStakingStart.sol\":4394:4403  category3 */\n      0x03\n        /* \"contracts/Defly/NFTStakingStart.sol\":4394:4413  category3.decrement */\n      tag_109\n        /* \"contracts/Defly/NFTStakingStart.sol\":4394:4415  category3.decrement() */\n      jump\t// in\n    tag_115:\n        /* \"contracts/Defly/NFTStakingStart.sol\":4355:4517  if(Staker[_to].day == 60){... */\n      jump(tag_116)\n    tag_114:\n        /* \"contracts/Defly/NFTStakingStart.sol\":4465:4467  90 */\n      0x5a\n        /* \"contracts/Defly/NFTStakingStart.sol\":4446:4452  Staker */\n      0x08\n        /* \"contracts/Defly/NFTStakingStart.sol\":4446:4457  Staker[_to] */\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":4453:4456  _to */\n      dup5\n        /* \"contracts/Defly/NFTStakingStart.sol\":4446:4457  Staker[_to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Defly/NFTStakingStart.sol\":4446:4461  Staker[_to].day */\n      0x01\n      add\n      sload\n        /* \"contracts/Defly/NFTStakingStart.sol\":4446:4467  Staker[_to].day == 90 */\n      sub\n        /* \"contracts/Defly/NFTStakingStart.sol\":4443:4517  if(Staker[_to].day == 90){... */\n      tag_117\n      jumpi\n        /* \"contracts/Defly/NFTStakingStart.sol\":4482:4503  category4.decrement() */\n      tag_118\n        /* \"contracts/Defly/NFTStakingStart.sol\":4482:4491  category4 */\n      0x04\n        /* \"contracts/Defly/NFTStakingStart.sol\":4482:4501  category4.decrement */\n      tag_109\n        /* \"contracts/Defly/NFTStakingStart.sol\":4482:4503  category4.decrement() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/Defly/NFTStakingStart.sol\":4443:4517  if(Staker[_to].day == 90){... */\n    tag_117:\n        /* \"contracts/Defly/NFTStakingStart.sol\":4355:4517  if(Staker[_to].day == 60){... */\n    tag_116:\n        /* \"contracts/Defly/NFTStakingStart.sol\":4267:4517  if(Staker[_to].day == 30){... */\n    tag_113:\n        /* \"contracts/Defly/NFTStakingStart.sol\":4182:4517  if(Staker[_to].day == 15){... */\n    tag_110:\n        /* \"contracts/Defly/NFTStakingStart.sol\":3249:4525  {... */\n      pop\n        /* \"contracts/Defly/NFTStakingStart.sol\":3210:4525  function withdraw (address _to) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Defly/NFTStakingStart.sol\":718:745  address public ERC20Address */\n    tag_48:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Defly/NFTStakingStart.sol\":567:600  Counters.Counter public category2 */\n    tag_51:\n      0x02\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/Defly/NFTStakingStart.sol\":923:964  mapping (address => Detail) public Staker */\n    tag_55:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"contracts/Defly/NFTStakingStart.sol\":684:712  address public ERC721address */\n    tag_59:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Defly/NFTStakingStart.sol\":4782:4964  function AdminAddToken(uint _amount) public onlyOwner{... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_127:\n        /* \"contracts/Defly/NFTStakingStart.sol\":4867:4874  _amount */\n      dup1\n        /* \"contracts/Defly/NFTStakingStart.sol\":4845:4863  TotalRemaningToken */\n      0x07\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":4845:4874  TotalRemaningToken += _amount */\n      dup3\n      dup3\n      sload\n      tag_129\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n    tag_129:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Defly/NFTStakingStart.sol\":4884:4957  IERC20(ERC20Address).safeTransferFrom(msg.sender, address(this) ,_amount) */\n      tag_131\n        /* \"contracts/Defly/NFTStakingStart.sol\":4922:4932  msg.sender */\n      caller\n        /* \"contracts/Defly/NFTStakingStart.sol\":4942:4946  this */\n      address\n        /* \"contracts/Defly/NFTStakingStart.sol\":4949:4956  _amount */\n      dup4\n        /* \"contracts/Defly/NFTStakingStart.sol\":4891:4903  ERC20Address */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Defly/NFTStakingStart.sol\":4884:4921  IERC20(ERC20Address).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_132\n      swap1\n        /* \"contracts/Defly/NFTStakingStart.sol\":4884:4957  IERC20(ERC20Address).safeTransferFrom(msg.sender, address(this) ,_amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_131:\n        /* \"contracts/Defly/NFTStakingStart.sol\":4782:4964  function AdminAddToken(uint _amount) public onlyOwner{... */\n      pop\n      jump\t// out\n        /* \"contracts/Defly/NFTStakingStart.sol\":1516:3023  function deposit(uint TokenId,uint Days) public {... */\n    tag_68:\n        /* \"contracts/Defly/NFTStakingStart.sol\":1584:1590  Staker */\n      0x08\n        /* \"contracts/Defly/NFTStakingStart.sol\":1584:1602  Staker[msg.sender] */\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":1591:1601  msg.sender */\n      caller\n        /* \"contracts/Defly/NFTStakingStart.sol\":1584:1602  Staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Defly/NFTStakingStart.sol\":1584:1615  Staker[msg.sender].DepositToken */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Defly/NFTStakingStart.sol\":1583:1615  !Staker[msg.sender].DepositToken */\n      iszero\n        /* \"contracts/Defly/NFTStakingStart.sol\":1574:1642  require (!Staker[msg.sender].DepositToken,\"You Already Deposit NFT\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"contracts/Defly/NFTStakingStart.sol\":1663:1665  15 */\n      0x0f\n        /* \"contracts/Defly/NFTStakingStart.sol\":1655:1659  Days */\n      dup2\n        /* \"contracts/Defly/NFTStakingStart.sol\":1655:1665  Days == 15 */\n      sub\n        /* \"contracts/Defly/NFTStakingStart.sol\":1652:3013  if(Days == 15){... */\n      tag_137\n      jumpi\n        /* \"contracts/Defly/NFTStakingStart.sol\":1680:1701  category1.increment() */\n      tag_138\n        /* \"contracts/Defly/NFTStakingStart.sol\":1680:1689  category1 */\n      0x01\n        /* \"contracts/Defly/NFTStakingStart.sol\":1680:1699  category1.increment */\n      tag_139\n        /* \"contracts/Defly/NFTStakingStart.sol\":1680:1701  category1.increment() */\n      jump\t// in\n    tag_138:\n        /* \"contracts/Defly/NFTStakingStart.sol\":1745:1749  1000 */\n      0x03e8\n        /* \"contracts/Defly/NFTStakingStart.sol\":1723:1742  category1.current() */\n      tag_140\n        /* \"contracts/Defly/NFTStakingStart.sol\":1723:1732  category1 */\n      0x01\n        /* \"contracts/Defly/NFTStakingStart.sol\":1723:1740  category1.current */\n      tag_141\n        /* \"contracts/Defly/NFTStakingStart.sol\":1723:1742  category1.current() */\n      jump\t// in\n    tag_140:\n        /* \"contracts/Defly/NFTStakingStart.sol\":1723:1749  category1.current() <=1000 */\n      gt\n      iszero\n        /* \"contracts/Defly/NFTStakingStart.sol\":1715:1781  require(category1.current() <=1000,\"15 Days Category is Full !!!\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"contracts/Defly/NFTStakingStart.sol\":1816:1862  Detail(5000,Days,block.timestamp,TokenId,true) */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Defly/NFTStakingStart.sol\":1823:1827  5000 */\n      0x1388\n        /* \"contracts/Defly/NFTStakingStart.sol\":1816:1862  Detail(5000,Days,block.timestamp,TokenId,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Defly/NFTStakingStart.sol\":1828:1832  Days */\n      dup3\n        /* \"contracts/Defly/NFTStakingStart.sol\":1816:1862  Detail(5000,Days,block.timestamp,TokenId,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Defly/NFTStakingStart.sol\":1833:1848  block.timestamp */\n      timestamp\n        /* \"contracts/Defly/NFTStakingStart.sol\":1816:1862  Detail(5000,Days,block.timestamp,TokenId,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Defly/NFTStakingStart.sol\":1849:1856  TokenId */\n      dup4\n        /* \"contracts/Defly/NFTStakingStart.sol\":1816:1862  Detail(5000,Days,block.timestamp,TokenId,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Defly/NFTStakingStart.sol\":1857:1861  true */\n      0x01\n        /* \"contracts/Defly/NFTStakingStart.sol\":1816:1862  Detail(5000,Days,block.timestamp,TokenId,true) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/Defly/NFTStakingStart.sol\":1795:1801  Staker */\n      0x08\n        /* \"contracts/Defly/NFTStakingStart.sol\":1795:1813  Staker[msg.sender] */\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":1802:1812  msg.sender */\n      caller\n        /* \"contracts/Defly/NFTStakingStart.sol\":1795:1813  Staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Defly/NFTStakingStart.sol\":1795:1862  Staker[msg.sender] = Detail(5000,Days,block.timestamp,TokenId,true) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/Defly/NFTStakingStart.sol\":1884:1897  ERC721address */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Defly/NFTStakingStart.sol\":1876:1915  IERC721(ERC721address).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb88d4fde\n        /* \"contracts/Defly/NFTStakingStart.sol\":1916:1926  msg.sender */\n      caller\n        /* \"contracts/Defly/NFTStakingStart.sol\":1935:1939  this */\n      address\n        /* \"contracts/Defly/NFTStakingStart.sol\":1941:1948  TokenId */\n      dup6\n        /* \"contracts/Defly/NFTStakingStart.sol\":1876:1952  IERC721(ERC721address).safeTransferFrom(msg.sender,address(this),TokenId,\"\") */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_145:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_146\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_146:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_148\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Defly/NFTStakingStart.sol\":1652:3013  if(Days == 15){... */\n      jump(tag_149)\n    tag_137:\n        /* \"contracts/Defly/NFTStakingStart.sol\":1988:1990  30 */\n      0x1e\n        /* \"contracts/Defly/NFTStakingStart.sol\":1980:1984  Days */\n      dup2\n        /* \"contracts/Defly/NFTStakingStart.sol\":1980:1990  Days == 30 */\n      sub\n        /* \"contracts/Defly/NFTStakingStart.sol\":1977:3013  if(Days == 30){... */\n      tag_150\n      jumpi\n        /* \"contracts/Defly/NFTStakingStart.sol\":2005:2026  category2.increment() */\n      tag_151\n        /* \"contracts/Defly/NFTStakingStart.sol\":2005:2014  category2 */\n      0x02\n        /* \"contracts/Defly/NFTStakingStart.sol\":2005:2024  category2.increment */\n      tag_139\n        /* \"contracts/Defly/NFTStakingStart.sol\":2005:2026  category2.increment() */\n      jump\t// in\n    tag_151:\n        /* \"contracts/Defly/NFTStakingStart.sol\":2070:2073  750 */\n      0x02ee\n        /* \"contracts/Defly/NFTStakingStart.sol\":2048:2067  category2.current() */\n      tag_152\n        /* \"contracts/Defly/NFTStakingStart.sol\":2048:2057  category2 */\n      0x02\n        /* \"contracts/Defly/NFTStakingStart.sol\":2048:2065  category2.current */\n      tag_141\n        /* \"contracts/Defly/NFTStakingStart.sol\":2048:2067  category2.current() */\n      jump\t// in\n    tag_152:\n        /* \"contracts/Defly/NFTStakingStart.sol\":2048:2073  category2.current() <=750 */\n      gt\n      iszero\n        /* \"contracts/Defly/NFTStakingStart.sol\":2040:2105  require(category2.current() <=750,\"30 Days Category is Full !!!\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"contracts/Defly/NFTStakingStart.sol\":2140:2186  Detail(7500,Days,block.timestamp,TokenId,true) */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Defly/NFTStakingStart.sol\":2147:2151  7500 */\n      0x1d4c\n        /* \"contracts/Defly/NFTStakingStart.sol\":2140:2186  Detail(7500,Days,block.timestamp,TokenId,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Defly/NFTStakingStart.sol\":2152:2156  Days */\n      dup3\n        /* \"contracts/Defly/NFTStakingStart.sol\":2140:2186  Detail(7500,Days,block.timestamp,TokenId,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Defly/NFTStakingStart.sol\":2157:2172  block.timestamp */\n      timestamp\n        /* \"contracts/Defly/NFTStakingStart.sol\":2140:2186  Detail(7500,Days,block.timestamp,TokenId,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Defly/NFTStakingStart.sol\":2173:2180  TokenId */\n      dup4\n        /* \"contracts/Defly/NFTStakingStart.sol\":2140:2186  Detail(7500,Days,block.timestamp,TokenId,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Defly/NFTStakingStart.sol\":2181:2185  true */\n      0x01\n        /* \"contracts/Defly/NFTStakingStart.sol\":2140:2186  Detail(7500,Days,block.timestamp,TokenId,true) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/Defly/NFTStakingStart.sol\":2119:2125  Staker */\n      0x08\n        /* \"contracts/Defly/NFTStakingStart.sol\":2119:2137  Staker[msg.sender] */\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":2126:2136  msg.sender */\n      caller\n        /* \"contracts/Defly/NFTStakingStart.sol\":2119:2137  Staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Defly/NFTStakingStart.sol\":2119:2186  Staker[msg.sender] = Detail(7500,Days,block.timestamp,TokenId,true) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/Defly/NFTStakingStart.sol\":2208:2221  ERC721address */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Defly/NFTStakingStart.sol\":2200:2239  IERC721(ERC721address).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb88d4fde\n        /* \"contracts/Defly/NFTStakingStart.sol\":2240:2250  msg.sender */\n      caller\n        /* \"contracts/Defly/NFTStakingStart.sol\":2259:2263  this */\n      address\n        /* \"contracts/Defly/NFTStakingStart.sol\":2265:2272  TokenId */\n      dup6\n        /* \"contracts/Defly/NFTStakingStart.sol\":2200:2276  IERC721(ERC721address).safeTransferFrom(msg.sender,address(this),TokenId,\"\") */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_156:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_159\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_159:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Defly/NFTStakingStart.sol\":1977:3013  if(Days == 30){... */\n      jump(tag_160)\n    tag_150:\n        /* \"contracts/Defly/NFTStakingStart.sol\":2312:2314  60 */\n      0x3c\n        /* \"contracts/Defly/NFTStakingStart.sol\":2304:2308  Days */\n      dup2\n        /* \"contracts/Defly/NFTStakingStart.sol\":2304:2314  Days == 60 */\n      sub\n        /* \"contracts/Defly/NFTStakingStart.sol\":2301:3013  if(Days == 60){... */\n      tag_161\n      jumpi\n        /* \"contracts/Defly/NFTStakingStart.sol\":2329:2350  category3.increment() */\n      tag_162\n        /* \"contracts/Defly/NFTStakingStart.sol\":2329:2338  category3 */\n      0x03\n        /* \"contracts/Defly/NFTStakingStart.sol\":2329:2348  category3.increment */\n      tag_139\n        /* \"contracts/Defly/NFTStakingStart.sol\":2329:2350  category3.increment() */\n      jump\t// in\n    tag_162:\n        /* \"contracts/Defly/NFTStakingStart.sol\":2394:2397  500 */\n      0x01f4\n        /* \"contracts/Defly/NFTStakingStart.sol\":2372:2391  category3.current() */\n      tag_163\n        /* \"contracts/Defly/NFTStakingStart.sol\":2372:2381  category3 */\n      0x03\n        /* \"contracts/Defly/NFTStakingStart.sol\":2372:2389  category3.current */\n      tag_141\n        /* \"contracts/Defly/NFTStakingStart.sol\":2372:2391  category3.current() */\n      jump\t// in\n    tag_163:\n        /* \"contracts/Defly/NFTStakingStart.sol\":2372:2397  category3.current() <=500 */\n      gt\n      iszero\n        /* \"contracts/Defly/NFTStakingStart.sol\":2364:2429  require(category3.current() <=500,\"60 Days Category is Full !!!\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"contracts/Defly/NFTStakingStart.sol\":2464:2511  Detail(12500,Days,block.timestamp,TokenId,true) */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Defly/NFTStakingStart.sol\":2471:2476  12500 */\n      0x30d4\n        /* \"contracts/Defly/NFTStakingStart.sol\":2464:2511  Detail(12500,Days,block.timestamp,TokenId,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Defly/NFTStakingStart.sol\":2477:2481  Days */\n      dup3\n        /* \"contracts/Defly/NFTStakingStart.sol\":2464:2511  Detail(12500,Days,block.timestamp,TokenId,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Defly/NFTStakingStart.sol\":2482:2497  block.timestamp */\n      timestamp\n        /* \"contracts/Defly/NFTStakingStart.sol\":2464:2511  Detail(12500,Days,block.timestamp,TokenId,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Defly/NFTStakingStart.sol\":2498:2505  TokenId */\n      dup4\n        /* \"contracts/Defly/NFTStakingStart.sol\":2464:2511  Detail(12500,Days,block.timestamp,TokenId,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Defly/NFTStakingStart.sol\":2506:2510  true */\n      0x01\n        /* \"contracts/Defly/NFTStakingStart.sol\":2464:2511  Detail(12500,Days,block.timestamp,TokenId,true) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/Defly/NFTStakingStart.sol\":2443:2449  Staker */\n      0x08\n        /* \"contracts/Defly/NFTStakingStart.sol\":2443:2461  Staker[msg.sender] */\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":2450:2460  msg.sender */\n      caller\n        /* \"contracts/Defly/NFTStakingStart.sol\":2443:2461  Staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Defly/NFTStakingStart.sol\":2443:2511  Staker[msg.sender] = Detail(12500,Days,block.timestamp,TokenId,true) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/Defly/NFTStakingStart.sol\":2533:2546  ERC721address */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Defly/NFTStakingStart.sol\":2525:2564  IERC721(ERC721address).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb88d4fde\n        /* \"contracts/Defly/NFTStakingStart.sol\":2565:2575  msg.sender */\n      caller\n        /* \"contracts/Defly/NFTStakingStart.sol\":2584:2588  this */\n      address\n        /* \"contracts/Defly/NFTStakingStart.sol\":2590:2597  TokenId */\n      dup6\n        /* \"contracts/Defly/NFTStakingStart.sol\":2525:2601  IERC721(ERC721address).safeTransferFrom(msg.sender,address(this),TokenId,\"\") */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_167:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_168\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_168:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_170\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Defly/NFTStakingStart.sol\":2301:3013  if(Days == 60){... */\n      jump(tag_171)\n    tag_161:\n        /* \"contracts/Defly/NFTStakingStart.sol\":2637:2639  90 */\n      0x5a\n        /* \"contracts/Defly/NFTStakingStart.sol\":2629:2633  Days */\n      dup2\n        /* \"contracts/Defly/NFTStakingStart.sol\":2629:2639  Days == 90 */\n      sub\n        /* \"contracts/Defly/NFTStakingStart.sol\":2626:3013  if(Days == 90){... */\n      tag_172\n      jumpi\n        /* \"contracts/Defly/NFTStakingStart.sol\":2654:2675  category4.increment() */\n      tag_173\n        /* \"contracts/Defly/NFTStakingStart.sol\":2654:2663  category4 */\n      0x04\n        /* \"contracts/Defly/NFTStakingStart.sol\":2654:2673  category4.increment */\n      tag_139\n        /* \"contracts/Defly/NFTStakingStart.sol\":2654:2675  category4.increment() */\n      jump\t// in\n    tag_173:\n        /* \"contracts/Defly/NFTStakingStart.sol\":2719:2722  250 */\n      0xfa\n        /* \"contracts/Defly/NFTStakingStart.sol\":2697:2716  category4.current() */\n      tag_174\n        /* \"contracts/Defly/NFTStakingStart.sol\":2697:2706  category4 */\n      0x04\n        /* \"contracts/Defly/NFTStakingStart.sol\":2697:2714  category4.current */\n      tag_141\n        /* \"contracts/Defly/NFTStakingStart.sol\":2697:2716  category4.current() */\n      jump\t// in\n    tag_174:\n        /* \"contracts/Defly/NFTStakingStart.sol\":2697:2722  category4.current() <=250 */\n      gt\n      iszero\n        /* \"contracts/Defly/NFTStakingStart.sol\":2689:2754  require(category4.current() <=250,\"90 Days Category is Full !!!\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"contracts/Defly/NFTStakingStart.sol\":2789:2836  Detail(17500,Days,block.timestamp,TokenId,true) */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/Defly/NFTStakingStart.sol\":2796:2801  17500 */\n      0x445c\n        /* \"contracts/Defly/NFTStakingStart.sol\":2789:2836  Detail(17500,Days,block.timestamp,TokenId,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Defly/NFTStakingStart.sol\":2802:2806  Days */\n      dup3\n        /* \"contracts/Defly/NFTStakingStart.sol\":2789:2836  Detail(17500,Days,block.timestamp,TokenId,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Defly/NFTStakingStart.sol\":2807:2822  block.timestamp */\n      timestamp\n        /* \"contracts/Defly/NFTStakingStart.sol\":2789:2836  Detail(17500,Days,block.timestamp,TokenId,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Defly/NFTStakingStart.sol\":2823:2830  TokenId */\n      dup4\n        /* \"contracts/Defly/NFTStakingStart.sol\":2789:2836  Detail(17500,Days,block.timestamp,TokenId,true) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/Defly/NFTStakingStart.sol\":2831:2835  true */\n      0x01\n        /* \"contracts/Defly/NFTStakingStart.sol\":2789:2836  Detail(17500,Days,block.timestamp,TokenId,true) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/Defly/NFTStakingStart.sol\":2768:2774  Staker */\n      0x08\n        /* \"contracts/Defly/NFTStakingStart.sol\":2768:2786  Staker[msg.sender] */\n      0x00\n        /* \"contracts/Defly/NFTStakingStart.sol\":2775:2785  msg.sender */\n      caller\n        /* \"contracts/Defly/NFTStakingStart.sol\":2768:2786  Staker[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Defly/NFTStakingStart.sol\":2768:2836  Staker[msg.sender] = Detail(17500,Days,block.timestamp,TokenId,true) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/Defly/NFTStakingStart.sol\":2858:2871  ERC721address */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Defly/NFTStakingStart.sol\":2850:2889  IERC721(ERC721address).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xb88d4fde\n        /* \"contracts/Defly/NFTStakingStart.sol\":2890:2900  msg.sender */\n      caller\n        /* \"contracts/Defly/NFTStakingStart.sol\":2909:2913  this */\n      address\n        /* \"contracts/Defly/NFTStakingStart.sol\":2915:2922  TokenId */\n      dup6\n        /* \"contracts/Defly/NFTStakingStart.sol\":2850:2926  IERC721(ERC721address).safeTransferFrom(msg.sender,address(this),TokenId,\"\") */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_178:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_179\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_179:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_181:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Defly/NFTStakingStart.sol\":2626:3013  if(Days == 90){... */\n      jump(tag_182)\n    tag_172:\n        /* \"contracts/Defly/NFTStakingStart.sol\":2964:3002  revert(\"Sellect Days 15,30,60,90 !!!\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Defly/NFTStakingStart.sol\":2626:3013  if(Days == 90){... */\n    tag_182:\n        /* \"contracts/Defly/NFTStakingStart.sol\":2301:3013  if(Days == 60){... */\n    tag_171:\n        /* \"contracts/Defly/NFTStakingStart.sol\":1977:3013  if(Days == 30){... */\n    tag_160:\n        /* \"contracts/Defly/NFTStakingStart.sol\":1652:3013  if(Days == 15){... */\n    tag_149:\n        /* \"contracts/Defly/NFTStakingStart.sol\":1516:3023  function deposit(uint TokenId,uint Days) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_188:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Defly/NFTStakingStart.sol\":606:639  Counters.Counter public category3 */\n    tag_73:\n      0x03\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":763:968  function safeTransfer(... */\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:961  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":895:900  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":925:948  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":950:952  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":954:959  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_194\n      swap3\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:894  _callOptionalReturn */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:961  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":763:968  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1137:1150  uint256 value */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1153:1160  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1153:1167  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1137:1167  uint256 value = counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1193:1194  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1185:1190  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1185:1194  value > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1177:1226  require(value > 0, \"Counter: decrement overflow\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_198:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1285:1286  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1277:1282  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1277:1286  value - 1 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1260:1267  counter */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1260:1274  counter._value */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1260:1286  counter._value = value - 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1127:1303  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1074:1303  function decrement(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_202\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_204\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_44\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_205\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap1\n      tag_207\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_205:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1132:1137  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1162:1189  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1191:1195  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1197:1199  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1201:1206  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1139:1207  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_211\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1131  _callOptionalReturn */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1112:1208  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":974:1215  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1039  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1046  counter._value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:925  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":911:932  return counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4189  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_216\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4220:4224  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4200:4205  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4219  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_217\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4261  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4295:4296  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4285  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4292  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4296  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n      iszero\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4370:4380  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4359:4389  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_219\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_221:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3817:4453  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n    tag_217:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4006:4018  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_226\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4059:4065  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4067:4071  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4073:4074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4076:4088  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4058  functionCallWithValue */\n      tag_227\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4030:4089  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n    tag_227:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5125:5137  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5182:5187  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5178  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5187  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5149:5230  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_230\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_229:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5241:5253  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5255:5278  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5288  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5293  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5301:5306  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5308:5312  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5313  target.call{value: value}(data) */\n      mload(0x40)\n      tag_232\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_236\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_235)\n    tag_236:\n      0x60\n      swap2\n      pop\n    tag_235:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5240:5313  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_237\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5357:5363  target */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5365:5372  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5374:5384  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5386:5398  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5356  verifyCallResultFromTarget */\n      tag_238\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5323:5399  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\n    tag_238:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7646:7658  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7674:7681  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n      iszero\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7722:7723  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7711  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7718  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7723  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\n      tag_241\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7934  isContract(target) */\n      tag_242\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7927:7933  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7926  isContract */\n      tag_243\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7934  isContract(target) */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_244:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\n    tag_241:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8003:8013  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7996:8013  return returndata */\n      swap1\n      pop\n      jump(tag_239)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n      tag_248\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8052:8062  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8076  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8051  _revert */\n      tag_249\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\n    tag_239:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_243:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8616:9156  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_249:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8795:8796  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8785  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8792  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8796  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n      iszero\n      tag_252\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9003:9013  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8997:9014  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9059:9074  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9046:9056  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9042:9044  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9038:9057  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9031:9075  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9126:9138  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9119:9139  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap2\n      swap1\n      tag_255\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_257:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_258:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_259:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_260:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_323\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_259\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_261:\n        /* \"#utility.yul\":641:665   */\n      tag_325\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_260\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_326\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_326:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_262:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_328\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_261\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_263:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_264:\n        /* \"#utility.yul\":997:1021   */\n      tag_331\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_263\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_332\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_332:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_265:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_334\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_264\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1314   */\n    tag_266:\n        /* \"#utility.yul\":1306:1307   */\n      0x00\n        /* \"#utility.yul\":1303:1304   */\n      dup1\n        /* \"#utility.yul\":1296:1308   */\n      revert\n        /* \"#utility.yul\":1320:1437   */\n    tag_267:\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1426:1427   */\n      dup1\n        /* \"#utility.yul\":1419:1431   */\n      revert\n        /* \"#utility.yul\":1443:1560   */\n    tag_268:\n        /* \"#utility.yul\":1552:1553   */\n      0x00\n        /* \"#utility.yul\":1549:1550   */\n      dup1\n        /* \"#utility.yul\":1542:1554   */\n      revert\n        /* \"#utility.yul\":1579:2131   */\n    tag_269:\n        /* \"#utility.yul\":1636:1644   */\n      0x00\n        /* \"#utility.yul\":1646:1652   */\n      dup1\n        /* \"#utility.yul\":1696:1699   */\n      dup4\n        /* \"#utility.yul\":1689:1693   */\n      0x1f\n        /* \"#utility.yul\":1681:1687   */\n      dup5\n        /* \"#utility.yul\":1677:1694   */\n      add\n        /* \"#utility.yul\":1673:1700   */\n      slt\n        /* \"#utility.yul\":1663:1785   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":1704:1783   */\n      tag_340\n      tag_266\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":1663:1785   */\n    tag_339:\n        /* \"#utility.yul\":1817:1823   */\n      dup3\n        /* \"#utility.yul\":1804:1824   */\n      calldataload\n        /* \"#utility.yul\":1794:1824   */\n      swap1\n      pop\n        /* \"#utility.yul\":1847:1865   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1839:1845   */\n      dup2\n        /* \"#utility.yul\":1836:1866   */\n      gt\n        /* \"#utility.yul\":1833:1950   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":1869:1948   */\n      tag_342\n      tag_267\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":1833:1950   */\n    tag_341:\n        /* \"#utility.yul\":1983:1987   */\n      0x20\n        /* \"#utility.yul\":1975:1981   */\n      dup4\n        /* \"#utility.yul\":1971:1988   */\n      add\n        /* \"#utility.yul\":1959:1988   */\n      swap2\n      pop\n        /* \"#utility.yul\":2037:2040   */\n      dup4\n        /* \"#utility.yul\":2029:2033   */\n      0x01\n        /* \"#utility.yul\":2021:2027   */\n      dup3\n        /* \"#utility.yul\":2017:2034   */\n      mul\n        /* \"#utility.yul\":2007:2015   */\n      dup4\n        /* \"#utility.yul\":2003:2035   */\n      add\n        /* \"#utility.yul\":2000:2041   */\n      gt\n        /* \"#utility.yul\":1997:2125   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":2044:2123   */\n      tag_344\n      tag_268\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":1997:2125   */\n    tag_343:\n        /* \"#utility.yul\":1579:2131   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2137:3100   */\n    tag_23:\n        /* \"#utility.yul\":2234:2240   */\n      0x00\n        /* \"#utility.yul\":2242:2248   */\n      dup1\n        /* \"#utility.yul\":2250:2256   */\n      0x00\n        /* \"#utility.yul\":2258:2264   */\n      dup1\n        /* \"#utility.yul\":2266:2272   */\n      0x00\n        /* \"#utility.yul\":2315:2318   */\n      0x80\n        /* \"#utility.yul\":2303:2312   */\n      dup7\n        /* \"#utility.yul\":2294:2301   */\n      dup9\n        /* \"#utility.yul\":2290:2313   */\n      sub\n        /* \"#utility.yul\":2286:2319   */\n      slt\n        /* \"#utility.yul\":2283:2403   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":2322:2401   */\n      tag_347\n      tag_257\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":2283:2403   */\n    tag_346:\n        /* \"#utility.yul\":2442:2443   */\n      0x00\n        /* \"#utility.yul\":2467:2520   */\n      tag_348\n        /* \"#utility.yul\":2512:2519   */\n      dup9\n        /* \"#utility.yul\":2503:2509   */\n      dup3\n        /* \"#utility.yul\":2492:2501   */\n      dup10\n        /* \"#utility.yul\":2488:2510   */\n      add\n        /* \"#utility.yul\":2467:2520   */\n      tag_262\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":2457:2520   */\n      swap6\n      pop\n        /* \"#utility.yul\":2413:2530   */\n      pop\n        /* \"#utility.yul\":2569:2571   */\n      0x20\n        /* \"#utility.yul\":2595:2648   */\n      tag_349\n        /* \"#utility.yul\":2640:2647   */\n      dup9\n        /* \"#utility.yul\":2631:2637   */\n      dup3\n        /* \"#utility.yul\":2620:2629   */\n      dup10\n        /* \"#utility.yul\":2616:2638   */\n      add\n        /* \"#utility.yul\":2595:2648   */\n      tag_262\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":2585:2648   */\n      swap5\n      pop\n        /* \"#utility.yul\":2540:2658   */\n      pop\n        /* \"#utility.yul\":2697:2699   */\n      0x40\n        /* \"#utility.yul\":2723:2776   */\n      tag_350\n        /* \"#utility.yul\":2768:2775   */\n      dup9\n        /* \"#utility.yul\":2759:2765   */\n      dup3\n        /* \"#utility.yul\":2748:2757   */\n      dup10\n        /* \"#utility.yul\":2744:2766   */\n      add\n        /* \"#utility.yul\":2723:2776   */\n      tag_265\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":2713:2776   */\n      swap4\n      pop\n        /* \"#utility.yul\":2668:2786   */\n      pop\n        /* \"#utility.yul\":2853:2855   */\n      0x60\n        /* \"#utility.yul\":2842:2851   */\n      dup7\n        /* \"#utility.yul\":2838:2856   */\n      add\n        /* \"#utility.yul\":2825:2857   */\n      calldataload\n        /* \"#utility.yul\":2884:2902   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2876:2882   */\n      dup2\n        /* \"#utility.yul\":2873:2903   */\n      gt\n        /* \"#utility.yul\":2870:2987   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":2906:2985   */\n      tag_352\n      tag_258\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":2870:2987   */\n    tag_351:\n        /* \"#utility.yul\":3019:3083   */\n      tag_353\n        /* \"#utility.yul\":3075:3082   */\n      dup9\n        /* \"#utility.yul\":3066:3072   */\n      dup3\n        /* \"#utility.yul\":3055:3064   */\n      dup10\n        /* \"#utility.yul\":3051:3073   */\n      add\n        /* \"#utility.yul\":3019:3083   */\n      tag_269\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":3001:3083   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":2796:3093   */\n      pop\n        /* \"#utility.yul\":2137:3100   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3106:3255   */\n    tag_270:\n        /* \"#utility.yul\":3142:3149   */\n      0x00\n        /* \"#utility.yul\":3182:3248   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3175:3180   */\n      dup3\n        /* \"#utility.yul\":3171:3249   */\n      and\n        /* \"#utility.yul\":3160:3249   */\n      swap1\n      pop\n        /* \"#utility.yul\":3106:3255   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3261:3376   */\n    tag_271:\n        /* \"#utility.yul\":3346:3369   */\n      tag_356\n        /* \"#utility.yul\":3363:3368   */\n      dup2\n        /* \"#utility.yul\":3346:3369   */\n      tag_270\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":3341:3344   */\n      dup3\n        /* \"#utility.yul\":3334:3370   */\n      mstore\n        /* \"#utility.yul\":3261:3376   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3382:3600   */\n    tag_26:\n        /* \"#utility.yul\":3473:3477   */\n      0x00\n        /* \"#utility.yul\":3511:3513   */\n      0x20\n        /* \"#utility.yul\":3500:3509   */\n      dup3\n        /* \"#utility.yul\":3496:3514   */\n      add\n        /* \"#utility.yul\":3488:3514   */\n      swap1\n      pop\n        /* \"#utility.yul\":3524:3593   */\n      tag_358\n        /* \"#utility.yul\":3590:3591   */\n      0x00\n        /* \"#utility.yul\":3579:3588   */\n      dup4\n        /* \"#utility.yul\":3575:3592   */\n      add\n        /* \"#utility.yul\":3566:3572   */\n      dup5\n        /* \"#utility.yul\":3524:3593   */\n      tag_271\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":3382:3600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3606:3724   */\n    tag_272:\n        /* \"#utility.yul\":3693:3717   */\n      tag_360\n        /* \"#utility.yul\":3711:3716   */\n      dup2\n        /* \"#utility.yul\":3693:3717   */\n      tag_263\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":3688:3691   */\n      dup3\n        /* \"#utility.yul\":3681:3718   */\n      mstore\n        /* \"#utility.yul\":3606:3724   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3730:3952   */\n    tag_30:\n        /* \"#utility.yul\":3823:3827   */\n      0x00\n        /* \"#utility.yul\":3861:3863   */\n      0x20\n        /* \"#utility.yul\":3850:3859   */\n      dup3\n        /* \"#utility.yul\":3846:3864   */\n      add\n        /* \"#utility.yul\":3838:3864   */\n      swap1\n      pop\n        /* \"#utility.yul\":3874:3945   */\n      tag_362\n        /* \"#utility.yul\":3942:3943   */\n      0x00\n        /* \"#utility.yul\":3931:3940   */\n      dup4\n        /* \"#utility.yul\":3927:3944   */\n      add\n        /* \"#utility.yul\":3918:3924   */\n      dup5\n        /* \"#utility.yul\":3874:3945   */\n      tag_272\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":3730:3952   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3958:4287   */\n    tag_39:\n        /* \"#utility.yul\":4017:4023   */\n      0x00\n        /* \"#utility.yul\":4066:4068   */\n      0x20\n        /* \"#utility.yul\":4054:4063   */\n      dup3\n        /* \"#utility.yul\":4045:4052   */\n      dup5\n        /* \"#utility.yul\":4041:4064   */\n      sub\n        /* \"#utility.yul\":4037:4069   */\n      slt\n        /* \"#utility.yul\":4034:4153   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":4072:4151   */\n      tag_365\n      tag_257\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":4034:4153   */\n    tag_364:\n        /* \"#utility.yul\":4192:4193   */\n      0x00\n        /* \"#utility.yul\":4217:4270   */\n      tag_366\n        /* \"#utility.yul\":4262:4269   */\n      dup5\n        /* \"#utility.yul\":4253:4259   */\n      dup3\n        /* \"#utility.yul\":4242:4251   */\n      dup6\n        /* \"#utility.yul\":4238:4260   */\n      add\n        /* \"#utility.yul\":4217:4270   */\n      tag_262\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":4207:4270   */\n      swap2\n      pop\n        /* \"#utility.yul\":4163:4280   */\n      pop\n        /* \"#utility.yul\":3958:4287   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4293:4411   */\n    tag_273:\n        /* \"#utility.yul\":4380:4404   */\n      tag_368\n        /* \"#utility.yul\":4398:4403   */\n      dup2\n        /* \"#utility.yul\":4380:4404   */\n      tag_260\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":4375:4378   */\n      dup3\n        /* \"#utility.yul\":4368:4405   */\n      mstore\n        /* \"#utility.yul\":4293:4411   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4417:4639   */\n    tag_46:\n        /* \"#utility.yul\":4510:4514   */\n      0x00\n        /* \"#utility.yul\":4548:4550   */\n      0x20\n        /* \"#utility.yul\":4537:4546   */\n      dup3\n        /* \"#utility.yul\":4533:4551   */\n      add\n        /* \"#utility.yul\":4525:4551   */\n      swap1\n      pop\n        /* \"#utility.yul\":4561:4632   */\n      tag_370\n        /* \"#utility.yul\":4629:4630   */\n      0x00\n        /* \"#utility.yul\":4618:4627   */\n      dup4\n        /* \"#utility.yul\":4614:4631   */\n      add\n        /* \"#utility.yul\":4605:4611   */\n      dup5\n        /* \"#utility.yul\":4561:4632   */\n      tag_273\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":4417:4639   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4645:4735   */\n    tag_274:\n        /* \"#utility.yul\":4679:4686   */\n      0x00\n        /* \"#utility.yul\":4722:4727   */\n      dup2\n        /* \"#utility.yul\":4715:4728   */\n      iszero\n        /* \"#utility.yul\":4708:4729   */\n      iszero\n        /* \"#utility.yul\":4697:4729   */\n      swap1\n      pop\n        /* \"#utility.yul\":4645:4735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4741:4850   */\n    tag_275:\n        /* \"#utility.yul\":4822:4843   */\n      tag_373\n        /* \"#utility.yul\":4837:4842   */\n      dup2\n        /* \"#utility.yul\":4822:4843   */\n      tag_274\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":4817:4820   */\n      dup3\n        /* \"#utility.yul\":4810:4844   */\n      mstore\n        /* \"#utility.yul\":4741:4850   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4856:5508   */\n    tag_57:\n        /* \"#utility.yul\":5055:5059   */\n      0x00\n        /* \"#utility.yul\":5093:5096   */\n      0xa0\n        /* \"#utility.yul\":5082:5091   */\n      dup3\n        /* \"#utility.yul\":5078:5097   */\n      add\n        /* \"#utility.yul\":5070:5097   */\n      swap1\n      pop\n        /* \"#utility.yul\":5107:5178   */\n      tag_375\n        /* \"#utility.yul\":5175:5176   */\n      0x00\n        /* \"#utility.yul\":5164:5173   */\n      dup4\n        /* \"#utility.yul\":5160:5177   */\n      add\n        /* \"#utility.yul\":5151:5157   */\n      dup9\n        /* \"#utility.yul\":5107:5178   */\n      tag_272\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":5188:5260   */\n      tag_376\n        /* \"#utility.yul\":5256:5258   */\n      0x20\n        /* \"#utility.yul\":5245:5254   */\n      dup4\n        /* \"#utility.yul\":5241:5259   */\n      add\n        /* \"#utility.yul\":5232:5238   */\n      dup8\n        /* \"#utility.yul\":5188:5260   */\n      tag_272\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":5270:5342   */\n      tag_377\n        /* \"#utility.yul\":5338:5340   */\n      0x40\n        /* \"#utility.yul\":5327:5336   */\n      dup4\n        /* \"#utility.yul\":5323:5341   */\n      add\n        /* \"#utility.yul\":5314:5320   */\n      dup7\n        /* \"#utility.yul\":5270:5342   */\n      tag_272\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":5352:5424   */\n      tag_378\n        /* \"#utility.yul\":5420:5422   */\n      0x60\n        /* \"#utility.yul\":5409:5418   */\n      dup4\n        /* \"#utility.yul\":5405:5423   */\n      add\n        /* \"#utility.yul\":5396:5402   */\n      dup6\n        /* \"#utility.yul\":5352:5424   */\n      tag_272\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":5434:5501   */\n      tag_379\n        /* \"#utility.yul\":5496:5499   */\n      0x80\n        /* \"#utility.yul\":5485:5494   */\n      dup4\n        /* \"#utility.yul\":5481:5500   */\n      add\n        /* \"#utility.yul\":5472:5478   */\n      dup5\n        /* \"#utility.yul\":5434:5501   */\n      tag_275\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":4856:5508   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5514:5843   */\n    tag_63:\n        /* \"#utility.yul\":5573:5579   */\n      0x00\n        /* \"#utility.yul\":5622:5624   */\n      0x20\n        /* \"#utility.yul\":5610:5619   */\n      dup3\n        /* \"#utility.yul\":5601:5608   */\n      dup5\n        /* \"#utility.yul\":5597:5620   */\n      sub\n        /* \"#utility.yul\":5593:5625   */\n      slt\n        /* \"#utility.yul\":5590:5709   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":5628:5707   */\n      tag_382\n      tag_257\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":5590:5709   */\n    tag_381:\n        /* \"#utility.yul\":5748:5749   */\n      0x00\n        /* \"#utility.yul\":5773:5826   */\n      tag_383\n        /* \"#utility.yul\":5818:5825   */\n      dup5\n        /* \"#utility.yul\":5809:5815   */\n      dup3\n        /* \"#utility.yul\":5798:5807   */\n      dup6\n        /* \"#utility.yul\":5794:5816   */\n      add\n        /* \"#utility.yul\":5773:5826   */\n      tag_265\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":5763:5826   */\n      swap2\n      pop\n        /* \"#utility.yul\":5719:5836   */\n      pop\n        /* \"#utility.yul\":5514:5843   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5849:6323   */\n    tag_67:\n        /* \"#utility.yul\":5917:5923   */\n      0x00\n        /* \"#utility.yul\":5925:5931   */\n      dup1\n        /* \"#utility.yul\":5974:5976   */\n      0x40\n        /* \"#utility.yul\":5962:5971   */\n      dup4\n        /* \"#utility.yul\":5953:5960   */\n      dup6\n        /* \"#utility.yul\":5949:5972   */\n      sub\n        /* \"#utility.yul\":5945:5977   */\n      slt\n        /* \"#utility.yul\":5942:6061   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":5980:6059   */\n      tag_386\n      tag_257\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":5942:6061   */\n    tag_385:\n        /* \"#utility.yul\":6100:6101   */\n      0x00\n        /* \"#utility.yul\":6125:6178   */\n      tag_387\n        /* \"#utility.yul\":6170:6177   */\n      dup6\n        /* \"#utility.yul\":6161:6167   */\n      dup3\n        /* \"#utility.yul\":6150:6159   */\n      dup7\n        /* \"#utility.yul\":6146:6168   */\n      add\n        /* \"#utility.yul\":6125:6178   */\n      tag_265\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":6115:6178   */\n      swap3\n      pop\n        /* \"#utility.yul\":6071:6188   */\n      pop\n        /* \"#utility.yul\":6227:6229   */\n      0x20\n        /* \"#utility.yul\":6253:6306   */\n      tag_388\n        /* \"#utility.yul\":6298:6305   */\n      dup6\n        /* \"#utility.yul\":6289:6295   */\n      dup3\n        /* \"#utility.yul\":6278:6287   */\n      dup7\n        /* \"#utility.yul\":6274:6296   */\n      add\n        /* \"#utility.yul\":6253:6306   */\n      tag_265\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":6243:6306   */\n      swap2\n      pop\n        /* \"#utility.yul\":6198:6316   */\n      pop\n        /* \"#utility.yul\":5849:6323   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6329:6498   */\n    tag_276:\n        /* \"#utility.yul\":6413:6424   */\n      0x00\n        /* \"#utility.yul\":6447:6453   */\n      dup3\n        /* \"#utility.yul\":6442:6445   */\n      dup3\n        /* \"#utility.yul\":6435:6454   */\n      mstore\n        /* \"#utility.yul\":6487:6491   */\n      0x20\n        /* \"#utility.yul\":6482:6485   */\n      dup3\n        /* \"#utility.yul\":6478:6492   */\n      add\n        /* \"#utility.yul\":6463:6492   */\n      swap1\n      pop\n        /* \"#utility.yul\":6329:6498   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6504:6682   */\n    tag_277:\n        /* \"#utility.yul\":6644:6674   */\n      0x506c65617365204669727374204465706f736974204e46542021212100000000\n        /* \"#utility.yul\":6640:6641   */\n      0x00\n        /* \"#utility.yul\":6632:6638   */\n      dup3\n        /* \"#utility.yul\":6628:6642   */\n      add\n        /* \"#utility.yul\":6621:6675   */\n      mstore\n        /* \"#utility.yul\":6504:6682   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6688:7054   */\n    tag_278:\n        /* \"#utility.yul\":6830:6833   */\n      0x00\n        /* \"#utility.yul\":6851:6918   */\n      tag_392\n        /* \"#utility.yul\":6915:6917   */\n      0x1c\n        /* \"#utility.yul\":6910:6913   */\n      dup4\n        /* \"#utility.yul\":6851:6918   */\n      tag_276\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":6844:6918   */\n      swap2\n      pop\n        /* \"#utility.yul\":6927:7020   */\n      tag_393\n        /* \"#utility.yul\":7016:7019   */\n      dup3\n        /* \"#utility.yul\":6927:7020   */\n      tag_277\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":7045:7047   */\n      0x20\n        /* \"#utility.yul\":7040:7043   */\n      dup3\n        /* \"#utility.yul\":7036:7048   */\n      add\n        /* \"#utility.yul\":7029:7048   */\n      swap1\n      pop\n        /* \"#utility.yul\":6688:7054   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7060:7479   */\n    tag_79:\n        /* \"#utility.yul\":7226:7230   */\n      0x00\n        /* \"#utility.yul\":7264:7266   */\n      0x20\n        /* \"#utility.yul\":7253:7262   */\n      dup3\n        /* \"#utility.yul\":7249:7267   */\n      add\n        /* \"#utility.yul\":7241:7267   */\n      swap1\n      pop\n        /* \"#utility.yul\":7313:7322   */\n      dup2\n        /* \"#utility.yul\":7307:7311   */\n      dup2\n        /* \"#utility.yul\":7303:7323   */\n      sub\n        /* \"#utility.yul\":7299:7300   */\n      0x00\n        /* \"#utility.yul\":7288:7297   */\n      dup4\n        /* \"#utility.yul\":7284:7301   */\n      add\n        /* \"#utility.yul\":7277:7324   */\n      mstore\n        /* \"#utility.yul\":7341:7472   */\n      tag_395\n        /* \"#utility.yul\":7467:7471   */\n      dup2\n        /* \"#utility.yul\":7341:7472   */\n      tag_278\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":7333:7472   */\n      swap1\n      pop\n        /* \"#utility.yul\":7060:7479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7485:7665   */\n    tag_279:\n        /* \"#utility.yul\":7533:7610   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7530:7531   */\n      0x00\n        /* \"#utility.yul\":7523:7611   */\n      mstore\n        /* \"#utility.yul\":7630:7634   */\n      0x11\n        /* \"#utility.yul\":7627:7628   */\n      0x04\n        /* \"#utility.yul\":7620:7635   */\n      mstore\n        /* \"#utility.yul\":7654:7658   */\n      0x24\n        /* \"#utility.yul\":7651:7652   */\n      0x00\n        /* \"#utility.yul\":7644:7659   */\n      revert\n        /* \"#utility.yul\":7671:7865   */\n    tag_81:\n        /* \"#utility.yul\":7711:7715   */\n      0x00\n        /* \"#utility.yul\":7731:7751   */\n      tag_398\n        /* \"#utility.yul\":7749:7750   */\n      dup3\n        /* \"#utility.yul\":7731:7751   */\n      tag_263\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":7726:7751   */\n      swap2\n      pop\n        /* \"#utility.yul\":7765:7785   */\n      tag_399\n        /* \"#utility.yul\":7783:7784   */\n      dup4\n        /* \"#utility.yul\":7765:7785   */\n      tag_263\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":7760:7785   */\n      swap3\n      pop\n        /* \"#utility.yul\":7809:7810   */\n      dup3\n        /* \"#utility.yul\":7806:7807   */\n      dup3\n        /* \"#utility.yul\":7802:7811   */\n      sub\n        /* \"#utility.yul\":7794:7811   */\n      swap1\n      pop\n        /* \"#utility.yul\":7833:7834   */\n      dup2\n        /* \"#utility.yul\":7827:7831   */\n      dup2\n        /* \"#utility.yul\":7824:7835   */\n      gt\n        /* \"#utility.yul\":7821:7858   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":7838:7856   */\n      tag_401\n      tag_279\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":7821:7858   */\n    tag_400:\n        /* \"#utility.yul\":7671:7865   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7871:8051   */\n    tag_280:\n        /* \"#utility.yul\":7919:7996   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7916:7917   */\n      0x00\n        /* \"#utility.yul\":7909:7997   */\n      mstore\n        /* \"#utility.yul\":8016:8020   */\n      0x12\n        /* \"#utility.yul\":8013:8014   */\n      0x04\n        /* \"#utility.yul\":8006:8021   */\n      mstore\n        /* \"#utility.yul\":8040:8044   */\n      0x24\n        /* \"#utility.yul\":8037:8038   */\n      0x00\n        /* \"#utility.yul\":8030:8045   */\n      revert\n        /* \"#utility.yul\":8057:8242   */\n    tag_83:\n        /* \"#utility.yul\":8097:8098   */\n      0x00\n        /* \"#utility.yul\":8114:8134   */\n      tag_404\n        /* \"#utility.yul\":8132:8133   */\n      dup3\n        /* \"#utility.yul\":8114:8134   */\n      tag_263\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":8109:8134   */\n      swap2\n      pop\n        /* \"#utility.yul\":8148:8168   */\n      tag_405\n        /* \"#utility.yul\":8166:8167   */\n      dup4\n        /* \"#utility.yul\":8148:8168   */\n      tag_263\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":8143:8168   */\n      swap3\n      pop\n        /* \"#utility.yul\":8187:8188   */\n      dup3\n        /* \"#utility.yul\":8177:8212   */\n      tag_406\n      jumpi\n        /* \"#utility.yul\":8192:8210   */\n      tag_407\n      tag_280\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":8177:8212   */\n    tag_406:\n        /* \"#utility.yul\":8234:8235   */\n      dup3\n        /* \"#utility.yul\":8231:8232   */\n      dup3\n        /* \"#utility.yul\":8227:8236   */\n      div\n        /* \"#utility.yul\":8222:8236   */\n      swap1\n      pop\n        /* \"#utility.yul\":8057:8242   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8248:8658   */\n    tag_87:\n        /* \"#utility.yul\":8288:8295   */\n      0x00\n        /* \"#utility.yul\":8311:8331   */\n      tag_409\n        /* \"#utility.yul\":8329:8330   */\n      dup3\n        /* \"#utility.yul\":8311:8331   */\n      tag_263\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":8306:8331   */\n      swap2\n      pop\n        /* \"#utility.yul\":8345:8365   */\n      tag_410\n        /* \"#utility.yul\":8363:8364   */\n      dup4\n        /* \"#utility.yul\":8345:8365   */\n      tag_263\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":8340:8365   */\n      swap3\n      pop\n        /* \"#utility.yul\":8400:8401   */\n      dup3\n        /* \"#utility.yul\":8397:8398   */\n      dup3\n        /* \"#utility.yul\":8393:8402   */\n      mul\n        /* \"#utility.yul\":8422:8452   */\n      tag_411\n        /* \"#utility.yul\":8440:8451   */\n      dup2\n        /* \"#utility.yul\":8422:8452   */\n      tag_263\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":8411:8452   */\n      swap2\n      pop\n        /* \"#utility.yul\":8601:8602   */\n      dup3\n        /* \"#utility.yul\":8592:8599   */\n      dup3\n        /* \"#utility.yul\":8588:8603   */\n      div\n        /* \"#utility.yul\":8585:8586   */\n      dup5\n        /* \"#utility.yul\":8582:8604   */\n      eq\n        /* \"#utility.yul\":8562:8563   */\n      dup4\n        /* \"#utility.yul\":8555:8564   */\n      iszero\n        /* \"#utility.yul\":8535:8618   */\n      or\n        /* \"#utility.yul\":8512:8651   */\n      tag_412\n      jumpi\n        /* \"#utility.yul\":8631:8649   */\n      tag_413\n      tag_279\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":8512:8651   */\n    tag_412:\n        /* \"#utility.yul\":8296:8658   */\n      pop\n        /* \"#utility.yul\":8248:8658   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8664:8832   */\n    tag_281:\n        /* \"#utility.yul\":8747:8758   */\n      0x00\n        /* \"#utility.yul\":8781:8787   */\n      dup3\n        /* \"#utility.yul\":8776:8779   */\n      dup3\n        /* \"#utility.yul\":8769:8788   */\n      mstore\n        /* \"#utility.yul\":8821:8825   */\n      0x20\n        /* \"#utility.yul\":8816:8819   */\n      dup3\n        /* \"#utility.yul\":8812:8826   */\n      add\n        /* \"#utility.yul\":8797:8826   */\n      swap1\n      pop\n        /* \"#utility.yul\":8664:8832   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8838:8952   */\n    tag_282:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8958:9320   */\n    tag_283:\n        /* \"#utility.yul\":9099:9102   */\n      0x00\n        /* \"#utility.yul\":9120:9185   */\n      tag_417\n        /* \"#utility.yul\":9183:9184   */\n      0x00\n        /* \"#utility.yul\":9178:9181   */\n      dup4\n        /* \"#utility.yul\":9120:9185   */\n      tag_281\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":9113:9185   */\n      swap2\n      pop\n        /* \"#utility.yul\":9194:9287   */\n      tag_418\n        /* \"#utility.yul\":9283:9286   */\n      dup3\n        /* \"#utility.yul\":9194:9287   */\n      tag_282\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":9312:9313   */\n      0x00\n        /* \"#utility.yul\":9307:9310   */\n      dup3\n        /* \"#utility.yul\":9303:9314   */\n      add\n        /* \"#utility.yul\":9296:9314   */\n      swap1\n      pop\n        /* \"#utility.yul\":8958:9320   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9326:10074   */\n    tag_95:\n        /* \"#utility.yul\":9575:9579   */\n      0x00\n        /* \"#utility.yul\":9613:9616   */\n      0x80\n        /* \"#utility.yul\":9602:9611   */\n      dup3\n        /* \"#utility.yul\":9598:9617   */\n      add\n        /* \"#utility.yul\":9590:9617   */\n      swap1\n      pop\n        /* \"#utility.yul\":9627:9698   */\n      tag_420\n        /* \"#utility.yul\":9695:9696   */\n      0x00\n        /* \"#utility.yul\":9684:9693   */\n      dup4\n        /* \"#utility.yul\":9680:9697   */\n      add\n        /* \"#utility.yul\":9671:9677   */\n      dup7\n        /* \"#utility.yul\":9627:9698   */\n      tag_273\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":9708:9780   */\n      tag_421\n        /* \"#utility.yul\":9776:9778   */\n      0x20\n        /* \"#utility.yul\":9765:9774   */\n      dup4\n        /* \"#utility.yul\":9761:9779   */\n      add\n        /* \"#utility.yul\":9752:9758   */\n      dup6\n        /* \"#utility.yul\":9708:9780   */\n      tag_273\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":9790:9862   */\n      tag_422\n        /* \"#utility.yul\":9858:9860   */\n      0x40\n        /* \"#utility.yul\":9847:9856   */\n      dup4\n        /* \"#utility.yul\":9843:9861   */\n      add\n        /* \"#utility.yul\":9834:9840   */\n      dup5\n        /* \"#utility.yul\":9790:9862   */\n      tag_272\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":9909:9918   */\n      dup2\n        /* \"#utility.yul\":9903:9907   */\n      dup2\n        /* \"#utility.yul\":9899:9919   */\n      sub\n        /* \"#utility.yul\":9894:9896   */\n      0x60\n        /* \"#utility.yul\":9883:9892   */\n      dup4\n        /* \"#utility.yul\":9879:9897   */\n      add\n        /* \"#utility.yul\":9872:9920   */\n      mstore\n        /* \"#utility.yul\":9937:10067   */\n      tag_423\n        /* \"#utility.yul\":10062:10066   */\n      dup2\n        /* \"#utility.yul\":9937:10067   */\n      tag_283\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":9929:10067   */\n      swap1\n      pop\n        /* \"#utility.yul\":9326:10074   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10080:10271   */\n    tag_130:\n        /* \"#utility.yul\":10120:10123   */\n      0x00\n        /* \"#utility.yul\":10139:10159   */\n      tag_425\n        /* \"#utility.yul\":10157:10158   */\n      dup3\n        /* \"#utility.yul\":10139:10159   */\n      tag_263\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":10134:10159   */\n      swap2\n      pop\n        /* \"#utility.yul\":10173:10193   */\n      tag_426\n        /* \"#utility.yul\":10191:10192   */\n      dup4\n        /* \"#utility.yul\":10173:10193   */\n      tag_263\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":10168:10193   */\n      swap3\n      pop\n        /* \"#utility.yul\":10216:10217   */\n      dup3\n        /* \"#utility.yul\":10213:10214   */\n      dup3\n        /* \"#utility.yul\":10209:10218   */\n      add\n        /* \"#utility.yul\":10202:10218   */\n      swap1\n      pop\n        /* \"#utility.yul\":10237:10240   */\n      dup1\n        /* \"#utility.yul\":10234:10235   */\n      dup3\n        /* \"#utility.yul\":10231:10241   */\n      gt\n        /* \"#utility.yul\":10228:10264   */\n      iszero\n      tag_427\n      jumpi\n        /* \"#utility.yul\":10244:10262   */\n      tag_428\n      tag_279\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":10228:10264   */\n    tag_427:\n        /* \"#utility.yul\":10080:10271   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10277:10450   */\n    tag_284:\n        /* \"#utility.yul\":10417:10442   */\n      0x596f7520416c7265616479204465706f736974204e4654000000000000000000\n        /* \"#utility.yul\":10413:10414   */\n      0x00\n        /* \"#utility.yul\":10405:10411   */\n      dup3\n        /* \"#utility.yul\":10401:10415   */\n      add\n        /* \"#utility.yul\":10394:10443   */\n      mstore\n        /* \"#utility.yul\":10277:10450   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10456:10822   */\n    tag_285:\n        /* \"#utility.yul\":10598:10601   */\n      0x00\n        /* \"#utility.yul\":10619:10686   */\n      tag_431\n        /* \"#utility.yul\":10683:10685   */\n      0x17\n        /* \"#utility.yul\":10678:10681   */\n      dup4\n        /* \"#utility.yul\":10619:10686   */\n      tag_276\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":10612:10686   */\n      swap2\n      pop\n        /* \"#utility.yul\":10695:10788   */\n      tag_432\n        /* \"#utility.yul\":10784:10787   */\n      dup3\n        /* \"#utility.yul\":10695:10788   */\n      tag_284\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":10813:10815   */\n      0x20\n        /* \"#utility.yul\":10808:10811   */\n      dup3\n        /* \"#utility.yul\":10804:10816   */\n      add\n        /* \"#utility.yul\":10797:10816   */\n      swap1\n      pop\n        /* \"#utility.yul\":10456:10822   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10828:11247   */\n    tag_136:\n        /* \"#utility.yul\":10994:10998   */\n      0x00\n        /* \"#utility.yul\":11032:11034   */\n      0x20\n        /* \"#utility.yul\":11021:11030   */\n      dup3\n        /* \"#utility.yul\":11017:11035   */\n      add\n        /* \"#utility.yul\":11009:11035   */\n      swap1\n      pop\n        /* \"#utility.yul\":11081:11090   */\n      dup2\n        /* \"#utility.yul\":11075:11079   */\n      dup2\n        /* \"#utility.yul\":11071:11091   */\n      sub\n        /* \"#utility.yul\":11067:11068   */\n      0x00\n        /* \"#utility.yul\":11056:11065   */\n      dup4\n        /* \"#utility.yul\":11052:11069   */\n      add\n        /* \"#utility.yul\":11045:11092   */\n      mstore\n        /* \"#utility.yul\":11109:11240   */\n      tag_434\n        /* \"#utility.yul\":11235:11239   */\n      dup2\n        /* \"#utility.yul\":11109:11240   */\n      tag_285\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":11101:11240   */\n      swap1\n      pop\n        /* \"#utility.yul\":10828:11247   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11253:11431   */\n    tag_286:\n        /* \"#utility.yul\":11393:11423   */\n      0x313520446179732043617465676f72792069732046756c6c2021212100000000\n        /* \"#utility.yul\":11389:11390   */\n      0x00\n        /* \"#utility.yul\":11381:11387   */\n      dup3\n        /* \"#utility.yul\":11377:11391   */\n      add\n        /* \"#utility.yul\":11370:11424   */\n      mstore\n        /* \"#utility.yul\":11253:11431   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11437:11803   */\n    tag_287:\n        /* \"#utility.yul\":11579:11582   */\n      0x00\n        /* \"#utility.yul\":11600:11667   */\n      tag_437\n        /* \"#utility.yul\":11664:11666   */\n      0x1c\n        /* \"#utility.yul\":11659:11662   */\n      dup4\n        /* \"#utility.yul\":11600:11667   */\n      tag_276\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":11593:11667   */\n      swap2\n      pop\n        /* \"#utility.yul\":11676:11769   */\n      tag_438\n        /* \"#utility.yul\":11765:11768   */\n      dup3\n        /* \"#utility.yul\":11676:11769   */\n      tag_286\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":11794:11796   */\n      0x20\n        /* \"#utility.yul\":11789:11792   */\n      dup3\n        /* \"#utility.yul\":11785:11797   */\n      add\n        /* \"#utility.yul\":11778:11797   */\n      swap1\n      pop\n        /* \"#utility.yul\":11437:11803   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11809:12228   */\n    tag_144:\n        /* \"#utility.yul\":11975:11979   */\n      0x00\n        /* \"#utility.yul\":12013:12015   */\n      0x20\n        /* \"#utility.yul\":12002:12011   */\n      dup3\n        /* \"#utility.yul\":11998:12016   */\n      add\n        /* \"#utility.yul\":11990:12016   */\n      swap1\n      pop\n        /* \"#utility.yul\":12062:12071   */\n      dup2\n        /* \"#utility.yul\":12056:12060   */\n      dup2\n        /* \"#utility.yul\":12052:12072   */\n      sub\n        /* \"#utility.yul\":12048:12049   */\n      0x00\n        /* \"#utility.yul\":12037:12046   */\n      dup4\n        /* \"#utility.yul\":12033:12050   */\n      add\n        /* \"#utility.yul\":12026:12073   */\n      mstore\n        /* \"#utility.yul\":12090:12221   */\n      tag_440\n        /* \"#utility.yul\":12216:12220   */\n      dup2\n        /* \"#utility.yul\":12090:12221   */\n      tag_287\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":12082:12221   */\n      swap1\n      pop\n        /* \"#utility.yul\":11809:12228   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12234:12412   */\n    tag_288:\n        /* \"#utility.yul\":12374:12404   */\n      0x333020446179732043617465676f72792069732046756c6c2021212100000000\n        /* \"#utility.yul\":12370:12371   */\n      0x00\n        /* \"#utility.yul\":12362:12368   */\n      dup3\n        /* \"#utility.yul\":12358:12372   */\n      add\n        /* \"#utility.yul\":12351:12405   */\n      mstore\n        /* \"#utility.yul\":12234:12412   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12418:12784   */\n    tag_289:\n        /* \"#utility.yul\":12560:12563   */\n      0x00\n        /* \"#utility.yul\":12581:12648   */\n      tag_443\n        /* \"#utility.yul\":12645:12647   */\n      0x1c\n        /* \"#utility.yul\":12640:12643   */\n      dup4\n        /* \"#utility.yul\":12581:12648   */\n      tag_276\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":12574:12648   */\n      swap2\n      pop\n        /* \"#utility.yul\":12657:12750   */\n      tag_444\n        /* \"#utility.yul\":12746:12749   */\n      dup3\n        /* \"#utility.yul\":12657:12750   */\n      tag_288\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":12775:12777   */\n      0x20\n        /* \"#utility.yul\":12770:12773   */\n      dup3\n        /* \"#utility.yul\":12766:12778   */\n      add\n        /* \"#utility.yul\":12759:12778   */\n      swap1\n      pop\n        /* \"#utility.yul\":12418:12784   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12790:13209   */\n    tag_155:\n        /* \"#utility.yul\":12956:12960   */\n      0x00\n        /* \"#utility.yul\":12994:12996   */\n      0x20\n        /* \"#utility.yul\":12983:12992   */\n      dup3\n        /* \"#utility.yul\":12979:12997   */\n      add\n        /* \"#utility.yul\":12971:12997   */\n      swap1\n      pop\n        /* \"#utility.yul\":13043:13052   */\n      dup2\n        /* \"#utility.yul\":13037:13041   */\n      dup2\n        /* \"#utility.yul\":13033:13053   */\n      sub\n        /* \"#utility.yul\":13029:13030   */\n      0x00\n        /* \"#utility.yul\":13018:13027   */\n      dup4\n        /* \"#utility.yul\":13014:13031   */\n      add\n        /* \"#utility.yul\":13007:13054   */\n      mstore\n        /* \"#utility.yul\":13071:13202   */\n      tag_446\n        /* \"#utility.yul\":13197:13201   */\n      dup2\n        /* \"#utility.yul\":13071:13202   */\n      tag_289\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":13063:13202   */\n      swap1\n      pop\n        /* \"#utility.yul\":12790:13209   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13215:13393   */\n    tag_290:\n        /* \"#utility.yul\":13355:13385   */\n      0x363020446179732043617465676f72792069732046756c6c2021212100000000\n        /* \"#utility.yul\":13351:13352   */\n      0x00\n        /* \"#utility.yul\":13343:13349   */\n      dup3\n        /* \"#utility.yul\":13339:13353   */\n      add\n        /* \"#utility.yul\":13332:13386   */\n      mstore\n        /* \"#utility.yul\":13215:13393   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13399:13765   */\n    tag_291:\n        /* \"#utility.yul\":13541:13544   */\n      0x00\n        /* \"#utility.yul\":13562:13629   */\n      tag_449\n        /* \"#utility.yul\":13626:13628   */\n      0x1c\n        /* \"#utility.yul\":13621:13624   */\n      dup4\n        /* \"#utility.yul\":13562:13629   */\n      tag_276\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":13555:13629   */\n      swap2\n      pop\n        /* \"#utility.yul\":13638:13731   */\n      tag_450\n        /* \"#utility.yul\":13727:13730   */\n      dup3\n        /* \"#utility.yul\":13638:13731   */\n      tag_290\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":13756:13758   */\n      0x20\n        /* \"#utility.yul\":13751:13754   */\n      dup3\n        /* \"#utility.yul\":13747:13759   */\n      add\n        /* \"#utility.yul\":13740:13759   */\n      swap1\n      pop\n        /* \"#utility.yul\":13399:13765   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13771:14190   */\n    tag_166:\n        /* \"#utility.yul\":13937:13941   */\n      0x00\n        /* \"#utility.yul\":13975:13977   */\n      0x20\n        /* \"#utility.yul\":13964:13973   */\n      dup3\n        /* \"#utility.yul\":13960:13978   */\n      add\n        /* \"#utility.yul\":13952:13978   */\n      swap1\n      pop\n        /* \"#utility.yul\":14024:14033   */\n      dup2\n        /* \"#utility.yul\":14018:14022   */\n      dup2\n        /* \"#utility.yul\":14014:14034   */\n      sub\n        /* \"#utility.yul\":14010:14011   */\n      0x00\n        /* \"#utility.yul\":13999:14008   */\n      dup4\n        /* \"#utility.yul\":13995:14012   */\n      add\n        /* \"#utility.yul\":13988:14035   */\n      mstore\n        /* \"#utility.yul\":14052:14183   */\n      tag_452\n        /* \"#utility.yul\":14178:14182   */\n      dup2\n        /* \"#utility.yul\":14052:14183   */\n      tag_291\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":14044:14183   */\n      swap1\n      pop\n        /* \"#utility.yul\":13771:14190   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14196:14374   */\n    tag_292:\n        /* \"#utility.yul\":14336:14366   */\n      0x393020446179732043617465676f72792069732046756c6c2021212100000000\n        /* \"#utility.yul\":14332:14333   */\n      0x00\n        /* \"#utility.yul\":14324:14330   */\n      dup3\n        /* \"#utility.yul\":14320:14334   */\n      add\n        /* \"#utility.yul\":14313:14367   */\n      mstore\n        /* \"#utility.yul\":14196:14374   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14380:14746   */\n    tag_293:\n        /* \"#utility.yul\":14522:14525   */\n      0x00\n        /* \"#utility.yul\":14543:14610   */\n      tag_455\n        /* \"#utility.yul\":14607:14609   */\n      0x1c\n        /* \"#utility.yul\":14602:14605   */\n      dup4\n        /* \"#utility.yul\":14543:14610   */\n      tag_276\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":14536:14610   */\n      swap2\n      pop\n        /* \"#utility.yul\":14619:14712   */\n      tag_456\n        /* \"#utility.yul\":14708:14711   */\n      dup3\n        /* \"#utility.yul\":14619:14712   */\n      tag_292\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":14737:14739   */\n      0x20\n        /* \"#utility.yul\":14732:14735   */\n      dup3\n        /* \"#utility.yul\":14728:14740   */\n      add\n        /* \"#utility.yul\":14721:14740   */\n      swap1\n      pop\n        /* \"#utility.yul\":14380:14746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14752:15171   */\n    tag_177:\n        /* \"#utility.yul\":14918:14922   */\n      0x00\n        /* \"#utility.yul\":14956:14958   */\n      0x20\n        /* \"#utility.yul\":14945:14954   */\n      dup3\n        /* \"#utility.yul\":14941:14959   */\n      add\n        /* \"#utility.yul\":14933:14959   */\n      swap1\n      pop\n        /* \"#utility.yul\":15005:15014   */\n      dup2\n        /* \"#utility.yul\":14999:15003   */\n      dup2\n        /* \"#utility.yul\":14995:15015   */\n      sub\n        /* \"#utility.yul\":14991:14992   */\n      0x00\n        /* \"#utility.yul\":14980:14989   */\n      dup4\n        /* \"#utility.yul\":14976:14993   */\n      add\n        /* \"#utility.yul\":14969:15016   */\n      mstore\n        /* \"#utility.yul\":15033:15164   */\n      tag_458\n        /* \"#utility.yul\":15159:15163   */\n      dup2\n        /* \"#utility.yul\":15033:15164   */\n      tag_293\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":15025:15164   */\n      swap1\n      pop\n        /* \"#utility.yul\":14752:15171   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15177:15355   */\n    tag_294:\n        /* \"#utility.yul\":15317:15347   */\n      0x53656c6c65637420446179732031352c33302c36302c39302021212100000000\n        /* \"#utility.yul\":15313:15314   */\n      0x00\n        /* \"#utility.yul\":15305:15311   */\n      dup3\n        /* \"#utility.yul\":15301:15315   */\n      add\n        /* \"#utility.yul\":15294:15348   */\n      mstore\n        /* \"#utility.yul\":15177:15355   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15361:15727   */\n    tag_295:\n        /* \"#utility.yul\":15503:15506   */\n      0x00\n        /* \"#utility.yul\":15524:15591   */\n      tag_461\n        /* \"#utility.yul\":15588:15590   */\n      0x1c\n        /* \"#utility.yul\":15583:15586   */\n      dup4\n        /* \"#utility.yul\":15524:15591   */\n      tag_276\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":15517:15591   */\n      swap2\n      pop\n        /* \"#utility.yul\":15600:15693   */\n      tag_462\n        /* \"#utility.yul\":15689:15692   */\n      dup3\n        /* \"#utility.yul\":15600:15693   */\n      tag_294\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":15718:15720   */\n      0x20\n        /* \"#utility.yul\":15713:15716   */\n      dup3\n        /* \"#utility.yul\":15709:15721   */\n      add\n        /* \"#utility.yul\":15702:15721   */\n      swap1\n      pop\n        /* \"#utility.yul\":15361:15727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15733:16152   */\n    tag_184:\n        /* \"#utility.yul\":15899:15903   */\n      0x00\n        /* \"#utility.yul\":15937:15939   */\n      0x20\n        /* \"#utility.yul\":15926:15935   */\n      dup3\n        /* \"#utility.yul\":15922:15940   */\n      add\n        /* \"#utility.yul\":15914:15940   */\n      swap1\n      pop\n        /* \"#utility.yul\":15986:15995   */\n      dup2\n        /* \"#utility.yul\":15980:15984   */\n      dup2\n        /* \"#utility.yul\":15976:15996   */\n      sub\n        /* \"#utility.yul\":15972:15973   */\n      0x00\n        /* \"#utility.yul\":15961:15970   */\n      dup4\n        /* \"#utility.yul\":15957:15974   */\n      add\n        /* \"#utility.yul\":15950:15997   */\n      mstore\n        /* \"#utility.yul\":16014:16145   */\n      tag_464\n        /* \"#utility.yul\":16140:16144   */\n      dup2\n        /* \"#utility.yul\":16014:16145   */\n      tag_295\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":16006:16145   */\n      swap1\n      pop\n        /* \"#utility.yul\":15733:16152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16158:16383   */\n    tag_296:\n        /* \"#utility.yul\":16298:16332   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":16294:16295   */\n      0x00\n        /* \"#utility.yul\":16286:16292   */\n      dup3\n        /* \"#utility.yul\":16282:16296   */\n      add\n        /* \"#utility.yul\":16275:16333   */\n      mstore\n        /* \"#utility.yul\":16367:16375   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16362:16364   */\n      0x20\n        /* \"#utility.yul\":16354:16360   */\n      dup3\n        /* \"#utility.yul\":16350:16365   */\n      add\n        /* \"#utility.yul\":16343:16376   */\n      mstore\n        /* \"#utility.yul\":16158:16383   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16389:16755   */\n    tag_297:\n        /* \"#utility.yul\":16531:16534   */\n      0x00\n        /* \"#utility.yul\":16552:16619   */\n      tag_467\n        /* \"#utility.yul\":16616:16618   */\n      0x26\n        /* \"#utility.yul\":16611:16614   */\n      dup4\n        /* \"#utility.yul\":16552:16619   */\n      tag_276\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":16545:16619   */\n      swap2\n      pop\n        /* \"#utility.yul\":16628:16721   */\n      tag_468\n        /* \"#utility.yul\":16717:16720   */\n      dup3\n        /* \"#utility.yul\":16628:16721   */\n      tag_296\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":16746:16748   */\n      0x40\n        /* \"#utility.yul\":16741:16744   */\n      dup3\n        /* \"#utility.yul\":16737:16749   */\n      add\n        /* \"#utility.yul\":16730:16749   */\n      swap1\n      pop\n        /* \"#utility.yul\":16389:16755   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16761:17180   */\n    tag_190:\n        /* \"#utility.yul\":16927:16931   */\n      0x00\n        /* \"#utility.yul\":16965:16967   */\n      0x20\n        /* \"#utility.yul\":16954:16963   */\n      dup3\n        /* \"#utility.yul\":16950:16968   */\n      add\n        /* \"#utility.yul\":16942:16968   */\n      swap1\n      pop\n        /* \"#utility.yul\":17014:17023   */\n      dup2\n        /* \"#utility.yul\":17008:17012   */\n      dup2\n        /* \"#utility.yul\":17004:17024   */\n      sub\n        /* \"#utility.yul\":17000:17001   */\n      0x00\n        /* \"#utility.yul\":16989:16998   */\n      dup4\n        /* \"#utility.yul\":16985:17002   */\n      add\n        /* \"#utility.yul\":16978:17025   */\n      mstore\n        /* \"#utility.yul\":17042:17173   */\n      tag_470\n        /* \"#utility.yul\":17168:17172   */\n      dup2\n        /* \"#utility.yul\":17042:17173   */\n      tag_297\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":17034:17173   */\n      swap1\n      pop\n        /* \"#utility.yul\":16761:17180   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17186:17518   */\n    tag_195:\n        /* \"#utility.yul\":17307:17311   */\n      0x00\n        /* \"#utility.yul\":17345:17347   */\n      0x40\n        /* \"#utility.yul\":17334:17343   */\n      dup3\n        /* \"#utility.yul\":17330:17348   */\n      add\n        /* \"#utility.yul\":17322:17348   */\n      swap1\n      pop\n        /* \"#utility.yul\":17358:17429   */\n      tag_472\n        /* \"#utility.yul\":17426:17427   */\n      0x00\n        /* \"#utility.yul\":17415:17424   */\n      dup4\n        /* \"#utility.yul\":17411:17428   */\n      add\n        /* \"#utility.yul\":17402:17408   */\n      dup6\n        /* \"#utility.yul\":17358:17429   */\n      tag_273\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":17439:17511   */\n      tag_473\n        /* \"#utility.yul\":17507:17509   */\n      0x20\n        /* \"#utility.yul\":17496:17505   */\n      dup4\n        /* \"#utility.yul\":17492:17510   */\n      add\n        /* \"#utility.yul\":17483:17489   */\n      dup5\n        /* \"#utility.yul\":17439:17511   */\n      tag_272\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":17186:17518   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17524:17701   */\n    tag_298:\n        /* \"#utility.yul\":17664:17693   */\n      0x436f756e7465723a2064656372656d656e74206f766572666c6f770000000000\n        /* \"#utility.yul\":17660:17661   */\n      0x00\n        /* \"#utility.yul\":17652:17658   */\n      dup3\n        /* \"#utility.yul\":17648:17662   */\n      add\n        /* \"#utility.yul\":17641:17694   */\n      mstore\n        /* \"#utility.yul\":17524:17701   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17707:18073   */\n    tag_299:\n        /* \"#utility.yul\":17849:17852   */\n      0x00\n        /* \"#utility.yul\":17870:17937   */\n      tag_476\n        /* \"#utility.yul\":17934:17936   */\n      0x1b\n        /* \"#utility.yul\":17929:17932   */\n      dup4\n        /* \"#utility.yul\":17870:17937   */\n      tag_276\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":17863:17937   */\n      swap2\n      pop\n        /* \"#utility.yul\":17946:18039   */\n      tag_477\n        /* \"#utility.yul\":18035:18038   */\n      dup3\n        /* \"#utility.yul\":17946:18039   */\n      tag_298\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":18064:18066   */\n      0x20\n        /* \"#utility.yul\":18059:18062   */\n      dup3\n        /* \"#utility.yul\":18055:18067   */\n      add\n        /* \"#utility.yul\":18048:18067   */\n      swap1\n      pop\n        /* \"#utility.yul\":17707:18073   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18079:18498   */\n    tag_200:\n        /* \"#utility.yul\":18245:18249   */\n      0x00\n        /* \"#utility.yul\":18283:18285   */\n      0x20\n        /* \"#utility.yul\":18272:18281   */\n      dup3\n        /* \"#utility.yul\":18268:18286   */\n      add\n        /* \"#utility.yul\":18260:18286   */\n      swap1\n      pop\n        /* \"#utility.yul\":18332:18341   */\n      dup2\n        /* \"#utility.yul\":18326:18330   */\n      dup2\n        /* \"#utility.yul\":18322:18342   */\n      sub\n        /* \"#utility.yul\":18318:18319   */\n      0x00\n        /* \"#utility.yul\":18307:18316   */\n      dup4\n        /* \"#utility.yul\":18303:18320   */\n      add\n        /* \"#utility.yul\":18296:18343   */\n      mstore\n        /* \"#utility.yul\":18360:18491   */\n      tag_479\n        /* \"#utility.yul\":18486:18490   */\n      dup2\n        /* \"#utility.yul\":18360:18491   */\n      tag_299\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":18352:18491   */\n      swap1\n      pop\n        /* \"#utility.yul\":18079:18498   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18504:18686   */\n    tag_300:\n        /* \"#utility.yul\":18644:18678   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":18640:18641   */\n      0x00\n        /* \"#utility.yul\":18632:18638   */\n      dup3\n        /* \"#utility.yul\":18628:18642   */\n      add\n        /* \"#utility.yul\":18621:18679   */\n      mstore\n        /* \"#utility.yul\":18504:18686   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18692:19058   */\n    tag_301:\n        /* \"#utility.yul\":18834:18837   */\n      0x00\n        /* \"#utility.yul\":18855:18922   */\n      tag_482\n        /* \"#utility.yul\":18919:18921   */\n      0x20\n        /* \"#utility.yul\":18914:18917   */\n      dup4\n        /* \"#utility.yul\":18855:18922   */\n      tag_276\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":18848:18922   */\n      swap2\n      pop\n        /* \"#utility.yul\":18931:19024   */\n      tag_483\n        /* \"#utility.yul\":19020:19023   */\n      dup3\n        /* \"#utility.yul\":18931:19024   */\n      tag_300\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":19049:19051   */\n      0x20\n        /* \"#utility.yul\":19044:19047   */\n      dup3\n        /* \"#utility.yul\":19040:19052   */\n      add\n        /* \"#utility.yul\":19033:19052   */\n      swap1\n      pop\n        /* \"#utility.yul\":18692:19058   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19064:19483   */\n    tag_207:\n        /* \"#utility.yul\":19230:19234   */\n      0x00\n        /* \"#utility.yul\":19268:19270   */\n      0x20\n        /* \"#utility.yul\":19257:19266   */\n      dup3\n        /* \"#utility.yul\":19253:19271   */\n      add\n        /* \"#utility.yul\":19245:19271   */\n      swap1\n      pop\n        /* \"#utility.yul\":19317:19326   */\n      dup2\n        /* \"#utility.yul\":19311:19315   */\n      dup2\n        /* \"#utility.yul\":19307:19327   */\n      sub\n        /* \"#utility.yul\":19303:19304   */\n      0x00\n        /* \"#utility.yul\":19292:19301   */\n      dup4\n        /* \"#utility.yul\":19288:19305   */\n      add\n        /* \"#utility.yul\":19281:19328   */\n      mstore\n        /* \"#utility.yul\":19345:19476   */\n      tag_485\n        /* \"#utility.yul\":19471:19475   */\n      dup2\n        /* \"#utility.yul\":19345:19476   */\n      tag_301\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":19337:19476   */\n      swap1\n      pop\n        /* \"#utility.yul\":19064:19483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19489:19931   */\n    tag_212:\n        /* \"#utility.yul\":19638:19642   */\n      0x00\n        /* \"#utility.yul\":19676:19678   */\n      0x60\n        /* \"#utility.yul\":19665:19674   */\n      dup3\n        /* \"#utility.yul\":19661:19679   */\n      add\n        /* \"#utility.yul\":19653:19679   */\n      swap1\n      pop\n        /* \"#utility.yul\":19689:19760   */\n      tag_487\n        /* \"#utility.yul\":19757:19758   */\n      0x00\n        /* \"#utility.yul\":19746:19755   */\n      dup4\n        /* \"#utility.yul\":19742:19759   */\n      add\n        /* \"#utility.yul\":19733:19739   */\n      dup7\n        /* \"#utility.yul\":19689:19760   */\n      tag_273\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":19770:19842   */\n      tag_488\n        /* \"#utility.yul\":19838:19840   */\n      0x20\n        /* \"#utility.yul\":19827:19836   */\n      dup4\n        /* \"#utility.yul\":19823:19841   */\n      add\n        /* \"#utility.yul\":19814:19820   */\n      dup6\n        /* \"#utility.yul\":19770:19842   */\n      tag_273\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":19852:19924   */\n      tag_489\n        /* \"#utility.yul\":19920:19922   */\n      0x40\n        /* \"#utility.yul\":19909:19918   */\n      dup4\n        /* \"#utility.yul\":19905:19923   */\n      add\n        /* \"#utility.yul\":19896:19902   */\n      dup5\n        /* \"#utility.yul\":19852:19924   */\n      tag_272\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":19489:19931   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19937:20053   */\n    tag_302:\n        /* \"#utility.yul\":20007:20028   */\n      tag_491\n        /* \"#utility.yul\":20022:20027   */\n      dup2\n        /* \"#utility.yul\":20007:20028   */\n      tag_274\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":20000:20005   */\n      dup2\n        /* \"#utility.yul\":19997:20029   */\n      eq\n        /* \"#utility.yul\":19987:20047   */\n      tag_492\n      jumpi\n        /* \"#utility.yul\":20043:20044   */\n      0x00\n        /* \"#utility.yul\":20040:20041   */\n      dup1\n        /* \"#utility.yul\":20033:20045   */\n      revert\n        /* \"#utility.yul\":19987:20047   */\n    tag_492:\n        /* \"#utility.yul\":19937:20053   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20059:20196   */\n    tag_303:\n        /* \"#utility.yul\":20113:20118   */\n      0x00\n        /* \"#utility.yul\":20144:20150   */\n      dup2\n        /* \"#utility.yul\":20138:20151   */\n      mload\n        /* \"#utility.yul\":20129:20151   */\n      swap1\n      pop\n        /* \"#utility.yul\":20160:20190   */\n      tag_494\n        /* \"#utility.yul\":20184:20189   */\n      dup2\n        /* \"#utility.yul\":20160:20190   */\n      tag_302\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":20059:20196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20202:20547   */\n    tag_220:\n        /* \"#utility.yul\":20269:20275   */\n      0x00\n        /* \"#utility.yul\":20318:20320   */\n      0x20\n        /* \"#utility.yul\":20306:20315   */\n      dup3\n        /* \"#utility.yul\":20297:20304   */\n      dup5\n        /* \"#utility.yul\":20293:20316   */\n      sub\n        /* \"#utility.yul\":20289:20321   */\n      slt\n        /* \"#utility.yul\":20286:20405   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":20324:20403   */\n      tag_497\n      tag_257\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":20286:20405   */\n    tag_496:\n        /* \"#utility.yul\":20444:20445   */\n      0x00\n        /* \"#utility.yul\":20469:20530   */\n      tag_498\n        /* \"#utility.yul\":20522:20529   */\n      dup5\n        /* \"#utility.yul\":20513:20519   */\n      dup3\n        /* \"#utility.yul\":20502:20511   */\n      dup6\n        /* \"#utility.yul\":20498:20520   */\n      add\n        /* \"#utility.yul\":20469:20530   */\n      tag_303\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":20459:20530   */\n      swap2\n      pop\n        /* \"#utility.yul\":20415:20540   */\n      pop\n        /* \"#utility.yul\":20202:20547   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20553:20782   */\n    tag_304:\n        /* \"#utility.yul\":20693:20727   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":20689:20690   */\n      0x00\n        /* \"#utility.yul\":20681:20687   */\n      dup3\n        /* \"#utility.yul\":20677:20691   */\n      add\n        /* \"#utility.yul\":20670:20728   */\n      mstore\n        /* \"#utility.yul\":20762:20774   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20757:20759   */\n      0x20\n        /* \"#utility.yul\":20749:20755   */\n      dup3\n        /* \"#utility.yul\":20745:20760   */\n      add\n        /* \"#utility.yul\":20738:20775   */\n      mstore\n        /* \"#utility.yul\":20553:20782   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20788:21154   */\n    tag_305:\n        /* \"#utility.yul\":20930:20933   */\n      0x00\n        /* \"#utility.yul\":20951:21018   */\n      tag_501\n        /* \"#utility.yul\":21015:21017   */\n      0x2a\n        /* \"#utility.yul\":21010:21013   */\n      dup4\n        /* \"#utility.yul\":20951:21018   */\n      tag_276\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":20944:21018   */\n      swap2\n      pop\n        /* \"#utility.yul\":21027:21120   */\n      tag_502\n        /* \"#utility.yul\":21116:21119   */\n      dup3\n        /* \"#utility.yul\":21027:21120   */\n      tag_304\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":21145:21147   */\n      0x40\n        /* \"#utility.yul\":21140:21143   */\n      dup3\n        /* \"#utility.yul\":21136:21148   */\n      add\n        /* \"#utility.yul\":21129:21148   */\n      swap1\n      pop\n        /* \"#utility.yul\":20788:21154   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21160:21579   */\n    tag_223:\n        /* \"#utility.yul\":21326:21330   */\n      0x00\n        /* \"#utility.yul\":21364:21366   */\n      0x20\n        /* \"#utility.yul\":21353:21362   */\n      dup3\n        /* \"#utility.yul\":21349:21367   */\n      add\n        /* \"#utility.yul\":21341:21367   */\n      swap1\n      pop\n        /* \"#utility.yul\":21413:21422   */\n      dup2\n        /* \"#utility.yul\":21407:21411   */\n      dup2\n        /* \"#utility.yul\":21403:21423   */\n      sub\n        /* \"#utility.yul\":21399:21400   */\n      0x00\n        /* \"#utility.yul\":21388:21397   */\n      dup4\n        /* \"#utility.yul\":21384:21401   */\n      add\n        /* \"#utility.yul\":21377:21424   */\n      mstore\n        /* \"#utility.yul\":21441:21572   */\n      tag_504\n        /* \"#utility.yul\":21567:21571   */\n      dup2\n        /* \"#utility.yul\":21441:21572   */\n      tag_305\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":21433:21572   */\n      swap1\n      pop\n        /* \"#utility.yul\":21160:21579   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21585:21810   */\n    tag_306:\n        /* \"#utility.yul\":21725:21759   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":21721:21722   */\n      0x00\n        /* \"#utility.yul\":21713:21719   */\n      dup3\n        /* \"#utility.yul\":21709:21723   */\n      add\n        /* \"#utility.yul\":21702:21760   */\n      mstore\n        /* \"#utility.yul\":21794:21802   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21789:21791   */\n      0x20\n        /* \"#utility.yul\":21781:21787   */\n      dup3\n        /* \"#utility.yul\":21777:21792   */\n      add\n        /* \"#utility.yul\":21770:21803   */\n      mstore\n        /* \"#utility.yul\":21585:21810   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21816:22182   */\n    tag_307:\n        /* \"#utility.yul\":21958:21961   */\n      0x00\n        /* \"#utility.yul\":21979:22046   */\n      tag_507\n        /* \"#utility.yul\":22043:22045   */\n      0x26\n        /* \"#utility.yul\":22038:22041   */\n      dup4\n        /* \"#utility.yul\":21979:22046   */\n      tag_276\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":21972:22046   */\n      swap2\n      pop\n        /* \"#utility.yul\":22055:22148   */\n      tag_508\n        /* \"#utility.yul\":22144:22147   */\n      dup3\n        /* \"#utility.yul\":22055:22148   */\n      tag_306\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":22173:22175   */\n      0x40\n        /* \"#utility.yul\":22168:22171   */\n      dup3\n        /* \"#utility.yul\":22164:22176   */\n      add\n        /* \"#utility.yul\":22157:22176   */\n      swap1\n      pop\n        /* \"#utility.yul\":21816:22182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22188:22607   */\n    tag_231:\n        /* \"#utility.yul\":22354:22358   */\n      0x00\n        /* \"#utility.yul\":22392:22394   */\n      0x20\n        /* \"#utility.yul\":22381:22390   */\n      dup3\n        /* \"#utility.yul\":22377:22395   */\n      add\n        /* \"#utility.yul\":22369:22395   */\n      swap1\n      pop\n        /* \"#utility.yul\":22441:22450   */\n      dup2\n        /* \"#utility.yul\":22435:22439   */\n      dup2\n        /* \"#utility.yul\":22431:22451   */\n      sub\n        /* \"#utility.yul\":22427:22428   */\n      0x00\n        /* \"#utility.yul\":22416:22425   */\n      dup4\n        /* \"#utility.yul\":22412:22429   */\n      add\n        /* \"#utility.yul\":22405:22452   */\n      mstore\n        /* \"#utility.yul\":22469:22600   */\n      tag_510\n        /* \"#utility.yul\":22595:22599   */\n      dup2\n        /* \"#utility.yul\":22469:22600   */\n      tag_307\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":22461:22600   */\n      swap1\n      pop\n        /* \"#utility.yul\":22188:22607   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22613:22711   */\n    tag_308:\n        /* \"#utility.yul\":22664:22670   */\n      0x00\n        /* \"#utility.yul\":22698:22703   */\n      dup2\n        /* \"#utility.yul\":22692:22704   */\n      mload\n        /* \"#utility.yul\":22682:22704   */\n      swap1\n      pop\n        /* \"#utility.yul\":22613:22711   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22717:22864   */\n    tag_309:\n        /* \"#utility.yul\":22818:22829   */\n      0x00\n        /* \"#utility.yul\":22855:22858   */\n      dup2\n        /* \"#utility.yul\":22840:22858   */\n      swap1\n      pop\n        /* \"#utility.yul\":22717:22864   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22870:23116   */\n    tag_310:\n        /* \"#utility.yul\":22951:22952   */\n      0x00\n        /* \"#utility.yul\":22961:23074   */\n    tag_514:\n        /* \"#utility.yul\":22975:22981   */\n      dup4\n        /* \"#utility.yul\":22972:22973   */\n      dup2\n        /* \"#utility.yul\":22969:22982   */\n      lt\n        /* \"#utility.yul\":22961:23074   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":23060:23061   */\n      dup1\n        /* \"#utility.yul\":23055:23058   */\n      dup3\n        /* \"#utility.yul\":23051:23062   */\n      add\n        /* \"#utility.yul\":23045:23063   */\n      mload\n        /* \"#utility.yul\":23041:23042   */\n      dup2\n        /* \"#utility.yul\":23036:23039   */\n      dup5\n        /* \"#utility.yul\":23032:23043   */\n      add\n        /* \"#utility.yul\":23025:23064   */\n      mstore\n        /* \"#utility.yul\":22997:22999   */\n      0x20\n        /* \"#utility.yul\":22994:22995   */\n      dup2\n        /* \"#utility.yul\":22990:23000   */\n      add\n        /* \"#utility.yul\":22985:23000   */\n      swap1\n      pop\n        /* \"#utility.yul\":22961:23074   */\n      jump(tag_514)\n    tag_516:\n        /* \"#utility.yul\":23108:23109   */\n      0x00\n        /* \"#utility.yul\":23099:23105   */\n      dup5\n        /* \"#utility.yul\":23094:23097   */\n      dup5\n        /* \"#utility.yul\":23090:23106   */\n      add\n        /* \"#utility.yul\":23083:23110   */\n      mstore\n        /* \"#utility.yul\":22932:23116   */\n      pop\n        /* \"#utility.yul\":22870:23116   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23122:23508   */\n    tag_311:\n        /* \"#utility.yul\":23226:23229   */\n      0x00\n        /* \"#utility.yul\":23254:23292   */\n      tag_518\n        /* \"#utility.yul\":23286:23291   */\n      dup3\n        /* \"#utility.yul\":23254:23292   */\n      tag_308\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":23308:23396   */\n      tag_519\n        /* \"#utility.yul\":23389:23395   */\n      dup2\n        /* \"#utility.yul\":23384:23387   */\n      dup6\n        /* \"#utility.yul\":23308:23396   */\n      tag_309\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":23301:23396   */\n      swap4\n      pop\n        /* \"#utility.yul\":23405:23470   */\n      tag_520\n        /* \"#utility.yul\":23463:23469   */\n      dup2\n        /* \"#utility.yul\":23458:23461   */\n      dup6\n        /* \"#utility.yul\":23451:23455   */\n      0x20\n        /* \"#utility.yul\":23444:23449   */\n      dup7\n        /* \"#utility.yul\":23440:23456   */\n      add\n        /* \"#utility.yul\":23405:23470   */\n      tag_310\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":23495:23501   */\n      dup1\n        /* \"#utility.yul\":23490:23493   */\n      dup5\n        /* \"#utility.yul\":23486:23502   */\n      add\n        /* \"#utility.yul\":23479:23502   */\n      swap2\n      pop\n        /* \"#utility.yul\":23230:23508   */\n      pop\n        /* \"#utility.yul\":23122:23508   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23514:23785   */\n    tag_233:\n        /* \"#utility.yul\":23644:23647   */\n      0x00\n        /* \"#utility.yul\":23666:23759   */\n      tag_522\n        /* \"#utility.yul\":23755:23758   */\n      dup3\n        /* \"#utility.yul\":23746:23752   */\n      dup5\n        /* \"#utility.yul\":23666:23759   */\n      tag_311\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":23659:23759   */\n      swap2\n      pop\n        /* \"#utility.yul\":23776:23779   */\n      dup2\n        /* \"#utility.yul\":23769:23779   */\n      swap1\n      pop\n        /* \"#utility.yul\":23514:23785   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23791:23970   */\n    tag_312:\n        /* \"#utility.yul\":23931:23962   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":23927:23928   */\n      0x00\n        /* \"#utility.yul\":23919:23925   */\n      dup3\n        /* \"#utility.yul\":23915:23929   */\n      add\n        /* \"#utility.yul\":23908:23963   */\n      mstore\n        /* \"#utility.yul\":23791:23970   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23976:24342   */\n    tag_313:\n        /* \"#utility.yul\":24118:24121   */\n      0x00\n        /* \"#utility.yul\":24139:24206   */\n      tag_525\n        /* \"#utility.yul\":24203:24205   */\n      0x1d\n        /* \"#utility.yul\":24198:24201   */\n      dup4\n        /* \"#utility.yul\":24139:24206   */\n      tag_276\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":24132:24206   */\n      swap2\n      pop\n        /* \"#utility.yul\":24215:24308   */\n      tag_526\n        /* \"#utility.yul\":24304:24307   */\n      dup3\n        /* \"#utility.yul\":24215:24308   */\n      tag_312\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":24333:24335   */\n      0x20\n        /* \"#utility.yul\":24328:24331   */\n      dup3\n        /* \"#utility.yul\":24324:24336   */\n      add\n        /* \"#utility.yul\":24317:24336   */\n      swap1\n      pop\n        /* \"#utility.yul\":23976:24342   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24348:24767   */\n    tag_246:\n        /* \"#utility.yul\":24514:24518   */\n      0x00\n        /* \"#utility.yul\":24552:24554   */\n      0x20\n        /* \"#utility.yul\":24541:24550   */\n      dup3\n        /* \"#utility.yul\":24537:24555   */\n      add\n        /* \"#utility.yul\":24529:24555   */\n      swap1\n      pop\n        /* \"#utility.yul\":24601:24610   */\n      dup2\n        /* \"#utility.yul\":24595:24599   */\n      dup2\n        /* \"#utility.yul\":24591:24611   */\n      sub\n        /* \"#utility.yul\":24587:24588   */\n      0x00\n        /* \"#utility.yul\":24576:24585   */\n      dup4\n        /* \"#utility.yul\":24572:24589   */\n      add\n        /* \"#utility.yul\":24565:24612   */\n      mstore\n        /* \"#utility.yul\":24629:24760   */\n      tag_528\n        /* \"#utility.yul\":24755:24759   */\n      dup2\n        /* \"#utility.yul\":24629:24760   */\n      tag_313\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":24621:24760   */\n      swap1\n      pop\n        /* \"#utility.yul\":24348:24767   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24773:24872   */\n    tag_314:\n        /* \"#utility.yul\":24825:24831   */\n      0x00\n        /* \"#utility.yul\":24859:24864   */\n      dup2\n        /* \"#utility.yul\":24853:24865   */\n      mload\n        /* \"#utility.yul\":24843:24865   */\n      swap1\n      pop\n        /* \"#utility.yul\":24773:24872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24878:24980   */\n    tag_315:\n        /* \"#utility.yul\":24919:24925   */\n      0x00\n        /* \"#utility.yul\":24970:24972   */\n      0x1f\n        /* \"#utility.yul\":24966:24973   */\n      not\n        /* \"#utility.yul\":24961:24963   */\n      0x1f\n        /* \"#utility.yul\":24954:24959   */\n      dup4\n        /* \"#utility.yul\":24950:24964   */\n      add\n        /* \"#utility.yul\":24946:24974   */\n      and\n        /* \"#utility.yul\":24936:24974   */\n      swap1\n      pop\n        /* \"#utility.yul\":24878:24980   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24986:25363   */\n    tag_316:\n        /* \"#utility.yul\":25074:25077   */\n      0x00\n        /* \"#utility.yul\":25102:25141   */\n      tag_532\n        /* \"#utility.yul\":25135:25140   */\n      dup3\n        /* \"#utility.yul\":25102:25141   */\n      tag_314\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":25157:25228   */\n      tag_533\n        /* \"#utility.yul\":25221:25227   */\n      dup2\n        /* \"#utility.yul\":25216:25219   */\n      dup6\n        /* \"#utility.yul\":25157:25228   */\n      tag_276\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":25150:25228   */\n      swap4\n      pop\n        /* \"#utility.yul\":25237:25302   */\n      tag_534\n        /* \"#utility.yul\":25295:25301   */\n      dup2\n        /* \"#utility.yul\":25290:25293   */\n      dup6\n        /* \"#utility.yul\":25283:25287   */\n      0x20\n        /* \"#utility.yul\":25276:25281   */\n      dup7\n        /* \"#utility.yul\":25272:25288   */\n      add\n        /* \"#utility.yul\":25237:25302   */\n      tag_310\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":25327:25356   */\n      tag_535\n        /* \"#utility.yul\":25349:25355   */\n      dup2\n        /* \"#utility.yul\":25327:25356   */\n      tag_315\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":25322:25325   */\n      dup5\n        /* \"#utility.yul\":25318:25357   */\n      add\n        /* \"#utility.yul\":25311:25357   */\n      swap2\n      pop\n        /* \"#utility.yul\":25078:25363   */\n      pop\n        /* \"#utility.yul\":24986:25363   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25369:25682   */\n    tag_255:\n        /* \"#utility.yul\":25482:25486   */\n      0x00\n        /* \"#utility.yul\":25520:25522   */\n      0x20\n        /* \"#utility.yul\":25509:25518   */\n      dup3\n        /* \"#utility.yul\":25505:25523   */\n      add\n        /* \"#utility.yul\":25497:25523   */\n      swap1\n      pop\n        /* \"#utility.yul\":25569:25578   */\n      dup2\n        /* \"#utility.yul\":25563:25567   */\n      dup2\n        /* \"#utility.yul\":25559:25579   */\n      sub\n        /* \"#utility.yul\":25555:25556   */\n      0x00\n        /* \"#utility.yul\":25544:25553   */\n      dup4\n        /* \"#utility.yul\":25540:25557   */\n      add\n        /* \"#utility.yul\":25533:25580   */\n      mstore\n        /* \"#utility.yul\":25597:25675   */\n      tag_537\n        /* \"#utility.yul\":25670:25674   */\n      dup2\n        /* \"#utility.yul\":25661:25667   */\n      dup5\n        /* \"#utility.yul\":25597:25675   */\n      tag_316\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":25589:25675   */\n      swap1\n      pop\n        /* \"#utility.yul\":25369:25682   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220696eee21959a9054876795242494d36cf68c886e01a507b4927edccf4965a48364736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1196": {
									"entryPoint": null,
									"id": 1196,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1014": {
									"entryPoint": 225,
									"id": 1014,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 233,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 434,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 429,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:13",
														"type": ""
													}
												],
												"src": "696:143:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "939:413:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "985:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "981:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "952:32:13"
															},
															"nodeType": "YulIf",
															"src": "949:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "1078:128:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1122:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1216:129:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1261:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "901:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "912:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "924:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "932:6:13",
														"type": ""
													}
												],
												"src": "845:507:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620028b5380380620028b5833981810160405281019062000037919062000217565b620000576200004b620000e160201b60201c565b620000e960201b60201c565b81600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200025e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001df82620001b2565b9050919050565b620001f181620001d2565b8114620001fd57600080fd5b50565b6000815190506200021181620001e6565b92915050565b60008060408385031215620002315762000230620001ad565b5b6000620002418582860162000200565b9250506020620002548582860162000200565b9150509250929050565b612647806200026e6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a6021ace11610097578063c0cd40ee11610066578063c0cd40ee14610256578063e2bbb15814610272578063f2fde38b1461028e578063f7d252f4146102aa576100f5565b8063a6021ace146101c8578063b10558ab146101e6578063b4e929d414610204578063b7171a2e14610238576100f5565b80634930e5d1116100d35780634930e5d11461016657806351cff8d914610184578063715018a6146101a05780638da5cb5b146101aa576100f5565b8063150b7a02146100fa5780633f4312301461012a57806341fcd29a14610148575b600080fd5b610114600480360381019061010f9190611a66565b6102c8565b6040516101219190611b29565b60405180910390f35b6101326102dd565b60405161013f9190611b53565b60405180910390f35b6101506102e9565b60405161015d9190611b53565b60405180910390f35b61016e6102f5565b60405161017b9190611b53565b60405180910390f35b61019e60048036038101906101999190611b6e565b6102fb565b005b6101a8610a9b565b005b6101b2610aaf565b6040516101bf9190611baa565b60405180910390f35b6101d0610ad8565b6040516101dd9190611baa565b60405180910390f35b6101ee610afe565b6040516101fb9190611b53565b60405180910390f35b61021e60048036038101906102199190611b6e565b610b0a565b60405161022f959493929190611be0565b60405180910390f35b610240610b4d565b60405161024d9190611baa565b60405180910390f35b610270600480360381019061026b9190611c33565b610b73565b005b61028c60048036038101906102879190611c60565b610be6565b005b6102a860048036038101906102a39190611b6e565b611367565b005b6102b26113ea565b6040516102bf9190611b53565b60405180910390f35b600063150b7a0260e01b905095945050505050565b60018060000154905081565b60048060000154905081565b60075481565b600860008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff1661038a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038190611cfd565b60405180910390fd5b600062015180600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154426103de9190611d4c565b6103e89190611daf565b9050600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154811015610700576000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546104c69190611daf565b826104d19190611de0565b9050600060648260026104e49190611de0565b6104ee9190611daf565b90506105488482846105009190611d4c565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166113f69092919063ffffffff16565b61059761dead82600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166113f69092919063ffffffff16565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3086600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546040518463ffffffff1660e01b815260040161063893929190611e59565b600060405180830381600087803b15801561065257600080fd5b505af1158015610666573d6000803e3d6000fd5b50505050816007600082825461067c9190611d4c565b92505081905550600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808201600090556001820160009055600282016000905560038201600090556004820160006101000a81549060ff021916905550505050610934565b61078f82600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166113f69092919063ffffffff16565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3084600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546040518463ffffffff1660e01b815260040161083093929190611e59565b600060405180830381600087803b15801561084a57600080fd5b505af115801561085e573d6000803e3d6000fd5b50505050600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600760008282546108b69190611d4c565b92505081905550600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808201600090556001820160009055600282016000905560038201600090556004820160006101000a81549060ff021916905550505b600f600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101540361098d57610988600161147c565b610a97565b601e600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154036109e6576109e1600261147c565b610a96565b603c600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015403610a3f57610a3a600361147c565b610a95565b605a600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015403610a9457610a93600461147c565b5b5b5b5b5050565b610aa36114d8565b610aad6000611556565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60028060000154905081565b60086020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b7b6114d8565b8060076000828254610b8d9190611ea3565b92505081905550610be3333083600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661161a909392919063ffffffff16565b50565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff1615610c76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6d90611f23565b60405180910390fd5b600f8103610e2257610c8860016116a3565b6103e8610c9560016116b9565b1115610cd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccd90611f8f565b60405180910390fd5b6040518060a00160405280611388815260200182815260200142815260200183815260200160011515815250600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550905050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3330856040518463ffffffff1660e01b8152600401610deb93929190611e59565b600060405180830381600087803b158015610e0557600080fd5b505af1158015610e19573d6000803e3d6000fd5b50505050611363565b601e8103610fce57610e3460026116a3565b6102ee610e4160026116b9565b1115610e82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7990611ffb565b60405180910390fd5b6040518060a00160405280611d4c815260200182815260200142815260200183815260200160011515815250600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550905050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3330856040518463ffffffff1660e01b8152600401610f9793929190611e59565b600060405180830381600087803b158015610fb157600080fd5b505af1158015610fc5573d6000803e3d6000fd5b50505050611362565b603c810361117a57610fe060036116a3565b6101f4610fed60036116b9565b111561102e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102590612067565b60405180910390fd5b6040518060a001604052806130d4815260200182815260200142815260200183815260200160011515815250600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550905050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3330856040518463ffffffff1660e01b815260040161114393929190611e59565b600060405180830381600087803b15801561115d57600080fd5b505af1158015611171573d6000803e3d6000fd5b50505050611361565b605a81036113255761118c60046116a3565b60fa61119860046116b9565b11156111d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d0906120d3565b60405180910390fd5b6040518060a0016040528061445c815260200182815260200142815260200183815260200160011515815250600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550905050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3330856040518463ffffffff1660e01b81526004016112ee93929190611e59565b600060405180830381600087803b15801561130857600080fd5b505af115801561131c573d6000803e3d6000fd5b50505050611360565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113579061213f565b60405180910390fd5b5b5b5b5050565b61136f6114d8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036113de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d5906121d1565b60405180910390fd5b6113e781611556565b50565b60038060000154905081565b6114778363a9059cbb60e01b84846040516024016114159291906121f1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506116c7565b505050565b600081600001549050600081116114c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114bf90612266565b60405180910390fd5b6001810382600001819055505050565b6114e061178e565b73ffffffffffffffffffffffffffffffffffffffff166114fe610aaf565b73ffffffffffffffffffffffffffffffffffffffff1614611554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154b906122d2565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61169d846323b872dd60e01b85858560405160240161163b939291906122f2565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506116c7565b50505050565b6001816000016000828254019250508190555050565b600081600001549050919050565b6000611729826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166117969092919063ffffffff16565b905060008151111561178957808060200190518101906117499190612355565b611788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177f906123f4565b60405180910390fd5b5b505050565b600033905090565b60606117a584846000856117ae565b90509392505050565b6060824710156117f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ea90612486565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161181c9190612517565b60006040518083038185875af1925050503d8060008114611859576040519150601f19603f3d011682016040523d82523d6000602084013e61185e565b606091505b509150915061186f8783838761187b565b92505050949350505050565b606083156118dd5760008351036118d557611895856118f0565b6118d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118cb9061257a565b60405180910390fd5b5b8290506118e8565b6118e78383611913565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156119265781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161195a91906125ef565b60405180910390fd5b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119988261196d565b9050919050565b6119a88161198d565b81146119b357600080fd5b50565b6000813590506119c58161199f565b92915050565b6000819050919050565b6119de816119cb565b81146119e957600080fd5b50565b6000813590506119fb816119d5565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611a2657611a25611a01565b5b8235905067ffffffffffffffff811115611a4357611a42611a06565b5b602083019150836001820283011115611a5f57611a5e611a0b565b5b9250929050565b600080600080600060808688031215611a8257611a81611963565b5b6000611a90888289016119b6565b9550506020611aa1888289016119b6565b9450506040611ab2888289016119ec565b935050606086013567ffffffffffffffff811115611ad357611ad2611968565b5b611adf88828901611a10565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611b2381611aee565b82525050565b6000602082019050611b3e6000830184611b1a565b92915050565b611b4d816119cb565b82525050565b6000602082019050611b686000830184611b44565b92915050565b600060208284031215611b8457611b83611963565b5b6000611b92848285016119b6565b91505092915050565b611ba48161198d565b82525050565b6000602082019050611bbf6000830184611b9b565b92915050565b60008115159050919050565b611bda81611bc5565b82525050565b600060a082019050611bf56000830188611b44565b611c026020830187611b44565b611c0f6040830186611b44565b611c1c6060830185611b44565b611c296080830184611bd1565b9695505050505050565b600060208284031215611c4957611c48611963565b5b6000611c57848285016119ec565b91505092915050565b60008060408385031215611c7757611c76611963565b5b6000611c85858286016119ec565b9250506020611c96858286016119ec565b9150509250929050565b600082825260208201905092915050565b7f506c65617365204669727374204465706f736974204e46542021212100000000600082015250565b6000611ce7601c83611ca0565b9150611cf282611cb1565b602082019050919050565b60006020820190508181036000830152611d1681611cda565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d57826119cb565b9150611d62836119cb565b9250828203905081811115611d7a57611d79611d1d565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611dba826119cb565b9150611dc5836119cb565b925082611dd557611dd4611d80565b5b828204905092915050565b6000611deb826119cb565b9150611df6836119cb565b9250828202611e04816119cb565b91508282048414831517611e1b57611e1a611d1d565b5b5092915050565b600082825260208201905092915050565b50565b6000611e43600083611e22565b9150611e4e82611e33565b600082019050919050565b6000608082019050611e6e6000830186611b9b565b611e7b6020830185611b9b565b611e886040830184611b44565b8181036060830152611e9981611e36565b9050949350505050565b6000611eae826119cb565b9150611eb9836119cb565b9250828201905080821115611ed157611ed0611d1d565b5b92915050565b7f596f7520416c7265616479204465706f736974204e4654000000000000000000600082015250565b6000611f0d601783611ca0565b9150611f1882611ed7565b602082019050919050565b60006020820190508181036000830152611f3c81611f00565b9050919050565b7f313520446179732043617465676f72792069732046756c6c2021212100000000600082015250565b6000611f79601c83611ca0565b9150611f8482611f43565b602082019050919050565b60006020820190508181036000830152611fa881611f6c565b9050919050565b7f333020446179732043617465676f72792069732046756c6c2021212100000000600082015250565b6000611fe5601c83611ca0565b9150611ff082611faf565b602082019050919050565b6000602082019050818103600083015261201481611fd8565b9050919050565b7f363020446179732043617465676f72792069732046756c6c2021212100000000600082015250565b6000612051601c83611ca0565b915061205c8261201b565b602082019050919050565b6000602082019050818103600083015261208081612044565b9050919050565b7f393020446179732043617465676f72792069732046756c6c2021212100000000600082015250565b60006120bd601c83611ca0565b91506120c882612087565b602082019050919050565b600060208201905081810360008301526120ec816120b0565b9050919050565b7f53656c6c65637420446179732031352c33302c36302c39302021212100000000600082015250565b6000612129601c83611ca0565b9150612134826120f3565b602082019050919050565b600060208201905081810360008301526121588161211c565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006121bb602683611ca0565b91506121c68261215f565b604082019050919050565b600060208201905081810360008301526121ea816121ae565b9050919050565b60006040820190506122066000830185611b9b565b6122136020830184611b44565b9392505050565b7f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000600082015250565b6000612250601b83611ca0565b915061225b8261221a565b602082019050919050565b6000602082019050818103600083015261227f81612243565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006122bc602083611ca0565b91506122c782612286565b602082019050919050565b600060208201905081810360008301526122eb816122af565b9050919050565b60006060820190506123076000830186611b9b565b6123146020830185611b9b565b6123216040830184611b44565b949350505050565b61233281611bc5565b811461233d57600080fd5b50565b60008151905061234f81612329565b92915050565b60006020828403121561236b5761236a611963565b5b600061237984828501612340565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006123de602a83611ca0565b91506123e982612382565b604082019050919050565b6000602082019050818103600083015261240d816123d1565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000612470602683611ca0565b915061247b82612414565b604082019050919050565b6000602082019050818103600083015261249f81612463565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156124da5780820151818401526020810190506124bf565b60008484015250505050565b60006124f1826124a6565b6124fb81856124b1565b935061250b8185602086016124bc565b80840191505092915050565b600061252382846124e6565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612564601d83611ca0565b915061256f8261252e565b602082019050919050565b6000602082019050818103600083015261259381612557565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b60006125c18261259a565b6125cb8185611ca0565b93506125db8185602086016124bc565b6125e4816125a5565b840191505092915050565b6000602082019050818103600083015261260981846125b6565b90509291505056fea2646970667358221220696eee21959a9054876795242494d36cf68c886e01a507b4927edccf4965a48364736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x28B5 CODESIZE SUB DUP1 PUSH3 0x28B5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x217 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xE1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xE9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x25E JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1DF DUP3 PUSH3 0x1B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1F1 DUP2 PUSH3 0x1D2 JUMP JUMPDEST DUP2 EQ PUSH3 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x211 DUP2 PUSH3 0x1E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x1AD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x241 DUP6 DUP3 DUP7 ADD PUSH3 0x200 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x254 DUP6 DUP3 DUP7 ADD PUSH3 0x200 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2647 DUP1 PUSH3 0x26E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA6021ACE GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC0CD40EE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC0CD40EE EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xF7D252F4 EQ PUSH2 0x2AA JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0xA6021ACE EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xB10558AB EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xB4E929D4 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xB7171A2E EQ PUSH2 0x238 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x4930E5D1 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x4930E5D1 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AA JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x3F431230 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x41FCD29A EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x1A66 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1B29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x2E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x2FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A8 PUSH2 0xA9B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B2 PUSH2 0xAAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1BAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1BAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EE PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH2 0xB4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x1BAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x1C33 JUMP JUMPDEST PUSH2 0xB73 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH2 0xBE6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1367 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B2 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1CFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x15180 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST SWAP1 POP PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 LT ISZERO PUSH2 0x700 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x4C6 SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST DUP3 PUSH2 0x4D1 SWAP2 SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP3 PUSH1 0x2 PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST PUSH2 0x4EE SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST SWAP1 POP PUSH2 0x548 DUP5 DUP3 DUP5 PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13F6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x597 PUSH2 0xDEAD DUP3 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13F6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE ADDRESS DUP7 PUSH1 0x8 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x638 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x666 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x67C SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP POP POP PUSH2 0x934 JUMP JUMPDEST PUSH2 0x78F DUP3 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13F6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE ADDRESS DUP5 PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x830 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x84A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x85E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8B6 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP JUMPDEST PUSH1 0xF PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x98D JUMPI PUSH2 0x988 PUSH1 0x1 PUSH2 0x147C JUMP JUMPDEST PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x1E PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x9E6 JUMPI PUSH2 0x9E1 PUSH1 0x2 PUSH2 0x147C JUMP JUMPDEST PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x3C PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0xA3F JUMPI PUSH2 0xA3A PUSH1 0x3 PUSH2 0x147C JUMP JUMPDEST PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x5A PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0xA94 JUMPI PUSH2 0xA93 PUSH1 0x4 PUSH2 0x147C JUMP JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xAA3 PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0xAAD PUSH1 0x0 PUSH2 0x1556 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xB7B PUSH2 0x14D8 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB8D SWAP2 SWAP1 PUSH2 0x1EA3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xBE3 CALLER ADDRESS DUP4 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x161A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6D SWAP1 PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF DUP2 SUB PUSH2 0xE22 JUMPI PUSH2 0xC88 PUSH1 0x1 PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0xC95 PUSH1 0x1 PUSH2 0x16B9 JUMP JUMPDEST GT ISZERO PUSH2 0xCD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCD SWAP1 PUSH2 0x1F8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1388 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDEB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x1E DUP2 SUB PUSH2 0xFCE JUMPI PUSH2 0xE34 PUSH1 0x2 PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x2EE PUSH2 0xE41 PUSH1 0x2 PUSH2 0x16B9 JUMP JUMPDEST GT ISZERO PUSH2 0xE82 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE79 SWAP1 PUSH2 0x1FFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1D4C DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF97 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1362 JUMP JUMPDEST PUSH1 0x3C DUP2 SUB PUSH2 0x117A JUMPI PUSH2 0xFE0 PUSH1 0x3 PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0xFED PUSH1 0x3 PUSH2 0x16B9 JUMP JUMPDEST GT ISZERO PUSH2 0x102E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1025 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x30D4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1143 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x115D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1171 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1361 JUMP JUMPDEST PUSH1 0x5A DUP2 SUB PUSH2 0x1325 JUMPI PUSH2 0x118C PUSH1 0x4 PUSH2 0x16A3 JUMP JUMPDEST PUSH1 0xFA PUSH2 0x1198 PUSH1 0x4 PUSH2 0x16B9 JUMP JUMPDEST GT ISZERO PUSH2 0x11D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D0 SWAP1 PUSH2 0x20D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x445C DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12EE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x131C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1357 SWAP1 PUSH2 0x213F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x136F PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D5 SWAP1 PUSH2 0x21D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13E7 DUP2 PUSH2 0x1556 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x1477 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1415 SWAP3 SWAP2 SWAP1 PUSH2 0x21F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x16C7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x14C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14BF SWAP1 PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SUB DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x14E0 PUSH2 0x178E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14FE PUSH2 0xAAF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1554 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154B SWAP1 PUSH2 0x22D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x169D DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x163B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x16C7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1729 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1796 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1789 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1749 SWAP2 SWAP1 PUSH2 0x2355 JUMP JUMPDEST PUSH2 0x1788 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177F SWAP1 PUSH2 0x23F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x17A5 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x17AE JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x17F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17EA SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x181C SWAP2 SWAP1 PUSH2 0x2517 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1859 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x185E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x186F DUP8 DUP4 DUP4 DUP8 PUSH2 0x187B JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x18DD JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x18D5 JUMPI PUSH2 0x1895 DUP6 PUSH2 0x18F0 JUMP JUMPDEST PUSH2 0x18D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18CB SWAP1 PUSH2 0x257A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x18E8 JUMP JUMPDEST PUSH2 0x18E7 DUP4 DUP4 PUSH2 0x1913 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1926 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x195A SWAP2 SWAP1 PUSH2 0x25EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1998 DUP3 PUSH2 0x196D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19A8 DUP2 PUSH2 0x198D JUMP JUMPDEST DUP2 EQ PUSH2 0x19B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19C5 DUP2 PUSH2 0x199F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19DE DUP2 PUSH2 0x19CB JUMP JUMPDEST DUP2 EQ PUSH2 0x19E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19FB DUP2 PUSH2 0x19D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1A26 JUMPI PUSH2 0x1A25 PUSH2 0x1A01 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A43 JUMPI PUSH2 0x1A42 PUSH2 0x1A06 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1A5F JUMPI PUSH2 0x1A5E PUSH2 0x1A0B JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A82 JUMPI PUSH2 0x1A81 PUSH2 0x1963 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A90 DUP9 DUP3 DUP10 ADD PUSH2 0x19B6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1AA1 DUP9 DUP3 DUP10 ADD PUSH2 0x19B6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1AB2 DUP9 DUP3 DUP10 ADD PUSH2 0x19EC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AD3 JUMPI PUSH2 0x1AD2 PUSH2 0x1968 JUMP JUMPDEST JUMPDEST PUSH2 0x1ADF DUP9 DUP3 DUP10 ADD PUSH2 0x1A10 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B23 DUP2 PUSH2 0x1AEE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B3E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B4D DUP2 PUSH2 0x19CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B68 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B84 JUMPI PUSH2 0x1B83 PUSH2 0x1963 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B92 DUP5 DUP3 DUP6 ADD PUSH2 0x19B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BA4 DUP2 PUSH2 0x198D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BBF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BDA DUP2 PUSH2 0x1BC5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1BF5 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1B44 JUMP JUMPDEST PUSH2 0x1C02 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1B44 JUMP JUMPDEST PUSH2 0x1C0F PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1B44 JUMP JUMPDEST PUSH2 0x1C1C PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B44 JUMP JUMPDEST PUSH2 0x1C29 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1BD1 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C49 JUMPI PUSH2 0x1C48 PUSH2 0x1963 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C57 DUP5 DUP3 DUP6 ADD PUSH2 0x19EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C77 JUMPI PUSH2 0x1C76 PUSH2 0x1963 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C85 DUP6 DUP3 DUP7 ADD PUSH2 0x19EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C96 DUP6 DUP3 DUP7 ADD PUSH2 0x19EC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506C65617365204669727374204465706F736974204E46542021212100000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE7 PUSH1 0x1C DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CF2 DUP3 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D16 DUP2 PUSH2 0x1CDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D57 DUP3 PUSH2 0x19CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1D62 DUP4 PUSH2 0x19CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1D7A JUMPI PUSH2 0x1D79 PUSH2 0x1D1D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DBA DUP3 PUSH2 0x19CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC5 DUP4 PUSH2 0x19CB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DD5 JUMPI PUSH2 0x1DD4 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DEB DUP3 PUSH2 0x19CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF6 DUP4 PUSH2 0x19CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1E04 DUP2 PUSH2 0x19CB JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1E1B JUMPI PUSH2 0x1E1A PUSH2 0x1D1D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E43 PUSH1 0x0 DUP4 PUSH2 0x1E22 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E4E DUP3 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1E6E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1B9B JUMP JUMPDEST PUSH2 0x1E7B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B9B JUMP JUMPDEST PUSH2 0x1E88 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B44 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1E99 DUP2 PUSH2 0x1E36 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EAE DUP3 PUSH2 0x19CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB9 DUP4 PUSH2 0x19CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1ED1 JUMPI PUSH2 0x1ED0 PUSH2 0x1D1D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520416C7265616479204465706F736974204E4654000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F0D PUSH1 0x17 DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F18 DUP3 PUSH2 0x1ED7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F3C DUP2 PUSH2 0x1F00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x313520446179732043617465676F72792069732046756C6C2021212100000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F79 PUSH1 0x1C DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F84 DUP3 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FA8 DUP2 PUSH2 0x1F6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x333020446179732043617465676F72792069732046756C6C2021212100000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE5 PUSH1 0x1C DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF0 DUP3 PUSH2 0x1FAF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2014 DUP2 PUSH2 0x1FD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x363020446179732043617465676F72792069732046756C6C2021212100000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2051 PUSH1 0x1C DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x205C DUP3 PUSH2 0x201B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2080 DUP2 PUSH2 0x2044 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x393020446179732043617465676F72792069732046756C6C2021212100000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20BD PUSH1 0x1C DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x20C8 DUP3 PUSH2 0x2087 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20EC DUP2 PUSH2 0x20B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656C6C65637420446179732031352C33302C36302C39302021212100000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2129 PUSH1 0x1C DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2134 DUP3 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2158 DUP2 PUSH2 0x211C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21BB PUSH1 0x26 DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x21C6 DUP3 PUSH2 0x215F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21EA DUP2 PUSH2 0x21AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2206 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B9B JUMP JUMPDEST PUSH2 0x2213 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B44 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2250 PUSH1 0x1B DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x225B DUP3 PUSH2 0x221A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x227F DUP2 PUSH2 0x2243 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BC PUSH1 0x20 DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x22C7 DUP3 PUSH2 0x2286 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22EB DUP2 PUSH2 0x22AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2307 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1B9B JUMP JUMPDEST PUSH2 0x2314 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B9B JUMP JUMPDEST PUSH2 0x2321 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B44 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2332 DUP2 PUSH2 0x1BC5 JUMP JUMPDEST DUP2 EQ PUSH2 0x233D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x234F DUP2 PUSH2 0x2329 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x236B JUMPI PUSH2 0x236A PUSH2 0x1963 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2379 DUP5 DUP3 DUP6 ADD PUSH2 0x2340 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23DE PUSH1 0x2A DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x23E9 DUP3 PUSH2 0x2382 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x240D DUP2 PUSH2 0x23D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2470 PUSH1 0x26 DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x247B DUP3 PUSH2 0x2414 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x249F DUP2 PUSH2 0x2463 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24DA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x24BF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F1 DUP3 PUSH2 0x24A6 JUMP JUMPDEST PUSH2 0x24FB DUP2 DUP6 PUSH2 0x24B1 JUMP JUMPDEST SWAP4 POP PUSH2 0x250B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x24BC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2523 DUP3 DUP5 PUSH2 0x24E6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2564 PUSH1 0x1D DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x256F DUP3 PUSH2 0x252E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2593 DUP2 PUSH2 0x2557 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25C1 DUP3 PUSH2 0x259A JUMP JUMPDEST PUSH2 0x25CB DUP2 DUP6 PUSH2 0x1CA0 JUMP JUMPDEST SWAP4 POP PUSH2 0x25DB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x24BC JUMP JUMPDEST PUSH2 0x25E4 DUP2 PUSH2 0x25A5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2609 DUP2 DUP5 PUSH2 0x25B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x6EEE21959A9054876795 0x24 0x24 SWAP5 0xD3 PUSH13 0xF68C886E01A507B4927EDCCF49 PUSH6 0xA48364736F6C PUSH4 0x43000812 STOP CALLER ",
							"sourceMap": "402:4740:12:-:0;;;1213:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1298:14:12;1282:13;;:30;;;;;;;;;;;;;;;;;;1337:13;1322:12;;:28;;;;;;;;;;;;;;;;;;1213:144;;402:4740;;640:96:8;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;88:117:13:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;402:4740:12:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@AdminAddToken_1632": {
									"entryPoint": 2931,
									"id": 1632,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@ERC20Address_1162": {
									"entryPoint": 2776,
									"id": 1162,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ERC721address_1160": {
									"entryPoint": 2893,
									"id": 1160,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@Staker_1180": {
									"entryPoint": 2826,
									"id": 1180,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TotalRemaningToken_1164": {
									"entryPoint": 757,
									"id": 1164,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_506": {
									"entryPoint": 5831,
									"id": 506,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 5336,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1014": {
									"entryPoint": 6030,
									"id": 1014,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_1001": {
									"entryPoint": 6419,
									"id": 1001,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 5462,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@category1_1149": {
									"entryPoint": 733,
									"id": 1149,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@category2_1152": {
									"entryPoint": 2814,
									"id": 1152,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@category3_1155": {
									"entryPoint": 5098,
									"id": 1155,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@category4_1158": {
									"entryPoint": 745,
									"id": 1158,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@current_1042": {
									"entryPoint": 5817,
									"id": 1042,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decrement_1084": {
									"entryPoint": 5244,
									"id": 1084,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deposit_1407": {
									"entryPoint": 3046,
									"id": 1407,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@functionCallWithValue_826": {
									"entryPoint": 6062,
									"id": 826,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_762": {
									"entryPoint": 6038,
									"id": 762,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@increment_1056": {
									"entryPoint": 5795,
									"id": 1056,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isContract_690": {
									"entryPoint": 6384,
									"id": 690,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@onERC721Received_1651": {
									"entryPoint": 712,
									"id": 1651,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 2735,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 2715,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_284": {
									"entryPoint": 5658,
									"id": 284,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_258": {
									"entryPoint": 5110,
									"id": 258,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 4967,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_957": {
									"entryPoint": 6267,
									"id": 957,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@withdraw_1607": {
									"entryPoint": 763,
									"id": 1607,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 6582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 9024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 6672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6636,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 6758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 7264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 6938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0362aadfad75f8d1514bed2241ef9233db5f01322c03768d43f74d86629736b2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0be85b0fd62b353be3601e32894ceb7d1f17bd52fed9d0e6964a0beb0bba260b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2d8b114046bff8662406d3b79f38e6738d86943825c129f00f84dbdea8ee25b4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2ea564f91322c4e6360e343eafee06fa15490d9b0c58fcc61cf27678bc1a8b36_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_96174b8098a0756df4a8cf8185e42278721efe8b421242f0a2d23d73619846c8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a55098851a0ebd9887a2657839576e0284ebe4317fa572ff82e296dce3b1c332_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f2ba20d657046b0f65fbea10716222e539090f7e5b324152631fdff76654446b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8946,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7769,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8689,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 6953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0362aadfad75f8d1514bed2241ef9233db5f01322c03768d43f74d86629736b2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0be85b0fd62b353be3601e32894ceb7d1f17bd52fed9d0e6964a0beb0bba260b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2d8b114046bff8662406d3b79f38e6738d86943825c129f00f84dbdea8ee25b4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2ea564f91322c4e6360e343eafee06fa15490d9b0c58fcc61cf27678bc1a8b36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_96174b8098a0756df4a8cf8185e42278721efe8b421242f0a2d23d73619846c8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a55098851a0ebd9887a2657839576e0284ebe4317fa572ff82e296dce3b1c332__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7971,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2ba20d657046b0f65fbea10716222e539090f7e5b324152631fdff76654446b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 7136,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 9626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9393,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7843,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7500,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6541,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 9404,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 7453,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7552,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 6662,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6657,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 6667,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6504,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6499,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 9637,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0362aadfad75f8d1514bed2241ef9233db5f01322c03768d43f74d86629736b2": {
									"entryPoint": 8435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0be85b0fd62b353be3601e32894ceb7d1f17bd52fed9d0e6964a0beb0bba260b": {
									"entryPoint": 7345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f": {
									"entryPoint": 8730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 8543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2d8b114046bff8662406d3b79f38e6738d86943825c129f00f84dbdea8ee25b4": {
									"entryPoint": 8327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2ea564f91322c4e6360e343eafee06fa15490d9b0c58fcc61cf27678bc1a8b36": {
									"entryPoint": 8003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 9236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_96174b8098a0756df4a8cf8185e42278721efe8b421242f0a2d23d73619846c8": {
									"entryPoint": 8219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 8838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a55098851a0ebd9887a2657839576e0284ebe4317fa572ff82e296dce3b1c332": {
									"entryPoint": 7895,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 7731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 9518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 9090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f2ba20d657046b0f65fbea10716222e539090f7e5b324152631fdff76654446b": {
									"entryPoint": 8111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6559,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:25685:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:13",
														"type": ""
													}
												],
												"src": "696:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:13",
														"type": ""
													}
												],
												"src": "841:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:13"
															},
															"nodeType": "YulIf",
															"src": "977:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:13",
														"type": ""
													}
												],
												"src": "924:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:13",
														"type": ""
													}
												],
												"src": "1052:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1286:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1303:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1296:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1296:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "1197:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1409:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1426:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1419:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1419:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1419:12:13"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "1320:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1532:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1549:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1542:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1542:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1542:12:13"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "1443:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1653:478:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1702:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1704:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1704:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1704:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1681:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1689:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1677:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1677:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1696:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1673:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1673:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1666:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1666:35:13"
															},
															"nodeType": "YulIf",
															"src": "1663:122:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1794:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1817:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1804:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:20:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1794:6:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1867:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "1869:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1869:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1869:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1839:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1847:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1836:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:30:13"
															},
															"nodeType": "YulIf",
															"src": "1833:117:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1959:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1975:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1983:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1971:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1971:17:13"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "1959:8:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2042:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "2044:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2044:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2044:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "2007:8:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "2021:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2029:4:13",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "2017:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2017:17:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2003:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2003:32:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2037:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2000:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2000:41:13"
															},
															"nodeType": "YulIf",
															"src": "1997:128:13"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1620:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1628:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "1636:8:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1646:6:13",
														"type": ""
													}
												],
												"src": "1579:552:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2273:827:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2320:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2322:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2322:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2322:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2294:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2303:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2290:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2290:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2315:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2286:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:33:13"
															},
															"nodeType": "YulIf",
															"src": "2283:120:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "2413:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2428:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2442:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2432:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2457:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2492:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2503:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2488:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2488:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2512:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2467:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2467:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2457:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2540:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2555:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2569:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2559:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2585:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2620:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2631:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2616:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2616:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2640:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2595:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2595:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2585:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2668:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2683:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2697:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2687:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2713:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2748:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2759:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2744:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2744:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2768:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2723:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2723:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2713:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2796:297:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2811:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2842:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2853:2:13",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2838:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2838:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2825:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2825:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2815:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2904:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2906:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2906:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2906:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2876:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2884:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2873:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2873:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "2870:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3001:82:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3055:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3066:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3051:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3051:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3075:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3019:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3019:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "3001:6:13"
																		},
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "3009:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2211:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2222:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2234:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2242:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2250:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2258:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2266:6:13",
														"type": ""
													}
												],
												"src": "2137:963:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3150:105:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3160:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3175:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3182:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3171:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3160:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3132:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3142:7:13",
														"type": ""
													}
												],
												"src": "3106:149:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3324:52:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3341:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3363:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "3346:16:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3346:23:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3334:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3334:36:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3334:36:13"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3312:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3319:3:13",
														"type": ""
													}
												],
												"src": "3261:115:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3478:122:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3488:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3500:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3511:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3496:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3496:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3488:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3566:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3579:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3590:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3575:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3575:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3524:41:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3524:69:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3524:69:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3450:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3462:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3473:4:13",
														"type": ""
													}
												],
												"src": "3382:218:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3671:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3688:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3711:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3693:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3693:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3681:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3681:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3681:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3659:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3666:3:13",
														"type": ""
													}
												],
												"src": "3606:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3828:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3838:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3850:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3861:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3846:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3846:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3838:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3918:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3931:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3942:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3927:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3927:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3874:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3874:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3874:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3800:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3812:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3823:4:13",
														"type": ""
													}
												],
												"src": "3730:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4024:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4070:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4072:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4072:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4072:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4045:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4054:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4041:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4041:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4066:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4037:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4037:32:13"
															},
															"nodeType": "YulIf",
															"src": "4034:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "4163:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4178:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4192:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4182:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4207:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4242:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4253:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4238:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4238:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4262:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4217:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4217:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4207:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3994:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4005:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4017:6:13",
														"type": ""
													}
												],
												"src": "3958:329:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4358:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4375:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4398:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4380:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4380:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4368:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4368:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4368:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4346:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4353:3:13",
														"type": ""
													}
												],
												"src": "4293:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4515:124:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4525:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4537:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4548:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4533:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4533:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4525:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4605:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4618:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4629:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4614:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4614:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4561:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4561:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4561:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4487:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4499:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4510:4:13",
														"type": ""
													}
												],
												"src": "4417:222:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4687:48:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4697:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4722:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4715:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4715:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4708:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4708:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4697:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4669:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4679:7:13",
														"type": ""
													}
												],
												"src": "4645:90:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4800:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4817:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4837:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "4822:14:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4810:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4810:34:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4810:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4788:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4795:3:13",
														"type": ""
													}
												],
												"src": "4741:109:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5060:448:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5070:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5082:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5093:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5078:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5078:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5070:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5151:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5164:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5175:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5160:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5160:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5107:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5107:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5107:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5232:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5245:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5256:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5241:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5241:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5188:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5188:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5188:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5314:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5327:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5338:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5323:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5323:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5270:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5270:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "5396:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5409:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5420:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5405:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5405:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5352:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5352:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5352:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "5472:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5485:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5496:3:13",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5481:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5481:19:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5434:37:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5434:67:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5434:67:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5000:9:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5012:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5020:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5028:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5036:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5044:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5055:4:13",
														"type": ""
													}
												],
												"src": "4856:652:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5580:263:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5626:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5628:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5628:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5628:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5601:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5610:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5597:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5597:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5622:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5593:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5593:32:13"
															},
															"nodeType": "YulIf",
															"src": "5590:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "5719:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5734:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5748:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5738:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5763:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5798:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5809:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5794:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5794:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5818:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5773:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5773:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5763:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5550:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5561:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5573:6:13",
														"type": ""
													}
												],
												"src": "5514:329:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5932:391:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5978:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5980:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5980:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5980:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5953:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5962:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5949:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5949:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5974:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5945:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5945:32:13"
															},
															"nodeType": "YulIf",
															"src": "5942:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "6071:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6086:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6100:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6090:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6115:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6150:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6161:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6146:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6146:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6170:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6125:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6125:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6115:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6198:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6213:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6227:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6217:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6243:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6278:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6289:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6274:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6274:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6298:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6253:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6253:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6243:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5894:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5905:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5917:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5925:6:13",
														"type": ""
													}
												],
												"src": "5849:474:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6425:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6442:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6447:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6435:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6435:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6435:19:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6463:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6482:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6487:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6478:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6478:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6463:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6397:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6402:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6413:11:13",
														"type": ""
													}
												],
												"src": "6329:169:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6610:72:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6632:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6640:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6628:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6628:14:13"
																	},
																	{
																		"hexValue": "506c65617365204669727374204465706f736974204e465420212121",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6644:30:13",
																		"type": "",
																		"value": "Please First Deposit NFT !!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6621:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6621:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6621:54:13"
														}
													]
												},
												"name": "store_literal_in_memory_0be85b0fd62b353be3601e32894ceb7d1f17bd52fed9d0e6964a0beb0bba260b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6602:6:13",
														"type": ""
													}
												],
												"src": "6504:178:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6834:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6844:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6910:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6915:2:13",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6851:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6851:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6844:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7016:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0be85b0fd62b353be3601e32894ceb7d1f17bd52fed9d0e6964a0beb0bba260b",
																	"nodeType": "YulIdentifier",
																	"src": "6927:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6927:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6927:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7029:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7040:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7045:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7036:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7036:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7029:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0be85b0fd62b353be3601e32894ceb7d1f17bd52fed9d0e6964a0beb0bba260b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6822:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6830:3:13",
														"type": ""
													}
												],
												"src": "6688:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7231:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7241:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7253:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7264:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7249:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7249:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7241:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7288:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7299:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7284:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7284:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7307:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7313:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7303:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7303:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7277:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7277:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7277:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7333:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7467:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0be85b0fd62b353be3601e32894ceb7d1f17bd52fed9d0e6964a0beb0bba260b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7341:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7341:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7333:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0be85b0fd62b353be3601e32894ceb7d1f17bd52fed9d0e6964a0beb0bba260b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7211:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7226:4:13",
														"type": ""
													}
												],
												"src": "7060:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7513:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7530:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7533:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7523:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7523:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7523:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7627:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7630:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7620:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7620:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7620:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7651:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7654:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7644:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7644:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7644:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7485:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7716:149:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7726:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7749:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7731:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7731:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "7726:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7760:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7783:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7765:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7765:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7760:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7794:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7806:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7809:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7802:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7802:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "7794:4:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7836:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7838:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7838:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7838:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "7827:4:13"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7833:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7824:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7824:11:13"
															},
															"nodeType": "YulIf",
															"src": "7821:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "7702:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "7705:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "7711:4:13",
														"type": ""
													}
												],
												"src": "7671:194:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7899:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7916:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7919:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7909:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7909:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7909:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8013:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8016:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8006:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8006:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8006:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8037:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8040:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8030:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8030:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8030:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "7871:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8099:143:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8109:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8132:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8114:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8114:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8109:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8143:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8166:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8148:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8148:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8143:1:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8190:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "8192:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8192:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8192:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8187:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8180:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8180:9:13"
															},
															"nodeType": "YulIf",
															"src": "8177:35:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8222:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8231:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8234:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "8227:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8227:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8222:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8088:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8091:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "8097:1:13",
														"type": ""
													}
												],
												"src": "8057:185:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8296:362:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8306:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8329:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8311:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8311:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8306:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8340:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8363:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8345:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8345:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "8340:1:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8374:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8397:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "8400:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8393:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8393:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "8378:11:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8411:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "8440:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8422:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8422:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "8411:7:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8629:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "8631:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8631:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8631:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "8562:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8555:6:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8555:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "8585:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "8592:7:13"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "8601:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "8588:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8588:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "8582:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8582:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "8535:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8535:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8515:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8515:113:13"
															},
															"nodeType": "YulIf",
															"src": "8512:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8279:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8282:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "8288:7:13",
														"type": ""
													}
												],
												"src": "8248:410:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8759:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8776:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8781:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8769:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8769:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8769:19:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8797:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8816:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8821:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8812:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8812:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8797:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8731:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8736:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8747:11:13",
														"type": ""
													}
												],
												"src": "8664:168:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8944:8:13",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8936:6:13",
														"type": ""
													}
												],
												"src": "8838:114:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9103:217:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9113:72:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9178:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9183:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9120:57:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9120:65:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9113:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9283:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "9194:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9194:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9194:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9296:18:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9307:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9312:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9303:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9303:11:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9296:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9091:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9099:3:13",
														"type": ""
													}
												],
												"src": "8958:362:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9580:494:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9590:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9602:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9613:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9598:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9598:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9590:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9671:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9684:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9695:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9680:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9680:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9627:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9627:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9627:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9752:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9765:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9776:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9761:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9761:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9708:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9708:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9708:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9834:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9847:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9858:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9843:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9843:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9790:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9790:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9790:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9883:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9894:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9879:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9879:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9903:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9909:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9899:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9899:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9872:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9872:48:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9872:48:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9929:138:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10062:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9937:123:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9937:130:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9929:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9536:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9548:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9556:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9564:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9575:4:13",
														"type": ""
													}
												],
												"src": "9326:748:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10124:147:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10134:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10157:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10139:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10139:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10134:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10168:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10191:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10173:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10173:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10168:1:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10202:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10213:1:13"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10216:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10209:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10209:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10202:3:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10242:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10244:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10244:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10244:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10234:1:13"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "10237:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10231:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10231:10:13"
															},
															"nodeType": "YulIf",
															"src": "10228:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10111:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10114:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10120:3:13",
														"type": ""
													}
												],
												"src": "10080:191:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10383:67:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10405:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10413:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10401:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10401:14:13"
																	},
																	{
																		"hexValue": "596f7520416c7265616479204465706f736974204e4654",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10417:25:13",
																		"type": "",
																		"value": "You Already Deposit NFT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10394:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10394:49:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10394:49:13"
														}
													]
												},
												"name": "store_literal_in_memory_a55098851a0ebd9887a2657839576e0284ebe4317fa572ff82e296dce3b1c332",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10375:6:13",
														"type": ""
													}
												],
												"src": "10277:173:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10602:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10612:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10678:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10683:2:13",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10619:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10619:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10612:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10784:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a55098851a0ebd9887a2657839576e0284ebe4317fa572ff82e296dce3b1c332",
																	"nodeType": "YulIdentifier",
																	"src": "10695:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10695:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10695:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10797:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10808:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10813:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10804:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10804:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10797:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a55098851a0ebd9887a2657839576e0284ebe4317fa572ff82e296dce3b1c332_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10590:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10598:3:13",
														"type": ""
													}
												],
												"src": "10456:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10999:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11009:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11021:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11032:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11017:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11017:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11009:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11056:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11067:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11052:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11052:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11075:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11081:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11071:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11071:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11045:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11045:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11045:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11101:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11235:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a55098851a0ebd9887a2657839576e0284ebe4317fa572ff82e296dce3b1c332_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11109:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11109:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11101:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a55098851a0ebd9887a2657839576e0284ebe4317fa572ff82e296dce3b1c332__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10979:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10994:4:13",
														"type": ""
													}
												],
												"src": "10828:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11359:72:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11381:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11389:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11377:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11377:14:13"
																	},
																	{
																		"hexValue": "313520446179732043617465676f72792069732046756c6c20212121",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11393:30:13",
																		"type": "",
																		"value": "15 Days Category is Full !!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11370:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11370:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11370:54:13"
														}
													]
												},
												"name": "store_literal_in_memory_2ea564f91322c4e6360e343eafee06fa15490d9b0c58fcc61cf27678bc1a8b36",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11351:6:13",
														"type": ""
													}
												],
												"src": "11253:178:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11583:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11593:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11659:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11664:2:13",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11600:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11600:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11593:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11765:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2ea564f91322c4e6360e343eafee06fa15490d9b0c58fcc61cf27678bc1a8b36",
																	"nodeType": "YulIdentifier",
																	"src": "11676:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11676:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11676:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11778:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11789:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11794:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11785:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11785:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11778:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2ea564f91322c4e6360e343eafee06fa15490d9b0c58fcc61cf27678bc1a8b36_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11571:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11579:3:13",
														"type": ""
													}
												],
												"src": "11437:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11980:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11990:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12002:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12013:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11998:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "11998:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11990:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12037:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12048:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12033:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12033:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12056:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12062:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12052:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12052:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12026:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12026:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12026:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12082:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12216:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2ea564f91322c4e6360e343eafee06fa15490d9b0c58fcc61cf27678bc1a8b36_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12090:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12090:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12082:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2ea564f91322c4e6360e343eafee06fa15490d9b0c58fcc61cf27678bc1a8b36__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11960:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11975:4:13",
														"type": ""
													}
												],
												"src": "11809:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12340:72:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12362:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12370:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12358:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12358:14:13"
																	},
																	{
																		"hexValue": "333020446179732043617465676f72792069732046756c6c20212121",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12374:30:13",
																		"type": "",
																		"value": "30 Days Category is Full !!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12351:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12351:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12351:54:13"
														}
													]
												},
												"name": "store_literal_in_memory_f2ba20d657046b0f65fbea10716222e539090f7e5b324152631fdff76654446b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12332:6:13",
														"type": ""
													}
												],
												"src": "12234:178:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12564:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12574:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12640:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12645:2:13",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12581:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12581:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12574:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12746:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f2ba20d657046b0f65fbea10716222e539090f7e5b324152631fdff76654446b",
																	"nodeType": "YulIdentifier",
																	"src": "12657:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12657:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12657:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12759:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12770:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12775:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12766:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12766:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12759:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f2ba20d657046b0f65fbea10716222e539090f7e5b324152631fdff76654446b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12552:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12560:3:13",
														"type": ""
													}
												],
												"src": "12418:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12961:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12971:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12983:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12994:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12979:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "12979:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12971:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13018:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13029:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13014:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13014:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13037:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13043:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13033:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13033:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13007:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13007:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13007:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13063:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13197:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f2ba20d657046b0f65fbea10716222e539090f7e5b324152631fdff76654446b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13071:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13071:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13063:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2ba20d657046b0f65fbea10716222e539090f7e5b324152631fdff76654446b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12941:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12956:4:13",
														"type": ""
													}
												],
												"src": "12790:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13321:72:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13343:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13351:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13339:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13339:14:13"
																	},
																	{
																		"hexValue": "363020446179732043617465676f72792069732046756c6c20212121",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13355:30:13",
																		"type": "",
																		"value": "60 Days Category is Full !!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13332:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13332:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13332:54:13"
														}
													]
												},
												"name": "store_literal_in_memory_96174b8098a0756df4a8cf8185e42278721efe8b421242f0a2d23d73619846c8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13313:6:13",
														"type": ""
													}
												],
												"src": "13215:178:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13545:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13555:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13621:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13626:2:13",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13562:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13562:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13555:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13727:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_96174b8098a0756df4a8cf8185e42278721efe8b421242f0a2d23d73619846c8",
																	"nodeType": "YulIdentifier",
																	"src": "13638:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13638:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13638:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13740:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13751:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13756:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13747:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13747:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13740:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_96174b8098a0756df4a8cf8185e42278721efe8b421242f0a2d23d73619846c8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13533:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13541:3:13",
														"type": ""
													}
												],
												"src": "13399:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13942:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13952:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13964:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13975:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13960:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13960:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13952:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13999:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14010:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13995:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13995:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14018:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14024:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14014:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14014:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13988:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "13988:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13988:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14044:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14178:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_96174b8098a0756df4a8cf8185e42278721efe8b421242f0a2d23d73619846c8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14052:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14052:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14044:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_96174b8098a0756df4a8cf8185e42278721efe8b421242f0a2d23d73619846c8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13922:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13937:4:13",
														"type": ""
													}
												],
												"src": "13771:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14302:72:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14324:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14332:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14320:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14320:14:13"
																	},
																	{
																		"hexValue": "393020446179732043617465676f72792069732046756c6c20212121",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14336:30:13",
																		"type": "",
																		"value": "90 Days Category is Full !!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14313:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14313:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14313:54:13"
														}
													]
												},
												"name": "store_literal_in_memory_2d8b114046bff8662406d3b79f38e6738d86943825c129f00f84dbdea8ee25b4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14294:6:13",
														"type": ""
													}
												],
												"src": "14196:178:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14526:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14536:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14602:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14607:2:13",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14543:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14543:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14536:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14708:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2d8b114046bff8662406d3b79f38e6738d86943825c129f00f84dbdea8ee25b4",
																	"nodeType": "YulIdentifier",
																	"src": "14619:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14619:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14619:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14721:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14732:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14737:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14728:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14728:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14721:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2d8b114046bff8662406d3b79f38e6738d86943825c129f00f84dbdea8ee25b4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14514:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14522:3:13",
														"type": ""
													}
												],
												"src": "14380:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14923:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14933:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14945:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14956:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14941:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14941:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14933:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14980:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14991:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14976:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14976:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14999:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15005:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14995:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14995:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14969:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "14969:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14969:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15025:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15159:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2d8b114046bff8662406d3b79f38e6738d86943825c129f00f84dbdea8ee25b4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15033:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15033:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15025:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2d8b114046bff8662406d3b79f38e6738d86943825c129f00f84dbdea8ee25b4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14903:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14918:4:13",
														"type": ""
													}
												],
												"src": "14752:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15283:72:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15305:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15313:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15301:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15301:14:13"
																	},
																	{
																		"hexValue": "53656c6c65637420446179732031352c33302c36302c393020212121",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15317:30:13",
																		"type": "",
																		"value": "Sellect Days 15,30,60,90 !!!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15294:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15294:54:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15294:54:13"
														}
													]
												},
												"name": "store_literal_in_memory_0362aadfad75f8d1514bed2241ef9233db5f01322c03768d43f74d86629736b2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15275:6:13",
														"type": ""
													}
												],
												"src": "15177:178:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15507:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15517:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15583:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15588:2:13",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15524:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15524:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15517:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15689:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0362aadfad75f8d1514bed2241ef9233db5f01322c03768d43f74d86629736b2",
																	"nodeType": "YulIdentifier",
																	"src": "15600:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15600:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15600:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15702:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15713:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15718:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15709:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15709:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15702:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0362aadfad75f8d1514bed2241ef9233db5f01322c03768d43f74d86629736b2_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15495:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15503:3:13",
														"type": ""
													}
												],
												"src": "15361:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15904:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15914:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15926:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15937:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15922:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15922:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15914:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15961:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15972:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15957:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15957:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15980:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15986:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15976:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15976:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15950:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "15950:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15950:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16006:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16140:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0362aadfad75f8d1514bed2241ef9233db5f01322c03768d43f74d86629736b2_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16014:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16014:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16006:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0362aadfad75f8d1514bed2241ef9233db5f01322c03768d43f74d86629736b2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15884:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15899:4:13",
														"type": ""
													}
												],
												"src": "15733:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16264:119:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16286:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16294:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16282:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16282:14:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16298:34:13",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16275:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16275:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16275:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16354:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16362:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16350:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16350:15:13"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16367:8:13",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16343:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16343:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16343:33:13"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16256:6:13",
														"type": ""
													}
												],
												"src": "16158:225:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16535:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16545:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16611:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16616:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16552:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16552:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16545:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16717:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "16628:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16628:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16628:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16730:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16741:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16746:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16737:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16737:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16730:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16523:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16531:3:13",
														"type": ""
													}
												],
												"src": "16389:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16932:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16942:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16954:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16965:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16950:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16950:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16942:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16989:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17000:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16985:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16985:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17008:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17014:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17004:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17004:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16978:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "16978:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16978:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17034:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17168:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17042:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17042:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17034:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16912:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16927:4:13",
														"type": ""
													}
												],
												"src": "16761:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17312:206:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17322:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17334:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17345:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17330:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17330:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17322:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17402:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17415:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17426:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17411:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17411:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17358:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17358:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17358:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17483:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17496:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17507:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17492:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17492:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17439:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17439:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17439:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17276:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17288:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17296:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17307:4:13",
														"type": ""
													}
												],
												"src": "17186:332:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17630:71:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17652:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17660:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17648:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17648:14:13"
																	},
																	{
																		"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17664:29:13",
																		"type": "",
																		"value": "Counter: decrement overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17641:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17641:53:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17641:53:13"
														}
													]
												},
												"name": "store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17622:6:13",
														"type": ""
													}
												],
												"src": "17524:177:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17853:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17863:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17929:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17934:2:13",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17870:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17870:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17863:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18035:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																	"nodeType": "YulIdentifier",
																	"src": "17946:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "17946:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17946:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18048:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18059:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18064:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18055:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18055:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18048:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17841:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17849:3:13",
														"type": ""
													}
												],
												"src": "17707:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18250:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18260:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18272:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18283:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18268:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18268:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18260:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18307:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18318:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18303:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18303:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18326:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18332:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18322:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18322:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18296:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18296:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18296:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18352:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18486:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18360:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18360:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18352:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18230:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18245:4:13",
														"type": ""
													}
												],
												"src": "18079:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18610:76:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18632:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18640:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18628:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18628:14:13"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18644:34:13",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18621:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18621:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18621:58:13"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18602:6:13",
														"type": ""
													}
												],
												"src": "18504:182:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18838:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18848:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18914:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18919:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18855:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18855:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18848:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19020:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "18931:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "18931:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18931:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19033:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19044:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19049:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19040:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19040:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19033:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18826:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18834:3:13",
														"type": ""
													}
												],
												"src": "18692:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19235:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19245:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19257:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19268:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19253:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19253:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19245:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19292:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19303:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19288:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19288:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19311:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19317:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19307:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19307:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19281:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19281:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19281:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19337:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19471:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19345:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19345:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19337:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19215:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19230:4:13",
														"type": ""
													}
												],
												"src": "19064:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19643:288:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19653:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19665:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19676:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19661:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19661:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19653:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19733:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19746:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19757:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19742:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19742:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19689:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19689:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19689:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19814:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19827:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19838:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19823:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19823:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19770:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19770:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19770:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "19896:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19909:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19920:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19905:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19905:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19852:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19852:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19852:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19599:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "19611:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19619:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19627:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19638:4:13",
														"type": ""
													}
												],
												"src": "19489:442:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19977:76:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20031:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20040:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20043:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20033:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20033:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20033:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20000:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "20022:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "20007:14:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20007:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19997:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19997:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19990:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "19990:40:13"
															},
															"nodeType": "YulIf",
															"src": "19987:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19970:5:13",
														"type": ""
													}
												],
												"src": "19937:116:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20119:77:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20129:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "20144:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20138:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20138:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20129:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20184:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "20160:23:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20160:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20160:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "20097:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20105:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20113:5:13",
														"type": ""
													}
												],
												"src": "20059:137:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20276:271:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20322:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "20324:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20324:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20324:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20297:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20306:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20293:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20293:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20318:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "20289:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20289:32:13"
															},
															"nodeType": "YulIf",
															"src": "20286:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "20415:125:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20430:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20444:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20434:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20459:71:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20502:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20513:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20498:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20498:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20522:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "20469:28:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20469:61:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "20459:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20246:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "20257:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20269:6:13",
														"type": ""
													}
												],
												"src": "20202:345:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20659:123:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20681:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20689:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20677:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20677:14:13"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20693:34:13",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20670:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20670:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20670:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20749:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20757:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20745:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20745:15:13"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20762:12:13",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20738:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20738:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20738:37:13"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20651:6:13",
														"type": ""
													}
												],
												"src": "20553:229:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20934:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20944:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21010:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21015:2:13",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20951:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "20951:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20944:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21116:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "21027:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21027:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21027:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21129:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21140:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21145:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21136:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21136:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21129:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20922:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20930:3:13",
														"type": ""
													}
												],
												"src": "20788:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21331:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21341:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21353:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21364:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21349:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21349:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21341:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21388:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21399:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21384:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21384:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21407:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21413:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21403:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21403:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21377:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21377:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21377:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21433:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21567:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21441:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21441:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21433:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21311:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21326:4:13",
														"type": ""
													}
												],
												"src": "21160:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21691:119:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21713:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21721:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21709:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21709:14:13"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21725:34:13",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21702:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21702:58:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21702:58:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21781:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21789:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21777:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21777:15:13"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21794:8:13",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21770:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21770:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21770:33:13"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21683:6:13",
														"type": ""
													}
												],
												"src": "21585:225:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21962:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21972:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22038:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22043:2:13",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21979:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "21979:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21972:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22144:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "22055:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22055:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22055:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22157:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22168:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22173:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22164:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22164:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22157:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21950:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21958:3:13",
														"type": ""
													}
												],
												"src": "21816:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22359:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22369:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22381:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22392:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22377:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22377:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22369:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22416:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22427:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22412:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22412:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22435:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22441:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22431:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22431:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22405:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22405:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22405:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22461:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22595:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22469:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22469:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22461:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22339:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22354:4:13",
														"type": ""
													}
												],
												"src": "22188:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22671:40:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22682:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22698:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "22692:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22692:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "22682:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22654:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22664:6:13",
														"type": ""
													}
												],
												"src": "22613:98:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22830:34:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22840:18:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "22855:3:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "22840:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22802:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22807:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "22818:11:13",
														"type": ""
													}
												],
												"src": "22717:147:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22932:184:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22942:10:13",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "22951:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "22946:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23011:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "23036:3:13"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "23041:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "23032:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "23032:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "23055:3:13"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "23060:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "23051:3:13"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "23051:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "23045:5:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "23045:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "23025:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23025:39:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23025:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "22972:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22975:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "22969:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "22969:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "22983:19:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "22985:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "22994:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "22997:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "22990:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22990:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "22985:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "22965:3:13",
																"statements": []
															},
															"src": "22961:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "23094:3:13"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "23099:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23090:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23090:16:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23108:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23083:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23083:27:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23083:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "22914:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "22919:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22924:6:13",
														"type": ""
													}
												],
												"src": "22870:246:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23230:278:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "23240:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "23286:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "23254:31:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23254:38:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "23244:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23301:95:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23384:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23389:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23308:75:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23308:88:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23301:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23444:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23451:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23440:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23440:16:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23458:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23463:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "23405:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23405:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23405:65:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23479:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23490:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23495:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23486:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23486:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23479:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23211:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23218:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23226:3:13",
														"type": ""
													}
												],
												"src": "23122:386:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23648:137:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23659:100:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23746:6:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23755:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23666:79:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23666:93:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23659:3:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23769:10:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "23776:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23769:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "23627:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23633:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23644:3:13",
														"type": ""
													}
												],
												"src": "23514:271:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23897:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "23919:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23927:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23915:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23915:14:13"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23931:31:13",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23908:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "23908:55:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23908:55:13"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "23889:6:13",
														"type": ""
													}
												],
												"src": "23791:179:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24122:220:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24132:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24198:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24203:2:13",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24139:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24139:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "24132:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24304:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "24215:88:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24215:93:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24215:93:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24317:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24328:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24333:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24324:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24324:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24317:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24110:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24118:3:13",
														"type": ""
													}
												],
												"src": "23976:366:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24519:248:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24529:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24541:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24552:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24537:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24537:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24529:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24576:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24587:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24572:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24572:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "24595:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24601:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24591:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24591:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24565:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24565:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24565:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24621:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "24755:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24629:124:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24629:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24621:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24499:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24514:4:13",
														"type": ""
													}
												],
												"src": "24348:419:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24832:40:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24843:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24859:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "24853:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24853:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "24843:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24815:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24825:6:13",
														"type": ""
													}
												],
												"src": "24773:99:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24926:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24936:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "24954:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24961:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24950:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24950:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24970:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "24966:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24966:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "24946:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "24946:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "24936:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "24909:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "24919:6:13",
														"type": ""
													}
												],
												"src": "24878:102:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25078:285:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25088:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25135:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "25102:32:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25102:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "25092:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "25150:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25216:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25221:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25157:58:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25157:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25150:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "25276:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25283:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25272:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25272:16:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25290:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "25295:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "25237:34:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25237:65:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25237:65:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25311:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25322:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "25349:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "25327:21:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25327:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25318:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25318:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25311:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "25059:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25066:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25074:3:13",
														"type": ""
													}
												],
												"src": "24986:377:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25487:195:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25497:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25509:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25520:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25505:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25505:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25497:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25544:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25555:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25540:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25540:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25563:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25569:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25559:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25559:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25533:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25533:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25533:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25589:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25661:6:13"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25670:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25597:63:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "25597:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25589:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25459:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25471:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25482:4:13",
														"type": ""
													}
												],
												"src": "25369:313:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0be85b0fd62b353be3601e32894ceb7d1f17bd52fed9d0e6964a0beb0bba260b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Please First Deposit NFT !!!\")\n\n    }\n\n    function abi_encode_t_stringliteral_0be85b0fd62b353be3601e32894ceb7d1f17bd52fed9d0e6964a0beb0bba260b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_0be85b0fd62b353be3601e32894ceb7d1f17bd52fed9d0e6964a0beb0bba260b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0be85b0fd62b353be3601e32894ceb7d1f17bd52fed9d0e6964a0beb0bba260b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0be85b0fd62b353be3601e32894ceb7d1f17bd52fed9d0e6964a0beb0bba260b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_a55098851a0ebd9887a2657839576e0284ebe4317fa572ff82e296dce3b1c332(memPtr) {\n\n        mstore(add(memPtr, 0), \"You Already Deposit NFT\")\n\n    }\n\n    function abi_encode_t_stringliteral_a55098851a0ebd9887a2657839576e0284ebe4317fa572ff82e296dce3b1c332_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_a55098851a0ebd9887a2657839576e0284ebe4317fa572ff82e296dce3b1c332(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a55098851a0ebd9887a2657839576e0284ebe4317fa572ff82e296dce3b1c332__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a55098851a0ebd9887a2657839576e0284ebe4317fa572ff82e296dce3b1c332_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2ea564f91322c4e6360e343eafee06fa15490d9b0c58fcc61cf27678bc1a8b36(memPtr) {\n\n        mstore(add(memPtr, 0), \"15 Days Category is Full !!!\")\n\n    }\n\n    function abi_encode_t_stringliteral_2ea564f91322c4e6360e343eafee06fa15490d9b0c58fcc61cf27678bc1a8b36_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2ea564f91322c4e6360e343eafee06fa15490d9b0c58fcc61cf27678bc1a8b36(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2ea564f91322c4e6360e343eafee06fa15490d9b0c58fcc61cf27678bc1a8b36__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2ea564f91322c4e6360e343eafee06fa15490d9b0c58fcc61cf27678bc1a8b36_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f2ba20d657046b0f65fbea10716222e539090f7e5b324152631fdff76654446b(memPtr) {\n\n        mstore(add(memPtr, 0), \"30 Days Category is Full !!!\")\n\n    }\n\n    function abi_encode_t_stringliteral_f2ba20d657046b0f65fbea10716222e539090f7e5b324152631fdff76654446b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_f2ba20d657046b0f65fbea10716222e539090f7e5b324152631fdff76654446b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f2ba20d657046b0f65fbea10716222e539090f7e5b324152631fdff76654446b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2ba20d657046b0f65fbea10716222e539090f7e5b324152631fdff76654446b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_96174b8098a0756df4a8cf8185e42278721efe8b421242f0a2d23d73619846c8(memPtr) {\n\n        mstore(add(memPtr, 0), \"60 Days Category is Full !!!\")\n\n    }\n\n    function abi_encode_t_stringliteral_96174b8098a0756df4a8cf8185e42278721efe8b421242f0a2d23d73619846c8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_96174b8098a0756df4a8cf8185e42278721efe8b421242f0a2d23d73619846c8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_96174b8098a0756df4a8cf8185e42278721efe8b421242f0a2d23d73619846c8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_96174b8098a0756df4a8cf8185e42278721efe8b421242f0a2d23d73619846c8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2d8b114046bff8662406d3b79f38e6738d86943825c129f00f84dbdea8ee25b4(memPtr) {\n\n        mstore(add(memPtr, 0), \"90 Days Category is Full !!!\")\n\n    }\n\n    function abi_encode_t_stringliteral_2d8b114046bff8662406d3b79f38e6738d86943825c129f00f84dbdea8ee25b4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2d8b114046bff8662406d3b79f38e6738d86943825c129f00f84dbdea8ee25b4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2d8b114046bff8662406d3b79f38e6738d86943825c129f00f84dbdea8ee25b4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2d8b114046bff8662406d3b79f38e6738d86943825c129f00f84dbdea8ee25b4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0362aadfad75f8d1514bed2241ef9233db5f01322c03768d43f74d86629736b2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sellect Days 15,30,60,90 !!!\")\n\n    }\n\n    function abi_encode_t_stringliteral_0362aadfad75f8d1514bed2241ef9233db5f01322c03768d43f74d86629736b2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_0362aadfad75f8d1514bed2241ef9233db5f01322c03768d43f74d86629736b2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0362aadfad75f8d1514bed2241ef9233db5f01322c03768d43f74d86629736b2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0362aadfad75f8d1514bed2241ef9233db5f01322c03768d43f74d86629736b2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Counter: decrement overflow\")\n\n    }\n\n    function abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100f55760003560e01c8063a6021ace11610097578063c0cd40ee11610066578063c0cd40ee14610256578063e2bbb15814610272578063f2fde38b1461028e578063f7d252f4146102aa576100f5565b8063a6021ace146101c8578063b10558ab146101e6578063b4e929d414610204578063b7171a2e14610238576100f5565b80634930e5d1116100d35780634930e5d11461016657806351cff8d914610184578063715018a6146101a05780638da5cb5b146101aa576100f5565b8063150b7a02146100fa5780633f4312301461012a57806341fcd29a14610148575b600080fd5b610114600480360381019061010f9190611a66565b6102c8565b6040516101219190611b29565b60405180910390f35b6101326102dd565b60405161013f9190611b53565b60405180910390f35b6101506102e9565b60405161015d9190611b53565b60405180910390f35b61016e6102f5565b60405161017b9190611b53565b60405180910390f35b61019e60048036038101906101999190611b6e565b6102fb565b005b6101a8610a9b565b005b6101b2610aaf565b6040516101bf9190611baa565b60405180910390f35b6101d0610ad8565b6040516101dd9190611baa565b60405180910390f35b6101ee610afe565b6040516101fb9190611b53565b60405180910390f35b61021e60048036038101906102199190611b6e565b610b0a565b60405161022f959493929190611be0565b60405180910390f35b610240610b4d565b60405161024d9190611baa565b60405180910390f35b610270600480360381019061026b9190611c33565b610b73565b005b61028c60048036038101906102879190611c60565b610be6565b005b6102a860048036038101906102a39190611b6e565b611367565b005b6102b26113ea565b6040516102bf9190611b53565b60405180910390f35b600063150b7a0260e01b905095945050505050565b60018060000154905081565b60048060000154905081565b60075481565b600860008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff1661038a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038190611cfd565b60405180910390fd5b600062015180600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154426103de9190611d4c565b6103e89190611daf565b9050600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154811015610700576000600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546104c69190611daf565b826104d19190611de0565b9050600060648260026104e49190611de0565b6104ee9190611daf565b90506105488482846105009190611d4c565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166113f69092919063ffffffff16565b61059761dead82600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166113f69092919063ffffffff16565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3086600860008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546040518463ffffffff1660e01b815260040161063893929190611e59565b600060405180830381600087803b15801561065257600080fd5b505af1158015610666573d6000803e3d6000fd5b50505050816007600082825461067c9190611d4c565b92505081905550600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808201600090556001820160009055600282016000905560038201600090556004820160006101000a81549060ff021916905550505050610934565b61078f82600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166113f69092919063ffffffff16565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3084600860008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546040518463ffffffff1660e01b815260040161083093929190611e59565b600060405180830381600087803b15801561084a57600080fd5b505af115801561085e573d6000803e3d6000fd5b50505050600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154600760008282546108b69190611d4c565b92505081905550600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808201600090556001820160009055600282016000905560038201600090556004820160006101000a81549060ff021916905550505b600f600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101540361098d57610988600161147c565b610a97565b601e600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154036109e6576109e1600261147c565b610a96565b603c600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015403610a3f57610a3a600361147c565b610a95565b605a600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015403610a9457610a93600461147c565b5b5b5b5b5050565b610aa36114d8565b610aad6000611556565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60028060000154905081565b60086020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b7b6114d8565b8060076000828254610b8d9190611ea3565b92505081905550610be3333083600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661161a909392919063ffffffff16565b50565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff1615610c76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6d90611f23565b60405180910390fd5b600f8103610e2257610c8860016116a3565b6103e8610c9560016116b9565b1115610cd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccd90611f8f565b60405180910390fd5b6040518060a00160405280611388815260200182815260200142815260200183815260200160011515815250600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550905050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3330856040518463ffffffff1660e01b8152600401610deb93929190611e59565b600060405180830381600087803b158015610e0557600080fd5b505af1158015610e19573d6000803e3d6000fd5b50505050611363565b601e8103610fce57610e3460026116a3565b6102ee610e4160026116b9565b1115610e82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7990611ffb565b60405180910390fd5b6040518060a00160405280611d4c815260200182815260200142815260200183815260200160011515815250600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550905050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3330856040518463ffffffff1660e01b8152600401610f9793929190611e59565b600060405180830381600087803b158015610fb157600080fd5b505af1158015610fc5573d6000803e3d6000fd5b50505050611362565b603c810361117a57610fe060036116a3565b6101f4610fed60036116b9565b111561102e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102590612067565b60405180910390fd5b6040518060a001604052806130d4815260200182815260200142815260200183815260200160011515815250600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550905050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3330856040518463ffffffff1660e01b815260040161114393929190611e59565b600060405180830381600087803b15801561115d57600080fd5b505af1158015611171573d6000803e3d6000fd5b50505050611361565b605a81036113255761118c60046116a3565b60fa61119860046116b9565b11156111d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d0906120d3565b60405180910390fd5b6040518060a0016040528061445c815260200182815260200142815260200183815260200160011515815250600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550905050600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b88d4fde3330856040518463ffffffff1660e01b81526004016112ee93929190611e59565b600060405180830381600087803b15801561130857600080fd5b505af115801561131c573d6000803e3d6000fd5b50505050611360565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113579061213f565b60405180910390fd5b5b5b5b5050565b61136f6114d8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036113de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d5906121d1565b60405180910390fd5b6113e781611556565b50565b60038060000154905081565b6114778363a9059cbb60e01b84846040516024016114159291906121f1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506116c7565b505050565b600081600001549050600081116114c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114bf90612266565b60405180910390fd5b6001810382600001819055505050565b6114e061178e565b73ffffffffffffffffffffffffffffffffffffffff166114fe610aaf565b73ffffffffffffffffffffffffffffffffffffffff1614611554576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154b906122d2565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61169d846323b872dd60e01b85858560405160240161163b939291906122f2565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506116c7565b50505050565b6001816000016000828254019250508190555050565b600081600001549050919050565b6000611729826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166117969092919063ffffffff16565b905060008151111561178957808060200190518101906117499190612355565b611788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161177f906123f4565b60405180910390fd5b5b505050565b600033905090565b60606117a584846000856117ae565b90509392505050565b6060824710156117f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117ea90612486565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161181c9190612517565b60006040518083038185875af1925050503d8060008114611859576040519150601f19603f3d011682016040523d82523d6000602084013e61185e565b606091505b509150915061186f8783838761187b565b92505050949350505050565b606083156118dd5760008351036118d557611895856118f0565b6118d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118cb9061257a565b60405180910390fd5b5b8290506118e8565b6118e78383611913565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156119265781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161195a91906125ef565b60405180910390fd5b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006119988261196d565b9050919050565b6119a88161198d565b81146119b357600080fd5b50565b6000813590506119c58161199f565b92915050565b6000819050919050565b6119de816119cb565b81146119e957600080fd5b50565b6000813590506119fb816119d5565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611a2657611a25611a01565b5b8235905067ffffffffffffffff811115611a4357611a42611a06565b5b602083019150836001820283011115611a5f57611a5e611a0b565b5b9250929050565b600080600080600060808688031215611a8257611a81611963565b5b6000611a90888289016119b6565b9550506020611aa1888289016119b6565b9450506040611ab2888289016119ec565b935050606086013567ffffffffffffffff811115611ad357611ad2611968565b5b611adf88828901611a10565b92509250509295509295909350565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611b2381611aee565b82525050565b6000602082019050611b3e6000830184611b1a565b92915050565b611b4d816119cb565b82525050565b6000602082019050611b686000830184611b44565b92915050565b600060208284031215611b8457611b83611963565b5b6000611b92848285016119b6565b91505092915050565b611ba48161198d565b82525050565b6000602082019050611bbf6000830184611b9b565b92915050565b60008115159050919050565b611bda81611bc5565b82525050565b600060a082019050611bf56000830188611b44565b611c026020830187611b44565b611c0f6040830186611b44565b611c1c6060830185611b44565b611c296080830184611bd1565b9695505050505050565b600060208284031215611c4957611c48611963565b5b6000611c57848285016119ec565b91505092915050565b60008060408385031215611c7757611c76611963565b5b6000611c85858286016119ec565b9250506020611c96858286016119ec565b9150509250929050565b600082825260208201905092915050565b7f506c65617365204669727374204465706f736974204e46542021212100000000600082015250565b6000611ce7601c83611ca0565b9150611cf282611cb1565b602082019050919050565b60006020820190508181036000830152611d1681611cda565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d57826119cb565b9150611d62836119cb565b9250828203905081811115611d7a57611d79611d1d565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611dba826119cb565b9150611dc5836119cb565b925082611dd557611dd4611d80565b5b828204905092915050565b6000611deb826119cb565b9150611df6836119cb565b9250828202611e04816119cb565b91508282048414831517611e1b57611e1a611d1d565b5b5092915050565b600082825260208201905092915050565b50565b6000611e43600083611e22565b9150611e4e82611e33565b600082019050919050565b6000608082019050611e6e6000830186611b9b565b611e7b6020830185611b9b565b611e886040830184611b44565b8181036060830152611e9981611e36565b9050949350505050565b6000611eae826119cb565b9150611eb9836119cb565b9250828201905080821115611ed157611ed0611d1d565b5b92915050565b7f596f7520416c7265616479204465706f736974204e4654000000000000000000600082015250565b6000611f0d601783611ca0565b9150611f1882611ed7565b602082019050919050565b60006020820190508181036000830152611f3c81611f00565b9050919050565b7f313520446179732043617465676f72792069732046756c6c2021212100000000600082015250565b6000611f79601c83611ca0565b9150611f8482611f43565b602082019050919050565b60006020820190508181036000830152611fa881611f6c565b9050919050565b7f333020446179732043617465676f72792069732046756c6c2021212100000000600082015250565b6000611fe5601c83611ca0565b9150611ff082611faf565b602082019050919050565b6000602082019050818103600083015261201481611fd8565b9050919050565b7f363020446179732043617465676f72792069732046756c6c2021212100000000600082015250565b6000612051601c83611ca0565b915061205c8261201b565b602082019050919050565b6000602082019050818103600083015261208081612044565b9050919050565b7f393020446179732043617465676f72792069732046756c6c2021212100000000600082015250565b60006120bd601c83611ca0565b91506120c882612087565b602082019050919050565b600060208201905081810360008301526120ec816120b0565b9050919050565b7f53656c6c65637420446179732031352c33302c36302c39302021212100000000600082015250565b6000612129601c83611ca0565b9150612134826120f3565b602082019050919050565b600060208201905081810360008301526121588161211c565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006121bb602683611ca0565b91506121c68261215f565b604082019050919050565b600060208201905081810360008301526121ea816121ae565b9050919050565b60006040820190506122066000830185611b9b565b6122136020830184611b44565b9392505050565b7f436f756e7465723a2064656372656d656e74206f766572666c6f770000000000600082015250565b6000612250601b83611ca0565b915061225b8261221a565b602082019050919050565b6000602082019050818103600083015261227f81612243565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006122bc602083611ca0565b91506122c782612286565b602082019050919050565b600060208201905081810360008301526122eb816122af565b9050919050565b60006060820190506123076000830186611b9b565b6123146020830185611b9b565b6123216040830184611b44565b949350505050565b61233281611bc5565b811461233d57600080fd5b50565b60008151905061234f81612329565b92915050565b60006020828403121561236b5761236a611963565b5b600061237984828501612340565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006123de602a83611ca0565b91506123e982612382565b604082019050919050565b6000602082019050818103600083015261240d816123d1565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000612470602683611ca0565b915061247b82612414565b604082019050919050565b6000602082019050818103600083015261249f81612463565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156124da5780820151818401526020810190506124bf565b60008484015250505050565b60006124f1826124a6565b6124fb81856124b1565b935061250b8185602086016124bc565b80840191505092915050565b600061252382846124e6565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612564601d83611ca0565b915061256f8261252e565b602082019050919050565b6000602082019050818103600083015261259381612557565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b60006125c18261259a565b6125cb8185611ca0565b93506125db8185602086016124bc565b6125e4816125a5565b840191505092915050565b6000602082019050818103600083015261260981846125b6565b90509291505056fea2646970667358221220696eee21959a9054876795242494d36cf68c886e01a507b4927edccf4965a48364736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA6021ACE GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC0CD40EE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xC0CD40EE EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xF7D252F4 EQ PUSH2 0x2AA JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0xA6021ACE EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xB10558AB EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xB4E929D4 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xB7171A2E EQ PUSH2 0x238 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x4930E5D1 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x4930E5D1 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AA JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x3F431230 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x41FCD29A EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x1A66 JUMP JUMPDEST PUSH2 0x2C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x1B29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x2DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x2E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x2FB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A8 PUSH2 0xA9B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B2 PUSH2 0xAAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1BAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1BAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EE PUSH2 0xAFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH2 0xB4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x1BAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x1C33 JUMP JUMPDEST PUSH2 0xB73 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x1C60 JUMP JUMPDEST PUSH2 0xBE6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1367 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B2 PUSH2 0x13EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BF SWAP2 SWAP1 PUSH2 0x1B53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x4 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x38A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x381 SWAP1 PUSH2 0x1CFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x15180 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH2 0x3E8 SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST SWAP1 POP PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 LT ISZERO PUSH2 0x700 JUMPI PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x4C6 SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST DUP3 PUSH2 0x4D1 SWAP2 SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP3 PUSH1 0x2 PUSH2 0x4E4 SWAP2 SWAP1 PUSH2 0x1DE0 JUMP JUMPDEST PUSH2 0x4EE SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST SWAP1 POP PUSH2 0x548 DUP5 DUP3 DUP5 PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13F6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x597 PUSH2 0xDEAD DUP3 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13F6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE ADDRESS DUP7 PUSH1 0x8 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x638 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x666 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x67C SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP POP POP PUSH2 0x934 JUMP JUMPDEST PUSH2 0x78F DUP3 PUSH1 0x8 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13F6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE ADDRESS DUP5 PUSH1 0x8 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x830 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x84A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x85E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8B6 SWAP2 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP JUMPDEST PUSH1 0xF PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x98D JUMPI PUSH2 0x988 PUSH1 0x1 PUSH2 0x147C JUMP JUMPDEST PUSH2 0xA97 JUMP JUMPDEST PUSH1 0x1E PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x9E6 JUMPI PUSH2 0x9E1 PUSH1 0x2 PUSH2 0x147C JUMP JUMPDEST PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x3C PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0xA3F JUMPI PUSH2 0xA3A PUSH1 0x3 PUSH2 0x147C JUMP JUMPDEST PUSH2 0xA95 JUMP JUMPDEST PUSH1 0x5A PUSH1 0x8 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0xA94 JUMPI PUSH2 0xA93 PUSH1 0x4 PUSH2 0x147C JUMP JUMPDEST JUMPDEST JUMPDEST JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xAA3 PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0xAAD PUSH1 0x0 PUSH2 0x1556 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0xB7B PUSH2 0x14D8 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB8D SWAP2 SWAP1 PUSH2 0x1EA3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xBE3 CALLER ADDRESS DUP4 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x161A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xC76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC6D SWAP1 PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xF DUP2 SUB PUSH2 0xE22 JUMPI PUSH2 0xC88 PUSH1 0x1 PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x3E8 PUSH2 0xC95 PUSH1 0x1 PUSH2 0x16B9 JUMP JUMPDEST GT ISZERO PUSH2 0xCD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCD SWAP1 PUSH2 0x1F8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1388 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDEB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE19 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1363 JUMP JUMPDEST PUSH1 0x1E DUP2 SUB PUSH2 0xFCE JUMPI PUSH2 0xE34 PUSH1 0x2 PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x2EE PUSH2 0xE41 PUSH1 0x2 PUSH2 0x16B9 JUMP JUMPDEST GT ISZERO PUSH2 0xE82 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE79 SWAP1 PUSH2 0x1FFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1D4C DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF97 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1362 JUMP JUMPDEST PUSH1 0x3C DUP2 SUB PUSH2 0x117A JUMPI PUSH2 0xFE0 PUSH1 0x3 PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x1F4 PUSH2 0xFED PUSH1 0x3 PUSH2 0x16B9 JUMP JUMPDEST GT ISZERO PUSH2 0x102E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1025 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x30D4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1143 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x115D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1171 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1361 JUMP JUMPDEST PUSH1 0x5A DUP2 SUB PUSH2 0x1325 JUMPI PUSH2 0x118C PUSH1 0x4 PUSH2 0x16A3 JUMP JUMPDEST PUSH1 0xFA PUSH2 0x1198 PUSH1 0x4 PUSH2 0x16B9 JUMP JUMPDEST GT ISZERO PUSH2 0x11D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D0 SWAP1 PUSH2 0x20D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x445C DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xB88D4FDE CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12EE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E59 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1308 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x131C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x1360 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1357 SWAP1 PUSH2 0x213F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x136F PUSH2 0x14D8 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D5 SWAP1 PUSH2 0x21D1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13E7 DUP2 PUSH2 0x1556 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x0 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0x1477 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1415 SWAP3 SWAP2 SWAP1 PUSH2 0x21F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x16C7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x14C8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14BF SWAP1 PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 SUB DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x14E0 PUSH2 0x178E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x14FE PUSH2 0xAAF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1554 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154B SWAP1 PUSH2 0x22D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x169D DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x163B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x16C7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1729 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1796 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x1789 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1749 SWAP2 SWAP1 PUSH2 0x2355 JUMP JUMPDEST PUSH2 0x1788 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177F SWAP1 PUSH2 0x23F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x17A5 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x17AE JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x17F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17EA SWAP1 PUSH2 0x2486 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x181C SWAP2 SWAP1 PUSH2 0x2517 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1859 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x185E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x186F DUP8 DUP4 DUP4 DUP8 PUSH2 0x187B JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x18DD JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x18D5 JUMPI PUSH2 0x1895 DUP6 PUSH2 0x18F0 JUMP JUMPDEST PUSH2 0x18D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18CB SWAP1 PUSH2 0x257A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x18E8 JUMP JUMPDEST PUSH2 0x18E7 DUP4 DUP4 PUSH2 0x1913 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1926 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x195A SWAP2 SWAP1 PUSH2 0x25EF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1998 DUP3 PUSH2 0x196D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19A8 DUP2 PUSH2 0x198D JUMP JUMPDEST DUP2 EQ PUSH2 0x19B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19C5 DUP2 PUSH2 0x199F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19DE DUP2 PUSH2 0x19CB JUMP JUMPDEST DUP2 EQ PUSH2 0x19E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19FB DUP2 PUSH2 0x19D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1A26 JUMPI PUSH2 0x1A25 PUSH2 0x1A01 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A43 JUMPI PUSH2 0x1A42 PUSH2 0x1A06 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1A5F JUMPI PUSH2 0x1A5E PUSH2 0x1A0B JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A82 JUMPI PUSH2 0x1A81 PUSH2 0x1963 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A90 DUP9 DUP3 DUP10 ADD PUSH2 0x19B6 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1AA1 DUP9 DUP3 DUP10 ADD PUSH2 0x19B6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x1AB2 DUP9 DUP3 DUP10 ADD PUSH2 0x19EC JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AD3 JUMPI PUSH2 0x1AD2 PUSH2 0x1968 JUMP JUMPDEST JUMPDEST PUSH2 0x1ADF DUP9 DUP3 DUP10 ADD PUSH2 0x1A10 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B23 DUP2 PUSH2 0x1AEE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B3E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B1A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B4D DUP2 PUSH2 0x19CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B68 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B44 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B84 JUMPI PUSH2 0x1B83 PUSH2 0x1963 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B92 DUP5 DUP3 DUP6 ADD PUSH2 0x19B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BA4 DUP2 PUSH2 0x198D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BBF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B9B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BDA DUP2 PUSH2 0x1BC5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1BF5 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x1B44 JUMP JUMPDEST PUSH2 0x1C02 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1B44 JUMP JUMPDEST PUSH2 0x1C0F PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1B44 JUMP JUMPDEST PUSH2 0x1C1C PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B44 JUMP JUMPDEST PUSH2 0x1C29 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1BD1 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C49 JUMPI PUSH2 0x1C48 PUSH2 0x1963 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C57 DUP5 DUP3 DUP6 ADD PUSH2 0x19EC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C77 JUMPI PUSH2 0x1C76 PUSH2 0x1963 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C85 DUP6 DUP3 DUP7 ADD PUSH2 0x19EC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C96 DUP6 DUP3 DUP7 ADD PUSH2 0x19EC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x506C65617365204669727374204465706F736974204E46542021212100000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CE7 PUSH1 0x1C DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CF2 DUP3 PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D16 DUP2 PUSH2 0x1CDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1D57 DUP3 PUSH2 0x19CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1D62 DUP4 PUSH2 0x19CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1D7A JUMPI PUSH2 0x1D79 PUSH2 0x1D1D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DBA DUP3 PUSH2 0x19CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC5 DUP4 PUSH2 0x19CB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1DD5 JUMPI PUSH2 0x1DD4 PUSH2 0x1D80 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DEB DUP3 PUSH2 0x19CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1DF6 DUP4 PUSH2 0x19CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1E04 DUP2 PUSH2 0x19CB JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1E1B JUMPI PUSH2 0x1E1A PUSH2 0x1D1D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E43 PUSH1 0x0 DUP4 PUSH2 0x1E22 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E4E DUP3 PUSH2 0x1E33 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1E6E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1B9B JUMP JUMPDEST PUSH2 0x1E7B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B9B JUMP JUMPDEST PUSH2 0x1E88 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B44 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1E99 DUP2 PUSH2 0x1E36 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EAE DUP3 PUSH2 0x19CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1EB9 DUP4 PUSH2 0x19CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1ED1 JUMPI PUSH2 0x1ED0 PUSH2 0x1D1D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520416C7265616479204465706F736974204E4654000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F0D PUSH1 0x17 DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F18 DUP3 PUSH2 0x1ED7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F3C DUP2 PUSH2 0x1F00 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x313520446179732043617465676F72792069732046756C6C2021212100000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F79 PUSH1 0x1C DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F84 DUP3 PUSH2 0x1F43 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FA8 DUP2 PUSH2 0x1F6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x333020446179732043617465676F72792069732046756C6C2021212100000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE5 PUSH1 0x1C DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FF0 DUP3 PUSH2 0x1FAF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2014 DUP2 PUSH2 0x1FD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x363020446179732043617465676F72792069732046756C6C2021212100000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2051 PUSH1 0x1C DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x205C DUP3 PUSH2 0x201B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2080 DUP2 PUSH2 0x2044 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x393020446179732043617465676F72792069732046756C6C2021212100000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20BD PUSH1 0x1C DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x20C8 DUP3 PUSH2 0x2087 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20EC DUP2 PUSH2 0x20B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x53656C6C65637420446179732031352C33302C36302C39302021212100000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2129 PUSH1 0x1C DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2134 DUP3 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2158 DUP2 PUSH2 0x211C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21BB PUSH1 0x26 DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x21C6 DUP3 PUSH2 0x215F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21EA DUP2 PUSH2 0x21AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2206 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1B9B JUMP JUMPDEST PUSH2 0x2213 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B44 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x436F756E7465723A2064656372656D656E74206F766572666C6F770000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2250 PUSH1 0x1B DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x225B DUP3 PUSH2 0x221A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x227F DUP2 PUSH2 0x2243 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BC PUSH1 0x20 DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x22C7 DUP3 PUSH2 0x2286 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22EB DUP2 PUSH2 0x22AF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2307 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1B9B JUMP JUMPDEST PUSH2 0x2314 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B9B JUMP JUMPDEST PUSH2 0x2321 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B44 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2332 DUP2 PUSH2 0x1BC5 JUMP JUMPDEST DUP2 EQ PUSH2 0x233D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x234F DUP2 PUSH2 0x2329 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x236B JUMPI PUSH2 0x236A PUSH2 0x1963 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2379 DUP5 DUP3 DUP6 ADD PUSH2 0x2340 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23DE PUSH1 0x2A DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x23E9 DUP3 PUSH2 0x2382 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x240D DUP2 PUSH2 0x23D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2470 PUSH1 0x26 DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x247B DUP3 PUSH2 0x2414 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x249F DUP2 PUSH2 0x2463 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24DA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x24BF JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24F1 DUP3 PUSH2 0x24A6 JUMP JUMPDEST PUSH2 0x24FB DUP2 DUP6 PUSH2 0x24B1 JUMP JUMPDEST SWAP4 POP PUSH2 0x250B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x24BC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2523 DUP3 DUP5 PUSH2 0x24E6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2564 PUSH1 0x1D DUP4 PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP PUSH2 0x256F DUP3 PUSH2 0x252E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2593 DUP2 PUSH2 0x2557 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25C1 DUP3 PUSH2 0x259A JUMP JUMPDEST PUSH2 0x25CB DUP2 DUP6 PUSH2 0x1CA0 JUMP JUMPDEST SWAP4 POP PUSH2 0x25DB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x24BC JUMP JUMPDEST PUSH2 0x25E4 DUP2 PUSH2 0x25A5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2609 DUP2 DUP5 PUSH2 0x25B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x6EEE21959A9054876795 0x24 0x24 SWAP5 0xD3 PUSH13 0xF68C886E01A507B4927EDCCF49 PUSH6 0xA48364736F6C PUSH4 0x43000812 STOP CALLER ",
							"sourceMap": "402:4740:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4969:171;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;528:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;645;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;751;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3210:1315;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;718:27:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;567:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;923:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;684:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4782:182;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1516:1507;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;606:33:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4969:171;5067:6;5092:41;;;5085:48;;4969:171;;;;;;;:::o;528:33::-;;;;;;;;;:::o;645:::-;;;;;;;;;:::o;751:::-;;;;:::o;3210:1315::-;3268:6;:11;3275:3;3268:11;;;;;;;;;;;;;;;:24;;;;;;;;;;;;3259:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;3334:9;3390:8;3366:6;:11;3373:3;3366:11;;;;;;;;;;;;;;;:21;;;3348:15;:39;;;;:::i;:::-;3347:52;;;;:::i;:::-;3334:66;;3420:6;:11;3427:3;3420:11;;;;;;;;;;;;;;;:15;;;3413:4;:22;3410:762;;;3450:14;3492:6;:11;3499:3;3492:11;;;;;;;;;;;;;;;:15;;;3473:6;:11;3480:3;3473:11;;;;;;;;;;;;;;;:18;;;:34;;;;:::i;:::-;3467:4;:41;;;;:::i;:::-;3450:58;;3522:9;3548:3;3537:9;3535:1;:11;;;;:::i;:::-;3534:17;;;;:::i;:::-;3522:29;;3565:56;3599:3;3616:4;3604:9;:16;;;;:::i;:::-;3572:12;;;;;;;;;;;3565:33;;;;:56;;;;;:::i;:::-;3635:83;3669:42;3713:4;3642:12;;;;;;;;;;;3635:33;;;;:83;;;;;:::i;:::-;3740:13;;;;;;;;;;;3732:39;;;3780:4;3787:3;3791:6;:11;3798:3;3791:11;;;;;;;;;;;;;;;:15;;;3732:78;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3846:9;3824:18;;:31;;;;;;;:::i;:::-;;;;;;;;3876:6;:11;3883:3;3876:11;;;;;;;;;;;;;;;;3869:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3436:462;;3410:762;;;3925:58;3959:3;3964:6;:11;3971:3;3964:11;;;;;;;;;;;;;;;:18;;;3932:12;;;;;;;;;;;3925:33;;;;:58;;;;;:::i;:::-;4005:13;;;;;;;;;;;3997:39;;;4045:4;4052:3;4056:6;:11;4063:3;4056:11;;;;;;;;;;;;;;;:15;;;3997:78;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4111:6;:11;4118:3;4111:11;;;;;;;;;;;;;;;:18;;;4089;;:40;;;;;;;:::i;:::-;;;;;;;;4150:6;:11;4157:3;4150:11;;;;;;;;;;;;;;;;4143:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3410:762;4204:2;4185:6;:11;4192:3;4185:11;;;;;;;;;;;;;;;:15;;;:21;4182:335;;4221:21;:9;:19;:21::i;:::-;4182:335;;;4289:2;4270:6;:11;4277:3;4270:11;;;;;;;;;;;;;;;:15;;;:21;4267:250;;4306:21;:9;:19;:21::i;:::-;4267:250;;;4377:2;4358:6;:11;4365:3;4358:11;;;;;;;;;;;;;;;:15;;;:21;4355:162;;4394:21;:9;:19;:21::i;:::-;4355:162;;;4465:2;4446:6;:11;4453:3;4446:11;;;;;;;;;;;;;;;:15;;;:21;4443:74;;4482:21;:9;:19;:21::i;:::-;4443:74;4355:162;4267:250;4182:335;3249:1276;3210:1315;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;718:27:12:-;;;;;;;;;;;;;:::o;567:33::-;;;;;;;;;:::o;923:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;684:28::-;;;;;;;;;;;;;:::o;4782:182::-;1094:13:0;:11;:13::i;:::-;4867:7:12::1;4845:18;;:29;;;;;;;:::i;:::-;;;;;;;;4884:73;4922:10;4942:4;4949:7;4891:12;;;;;;;;;;;4884:37;;;;:73;;;;;;:::i;:::-;4782:182:::0;:::o;1516:1507::-;1584:6;:18;1591:10;1584:18;;;;;;;;;;;;;;;:31;;;;;;;;;;;;1583:32;1574:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1663:2;1655:4;:10;1652:1361;;1680:21;:9;:19;:21::i;:::-;1745:4;1723:19;:9;:17;:19::i;:::-;:26;;1715:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;1816:46;;;;;;;;1823:4;1816:46;;;;1828:4;1816:46;;;;1833:15;1816:46;;;;1849:7;1816:46;;;;1857:4;1816:46;;;;;1795:6;:18;1802:10;1795:18;;;;;;;;;;;;;;;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1884:13;;;;;;;;;;;1876:39;;;1916:10;1935:4;1941:7;1876:76;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1652:1361;;;1988:2;1980:4;:10;1977:1036;;2005:21;:9;:19;:21::i;:::-;2070:3;2048:19;:9;:17;:19::i;:::-;:25;;2040:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;2140:46;;;;;;;;2147:4;2140:46;;;;2152:4;2140:46;;;;2157:15;2140:46;;;;2173:7;2140:46;;;;2181:4;2140:46;;;;;2119:6;:18;2126:10;2119:18;;;;;;;;;;;;;;;:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:13;;;;;;;;;;;2200:39;;;2240:10;2259:4;2265:7;2200:76;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1977:1036;;;2312:2;2304:4;:10;2301:712;;2329:21;:9;:19;:21::i;:::-;2394:3;2372:19;:9;:17;:19::i;:::-;:25;;2364:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;2464:47;;;;;;;;2471:5;2464:47;;;;2477:4;2464:47;;;;2482:15;2464:47;;;;2498:7;2464:47;;;;2506:4;2464:47;;;;;2443:6;:18;2450:10;2443:18;;;;;;;;;;;;;;;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2533:13;;;;;;;;;;;2525:39;;;2565:10;2584:4;2590:7;2525:76;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2301:712;;;2637:2;2629:4;:10;2626:387;;2654:21;:9;:19;:21::i;:::-;2719:3;2697:19;:9;:17;:19::i;:::-;:25;;2689:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;2789:47;;;;;;;;2796:5;2789:47;;;;2802:4;2789:47;;;;2807:15;2789:47;;;;2823:7;2789:47;;;;2831:4;2789:47;;;;;2768:6;:18;2775:10;2768:18;;;;;;;;;;;;;;;:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2858:13;;;;;;;;;;;2850:39;;;2890:10;2909:4;2915:7;2850:76;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2626:387;;;2964:38;;;;;;;;;;:::i;:::-;;;;;;;;2626:387;2301:712;1977:1036;1652:1361;1516:1507;;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;::::0;2161:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;606:33:12:-;;;;;;;;;:::o;763:205:3:-;875:86;895:5;925:23;;;950:2;954:5;902:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;875:19;:86::i;:::-;763:205;;;:::o;1074:229:9:-;1137:13;1153:7;:14;;;1137:30;;1193:1;1185:5;:9;1177:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;1285:1;1277:5;:9;1260:7;:14;;:26;;;;1127:176;1074:229;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;974:241:3:-;1112:96;1132:5;1162:27;;;1191:4;1197:2;1201:5;1139:68;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:19;:96::i;:::-;974:241;;;;:::o;945:123:9:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;827:112::-;892:7;918;:14;;;911:21;;827:112;;;:::o;3747:706:3:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4166:95;;4295:1;4275:10;:17;:21;4271:176;;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4271:176;3817:636;3747:706;;:::o;640:96:8:-;693:7;719:10;712:17;;640:96;:::o;3873:223:7:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;;3873:223;;;;;:::o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5241:12;5255:23;5282:6;:11;;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;;;;4960:446;;;;;;:::o;7466:628::-;7646:12;7674:7;7670:418;;;7722:1;7701:10;:17;:22;7697:286;;7916:18;7927:6;7916:10;:18::i;:::-;7908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:286;8003:10;7996:17;;;;7670:418;8044:33;8052:10;8064:12;8044:7;:33::i;:::-;7466:628;;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;8616:540::-;8795:1;8775:10;:17;:21;8771:379;;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;;;;;;;;;;:::i;:::-;;;;;;;;88:117:13;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1320:117;1429:1;1426;1419:12;1443:117;1552:1;1549;1542:12;1579:552;1636:8;1646:6;1696:3;1689:4;1681:6;1677:17;1673:27;1663:122;;1704:79;;:::i;:::-;1663:122;1817:6;1804:20;1794:30;;1847:18;1839:6;1836:30;1833:117;;;1869:79;;:::i;:::-;1833:117;1983:4;1975:6;1971:17;1959:29;;2037:3;2029:4;2021:6;2017:17;2007:8;2003:32;2000:41;1997:128;;;2044:79;;:::i;:::-;1997:128;1579:552;;;;;:::o;2137:963::-;2234:6;2242;2250;2258;2266;2315:3;2303:9;2294:7;2290:23;2286:33;2283:120;;;2322:79;;:::i;:::-;2283:120;2442:1;2467:53;2512:7;2503:6;2492:9;2488:22;2467:53;:::i;:::-;2457:63;;2413:117;2569:2;2595:53;2640:7;2631:6;2620:9;2616:22;2595:53;:::i;:::-;2585:63;;2540:118;2697:2;2723:53;2768:7;2759:6;2748:9;2744:22;2723:53;:::i;:::-;2713:63;;2668:118;2853:2;2842:9;2838:18;2825:32;2884:18;2876:6;2873:30;2870:117;;;2906:79;;:::i;:::-;2870:117;3019:64;3075:7;3066:6;3055:9;3051:22;3019:64;:::i;:::-;3001:82;;;;2796:297;2137:963;;;;;;;;:::o;3106:149::-;3142:7;3182:66;3175:5;3171:78;3160:89;;3106:149;;;:::o;3261:115::-;3346:23;3363:5;3346:23;:::i;:::-;3341:3;3334:36;3261:115;;:::o;3382:218::-;3473:4;3511:2;3500:9;3496:18;3488:26;;3524:69;3590:1;3579:9;3575:17;3566:6;3524:69;:::i;:::-;3382:218;;;;:::o;3606:118::-;3693:24;3711:5;3693:24;:::i;:::-;3688:3;3681:37;3606:118;;:::o;3730:222::-;3823:4;3861:2;3850:9;3846:18;3838:26;;3874:71;3942:1;3931:9;3927:17;3918:6;3874:71;:::i;:::-;3730:222;;;;:::o;3958:329::-;4017:6;4066:2;4054:9;4045:7;4041:23;4037:32;4034:119;;;4072:79;;:::i;:::-;4034:119;4192:1;4217:53;4262:7;4253:6;4242:9;4238:22;4217:53;:::i;:::-;4207:63;;4163:117;3958:329;;;;:::o;4293:118::-;4380:24;4398:5;4380:24;:::i;:::-;4375:3;4368:37;4293:118;;:::o;4417:222::-;4510:4;4548:2;4537:9;4533:18;4525:26;;4561:71;4629:1;4618:9;4614:17;4605:6;4561:71;:::i;:::-;4417:222;;;;:::o;4645:90::-;4679:7;4722:5;4715:13;4708:21;4697:32;;4645:90;;;:::o;4741:109::-;4822:21;4837:5;4822:21;:::i;:::-;4817:3;4810:34;4741:109;;:::o;4856:652::-;5055:4;5093:3;5082:9;5078:19;5070:27;;5107:71;5175:1;5164:9;5160:17;5151:6;5107:71;:::i;:::-;5188:72;5256:2;5245:9;5241:18;5232:6;5188:72;:::i;:::-;5270;5338:2;5327:9;5323:18;5314:6;5270:72;:::i;:::-;5352;5420:2;5409:9;5405:18;5396:6;5352:72;:::i;:::-;5434:67;5496:3;5485:9;5481:19;5472:6;5434:67;:::i;:::-;4856:652;;;;;;;;:::o;5514:329::-;5573:6;5622:2;5610:9;5601:7;5597:23;5593:32;5590:119;;;5628:79;;:::i;:::-;5590:119;5748:1;5773:53;5818:7;5809:6;5798:9;5794:22;5773:53;:::i;:::-;5763:63;;5719:117;5514:329;;;;:::o;5849:474::-;5917:6;5925;5974:2;5962:9;5953:7;5949:23;5945:32;5942:119;;;5980:79;;:::i;:::-;5942:119;6100:1;6125:53;6170:7;6161:6;6150:9;6146:22;6125:53;:::i;:::-;6115:63;;6071:117;6227:2;6253:53;6298:7;6289:6;6278:9;6274:22;6253:53;:::i;:::-;6243:63;;6198:118;5849:474;;;;;:::o;6329:169::-;6413:11;6447:6;6442:3;6435:19;6487:4;6482:3;6478:14;6463:29;;6329:169;;;;:::o;6504:178::-;6644:30;6640:1;6632:6;6628:14;6621:54;6504:178;:::o;6688:366::-;6830:3;6851:67;6915:2;6910:3;6851:67;:::i;:::-;6844:74;;6927:93;7016:3;6927:93;:::i;:::-;7045:2;7040:3;7036:12;7029:19;;6688:366;;;:::o;7060:419::-;7226:4;7264:2;7253:9;7249:18;7241:26;;7313:9;7307:4;7303:20;7299:1;7288:9;7284:17;7277:47;7341:131;7467:4;7341:131;:::i;:::-;7333:139;;7060:419;;;:::o;7485:180::-;7533:77;7530:1;7523:88;7630:4;7627:1;7620:15;7654:4;7651:1;7644:15;7671:194;7711:4;7731:20;7749:1;7731:20;:::i;:::-;7726:25;;7765:20;7783:1;7765:20;:::i;:::-;7760:25;;7809:1;7806;7802:9;7794:17;;7833:1;7827:4;7824:11;7821:37;;;7838:18;;:::i;:::-;7821:37;7671:194;;;;:::o;7871:180::-;7919:77;7916:1;7909:88;8016:4;8013:1;8006:15;8040:4;8037:1;8030:15;8057:185;8097:1;8114:20;8132:1;8114:20;:::i;:::-;8109:25;;8148:20;8166:1;8148:20;:::i;:::-;8143:25;;8187:1;8177:35;;8192:18;;:::i;:::-;8177:35;8234:1;8231;8227:9;8222:14;;8057:185;;;;:::o;8248:410::-;8288:7;8311:20;8329:1;8311:20;:::i;:::-;8306:25;;8345:20;8363:1;8345:20;:::i;:::-;8340:25;;8400:1;8397;8393:9;8422:30;8440:11;8422:30;:::i;:::-;8411:41;;8601:1;8592:7;8588:15;8585:1;8582:22;8562:1;8555:9;8535:83;8512:139;;8631:18;;:::i;:::-;8512:139;8296:362;8248:410;;;;:::o;8664:168::-;8747:11;8781:6;8776:3;8769:19;8821:4;8816:3;8812:14;8797:29;;8664:168;;;;:::o;8838:114::-;;:::o;8958:362::-;9099:3;9120:65;9183:1;9178:3;9120:65;:::i;:::-;9113:72;;9194:93;9283:3;9194:93;:::i;:::-;9312:1;9307:3;9303:11;9296:18;;8958:362;;;:::o;9326:748::-;9575:4;9613:3;9602:9;9598:19;9590:27;;9627:71;9695:1;9684:9;9680:17;9671:6;9627:71;:::i;:::-;9708:72;9776:2;9765:9;9761:18;9752:6;9708:72;:::i;:::-;9790;9858:2;9847:9;9843:18;9834:6;9790:72;:::i;:::-;9909:9;9903:4;9899:20;9894:2;9883:9;9879:18;9872:48;9937:130;10062:4;9937:130;:::i;:::-;9929:138;;9326:748;;;;;;:::o;10080:191::-;10120:3;10139:20;10157:1;10139:20;:::i;:::-;10134:25;;10173:20;10191:1;10173:20;:::i;:::-;10168:25;;10216:1;10213;10209:9;10202:16;;10237:3;10234:1;10231:10;10228:36;;;10244:18;;:::i;:::-;10228:36;10080:191;;;;:::o;10277:173::-;10417:25;10413:1;10405:6;10401:14;10394:49;10277:173;:::o;10456:366::-;10598:3;10619:67;10683:2;10678:3;10619:67;:::i;:::-;10612:74;;10695:93;10784:3;10695:93;:::i;:::-;10813:2;10808:3;10804:12;10797:19;;10456:366;;;:::o;10828:419::-;10994:4;11032:2;11021:9;11017:18;11009:26;;11081:9;11075:4;11071:20;11067:1;11056:9;11052:17;11045:47;11109:131;11235:4;11109:131;:::i;:::-;11101:139;;10828:419;;;:::o;11253:178::-;11393:30;11389:1;11381:6;11377:14;11370:54;11253:178;:::o;11437:366::-;11579:3;11600:67;11664:2;11659:3;11600:67;:::i;:::-;11593:74;;11676:93;11765:3;11676:93;:::i;:::-;11794:2;11789:3;11785:12;11778:19;;11437:366;;;:::o;11809:419::-;11975:4;12013:2;12002:9;11998:18;11990:26;;12062:9;12056:4;12052:20;12048:1;12037:9;12033:17;12026:47;12090:131;12216:4;12090:131;:::i;:::-;12082:139;;11809:419;;;:::o;12234:178::-;12374:30;12370:1;12362:6;12358:14;12351:54;12234:178;:::o;12418:366::-;12560:3;12581:67;12645:2;12640:3;12581:67;:::i;:::-;12574:74;;12657:93;12746:3;12657:93;:::i;:::-;12775:2;12770:3;12766:12;12759:19;;12418:366;;;:::o;12790:419::-;12956:4;12994:2;12983:9;12979:18;12971:26;;13043:9;13037:4;13033:20;13029:1;13018:9;13014:17;13007:47;13071:131;13197:4;13071:131;:::i;:::-;13063:139;;12790:419;;;:::o;13215:178::-;13355:30;13351:1;13343:6;13339:14;13332:54;13215:178;:::o;13399:366::-;13541:3;13562:67;13626:2;13621:3;13562:67;:::i;:::-;13555:74;;13638:93;13727:3;13638:93;:::i;:::-;13756:2;13751:3;13747:12;13740:19;;13399:366;;;:::o;13771:419::-;13937:4;13975:2;13964:9;13960:18;13952:26;;14024:9;14018:4;14014:20;14010:1;13999:9;13995:17;13988:47;14052:131;14178:4;14052:131;:::i;:::-;14044:139;;13771:419;;;:::o;14196:178::-;14336:30;14332:1;14324:6;14320:14;14313:54;14196:178;:::o;14380:366::-;14522:3;14543:67;14607:2;14602:3;14543:67;:::i;:::-;14536:74;;14619:93;14708:3;14619:93;:::i;:::-;14737:2;14732:3;14728:12;14721:19;;14380:366;;;:::o;14752:419::-;14918:4;14956:2;14945:9;14941:18;14933:26;;15005:9;14999:4;14995:20;14991:1;14980:9;14976:17;14969:47;15033:131;15159:4;15033:131;:::i;:::-;15025:139;;14752:419;;;:::o;15177:178::-;15317:30;15313:1;15305:6;15301:14;15294:54;15177:178;:::o;15361:366::-;15503:3;15524:67;15588:2;15583:3;15524:67;:::i;:::-;15517:74;;15600:93;15689:3;15600:93;:::i;:::-;15718:2;15713:3;15709:12;15702:19;;15361:366;;;:::o;15733:419::-;15899:4;15937:2;15926:9;15922:18;15914:26;;15986:9;15980:4;15976:20;15972:1;15961:9;15957:17;15950:47;16014:131;16140:4;16014:131;:::i;:::-;16006:139;;15733:419;;;:::o;16158:225::-;16298:34;16294:1;16286:6;16282:14;16275:58;16367:8;16362:2;16354:6;16350:15;16343:33;16158:225;:::o;16389:366::-;16531:3;16552:67;16616:2;16611:3;16552:67;:::i;:::-;16545:74;;16628:93;16717:3;16628:93;:::i;:::-;16746:2;16741:3;16737:12;16730:19;;16389:366;;;:::o;16761:419::-;16927:4;16965:2;16954:9;16950:18;16942:26;;17014:9;17008:4;17004:20;17000:1;16989:9;16985:17;16978:47;17042:131;17168:4;17042:131;:::i;:::-;17034:139;;16761:419;;;:::o;17186:332::-;17307:4;17345:2;17334:9;17330:18;17322:26;;17358:71;17426:1;17415:9;17411:17;17402:6;17358:71;:::i;:::-;17439:72;17507:2;17496:9;17492:18;17483:6;17439:72;:::i;:::-;17186:332;;;;;:::o;17524:177::-;17664:29;17660:1;17652:6;17648:14;17641:53;17524:177;:::o;17707:366::-;17849:3;17870:67;17934:2;17929:3;17870:67;:::i;:::-;17863:74;;17946:93;18035:3;17946:93;:::i;:::-;18064:2;18059:3;18055:12;18048:19;;17707:366;;;:::o;18079:419::-;18245:4;18283:2;18272:9;18268:18;18260:26;;18332:9;18326:4;18322:20;18318:1;18307:9;18303:17;18296:47;18360:131;18486:4;18360:131;:::i;:::-;18352:139;;18079:419;;;:::o;18504:182::-;18644:34;18640:1;18632:6;18628:14;18621:58;18504:182;:::o;18692:366::-;18834:3;18855:67;18919:2;18914:3;18855:67;:::i;:::-;18848:74;;18931:93;19020:3;18931:93;:::i;:::-;19049:2;19044:3;19040:12;19033:19;;18692:366;;;:::o;19064:419::-;19230:4;19268:2;19257:9;19253:18;19245:26;;19317:9;19311:4;19307:20;19303:1;19292:9;19288:17;19281:47;19345:131;19471:4;19345:131;:::i;:::-;19337:139;;19064:419;;;:::o;19489:442::-;19638:4;19676:2;19665:9;19661:18;19653:26;;19689:71;19757:1;19746:9;19742:17;19733:6;19689:71;:::i;:::-;19770:72;19838:2;19827:9;19823:18;19814:6;19770:72;:::i;:::-;19852;19920:2;19909:9;19905:18;19896:6;19852:72;:::i;:::-;19489:442;;;;;;:::o;19937:116::-;20007:21;20022:5;20007:21;:::i;:::-;20000:5;19997:32;19987:60;;20043:1;20040;20033:12;19987:60;19937:116;:::o;20059:137::-;20113:5;20144:6;20138:13;20129:22;;20160:30;20184:5;20160:30;:::i;:::-;20059:137;;;;:::o;20202:345::-;20269:6;20318:2;20306:9;20297:7;20293:23;20289:32;20286:119;;;20324:79;;:::i;:::-;20286:119;20444:1;20469:61;20522:7;20513:6;20502:9;20498:22;20469:61;:::i;:::-;20459:71;;20415:125;20202:345;;;;:::o;20553:229::-;20693:34;20689:1;20681:6;20677:14;20670:58;20762:12;20757:2;20749:6;20745:15;20738:37;20553:229;:::o;20788:366::-;20930:3;20951:67;21015:2;21010:3;20951:67;:::i;:::-;20944:74;;21027:93;21116:3;21027:93;:::i;:::-;21145:2;21140:3;21136:12;21129:19;;20788:366;;;:::o;21160:419::-;21326:4;21364:2;21353:9;21349:18;21341:26;;21413:9;21407:4;21403:20;21399:1;21388:9;21384:17;21377:47;21441:131;21567:4;21441:131;:::i;:::-;21433:139;;21160:419;;;:::o;21585:225::-;21725:34;21721:1;21713:6;21709:14;21702:58;21794:8;21789:2;21781:6;21777:15;21770:33;21585:225;:::o;21816:366::-;21958:3;21979:67;22043:2;22038:3;21979:67;:::i;:::-;21972:74;;22055:93;22144:3;22055:93;:::i;:::-;22173:2;22168:3;22164:12;22157:19;;21816:366;;;:::o;22188:419::-;22354:4;22392:2;22381:9;22377:18;22369:26;;22441:9;22435:4;22431:20;22427:1;22416:9;22412:17;22405:47;22469:131;22595:4;22469:131;:::i;:::-;22461:139;;22188:419;;;:::o;22613:98::-;22664:6;22698:5;22692:12;22682:22;;22613:98;;;:::o;22717:147::-;22818:11;22855:3;22840:18;;22717:147;;;;:::o;22870:246::-;22951:1;22961:113;22975:6;22972:1;22969:13;22961:113;;;23060:1;23055:3;23051:11;23045:18;23041:1;23036:3;23032:11;23025:39;22997:2;22994:1;22990:10;22985:15;;22961:113;;;23108:1;23099:6;23094:3;23090:16;23083:27;22932:184;22870:246;;;:::o;23122:386::-;23226:3;23254:38;23286:5;23254:38;:::i;:::-;23308:88;23389:6;23384:3;23308:88;:::i;:::-;23301:95;;23405:65;23463:6;23458:3;23451:4;23444:5;23440:16;23405:65;:::i;:::-;23495:6;23490:3;23486:16;23479:23;;23230:278;23122:386;;;;:::o;23514:271::-;23644:3;23666:93;23755:3;23746:6;23666:93;:::i;:::-;23659:100;;23776:3;23769:10;;23514:271;;;;:::o;23791:179::-;23931:31;23927:1;23919:6;23915:14;23908:55;23791:179;:::o;23976:366::-;24118:3;24139:67;24203:2;24198:3;24139:67;:::i;:::-;24132:74;;24215:93;24304:3;24215:93;:::i;:::-;24333:2;24328:3;24324:12;24317:19;;23976:366;;;:::o;24348:419::-;24514:4;24552:2;24541:9;24537:18;24529:26;;24601:9;24595:4;24591:20;24587:1;24576:9;24572:17;24565:47;24629:131;24755:4;24629:131;:::i;:::-;24621:139;;24348:419;;;:::o;24773:99::-;24825:6;24859:5;24853:12;24843:22;;24773:99;;;:::o;24878:102::-;24919:6;24970:2;24966:7;24961:2;24954:5;24950:14;24946:28;24936:38;;24878:102;;;:::o;24986:377::-;25074:3;25102:39;25135:5;25102:39;:::i;:::-;25157:71;25221:6;25216:3;25157:71;:::i;:::-;25150:78;;25237:65;25295:6;25290:3;25283:4;25276:5;25272:16;25237:65;:::i;:::-;25327:29;25349:6;25327:29;:::i;:::-;25322:3;25318:39;25311:46;;25078:285;24986:377;;;;:::o;25369:313::-;25482:4;25520:2;25509:9;25505:18;25497:26;;25569:9;25563:4;25559:20;25555:1;25544:9;25540:17;25533:47;25597:78;25670:4;25661:6;25597:78;:::i;:::-;25589:86;;25369:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1959800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"AdminAddToken(uint256)": "infinite",
								"ERC20Address()": "2537",
								"ERC721address()": "2603",
								"Staker(address)": "infinite",
								"TotalRemaningToken()": "2452",
								"category1()": "2489",
								"category2()": "2488",
								"category3()": "2531",
								"category4()": "2511",
								"deposit(uint256,uint256)": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"owner()": "2611",
								"renounceOwnership()": "30465",
								"transferOwnership(address)": "30810",
								"withdraw(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 402,
									"end": 5142,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 402,
									"end": 5142,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 402,
									"end": 5142,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 1213,
									"end": 1357,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1298,
									"end": 1312,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1282,
									"end": 1295,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 1282,
									"end": 1295,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1282,
									"end": 1312,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 1282,
									"end": 1312,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 1282,
									"end": 1312,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1282,
									"end": 1312,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 1282,
									"end": 1312,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1282,
									"end": 1312,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1282,
									"end": 1312,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 1282,
									"end": 1312,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 1282,
									"end": 1312,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1282,
									"end": 1312,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1282,
									"end": 1312,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1282,
									"end": 1312,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1282,
									"end": 1312,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1282,
									"end": 1312,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 1282,
									"end": 1312,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1282,
									"end": 1312,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1282,
									"end": 1312,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1282,
									"end": 1312,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1337,
									"end": 1350,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1322,
									"end": 1334,
									"name": "PUSH",
									"source": 12,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1334,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1350,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 1322,
									"end": 1350,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 1322,
									"end": 1350,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1322,
									"end": 1350,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 1322,
									"end": 1350,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1322,
									"end": 1350,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1322,
									"end": 1350,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 1322,
									"end": 1350,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 1322,
									"end": 1350,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1322,
									"end": 1350,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1322,
									"end": 1350,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1322,
									"end": 1350,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1322,
									"end": 1350,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1322,
									"end": 1350,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 1322,
									"end": 1350,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 1322,
									"end": 1350,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1322,
									"end": 1350,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1322,
									"end": 1350,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 1357,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 402,
									"end": 5142,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 402,
									"end": 5142,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 640,
									"end": 736,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 402,
									"end": 5142,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 402,
									"end": 5142,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 402,
									"end": 5142,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 402,
									"end": 5142,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 402,
									"end": 5142,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 402,
									"end": 5142,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 402,
									"end": 5142,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 402,
									"end": 5142,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 402,
									"end": 5142,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220696eee21959a9054876795242494d36cf68c886e01a507b4927edccf4965a48364736f6c63430008120033",
									".code": [
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH",
											"source": 12,
											"value": "A6021ACE"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH",
											"source": 12,
											"value": "C0CD40EE"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH",
											"source": 12,
											"value": "C0CD40EE"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH",
											"source": 12,
											"value": "E2BBB158"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH",
											"source": 12,
											"value": "F7D252F4"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH",
											"source": 12,
											"value": "A6021ACE"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH",
											"source": 12,
											"value": "B10558AB"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH",
											"source": 12,
											"value": "B4E929D4"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH",
											"source": 12,
											"value": "B7171A2E"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH",
											"source": 12,
											"value": "4930E5D1"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH",
											"source": 12,
											"value": "4930E5D1"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH",
											"source": 12,
											"value": "51CFF8D9"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH",
											"source": 12,
											"value": "150B7A02"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH",
											"source": 12,
											"value": "3F431230"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH",
											"source": 12,
											"value": "41FCD29A"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 402,
											"end": 5142,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 4969,
											"end": 5140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4969,
											"end": 5140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 4969,
											"end": 5140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 528,
											"end": 561,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 528,
											"end": 561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 528,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 528,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 528,
											"end": 561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 528,
											"end": 561,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 528,
											"end": 561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 528,
											"end": 561,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 561,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 528,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 528,
											"end": 561,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 528,
											"end": 561,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 528,
											"end": 561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 528,
											"end": 561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 528,
											"end": 561,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 528,
											"end": 561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 528,
											"end": 561,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 561,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 528,
											"end": 561,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 528,
											"end": 561,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 528,
											"end": 561,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 528,
											"end": 561,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 528,
											"end": 561,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 751,
											"end": 784,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 751,
											"end": 784,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 751,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 751,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 751,
											"end": 784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 751,
											"end": 784,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 751,
											"end": 784,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 751,
											"end": 784,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 784,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 751,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 751,
											"end": 784,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 751,
											"end": 784,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 751,
											"end": 784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 751,
											"end": 784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 751,
											"end": 784,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 751,
											"end": 784,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 751,
											"end": 784,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 784,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 751,
											"end": 784,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 751,
											"end": 784,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 751,
											"end": 784,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 751,
											"end": 784,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 751,
											"end": 784,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 4525,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 3210,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 3210,
											"end": 4525,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3210,
											"end": 4525,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 4525,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 4525,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 4525,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 4525,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 4525,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 3210,
											"end": 4525,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 4525,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 3210,
											"end": 4525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 4525,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 3210,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 4525,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3210,
											"end": 4525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 4525,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 3210,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 4525,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 718,
											"end": 745,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 718,
											"end": 745,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 718,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 718,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 718,
											"end": 745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 718,
											"end": 745,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 718,
											"end": 745,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 718,
											"end": 745,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 718,
											"end": 745,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 718,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 718,
											"end": 745,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 718,
											"end": 745,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 718,
											"end": 745,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 718,
											"end": 745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 718,
											"end": 745,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 718,
											"end": 745,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 718,
											"end": 745,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 718,
											"end": 745,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 718,
											"end": 745,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 718,
											"end": 745,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 718,
											"end": 745,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 718,
											"end": 745,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 718,
											"end": 745,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 567,
											"end": 600,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 567,
											"end": 600,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 567,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 567,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 567,
											"end": 600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 567,
											"end": 600,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 567,
											"end": 600,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 567,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 567,
											"end": 600,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 567,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 567,
											"end": 600,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 567,
											"end": 600,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 567,
											"end": 600,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 567,
											"end": 600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 567,
											"end": 600,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 567,
											"end": 600,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 567,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 567,
											"end": 600,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 567,
											"end": 600,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 567,
											"end": 600,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 567,
											"end": 600,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 567,
											"end": 600,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 567,
											"end": 600,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 923,
											"end": 964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 923,
											"end": 964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 923,
											"end": 964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 684,
											"end": 712,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 684,
											"end": 712,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 684,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 684,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 684,
											"end": 712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 684,
											"end": 712,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 684,
											"end": 712,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 684,
											"end": 712,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 684,
											"end": 712,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 684,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 684,
											"end": 712,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 684,
											"end": 712,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 684,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 684,
											"end": 712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 684,
											"end": 712,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 684,
											"end": 712,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 684,
											"end": 712,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 684,
											"end": 712,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 684,
											"end": 712,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 684,
											"end": 712,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 684,
											"end": 712,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 684,
											"end": 712,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 684,
											"end": 712,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4782,
											"end": 4964,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 4782,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4782,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 4782,
											"end": 4964,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4782,
											"end": 4964,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4782,
											"end": 4964,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4782,
											"end": 4964,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4782,
											"end": 4964,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4782,
											"end": 4964,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4782,
											"end": 4964,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4782,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 4782,
											"end": 4964,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4782,
											"end": 4964,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4782,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 4782,
											"end": 4964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4782,
											"end": 4964,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 4782,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4782,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4782,
											"end": 4964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4782,
											"end": 4964,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 4782,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4782,
											"end": 4964,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 3023,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 1516,
											"end": 3023,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 1516,
											"end": 3023,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1516,
											"end": 3023,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 3023,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 3023,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 3023,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 3023,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 3023,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1516,
											"end": 3023,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 3023,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 1516,
											"end": 3023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 3023,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1516,
											"end": 3023,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 1516,
											"end": 3023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 3023,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 1516,
											"end": 3023,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 3023,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 606,
											"end": 639,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 606,
											"end": 639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 606,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 606,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 606,
											"end": 639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 606,
											"end": 639,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 606,
											"end": 639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 606,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 606,
											"end": 639,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 606,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 606,
											"end": 639,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 606,
											"end": 639,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 606,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 606,
											"end": 639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 606,
											"end": 639,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 606,
											"end": 639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 606,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 606,
											"end": 639,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 606,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 606,
											"end": 639,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 606,
											"end": 639,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 606,
											"end": 639,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 606,
											"end": 639,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5067,
											"end": 5073,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5092,
											"end": 5133,
											"name": "PUSH",
											"source": 12,
											"value": "150B7A02"
										},
										{
											"begin": 5092,
											"end": 5133,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 5092,
											"end": 5133,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 5085,
											"end": 5133,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5085,
											"end": 5133,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 528,
											"end": 561,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 528,
											"end": 561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 528,
											"end": 561,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 528,
											"end": 561,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 528,
											"end": 561,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 528,
											"end": 561,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 528,
											"end": 561,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 528,
											"end": 561,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 528,
											"end": 561,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 528,
											"end": 561,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 528,
											"end": 561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 751,
											"end": 784,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 751,
											"end": 784,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 751,
											"end": 784,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 751,
											"end": 784,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 751,
											"end": 784,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 751,
											"end": 784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 4525,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3210,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3268,
											"end": 3274,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 3268,
											"end": 3279,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3275,
											"end": 3278,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3268,
											"end": 3279,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3268,
											"end": 3279,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3268,
											"end": 3279,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3268,
											"end": 3279,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3268,
											"end": 3279,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3268,
											"end": 3279,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3268,
											"end": 3279,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3268,
											"end": 3279,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3268,
											"end": 3279,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3268,
											"end": 3279,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3268,
											"end": 3279,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3268,
											"end": 3279,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3268,
											"end": 3279,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3268,
											"end": 3279,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3279,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3268,
											"end": 3292,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3268,
											"end": 3292,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3268,
											"end": 3292,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3268,
											"end": 3292,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3268,
											"end": 3292,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3268,
											"end": 3292,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3268,
											"end": 3292,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3268,
											"end": 3292,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3268,
											"end": 3292,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3268,
											"end": 3292,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3268,
											"end": 3292,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3268,
											"end": 3292,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3259,
											"end": 3324,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 3259,
											"end": 3324,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3259,
											"end": 3324,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3259,
											"end": 3324,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3259,
											"end": 3324,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3259,
											"end": 3324,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3259,
											"end": 3324,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3259,
											"end": 3324,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3259,
											"end": 3324,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3259,
											"end": 3324,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 3259,
											"end": 3324,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3259,
											"end": 3324,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 3259,
											"end": 3324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3259,
											"end": 3324,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 3259,
											"end": 3324,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3259,
											"end": 3324,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3259,
											"end": 3324,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3259,
											"end": 3324,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3259,
											"end": 3324,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3259,
											"end": 3324,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3259,
											"end": 3324,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3259,
											"end": 3324,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3259,
											"end": 3324,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 3259,
											"end": 3324,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3334,
											"end": 3343,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3398,
											"name": "PUSH",
											"source": 12,
											"value": "15180"
										},
										{
											"begin": 3366,
											"end": 3372,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 3366,
											"end": 3377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3373,
											"end": 3376,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3366,
											"end": 3377,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3366,
											"end": 3377,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3366,
											"end": 3377,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3366,
											"end": 3377,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3366,
											"end": 3377,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3366,
											"end": 3377,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3366,
											"end": 3377,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3366,
											"end": 3377,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3366,
											"end": 3377,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3366,
											"end": 3377,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3366,
											"end": 3377,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3366,
											"end": 3377,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3366,
											"end": 3377,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3366,
											"end": 3377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3366,
											"end": 3377,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3366,
											"end": 3387,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3366,
											"end": 3387,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3366,
											"end": 3387,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3348,
											"end": 3363,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 3348,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3348,
											"end": 3387,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3348,
											"end": 3387,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3348,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 3348,
											"end": 3387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3348,
											"end": 3387,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3348,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3347,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 3347,
											"end": 3399,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3347,
											"end": 3399,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3347,
											"end": 3399,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 3347,
											"end": 3399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3347,
											"end": 3399,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 3347,
											"end": 3399,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3334,
											"end": 3400,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3334,
											"end": 3400,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3426,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 3420,
											"end": 3431,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3427,
											"end": 3430,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3431,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3420,
											"end": 3431,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3431,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3420,
											"end": 3431,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3431,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3431,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3431,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3420,
											"end": 3431,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3431,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3431,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3431,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3431,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3420,
											"end": 3431,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3431,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3420,
											"end": 3431,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3435,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3420,
											"end": 3435,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3420,
											"end": 3435,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3413,
											"end": 3417,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3413,
											"end": 3435,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 4172,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 3410,
											"end": 4172,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3464,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3492,
											"end": 3498,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3502,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3492,
											"end": 3503,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3492,
											"end": 3507,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3492,
											"end": 3507,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3492,
											"end": 3507,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3479,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 3473,
											"end": 3484,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3480,
											"end": 3483,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3484,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3473,
											"end": 3484,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3484,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3473,
											"end": 3484,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3484,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3484,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3484,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3473,
											"end": 3484,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3484,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3484,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3484,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3484,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3473,
											"end": 3484,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3484,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3484,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3491,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3473,
											"end": 3491,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3491,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 3473,
											"end": 3507,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3507,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 3473,
											"end": 3507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3473,
											"end": 3507,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 3473,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3467,
											"end": 3471,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3467,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 3467,
											"end": 3508,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3467,
											"end": 3508,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3467,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 3467,
											"end": 3508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3467,
											"end": 3508,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 3467,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3508,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3522,
											"end": 3531,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3548,
											"end": 3551,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3537,
											"end": 3546,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 3535,
											"end": 3546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "tag",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3534,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 3534,
											"end": 3551,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3534,
											"end": 3551,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3534,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 3534,
											"end": 3551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3534,
											"end": 3551,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 3534,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3522,
											"end": 3551,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3522,
											"end": 3551,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 3599,
											"end": 3602,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3616,
											"end": 3620,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3604,
											"end": 3613,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3604,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 3604,
											"end": 3620,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3604,
											"end": 3620,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3604,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 3604,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3604,
											"end": 3620,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 3604,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3572,
											"end": 3584,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 3572,
											"end": 3584,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3572,
											"end": 3584,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3572,
											"end": 3584,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3572,
											"end": 3584,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3572,
											"end": 3584,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3572,
											"end": 3584,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3572,
											"end": 3584,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3572,
											"end": 3584,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3572,
											"end": 3584,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3572,
											"end": 3584,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3565,
											"end": 3598,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3565,
											"end": 3598,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3565,
											"end": 3598,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 3565,
											"end": 3598,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3565,
											"end": 3621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 3565,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3635,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 3669,
											"end": 3711,
											"name": "PUSH",
											"source": 12,
											"value": "DEAD"
										},
										{
											"begin": 3713,
											"end": 3717,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3642,
											"end": 3654,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 3642,
											"end": 3654,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3654,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3642,
											"end": 3654,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3642,
											"end": 3654,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3642,
											"end": 3654,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3642,
											"end": 3654,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3642,
											"end": 3654,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3642,
											"end": 3654,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3642,
											"end": 3654,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3642,
											"end": 3654,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3635,
											"end": 3668,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3635,
											"end": 3668,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3635,
											"end": 3668,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 3635,
											"end": 3668,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3635,
											"end": 3718,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3635,
											"end": 3718,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3635,
											"end": 3718,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3635,
											"end": 3718,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3635,
											"end": 3718,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3635,
											"end": 3718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3635,
											"end": 3718,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 3635,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3740,
											"end": 3753,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3740,
											"end": 3753,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3740,
											"end": 3753,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3740,
											"end": 3753,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3740,
											"end": 3753,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3740,
											"end": 3753,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3740,
											"end": 3753,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3740,
											"end": 3753,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3740,
											"end": 3753,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3740,
											"end": 3753,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3740,
											"end": 3753,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3771,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3732,
											"end": 3771,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3771,
											"name": "PUSH",
											"source": 12,
											"value": "B88D4FDE"
										},
										{
											"begin": 3780,
											"end": 3784,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 3787,
											"end": 3790,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3791,
											"end": 3797,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 3791,
											"end": 3802,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3798,
											"end": 3801,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 3791,
											"end": 3802,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3791,
											"end": 3802,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3791,
											"end": 3802,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3791,
											"end": 3802,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3791,
											"end": 3802,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3791,
											"end": 3802,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3791,
											"end": 3802,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3791,
											"end": 3802,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3791,
											"end": 3802,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3791,
											"end": 3802,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3791,
											"end": 3802,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3791,
											"end": 3802,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3791,
											"end": 3802,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3791,
											"end": 3802,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3791,
											"end": 3802,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3791,
											"end": 3806,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 3791,
											"end": 3806,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3791,
											"end": 3806,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 3732,
											"end": 3810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "tag",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "tag",
											"source": 12,
											"value": "98"
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3846,
											"end": 3855,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3842,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 3824,
											"end": 3842,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3824,
											"end": 3855,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3855,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3855,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 3824,
											"end": 3855,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3855,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 3824,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3855,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 3824,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3855,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3855,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3855,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3855,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3855,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3855,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3824,
											"end": 3855,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3882,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 3876,
											"end": 3887,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3886,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3887,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3876,
											"end": 3887,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3887,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3876,
											"end": 3887,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3887,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3887,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3887,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3876,
											"end": 3887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3887,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3887,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3887,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3887,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3876,
											"end": 3887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3887,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3876,
											"end": 3887,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3876,
											"end": 3887,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3887,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3436,
											"end": 3898,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3436,
											"end": 3898,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3410,
											"end": 4172,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 4172,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 3410,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3925,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 3959,
											"end": 3962,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3964,
											"end": 3970,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 3964,
											"end": 3975,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3974,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3964,
											"end": 3975,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3964,
											"end": 3975,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3964,
											"end": 3975,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3964,
											"end": 3975,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3964,
											"end": 3975,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3964,
											"end": 3975,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3964,
											"end": 3975,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3964,
											"end": 3975,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3964,
											"end": 3975,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3964,
											"end": 3975,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3964,
											"end": 3975,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3964,
											"end": 3975,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3964,
											"end": 3975,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3964,
											"end": 3975,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3975,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 3964,
											"end": 3982,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3982,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3964,
											"end": 3982,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3932,
											"end": 3944,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 3932,
											"end": 3944,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3932,
											"end": 3944,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3932,
											"end": 3944,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3932,
											"end": 3944,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3932,
											"end": 3944,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3932,
											"end": 3944,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 3932,
											"end": 3944,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3932,
											"end": 3944,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3932,
											"end": 3944,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3932,
											"end": 3944,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3925,
											"end": 3958,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3925,
											"end": 3958,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3925,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 3925,
											"end": 3958,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3925,
											"end": 3983,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3925,
											"end": 3983,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3925,
											"end": 3983,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3925,
											"end": 3983,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3925,
											"end": 3983,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3925,
											"end": 3983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3925,
											"end": 3983,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 3925,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4005,
											"end": 4018,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 4005,
											"end": 4018,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4005,
											"end": 4018,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4005,
											"end": 4018,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4005,
											"end": 4018,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4005,
											"end": 4018,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4005,
											"end": 4018,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4005,
											"end": 4018,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4005,
											"end": 4018,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 4005,
											"end": 4018,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4005,
											"end": 4018,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4036,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3997,
											"end": 4036,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4036,
											"name": "PUSH",
											"source": 12,
											"value": "B88D4FDE"
										},
										{
											"begin": 4045,
											"end": 4049,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 4052,
											"end": 4055,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4056,
											"end": 4062,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 4056,
											"end": 4067,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4063,
											"end": 4066,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4056,
											"end": 4067,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4056,
											"end": 4067,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4056,
											"end": 4067,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4056,
											"end": 4067,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4056,
											"end": 4067,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4056,
											"end": 4067,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4056,
											"end": 4067,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4056,
											"end": 4067,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4056,
											"end": 4067,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4056,
											"end": 4067,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4056,
											"end": 4067,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4056,
											"end": 4067,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4056,
											"end": 4067,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4056,
											"end": 4067,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4056,
											"end": 4067,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4056,
											"end": 4071,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 4056,
											"end": 4071,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4056,
											"end": 4071,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 3997,
											"end": 4075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3997,
											"end": 4075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4111,
											"end": 4117,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 4111,
											"end": 4122,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4118,
											"end": 4121,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4111,
											"end": 4122,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4111,
											"end": 4122,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4111,
											"end": 4122,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4111,
											"end": 4122,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4111,
											"end": 4122,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4111,
											"end": 4122,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4111,
											"end": 4122,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4111,
											"end": 4122,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4111,
											"end": 4122,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4111,
											"end": 4122,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4111,
											"end": 4122,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4111,
											"end": 4122,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4111,
											"end": 4122,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4111,
											"end": 4122,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4122,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4111,
											"end": 4129,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4129,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4111,
											"end": 4129,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 4089,
											"end": 4107,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4129,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4129,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4129,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 4089,
											"end": 4129,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4129,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 4089,
											"end": 4129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4129,
											"name": "tag",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 4089,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4129,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4129,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4129,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4129,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4129,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4129,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4089,
											"end": 4129,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4150,
											"end": 4156,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 4150,
											"end": 4161,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4157,
											"end": 4160,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4150,
											"end": 4161,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4150,
											"end": 4161,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4150,
											"end": 4161,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4150,
											"end": 4161,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4150,
											"end": 4161,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4150,
											"end": 4161,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4150,
											"end": 4161,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4150,
											"end": 4161,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4150,
											"end": 4161,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4150,
											"end": 4161,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4150,
											"end": 4161,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4150,
											"end": 4161,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4150,
											"end": 4161,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4150,
											"end": 4161,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4150,
											"end": 4161,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4150,
											"end": 4161,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4143,
											"end": 4161,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3410,
											"end": 4172,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 3410,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4204,
											"end": 4206,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 4185,
											"end": 4191,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 4185,
											"end": 4196,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4195,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4185,
											"end": 4196,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4185,
											"end": 4196,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4185,
											"end": 4196,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4185,
											"end": 4196,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4185,
											"end": 4196,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4185,
											"end": 4196,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4185,
											"end": 4196,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4185,
											"end": 4196,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4185,
											"end": 4196,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4185,
											"end": 4196,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4185,
											"end": 4196,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4185,
											"end": 4196,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4185,
											"end": 4196,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4185,
											"end": 4196,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4185,
											"end": 4196,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4185,
											"end": 4200,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4185,
											"end": 4200,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4185,
											"end": 4200,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4185,
											"end": 4206,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4182,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 4182,
											"end": 4517,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4221,
											"end": 4242,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 4221,
											"end": 4230,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4221,
											"end": 4240,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 4221,
											"end": 4242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4221,
											"end": 4242,
											"name": "tag",
											"source": 12,
											"value": "108"
										},
										{
											"begin": 4221,
											"end": 4242,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4182,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 4182,
											"end": 4517,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4182,
											"end": 4517,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 4182,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4289,
											"end": 4291,
											"name": "PUSH",
											"source": 12,
											"value": "1E"
										},
										{
											"begin": 4270,
											"end": 4276,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 4270,
											"end": 4281,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4277,
											"end": 4280,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4270,
											"end": 4281,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4270,
											"end": 4281,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4270,
											"end": 4281,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4270,
											"end": 4281,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4270,
											"end": 4281,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4270,
											"end": 4281,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4270,
											"end": 4281,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4270,
											"end": 4281,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4270,
											"end": 4281,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4270,
											"end": 4281,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4270,
											"end": 4281,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4270,
											"end": 4281,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4270,
											"end": 4281,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4270,
											"end": 4281,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 4281,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4270,
											"end": 4285,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4270,
											"end": 4285,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4270,
											"end": 4285,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4270,
											"end": 4291,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4267,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 4267,
											"end": 4517,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4306,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 4306,
											"end": 4315,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 4306,
											"end": 4325,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 4306,
											"end": 4327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4306,
											"end": 4327,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 4306,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4267,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 4267,
											"end": 4517,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4267,
											"end": 4517,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 4267,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4379,
											"name": "PUSH",
											"source": 12,
											"value": "3C"
										},
										{
											"begin": 4358,
											"end": 4364,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 4358,
											"end": 4369,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4368,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4369,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4358,
											"end": 4369,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4369,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4358,
											"end": 4369,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4369,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4369,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4369,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4358,
											"end": 4369,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4369,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4369,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4369,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4369,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4358,
											"end": 4369,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4369,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4358,
											"end": 4369,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4373,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4358,
											"end": 4373,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4373,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4358,
											"end": 4379,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4355,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 4355,
											"end": 4517,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4394,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 4394,
											"end": 4403,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 4394,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 4394,
											"end": 4415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4394,
											"end": 4415,
											"name": "tag",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 4394,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4355,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 4355,
											"end": 4517,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4355,
											"end": 4517,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 4355,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4465,
											"end": 4467,
											"name": "PUSH",
											"source": 12,
											"value": "5A"
										},
										{
											"begin": 4446,
											"end": 4452,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 4446,
											"end": 4457,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4453,
											"end": 4456,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4446,
											"end": 4457,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4446,
											"end": 4457,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4446,
											"end": 4457,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4446,
											"end": 4457,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4446,
											"end": 4457,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4446,
											"end": 4457,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4446,
											"end": 4457,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4446,
											"end": 4457,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4446,
											"end": 4457,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4446,
											"end": 4457,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4446,
											"end": 4457,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4446,
											"end": 4457,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4446,
											"end": 4457,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4446,
											"end": 4457,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4446,
											"end": 4457,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 4446,
											"end": 4461,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4446,
											"end": 4461,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4446,
											"end": 4461,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4446,
											"end": 4467,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 4443,
											"end": 4517,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4482,
											"end": 4503,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 4482,
											"end": 4491,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4482,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "109"
										},
										{
											"begin": 4482,
											"end": 4503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4482,
											"end": 4503,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 4482,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4443,
											"end": 4517,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 4443,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4355,
											"end": 4517,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 4355,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4267,
											"end": 4517,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 4267,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4182,
											"end": 4517,
											"name": "tag",
											"source": 12,
											"value": "110"
										},
										{
											"begin": 4182,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3249,
											"end": 4525,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 4525,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3210,
											"end": 4525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1922,
											"end": 1923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1895,
											"end": 1925,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 1895,
											"end": 1925,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 718,
											"end": 745,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 718,
											"end": 745,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 718,
											"end": 745,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 718,
											"end": 745,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 745,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 718,
											"end": 745,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 718,
											"end": 745,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 718,
											"end": 745,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 718,
											"end": 745,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 718,
											"end": 745,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 718,
											"end": 745,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 718,
											"end": 745,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 718,
											"end": 745,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 718,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 718,
											"end": 745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 567,
											"end": 600,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 567,
											"end": 600,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 567,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 567,
											"end": 600,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 567,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 567,
											"end": 600,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 567,
											"end": 600,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 567,
											"end": 600,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 567,
											"end": 600,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 567,
											"end": 600,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 567,
											"end": 600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 923,
											"end": 964,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 923,
											"end": 964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 684,
											"end": 712,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 684,
											"end": 712,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 684,
											"end": 712,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 684,
											"end": 712,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 684,
											"end": 712,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 684,
											"end": 712,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 684,
											"end": 712,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 684,
											"end": 712,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 684,
											"end": 712,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 684,
											"end": 712,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 684,
											"end": 712,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 684,
											"end": 712,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 684,
											"end": 712,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 684,
											"end": 712,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 684,
											"end": 712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4782,
											"end": 4964,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 4782,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4867,
											"end": 4874,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4845,
											"end": 4863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 4845,
											"end": 4863,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4845,
											"end": 4874,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4845,
											"end": 4874,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4845,
											"end": 4874,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4845,
											"end": 4874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 4845,
											"end": 4874,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4845,
											"end": 4874,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4845,
											"end": 4874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 4845,
											"end": 4874,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4845,
											"end": 4874,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 4845,
											"end": 4874,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4845,
											"end": 4874,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4845,
											"end": 4874,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4845,
											"end": 4874,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4845,
											"end": 4874,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4845,
											"end": 4874,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4845,
											"end": 4874,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 4845,
											"end": 4874,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4884,
											"end": 4957,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 4922,
											"end": 4932,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 4942,
											"end": 4946,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 4949,
											"end": 4956,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4891,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 4891,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4891,
											"end": 4903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4891,
											"end": 4903,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4891,
											"end": 4903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4891,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 4891,
											"end": 4903,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 4891,
											"end": 4903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4891,
											"end": 4903,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 4891,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4891,
											"end": 4903,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4884,
											"end": 4921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4884,
											"end": 4921,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4884,
											"end": 4921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 4884,
											"end": 4921,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4884,
											"end": 4957,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4884,
											"end": 4957,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4884,
											"end": 4957,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4884,
											"end": 4957,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4884,
											"end": 4957,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4884,
											"end": 4957,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4884,
											"end": 4957,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4884,
											"end": 4957,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 4884,
											"end": 4957,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4782,
											"end": 4964,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4782,
											"end": 4964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 3023,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 1516,
											"end": 3023,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1590,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1591,
											"end": 1601,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1602,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1584,
											"end": 1615,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1615,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1574,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 1574,
											"end": 1642,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1574,
											"end": 1642,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1642,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1574,
											"end": 1642,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1574,
											"end": 1642,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1574,
											"end": 1642,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1574,
											"end": 1642,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1574,
											"end": 1642,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1574,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 1574,
											"end": 1642,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1574,
											"end": 1642,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 1574,
											"end": 1642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1574,
											"end": 1642,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 1574,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1574,
											"end": 1642,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1574,
											"end": 1642,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1574,
											"end": 1642,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1574,
											"end": 1642,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1574,
											"end": 1642,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1574,
											"end": 1642,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1574,
											"end": 1642,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1574,
											"end": 1642,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 1574,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1663,
											"end": 1665,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 1655,
											"end": 1659,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1655,
											"end": 1665,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1652,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 1652,
											"end": 3013,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1680,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 1680,
											"end": 1689,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1680,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 1680,
											"end": 1701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1680,
											"end": 1701,
											"name": "tag",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 1680,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1745,
											"end": 1749,
											"name": "PUSH",
											"source": 12,
											"value": "3E8"
										},
										{
											"begin": 1723,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 1723,
											"end": 1732,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1723,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 1723,
											"end": 1742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1723,
											"end": 1742,
											"name": "tag",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 1723,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1723,
											"end": 1749,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1723,
											"end": 1749,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1715,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 1715,
											"end": 1781,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1715,
											"end": 1781,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1781,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1715,
											"end": 1781,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1715,
											"end": 1781,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1715,
											"end": 1781,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1715,
											"end": 1781,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1715,
											"end": 1781,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1715,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 1715,
											"end": 1781,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1715,
											"end": 1781,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 1715,
											"end": 1781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1715,
											"end": 1781,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 1715,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1715,
											"end": 1781,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1715,
											"end": 1781,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1715,
											"end": 1781,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1715,
											"end": 1781,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1715,
											"end": 1781,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1715,
											"end": 1781,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1715,
											"end": 1781,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1715,
											"end": 1781,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 1715,
											"end": 1781,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1823,
											"end": 1827,
											"name": "PUSH",
											"source": 12,
											"value": "1388"
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1833,
											"end": 1848,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1849,
											"end": 1856,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1857,
											"end": 1861,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1816,
											"end": 1862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1801,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1802,
											"end": 1812,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1813,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1795,
											"end": 1862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1884,
											"end": 1897,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1884,
											"end": 1897,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1884,
											"end": 1897,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1884,
											"end": 1897,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1884,
											"end": 1897,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1884,
											"end": 1897,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1884,
											"end": 1897,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1884,
											"end": 1897,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1884,
											"end": 1897,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1884,
											"end": 1897,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1884,
											"end": 1897,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1915,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1876,
											"end": 1915,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1915,
											"name": "PUSH",
											"source": 12,
											"value": "B88D4FDE"
										},
										{
											"begin": 1916,
											"end": 1926,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 1935,
											"end": 1939,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 1876,
											"end": 1952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1876,
											"end": 1952,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1652,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 1652,
											"end": 3013,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1652,
											"end": 3013,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 1652,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 1990,
											"name": "PUSH",
											"source": 12,
											"value": "1E"
										},
										{
											"begin": 1980,
											"end": 1984,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1980,
											"end": 1990,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1977,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 1977,
											"end": 3013,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2005,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 2005,
											"end": 2014,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 2005,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 2005,
											"end": 2026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2005,
											"end": 2026,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 2005,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2070,
											"end": 2073,
											"name": "PUSH",
											"source": 12,
											"value": "2EE"
										},
										{
											"begin": 2048,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 2048,
											"end": 2057,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 2048,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 2048,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2048,
											"end": 2067,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 2048,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2048,
											"end": 2073,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2048,
											"end": 2073,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2040,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 2040,
											"end": 2105,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2040,
											"end": 2105,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2040,
											"end": 2105,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2040,
											"end": 2105,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2040,
											"end": 2105,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2040,
											"end": 2105,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2040,
											"end": 2105,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2040,
											"end": 2105,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2040,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 2040,
											"end": 2105,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2040,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 2040,
											"end": 2105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2040,
											"end": 2105,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 2040,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2040,
											"end": 2105,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2040,
											"end": 2105,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2040,
											"end": 2105,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2040,
											"end": 2105,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2040,
											"end": 2105,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2040,
											"end": 2105,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2040,
											"end": 2105,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2040,
											"end": 2105,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 2040,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2147,
											"end": 2151,
											"name": "PUSH",
											"source": 12,
											"value": "1D4C"
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2152,
											"end": 2156,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2157,
											"end": 2172,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2173,
											"end": 2180,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2181,
											"end": 2185,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2140,
											"end": 2186,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2125,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2126,
											"end": 2136,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2137,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2119,
											"end": 2186,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2239,
											"name": "PUSH",
											"source": 12,
											"value": "B88D4FDE"
										},
										{
											"begin": 2240,
											"end": 2250,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2263,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2265,
											"end": 2272,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 2200,
											"end": 2276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2276,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1977,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 1977,
											"end": 3013,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1977,
											"end": 3013,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 1977,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2312,
											"end": 2314,
											"name": "PUSH",
											"source": 12,
											"value": "3C"
										},
										{
											"begin": 2304,
											"end": 2308,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2304,
											"end": 2314,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2301,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 2301,
											"end": 3013,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 2329,
											"end": 2338,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 2329,
											"end": 2348,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 2329,
											"end": 2350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2329,
											"end": 2350,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 2329,
											"end": 2350,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2394,
											"end": 2397,
											"name": "PUSH",
											"source": 12,
											"value": "1F4"
										},
										{
											"begin": 2372,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 2372,
											"end": 2381,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 2372,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 2372,
											"end": 2391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2372,
											"end": 2391,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 2372,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2372,
											"end": 2397,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2372,
											"end": 2397,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 2364,
											"end": 2429,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2429,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2364,
											"end": 2429,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2429,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2364,
											"end": 2429,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2429,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2429,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2364,
											"end": 2429,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 2364,
											"end": 2429,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 2364,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2429,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 2364,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2429,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2364,
											"end": 2429,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2429,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2429,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2429,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2429,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2429,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2429,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 2364,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2471,
											"end": 2476,
											"name": "PUSH",
											"source": 12,
											"value": "30D4"
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2477,
											"end": 2481,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2482,
											"end": 2497,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2498,
											"end": 2505,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2506,
											"end": 2510,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2511,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2449,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2450,
											"end": 2460,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2443,
											"end": 2461,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2443,
											"end": 2511,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2533,
											"end": 2546,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2533,
											"end": 2546,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2546,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2533,
											"end": 2546,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2533,
											"end": 2546,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2533,
											"end": 2546,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2533,
											"end": 2546,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2533,
											"end": 2546,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2533,
											"end": 2546,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 2533,
											"end": 2546,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2533,
											"end": 2546,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2564,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2564,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2564,
											"name": "PUSH",
											"source": 12,
											"value": "B88D4FDE"
										},
										{
											"begin": 2565,
											"end": 2575,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2584,
											"end": 2588,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2590,
											"end": 2597,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 2525,
											"end": 2601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2525,
											"end": 2601,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2301,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 2301,
											"end": 3013,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2301,
											"end": 3013,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 2301,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2637,
											"end": 2639,
											"name": "PUSH",
											"source": 12,
											"value": "5A"
										},
										{
											"begin": 2629,
											"end": 2633,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2629,
											"end": 2639,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2626,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 2626,
											"end": 3013,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 2654,
											"end": 2663,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2654,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 2654,
											"end": 2675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2675,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 2654,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2719,
											"end": 2722,
											"name": "PUSH",
											"source": 12,
											"value": "FA"
										},
										{
											"begin": 2697,
											"end": 2716,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 2697,
											"end": 2706,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2697,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 2697,
											"end": 2716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2697,
											"end": 2716,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 2697,
											"end": 2716,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2697,
											"end": 2722,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2697,
											"end": 2722,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 2689,
											"end": 2754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2796,
											"end": 2801,
											"name": "PUSH",
											"source": 12,
											"value": "445C"
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2802,
											"end": 2806,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2807,
											"end": 2822,
											"name": "TIMESTAMP",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2823,
											"end": 2830,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2831,
											"end": 2835,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2789,
											"end": 2836,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2774,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2775,
											"end": 2785,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2768,
											"end": 2836,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2858,
											"end": 2871,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2858,
											"end": 2871,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2858,
											"end": 2871,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2858,
											"end": 2871,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2858,
											"end": 2871,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2858,
											"end": 2871,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2858,
											"end": 2871,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2858,
											"end": 2871,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2858,
											"end": 2871,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 2858,
											"end": 2871,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2858,
											"end": 2871,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2889,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2850,
											"end": 2889,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2889,
											"name": "PUSH",
											"source": 12,
											"value": "B88D4FDE"
										},
										{
											"begin": 2890,
											"end": 2900,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2909,
											"end": 2913,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 2915,
											"end": 2922,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 2850,
											"end": 2926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2850,
											"end": 2926,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2626,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 2626,
											"end": 3013,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2626,
											"end": 3013,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 2626,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3002,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2964,
											"end": 3002,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3002,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2964,
											"end": 3002,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3002,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3002,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2964,
											"end": 3002,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 2964,
											"end": 3002,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 2964,
											"end": 3002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3002,
											"name": "tag",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 2964,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3002,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2964,
											"end": 3002,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3002,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3002,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3002,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3002,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 3002,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2626,
											"end": 3013,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 2626,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2301,
											"end": 3013,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 2301,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1977,
											"end": 3013,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 1977,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1652,
											"end": 3013,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 1652,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 3023,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 3023,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1516,
											"end": 3023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 2161,
											"end": 2234,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2161,
											"end": 2234,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2263,
											"end": 2271,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2244,
											"end": 2272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2244,
											"end": 2272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 606,
											"end": 639,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 606,
											"end": 639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 606,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 606,
											"end": 639,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 606,
											"end": 639,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 639,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 606,
											"end": 639,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 606,
											"end": 639,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 606,
											"end": 639,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 606,
											"end": 639,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 606,
											"end": 639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 763,
											"end": 968,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 763,
											"end": 968,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 875,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 895,
											"end": 900,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 925,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "A9059CBB"
										},
										{
											"begin": 925,
											"end": 948,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 925,
											"end": 948,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 950,
											"end": 952,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 954,
											"end": 959,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 902,
											"end": 960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 902,
											"end": 960,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 875,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 875,
											"end": 961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 875,
											"end": 961,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 875,
											"end": 961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 763,
											"end": 968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 968,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 763,
											"end": 968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1137,
											"end": 1150,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1160,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1153,
											"end": 1167,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1137,
											"end": 1167,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1137,
											"end": 1167,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1193,
											"end": 1194,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1190,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1185,
											"end": 1194,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 1177,
											"end": 1226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 1177,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1285,
											"end": 1286,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1277,
											"end": 1282,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1277,
											"end": 1286,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1267,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1274,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1286,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1127,
											"end": 1303,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1074,
											"end": 1303,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1074,
											"end": 1303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 1132,
											"end": 1137,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "PUSH",
											"source": 3,
											"value": "23B872DD"
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 1162,
											"end": 1189,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 1191,
											"end": 1195,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1199,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1201,
											"end": 1206,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 1139,
											"end": 1207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 1112,
											"end": 1208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 1112,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1215,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 974,
											"end": 1215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 945,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 827,
											"end": 939,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 918,
											"end": 932,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 911,
											"end": 932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 911,
											"end": 932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 827,
											"end": 939,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 827,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4189,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4200,
											"end": 4205,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4295,
											"end": 4296,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4285,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4296,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4370,
											"end": 4380,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 4359,
											"end": 4389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 4351,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "tag",
											"source": 3,
											"value": "218"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3817,
											"end": 4453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3747,
											"end": 4453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4006,
											"end": 4018,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4059,
											"end": 4065,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4073,
											"end": 4074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4088,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4037,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4037,
											"end": 4089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4030,
											"end": 4089,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4030,
											"end": 4089,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3873,
											"end": 4096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5125,
											"end": 5137,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5182,
											"end": 5187,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5178,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 5149,
											"end": 5230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5241,
											"end": 5253,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5278,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5288,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5301,
											"end": 5306,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5308,
											"end": 5312,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 5282,
											"end": 5313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 5357,
											"end": 5363,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5365,
											"end": 5372,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5374,
											"end": 5384,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5386,
											"end": 5398,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5330,
											"end": 5399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4960,
											"end": 5406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7646,
											"end": 7658,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7674,
											"end": 7681,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7722,
											"end": 7723,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7701,
											"end": 7711,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7701,
											"end": 7718,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7701,
											"end": 7723,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 7927,
											"end": 7933,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7916,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 7916,
											"end": 7934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 7908,
											"end": 7968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8003,
											"end": 8013,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 8052,
											"end": 8062,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8064,
											"end": 8076,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8044,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 8044,
											"end": 8077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7466,
											"end": 8094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8616,
											"end": 9156,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 8616,
											"end": 9156,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8795,
											"end": 8796,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8775,
											"end": 8785,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8775,
											"end": 8792,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8775,
											"end": 8796,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9003,
											"end": 9013,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8997,
											"end": 9014,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9059,
											"end": 9074,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9046,
											"end": 9056,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9042,
											"end": 9044,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9038,
											"end": 9057,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9031,
											"end": 9075,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9126,
											"end": 9138,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 9119,
											"end": 9139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1304,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1419,
											"end": 1431,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1443,
											"end": 1560,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 1443,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1542,
											"end": 1554,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1636,
											"end": 1644,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1696,
											"end": 1699,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1689,
											"end": 1693,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1673,
											"end": 1700,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 1704,
											"end": 1783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "tag",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1794,
											"end": 1824,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1794,
											"end": 1824,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1865,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1839,
											"end": 1845,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1836,
											"end": 1866,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 1869,
											"end": 1948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1983,
											"end": 1987,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1981,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1971,
											"end": 1988,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1959,
											"end": 1988,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1959,
											"end": 1988,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2037,
											"end": 2040,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2021,
											"end": 2027,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2034,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2007,
											"end": 2015,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2000,
											"end": 2041,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 2044,
											"end": 2123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "tag",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1579,
											"end": 2131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2234,
											"end": 2240,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2242,
											"end": 2248,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2250,
											"end": 2256,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2264,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2266,
											"end": 2272,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2315,
											"end": 2318,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2303,
											"end": 2312,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2294,
											"end": 2301,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2290,
											"end": 2313,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2286,
											"end": 2319,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2283,
											"end": 2403,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2283,
											"end": 2403,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 2283,
											"end": 2403,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 2322,
											"end": 2401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 2322,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2283,
											"end": 2403,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 2283,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2442,
											"end": 2443,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 2512,
											"end": 2519,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2503,
											"end": 2509,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2492,
											"end": 2501,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 2488,
											"end": 2510,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2467,
											"end": 2520,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 2467,
											"end": 2520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2467,
											"end": 2520,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 2467,
											"end": 2520,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2457,
											"end": 2520,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2457,
											"end": 2520,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2413,
											"end": 2530,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2569,
											"end": 2571,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2595,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 2640,
											"end": 2647,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 2637,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2629,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 2616,
											"end": 2638,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2595,
											"end": 2648,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 2595,
											"end": 2648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2595,
											"end": 2648,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 2595,
											"end": 2648,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2648,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2648,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2540,
											"end": 2658,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2697,
											"end": 2699,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2723,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 2768,
											"end": 2775,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2759,
											"end": 2765,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2748,
											"end": 2757,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 2744,
											"end": 2766,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2723,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 2723,
											"end": 2776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2723,
											"end": 2776,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 2723,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2776,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2713,
											"end": 2776,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2668,
											"end": 2786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2853,
											"end": 2855,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2842,
											"end": 2851,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2838,
											"end": 2856,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2825,
											"end": 2857,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2884,
											"end": 2902,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2876,
											"end": 2882,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2873,
											"end": 2903,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2870,
											"end": 2987,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2870,
											"end": 2987,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 2870,
											"end": 2987,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2906,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 2906,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 2906,
											"end": 2985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2906,
											"end": 2985,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 2906,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2870,
											"end": 2987,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 2870,
											"end": 2987,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3019,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 3075,
											"end": 3082,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3066,
											"end": 3072,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3055,
											"end": 3064,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 3051,
											"end": 3073,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3019,
											"end": 3083,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 3019,
											"end": 3083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3019,
											"end": 3083,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 3019,
											"end": 3083,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3001,
											"end": 3083,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3001,
											"end": 3083,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3001,
											"end": 3083,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3001,
											"end": 3083,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2796,
											"end": 3093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2137,
											"end": 3100,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2137,
											"end": 3100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3255,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 3106,
											"end": 3255,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3142,
											"end": 3149,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3182,
											"end": 3248,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3175,
											"end": 3180,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3171,
											"end": 3249,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3160,
											"end": 3249,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3160,
											"end": 3249,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3255,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3255,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3255,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3106,
											"end": 3255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3261,
											"end": 3376,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 3261,
											"end": 3376,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3346,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 3363,
											"end": 3368,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3346,
											"end": 3369,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 3346,
											"end": 3369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3346,
											"end": 3369,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 3346,
											"end": 3369,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3341,
											"end": 3344,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3334,
											"end": 3370,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3261,
											"end": 3376,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3261,
											"end": 3376,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3261,
											"end": 3376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3382,
											"end": 3600,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 3382,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3473,
											"end": 3477,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3511,
											"end": 3513,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3496,
											"end": 3514,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3488,
											"end": 3514,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3488,
											"end": 3514,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3524,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 3590,
											"end": 3591,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3579,
											"end": 3588,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3575,
											"end": 3592,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3566,
											"end": 3572,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3524,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 3524,
											"end": 3593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3524,
											"end": 3593,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 3524,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3382,
											"end": 3600,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3382,
											"end": 3600,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3382,
											"end": 3600,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3382,
											"end": 3600,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3382,
											"end": 3600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3724,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 3606,
											"end": 3724,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3693,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 3711,
											"end": 3716,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3693,
											"end": 3717,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 3693,
											"end": 3717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3693,
											"end": 3717,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 3693,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3688,
											"end": 3691,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3681,
											"end": 3718,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3606,
											"end": 3724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3730,
											"end": 3952,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 3730,
											"end": 3952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3823,
											"end": 3827,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3861,
											"end": 3863,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3850,
											"end": 3859,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3846,
											"end": 3864,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3838,
											"end": 3864,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3838,
											"end": 3864,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3874,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 3942,
											"end": 3943,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3931,
											"end": 3940,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3927,
											"end": 3944,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3918,
											"end": 3924,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3874,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 3874,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3874,
											"end": 3945,
											"name": "tag",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 3874,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3730,
											"end": 3952,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3730,
											"end": 3952,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3730,
											"end": 3952,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3730,
											"end": 3952,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3730,
											"end": 3952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3958,
											"end": 4287,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 3958,
											"end": 4287,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4017,
											"end": 4023,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4066,
											"end": 4068,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4054,
											"end": 4063,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4045,
											"end": 4052,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4041,
											"end": 4064,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4037,
											"end": 4069,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4034,
											"end": 4153,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4034,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 4034,
											"end": 4153,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4072,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 4072,
											"end": 4151,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 4072,
											"end": 4151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4072,
											"end": 4151,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 4072,
											"end": 4151,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4034,
											"end": 4153,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 4034,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4192,
											"end": 4193,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4217,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 4262,
											"end": 4269,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4253,
											"end": 4259,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4242,
											"end": 4251,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4238,
											"end": 4260,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4217,
											"end": 4270,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 4217,
											"end": 4270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4217,
											"end": 4270,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 4217,
											"end": 4270,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4207,
											"end": 4270,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4207,
											"end": 4270,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4163,
											"end": 4280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3958,
											"end": 4287,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3958,
											"end": 4287,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3958,
											"end": 4287,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3958,
											"end": 4287,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3958,
											"end": 4287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4293,
											"end": 4411,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 4293,
											"end": 4411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4380,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 4398,
											"end": 4403,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4380,
											"end": 4404,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 4380,
											"end": 4404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4380,
											"end": 4404,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 4380,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4375,
											"end": 4378,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4368,
											"end": 4405,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4293,
											"end": 4411,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4293,
											"end": 4411,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4293,
											"end": 4411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4417,
											"end": 4639,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 4417,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4510,
											"end": 4514,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4548,
											"end": 4550,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4537,
											"end": 4546,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4533,
											"end": 4551,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4525,
											"end": 4551,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4525,
											"end": 4551,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4561,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 4629,
											"end": 4630,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4627,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4614,
											"end": 4631,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4605,
											"end": 4611,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4561,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 4561,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4561,
											"end": 4632,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 4561,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4417,
											"end": 4639,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4417,
											"end": 4639,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4417,
											"end": 4639,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4417,
											"end": 4639,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4417,
											"end": 4639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4645,
											"end": 4735,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 4645,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4679,
											"end": 4686,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4722,
											"end": 4727,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4715,
											"end": 4728,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4708,
											"end": 4729,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4697,
											"end": 4729,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4697,
											"end": 4729,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4645,
											"end": 4735,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4645,
											"end": 4735,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4645,
											"end": 4735,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4645,
											"end": 4735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4741,
											"end": 4850,
											"name": "tag",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 4741,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4822,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 4837,
											"end": 4842,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4822,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 4822,
											"end": 4843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4822,
											"end": 4843,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 4822,
											"end": 4843,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4817,
											"end": 4820,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4810,
											"end": 4844,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4741,
											"end": 4850,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4741,
											"end": 4850,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4741,
											"end": 4850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4856,
											"end": 5508,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 4856,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5055,
											"end": 5059,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5093,
											"end": 5096,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 5082,
											"end": 5091,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5078,
											"end": 5097,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5097,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5097,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5107,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 5175,
											"end": 5176,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5164,
											"end": 5173,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5160,
											"end": 5177,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5151,
											"end": 5157,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5107,
											"end": 5178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 5107,
											"end": 5178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5107,
											"end": 5178,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 5107,
											"end": 5178,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5188,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 5256,
											"end": 5258,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5245,
											"end": 5254,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5241,
											"end": 5259,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5232,
											"end": 5238,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5188,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 5188,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5188,
											"end": 5260,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 5188,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5270,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 5338,
											"end": 5340,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5327,
											"end": 5336,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5314,
											"end": 5320,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5270,
											"end": 5342,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 5270,
											"end": 5342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5270,
											"end": 5342,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 5270,
											"end": 5342,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5352,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5409,
											"end": 5418,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5405,
											"end": 5423,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5396,
											"end": 5402,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5352,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 5352,
											"end": 5424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5352,
											"end": 5424,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 5352,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5434,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 5496,
											"end": 5499,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 5485,
											"end": 5494,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5481,
											"end": 5500,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5472,
											"end": 5478,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5434,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "275"
										},
										{
											"begin": 5434,
											"end": 5501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5434,
											"end": 5501,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 5434,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4856,
											"end": 5508,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 4856,
											"end": 5508,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 4856,
											"end": 5508,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4856,
											"end": 5508,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4856,
											"end": 5508,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4856,
											"end": 5508,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4856,
											"end": 5508,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4856,
											"end": 5508,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4856,
											"end": 5508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5514,
											"end": 5843,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 5514,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5573,
											"end": 5579,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5622,
											"end": 5624,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5610,
											"end": 5619,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5601,
											"end": 5608,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5597,
											"end": 5620,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5593,
											"end": 5625,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5590,
											"end": 5709,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5590,
											"end": 5709,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 5590,
											"end": 5709,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5628,
											"end": 5707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 5628,
											"end": 5707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 5628,
											"end": 5707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5628,
											"end": 5707,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 5628,
											"end": 5707,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5590,
											"end": 5709,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 5590,
											"end": 5709,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5748,
											"end": 5749,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5773,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 5818,
											"end": 5825,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5809,
											"end": 5815,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5798,
											"end": 5807,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5794,
											"end": 5816,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5773,
											"end": 5826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 5773,
											"end": 5826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5773,
											"end": 5826,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 5773,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5763,
											"end": 5826,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5763,
											"end": 5826,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5719,
											"end": 5836,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5514,
											"end": 5843,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5514,
											"end": 5843,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5514,
											"end": 5843,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5514,
											"end": 5843,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5514,
											"end": 5843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5849,
											"end": 6323,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 5849,
											"end": 6323,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5917,
											"end": 5923,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5925,
											"end": 5931,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5974,
											"end": 5976,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5962,
											"end": 5971,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5953,
											"end": 5960,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5949,
											"end": 5972,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5945,
											"end": 5977,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5942,
											"end": 6061,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5942,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 5942,
											"end": 6061,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5980,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 5980,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 5980,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5980,
											"end": 6059,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 5980,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5942,
											"end": 6061,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 5942,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6100,
											"end": 6101,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6125,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 6170,
											"end": 6177,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6161,
											"end": 6167,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6150,
											"end": 6159,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6146,
											"end": 6168,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6125,
											"end": 6178,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 6125,
											"end": 6178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6125,
											"end": 6178,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 6125,
											"end": 6178,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6115,
											"end": 6178,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6115,
											"end": 6178,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6071,
											"end": 6188,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6227,
											"end": 6229,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6253,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 6298,
											"end": 6305,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6289,
											"end": 6295,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6278,
											"end": 6287,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6274,
											"end": 6296,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6253,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 6253,
											"end": 6306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6253,
											"end": 6306,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 6253,
											"end": 6306,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6243,
											"end": 6306,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6243,
											"end": 6306,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6198,
											"end": 6316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5849,
											"end": 6323,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5849,
											"end": 6323,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5849,
											"end": 6323,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5849,
											"end": 6323,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5849,
											"end": 6323,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5849,
											"end": 6323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6329,
											"end": 6498,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 6329,
											"end": 6498,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6413,
											"end": 6424,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6447,
											"end": 6453,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6442,
											"end": 6445,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6435,
											"end": 6454,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6487,
											"end": 6491,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6482,
											"end": 6485,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6478,
											"end": 6492,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6463,
											"end": 6492,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6463,
											"end": 6492,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6329,
											"end": 6498,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6329,
											"end": 6498,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6329,
											"end": 6498,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6329,
											"end": 6498,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6329,
											"end": 6498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6504,
											"end": 6682,
											"name": "tag",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 6504,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6644,
											"end": 6674,
											"name": "PUSH",
											"source": 13,
											"value": "506C65617365204669727374204465706F736974204E46542021212100000000"
										},
										{
											"begin": 6640,
											"end": 6641,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6632,
											"end": 6638,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6628,
											"end": 6642,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6621,
											"end": 6675,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6504,
											"end": 6682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6504,
											"end": 6682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6688,
											"end": 7054,
											"name": "tag",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 6688,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6830,
											"end": 6833,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6918,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 6915,
											"end": 6917,
											"name": "PUSH",
											"source": 13,
											"value": "1C"
										},
										{
											"begin": 6910,
											"end": 6913,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6851,
											"end": 6918,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 6851,
											"end": 6918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6851,
											"end": 6918,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 6851,
											"end": 6918,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6844,
											"end": 6918,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6844,
											"end": 6918,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6927,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 7016,
											"end": 7019,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6927,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "277"
										},
										{
											"begin": 6927,
											"end": 7020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6927,
											"end": 7020,
											"name": "tag",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 6927,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7045,
											"end": 7047,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7040,
											"end": 7043,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7029,
											"end": 7048,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7029,
											"end": 7048,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6688,
											"end": 7054,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6688,
											"end": 7054,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6688,
											"end": 7054,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6688,
											"end": 7054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7060,
											"end": 7479,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 7060,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7226,
											"end": 7230,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7264,
											"end": 7266,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7253,
											"end": 7262,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7249,
											"end": 7267,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7241,
											"end": 7267,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7241,
											"end": 7267,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7313,
											"end": 7322,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7307,
											"end": 7311,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7303,
											"end": 7323,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7299,
											"end": 7300,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7288,
											"end": 7297,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7284,
											"end": 7301,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7277,
											"end": 7324,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7341,
											"end": 7472,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 7467,
											"end": 7471,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7341,
											"end": 7472,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 7341,
											"end": 7472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7341,
											"end": 7472,
											"name": "tag",
											"source": 13,
											"value": "395"
										},
										{
											"begin": 7341,
											"end": 7472,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7333,
											"end": 7472,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7333,
											"end": 7472,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7060,
											"end": 7479,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7060,
											"end": 7479,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7060,
											"end": 7479,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7060,
											"end": 7479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7485,
											"end": 7665,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 7485,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7533,
											"end": 7610,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7530,
											"end": 7531,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7523,
											"end": 7611,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7630,
											"end": 7634,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 7627,
											"end": 7628,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 7620,
											"end": 7635,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7654,
											"end": 7658,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 7651,
											"end": 7652,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7644,
											"end": 7659,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7671,
											"end": 7865,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 7671,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7711,
											"end": 7715,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7731,
											"end": 7751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 7749,
											"end": 7750,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7731,
											"end": 7751,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 7731,
											"end": 7751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7731,
											"end": 7751,
											"name": "tag",
											"source": 13,
											"value": "398"
										},
										{
											"begin": 7731,
											"end": 7751,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7726,
											"end": 7751,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7726,
											"end": 7751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 7783,
											"end": 7784,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 7765,
											"end": 7785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 7765,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7760,
											"end": 7785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7809,
											"end": 7810,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7806,
											"end": 7807,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7802,
											"end": 7811,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7794,
											"end": 7811,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7794,
											"end": 7811,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7833,
											"end": 7834,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7827,
											"end": 7831,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7824,
											"end": 7835,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7821,
											"end": 7858,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7821,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 7821,
											"end": 7858,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7838,
											"end": 7856,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 7838,
											"end": 7856,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 7838,
											"end": 7856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7838,
											"end": 7856,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 7838,
											"end": 7856,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7821,
											"end": 7858,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 7821,
											"end": 7858,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7671,
											"end": 7865,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7671,
											"end": 7865,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7671,
											"end": 7865,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7671,
											"end": 7865,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7671,
											"end": 7865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7871,
											"end": 8051,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 7871,
											"end": 8051,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7919,
											"end": 7996,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7916,
											"end": 7917,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7909,
											"end": 7997,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8016,
											"end": 8020,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 8013,
											"end": 8014,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8006,
											"end": 8021,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8040,
											"end": 8044,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8037,
											"end": 8038,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8030,
											"end": 8045,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8057,
											"end": 8242,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 8057,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8097,
											"end": 8098,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8114,
											"end": 8134,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 8132,
											"end": 8133,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8114,
											"end": 8134,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 8114,
											"end": 8134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8114,
											"end": 8134,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 8114,
											"end": 8134,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8109,
											"end": 8134,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8109,
											"end": 8134,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8148,
											"end": 8168,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 8166,
											"end": 8167,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8148,
											"end": 8168,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 8148,
											"end": 8168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8148,
											"end": 8168,
											"name": "tag",
											"source": 13,
											"value": "405"
										},
										{
											"begin": 8148,
											"end": 8168,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8143,
											"end": 8168,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8143,
											"end": 8168,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8187,
											"end": 8188,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8177,
											"end": 8212,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 8177,
											"end": 8212,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8192,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 8192,
											"end": 8210,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 8192,
											"end": 8210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8192,
											"end": 8210,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 8192,
											"end": 8210,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8177,
											"end": 8212,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 8177,
											"end": 8212,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8234,
											"end": 8235,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8231,
											"end": 8232,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8227,
											"end": 8236,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 8222,
											"end": 8236,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8222,
											"end": 8236,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8057,
											"end": 8242,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8057,
											"end": 8242,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8057,
											"end": 8242,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8057,
											"end": 8242,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8057,
											"end": 8242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8248,
											"end": 8658,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 8248,
											"end": 8658,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8288,
											"end": 8295,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8311,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 8329,
											"end": 8330,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8311,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 8311,
											"end": 8331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8311,
											"end": 8331,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 8311,
											"end": 8331,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8306,
											"end": 8331,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8306,
											"end": 8331,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8345,
											"end": 8365,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 8363,
											"end": 8364,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8345,
											"end": 8365,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 8345,
											"end": 8365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8345,
											"end": 8365,
											"name": "tag",
											"source": 13,
											"value": "410"
										},
										{
											"begin": 8345,
											"end": 8365,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8340,
											"end": 8365,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8340,
											"end": 8365,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8400,
											"end": 8401,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8397,
											"end": 8398,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8393,
											"end": 8402,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 8422,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 8440,
											"end": 8451,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8422,
											"end": 8452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 8422,
											"end": 8452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8422,
											"end": 8452,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 8422,
											"end": 8452,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8411,
											"end": 8452,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8411,
											"end": 8452,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8601,
											"end": 8602,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8592,
											"end": 8599,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8588,
											"end": 8603,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 8585,
											"end": 8586,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8582,
											"end": 8604,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 8562,
											"end": 8563,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8555,
											"end": 8564,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8535,
											"end": 8618,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 8512,
											"end": 8651,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 8512,
											"end": 8651,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8631,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 8631,
											"end": 8649,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 8631,
											"end": 8649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8631,
											"end": 8649,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 8631,
											"end": 8649,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8512,
											"end": 8651,
											"name": "tag",
											"source": 13,
											"value": "412"
										},
										{
											"begin": 8512,
											"end": 8651,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8296,
											"end": 8658,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8248,
											"end": 8658,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8248,
											"end": 8658,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8248,
											"end": 8658,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8248,
											"end": 8658,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8248,
											"end": 8658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8664,
											"end": 8832,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 8664,
											"end": 8832,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8747,
											"end": 8758,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8781,
											"end": 8787,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8776,
											"end": 8779,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8769,
											"end": 8788,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8821,
											"end": 8825,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8816,
											"end": 8819,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8812,
											"end": 8826,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8797,
											"end": 8826,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8797,
											"end": 8826,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8664,
											"end": 8832,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8664,
											"end": 8832,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8664,
											"end": 8832,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8664,
											"end": 8832,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8664,
											"end": 8832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8838,
											"end": 8952,
											"name": "tag",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 8838,
											"end": 8952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8838,
											"end": 8952,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8838,
											"end": 8952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8958,
											"end": 9320,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 8958,
											"end": 9320,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9099,
											"end": 9102,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9120,
											"end": 9185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 9183,
											"end": 9184,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9178,
											"end": 9181,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9120,
											"end": 9185,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 9120,
											"end": 9185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9120,
											"end": 9185,
											"name": "tag",
											"source": 13,
											"value": "417"
										},
										{
											"begin": 9120,
											"end": 9185,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9113,
											"end": 9185,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9113,
											"end": 9185,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9194,
											"end": 9287,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 9283,
											"end": 9286,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9194,
											"end": 9287,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "282"
										},
										{
											"begin": 9194,
											"end": 9287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9194,
											"end": 9287,
											"name": "tag",
											"source": 13,
											"value": "418"
										},
										{
											"begin": 9194,
											"end": 9287,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9312,
											"end": 9313,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9307,
											"end": 9310,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9303,
											"end": 9314,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9296,
											"end": 9314,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9296,
											"end": 9314,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8958,
											"end": 9320,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8958,
											"end": 9320,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8958,
											"end": 9320,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8958,
											"end": 9320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9326,
											"end": 10074,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 9326,
											"end": 10074,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9575,
											"end": 9579,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9613,
											"end": 9616,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 9602,
											"end": 9611,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9598,
											"end": 9617,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9590,
											"end": 9617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9590,
											"end": 9617,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9627,
											"end": 9698,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 9695,
											"end": 9696,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9684,
											"end": 9693,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9680,
											"end": 9697,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9671,
											"end": 9677,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9627,
											"end": 9698,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 9627,
											"end": 9698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9627,
											"end": 9698,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 9627,
											"end": 9698,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9708,
											"end": 9780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 9776,
											"end": 9778,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9765,
											"end": 9774,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9761,
											"end": 9779,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9752,
											"end": 9758,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9708,
											"end": 9780,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 9708,
											"end": 9780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9708,
											"end": 9780,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 9708,
											"end": 9780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9790,
											"end": 9862,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 9858,
											"end": 9860,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9847,
											"end": 9856,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9843,
											"end": 9861,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9834,
											"end": 9840,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9790,
											"end": 9862,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 9790,
											"end": 9862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9790,
											"end": 9862,
											"name": "tag",
											"source": 13,
											"value": "422"
										},
										{
											"begin": 9790,
											"end": 9862,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9909,
											"end": 9918,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9903,
											"end": 9907,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9899,
											"end": 9919,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9894,
											"end": 9896,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 9883,
											"end": 9892,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9879,
											"end": 9897,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9872,
											"end": 9920,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9937,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 10062,
											"end": 10066,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9937,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 9937,
											"end": 10067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9937,
											"end": 10067,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 9937,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9929,
											"end": 10067,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9929,
											"end": 10067,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9326,
											"end": 10074,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 9326,
											"end": 10074,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9326,
											"end": 10074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9326,
											"end": 10074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9326,
											"end": 10074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9326,
											"end": 10074,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9326,
											"end": 10074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10080,
											"end": 10271,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 10080,
											"end": 10271,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10120,
											"end": 10123,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10139,
											"end": 10159,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 10157,
											"end": 10158,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10139,
											"end": 10159,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 10139,
											"end": 10159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10139,
											"end": 10159,
											"name": "tag",
											"source": 13,
											"value": "425"
										},
										{
											"begin": 10139,
											"end": 10159,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10134,
											"end": 10159,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10134,
											"end": 10159,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10173,
											"end": 10193,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 10191,
											"end": 10192,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10173,
											"end": 10193,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 10173,
											"end": 10193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10173,
											"end": 10193,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 10173,
											"end": 10193,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10168,
											"end": 10193,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10168,
											"end": 10193,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10216,
											"end": 10217,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10213,
											"end": 10214,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10209,
											"end": 10218,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10202,
											"end": 10218,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10202,
											"end": 10218,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10237,
											"end": 10240,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10234,
											"end": 10235,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10231,
											"end": 10241,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10228,
											"end": 10264,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10228,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 10228,
											"end": 10264,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10244,
											"end": 10262,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 10244,
											"end": 10262,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 10244,
											"end": 10262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10244,
											"end": 10262,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 10244,
											"end": 10262,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10228,
											"end": 10264,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 10228,
											"end": 10264,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10080,
											"end": 10271,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10080,
											"end": 10271,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10080,
											"end": 10271,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10080,
											"end": 10271,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10080,
											"end": 10271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10277,
											"end": 10450,
											"name": "tag",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 10277,
											"end": 10450,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10417,
											"end": 10442,
											"name": "PUSH",
											"source": 13,
											"value": "596F7520416C7265616479204465706F736974204E4654000000000000000000"
										},
										{
											"begin": 10413,
											"end": 10414,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10405,
											"end": 10411,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10401,
											"end": 10415,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10394,
											"end": 10443,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10277,
											"end": 10450,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10277,
											"end": 10450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10456,
											"end": 10822,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 10456,
											"end": 10822,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10598,
											"end": 10601,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10619,
											"end": 10686,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 10683,
											"end": 10685,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 10678,
											"end": 10681,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10619,
											"end": 10686,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 10619,
											"end": 10686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10619,
											"end": 10686,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 10619,
											"end": 10686,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10612,
											"end": 10686,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10612,
											"end": 10686,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10695,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 10784,
											"end": 10787,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10695,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "284"
										},
										{
											"begin": 10695,
											"end": 10788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10695,
											"end": 10788,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 10695,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10813,
											"end": 10815,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10808,
											"end": 10811,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10804,
											"end": 10816,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10797,
											"end": 10816,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10797,
											"end": 10816,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10456,
											"end": 10822,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10456,
											"end": 10822,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10456,
											"end": 10822,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10456,
											"end": 10822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10828,
											"end": 11247,
											"name": "tag",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 10828,
											"end": 11247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10994,
											"end": 10998,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11032,
											"end": 11034,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11021,
											"end": 11030,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11017,
											"end": 11035,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11009,
											"end": 11035,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11009,
											"end": 11035,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11081,
											"end": 11090,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11075,
											"end": 11079,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11071,
											"end": 11091,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11067,
											"end": 11068,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11056,
											"end": 11065,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11052,
											"end": 11069,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11045,
											"end": 11092,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11109,
											"end": 11240,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 11235,
											"end": 11239,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11109,
											"end": 11240,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 11109,
											"end": 11240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11109,
											"end": 11240,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 11109,
											"end": 11240,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11101,
											"end": 11240,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11101,
											"end": 11240,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10828,
											"end": 11247,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10828,
											"end": 11247,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10828,
											"end": 11247,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10828,
											"end": 11247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11253,
											"end": 11431,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 11253,
											"end": 11431,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11393,
											"end": 11423,
											"name": "PUSH",
											"source": 13,
											"value": "313520446179732043617465676F72792069732046756C6C2021212100000000"
										},
										{
											"begin": 11389,
											"end": 11390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11381,
											"end": 11387,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11377,
											"end": 11391,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11370,
											"end": 11424,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11253,
											"end": 11431,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11253,
											"end": 11431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11437,
											"end": 11803,
											"name": "tag",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 11437,
											"end": 11803,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11579,
											"end": 11582,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11600,
											"end": 11667,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 11664,
											"end": 11666,
											"name": "PUSH",
											"source": 13,
											"value": "1C"
										},
										{
											"begin": 11659,
											"end": 11662,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11600,
											"end": 11667,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 11600,
											"end": 11667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11600,
											"end": 11667,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 11600,
											"end": 11667,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11593,
											"end": 11667,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11593,
											"end": 11667,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11676,
											"end": 11769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 11765,
											"end": 11768,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11676,
											"end": 11769,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 11676,
											"end": 11769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11676,
											"end": 11769,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 11676,
											"end": 11769,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11794,
											"end": 11796,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11789,
											"end": 11792,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11785,
											"end": 11797,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11778,
											"end": 11797,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11437,
											"end": 11803,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11437,
											"end": 11803,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11437,
											"end": 11803,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11437,
											"end": 11803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11809,
											"end": 12228,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 11809,
											"end": 12228,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11975,
											"end": 11979,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12013,
											"end": 12015,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12002,
											"end": 12011,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11998,
											"end": 12016,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11990,
											"end": 12016,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11990,
											"end": 12016,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12062,
											"end": 12071,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12056,
											"end": 12060,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12052,
											"end": 12072,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12048,
											"end": 12049,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12037,
											"end": 12046,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12033,
											"end": 12050,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12026,
											"end": 12073,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12090,
											"end": 12221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 12216,
											"end": 12220,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12090,
											"end": 12221,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 12090,
											"end": 12221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12090,
											"end": 12221,
											"name": "tag",
											"source": 13,
											"value": "440"
										},
										{
											"begin": 12090,
											"end": 12221,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12082,
											"end": 12221,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12082,
											"end": 12221,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11809,
											"end": 12228,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11809,
											"end": 12228,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11809,
											"end": 12228,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11809,
											"end": 12228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12234,
											"end": 12412,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 12234,
											"end": 12412,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12374,
											"end": 12404,
											"name": "PUSH",
											"source": 13,
											"value": "333020446179732043617465676F72792069732046756C6C2021212100000000"
										},
										{
											"begin": 12370,
											"end": 12371,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12362,
											"end": 12368,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12358,
											"end": 12372,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12351,
											"end": 12405,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12234,
											"end": 12412,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12234,
											"end": 12412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12418,
											"end": 12784,
											"name": "tag",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 12418,
											"end": 12784,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12560,
											"end": 12563,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12581,
											"end": 12648,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 12645,
											"end": 12647,
											"name": "PUSH",
											"source": 13,
											"value": "1C"
										},
										{
											"begin": 12640,
											"end": 12643,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12581,
											"end": 12648,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 12581,
											"end": 12648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12581,
											"end": 12648,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 12581,
											"end": 12648,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12574,
											"end": 12648,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12574,
											"end": 12648,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12657,
											"end": 12750,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 12746,
											"end": 12749,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12657,
											"end": 12750,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 12657,
											"end": 12750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12657,
											"end": 12750,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 12657,
											"end": 12750,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12775,
											"end": 12777,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12770,
											"end": 12773,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12766,
											"end": 12778,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12759,
											"end": 12778,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12759,
											"end": 12778,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12418,
											"end": 12784,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12418,
											"end": 12784,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12418,
											"end": 12784,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12418,
											"end": 12784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12790,
											"end": 13209,
											"name": "tag",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 12790,
											"end": 13209,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12956,
											"end": 12960,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12994,
											"end": 12996,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12983,
											"end": 12992,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12979,
											"end": 12997,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12971,
											"end": 12997,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12971,
											"end": 12997,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13043,
											"end": 13052,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13037,
											"end": 13041,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13033,
											"end": 13053,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13029,
											"end": 13030,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13018,
											"end": 13027,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13014,
											"end": 13031,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13007,
											"end": 13054,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13071,
											"end": 13202,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 13197,
											"end": 13201,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13071,
											"end": 13202,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 13071,
											"end": 13202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13071,
											"end": 13202,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 13071,
											"end": 13202,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13063,
											"end": 13202,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13063,
											"end": 13202,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12790,
											"end": 13209,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12790,
											"end": 13209,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12790,
											"end": 13209,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12790,
											"end": 13209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13215,
											"end": 13393,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 13215,
											"end": 13393,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13355,
											"end": 13385,
											"name": "PUSH",
											"source": 13,
											"value": "363020446179732043617465676F72792069732046756C6C2021212100000000"
										},
										{
											"begin": 13351,
											"end": 13352,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13343,
											"end": 13349,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13339,
											"end": 13353,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13332,
											"end": 13386,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13215,
											"end": 13393,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13215,
											"end": 13393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13399,
											"end": 13765,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 13399,
											"end": 13765,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13541,
											"end": 13544,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13562,
											"end": 13629,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 13626,
											"end": 13628,
											"name": "PUSH",
											"source": 13,
											"value": "1C"
										},
										{
											"begin": 13621,
											"end": 13624,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13562,
											"end": 13629,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 13562,
											"end": 13629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13562,
											"end": 13629,
											"name": "tag",
											"source": 13,
											"value": "449"
										},
										{
											"begin": 13562,
											"end": 13629,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13555,
											"end": 13629,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13555,
											"end": 13629,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13638,
											"end": 13731,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 13727,
											"end": 13730,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13638,
											"end": 13731,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 13638,
											"end": 13731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13638,
											"end": 13731,
											"name": "tag",
											"source": 13,
											"value": "450"
										},
										{
											"begin": 13638,
											"end": 13731,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13756,
											"end": 13758,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13751,
											"end": 13754,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13747,
											"end": 13759,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13740,
											"end": 13759,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13740,
											"end": 13759,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13399,
											"end": 13765,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13399,
											"end": 13765,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13399,
											"end": 13765,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13399,
											"end": 13765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13771,
											"end": 14190,
											"name": "tag",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 13771,
											"end": 14190,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13937,
											"end": 13941,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13975,
											"end": 13977,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13964,
											"end": 13973,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13960,
											"end": 13978,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13952,
											"end": 13978,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13952,
											"end": 13978,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14024,
											"end": 14033,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14018,
											"end": 14022,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14014,
											"end": 14034,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14010,
											"end": 14011,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13999,
											"end": 14008,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13995,
											"end": 14012,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13988,
											"end": 14035,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14052,
											"end": 14183,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 14178,
											"end": 14182,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14052,
											"end": 14183,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 14052,
											"end": 14183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14052,
											"end": 14183,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 14052,
											"end": 14183,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14044,
											"end": 14183,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14044,
											"end": 14183,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13771,
											"end": 14190,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13771,
											"end": 14190,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13771,
											"end": 14190,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13771,
											"end": 14190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "tag",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14336,
											"end": 14366,
											"name": "PUSH",
											"source": 13,
											"value": "393020446179732043617465676F72792069732046756C6C2021212100000000"
										},
										{
											"begin": 14332,
											"end": 14333,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14324,
											"end": 14330,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14320,
											"end": 14334,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14313,
											"end": 14367,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14196,
											"end": 14374,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14196,
											"end": 14374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14380,
											"end": 14746,
											"name": "tag",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 14380,
											"end": 14746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14522,
											"end": 14525,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14543,
											"end": 14610,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 14607,
											"end": 14609,
											"name": "PUSH",
											"source": 13,
											"value": "1C"
										},
										{
											"begin": 14602,
											"end": 14605,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14543,
											"end": 14610,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 14543,
											"end": 14610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14543,
											"end": 14610,
											"name": "tag",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 14543,
											"end": 14610,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14536,
											"end": 14610,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14536,
											"end": 14610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14619,
											"end": 14712,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 14708,
											"end": 14711,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14619,
											"end": 14712,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "292"
										},
										{
											"begin": 14619,
											"end": 14712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14619,
											"end": 14712,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 14619,
											"end": 14712,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14737,
											"end": 14739,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14732,
											"end": 14735,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14728,
											"end": 14740,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14721,
											"end": 14740,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14721,
											"end": 14740,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14380,
											"end": 14746,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14380,
											"end": 14746,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14380,
											"end": 14746,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14380,
											"end": 14746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14752,
											"end": 15171,
											"name": "tag",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 14752,
											"end": 15171,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14918,
											"end": 14922,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14956,
											"end": 14958,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14945,
											"end": 14954,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14941,
											"end": 14959,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14933,
											"end": 14959,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14933,
											"end": 14959,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15005,
											"end": 15014,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14999,
											"end": 15003,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14995,
											"end": 15015,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 14991,
											"end": 14992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14980,
											"end": 14989,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14976,
											"end": 14993,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14969,
											"end": 15016,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15033,
											"end": 15164,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 15159,
											"end": 15163,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15033,
											"end": 15164,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 15033,
											"end": 15164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15033,
											"end": 15164,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 15033,
											"end": 15164,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15025,
											"end": 15164,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15025,
											"end": 15164,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14752,
											"end": 15171,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14752,
											"end": 15171,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14752,
											"end": 15171,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14752,
											"end": 15171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15177,
											"end": 15355,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 15177,
											"end": 15355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15317,
											"end": 15347,
											"name": "PUSH",
											"source": 13,
											"value": "53656C6C65637420446179732031352C33302C36302C39302021212100000000"
										},
										{
											"begin": 15313,
											"end": 15314,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15305,
											"end": 15311,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15301,
											"end": 15315,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15294,
											"end": 15348,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15177,
											"end": 15355,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15177,
											"end": 15355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15361,
											"end": 15727,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 15361,
											"end": 15727,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15503,
											"end": 15506,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15524,
											"end": 15591,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 15588,
											"end": 15590,
											"name": "PUSH",
											"source": 13,
											"value": "1C"
										},
										{
											"begin": 15583,
											"end": 15586,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15524,
											"end": 15591,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 15524,
											"end": 15591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15524,
											"end": 15591,
											"name": "tag",
											"source": 13,
											"value": "461"
										},
										{
											"begin": 15524,
											"end": 15591,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15517,
											"end": 15591,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15517,
											"end": 15591,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15600,
											"end": 15693,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 15689,
											"end": 15692,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15600,
											"end": 15693,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 15600,
											"end": 15693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15600,
											"end": 15693,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 15600,
											"end": 15693,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15718,
											"end": 15720,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15713,
											"end": 15716,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15709,
											"end": 15721,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15702,
											"end": 15721,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15702,
											"end": 15721,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15361,
											"end": 15727,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15361,
											"end": 15727,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15361,
											"end": 15727,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15361,
											"end": 15727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15733,
											"end": 16152,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 15733,
											"end": 16152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15899,
											"end": 15903,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15937,
											"end": 15939,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15926,
											"end": 15935,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15922,
											"end": 15940,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15914,
											"end": 15940,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15914,
											"end": 15940,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15986,
											"end": 15995,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15980,
											"end": 15984,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15976,
											"end": 15996,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 15972,
											"end": 15973,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15961,
											"end": 15970,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15957,
											"end": 15974,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15950,
											"end": 15997,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16014,
											"end": 16145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 16140,
											"end": 16144,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16014,
											"end": 16145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 16014,
											"end": 16145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16014,
											"end": 16145,
											"name": "tag",
											"source": 13,
											"value": "464"
										},
										{
											"begin": 16014,
											"end": 16145,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16006,
											"end": 16145,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16006,
											"end": 16145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15733,
											"end": 16152,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15733,
											"end": 16152,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15733,
											"end": 16152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15733,
											"end": 16152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16158,
											"end": 16383,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 16158,
											"end": 16383,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16298,
											"end": 16332,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 16294,
											"end": 16295,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16286,
											"end": 16292,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16282,
											"end": 16296,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16275,
											"end": 16333,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16367,
											"end": 16375,
											"name": "PUSH",
											"source": 13,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16362,
											"end": 16364,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16354,
											"end": 16360,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16350,
											"end": 16365,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16343,
											"end": 16376,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16158,
											"end": 16383,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16158,
											"end": 16383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16389,
											"end": 16755,
											"name": "tag",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 16389,
											"end": 16755,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16531,
											"end": 16534,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16552,
											"end": 16619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 16616,
											"end": 16618,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 16611,
											"end": 16614,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16552,
											"end": 16619,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 16552,
											"end": 16619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16552,
											"end": 16619,
											"name": "tag",
											"source": 13,
											"value": "467"
										},
										{
											"begin": 16552,
											"end": 16619,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16545,
											"end": 16619,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16545,
											"end": 16619,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16628,
											"end": 16721,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 16717,
											"end": 16720,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16628,
											"end": 16721,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 16628,
											"end": 16721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16628,
											"end": 16721,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 16628,
											"end": 16721,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16746,
											"end": 16748,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 16741,
											"end": 16744,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16737,
											"end": 16749,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16730,
											"end": 16749,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16730,
											"end": 16749,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16389,
											"end": 16755,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16389,
											"end": 16755,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16389,
											"end": 16755,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16389,
											"end": 16755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16761,
											"end": 17180,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 16761,
											"end": 17180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16927,
											"end": 16931,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16965,
											"end": 16967,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16954,
											"end": 16963,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16950,
											"end": 16968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16942,
											"end": 16968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16942,
											"end": 16968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17014,
											"end": 17023,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17008,
											"end": 17012,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17004,
											"end": 17024,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 17000,
											"end": 17001,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16989,
											"end": 16998,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16985,
											"end": 17002,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16978,
											"end": 17025,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17042,
											"end": 17173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 17168,
											"end": 17172,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17042,
											"end": 17173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 17042,
											"end": 17173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17042,
											"end": 17173,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 17042,
											"end": 17173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17034,
											"end": 17173,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17034,
											"end": 17173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16761,
											"end": 17180,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16761,
											"end": 17180,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16761,
											"end": 17180,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16761,
											"end": 17180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17186,
											"end": 17518,
											"name": "tag",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 17186,
											"end": 17518,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17307,
											"end": 17311,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17345,
											"end": 17347,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17334,
											"end": 17343,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17330,
											"end": 17348,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17322,
											"end": 17348,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17322,
											"end": 17348,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17358,
											"end": 17429,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 17426,
											"end": 17427,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17415,
											"end": 17424,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17411,
											"end": 17428,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17402,
											"end": 17408,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17358,
											"end": 17429,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 17358,
											"end": 17429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17358,
											"end": 17429,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 17358,
											"end": 17429,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17439,
											"end": 17511,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 17507,
											"end": 17509,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17496,
											"end": 17505,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17492,
											"end": 17510,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17483,
											"end": 17489,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17439,
											"end": 17511,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 17439,
											"end": 17511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17439,
											"end": 17511,
											"name": "tag",
											"source": 13,
											"value": "473"
										},
										{
											"begin": 17439,
											"end": 17511,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17186,
											"end": 17518,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 17186,
											"end": 17518,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17186,
											"end": 17518,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17186,
											"end": 17518,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17186,
											"end": 17518,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17186,
											"end": 17518,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17524,
											"end": 17701,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 17524,
											"end": 17701,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17664,
											"end": 17693,
											"name": "PUSH",
											"source": 13,
											"value": "436F756E7465723A2064656372656D656E74206F766572666C6F770000000000"
										},
										{
											"begin": 17660,
											"end": 17661,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17652,
											"end": 17658,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17648,
											"end": 17662,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17641,
											"end": 17694,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17524,
											"end": 17701,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17524,
											"end": 17701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17707,
											"end": 18073,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 17707,
											"end": 18073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17849,
											"end": 17852,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17870,
											"end": 17937,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 17934,
											"end": 17936,
											"name": "PUSH",
											"source": 13,
											"value": "1B"
										},
										{
											"begin": 17929,
											"end": 17932,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17870,
											"end": 17937,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 17870,
											"end": 17937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17870,
											"end": 17937,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 17870,
											"end": 17937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17863,
											"end": 17937,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17863,
											"end": 17937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17946,
											"end": 18039,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 18035,
											"end": 18038,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17946,
											"end": 18039,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 17946,
											"end": 18039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17946,
											"end": 18039,
											"name": "tag",
											"source": 13,
											"value": "477"
										},
										{
											"begin": 17946,
											"end": 18039,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18064,
											"end": 18066,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18059,
											"end": 18062,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18055,
											"end": 18067,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18048,
											"end": 18067,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18048,
											"end": 18067,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17707,
											"end": 18073,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17707,
											"end": 18073,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17707,
											"end": 18073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17707,
											"end": 18073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18079,
											"end": 18498,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 18079,
											"end": 18498,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18245,
											"end": 18249,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18283,
											"end": 18285,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18272,
											"end": 18281,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18268,
											"end": 18286,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18260,
											"end": 18286,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18260,
											"end": 18286,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18332,
											"end": 18341,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18326,
											"end": 18330,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18322,
											"end": 18342,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18318,
											"end": 18319,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18307,
											"end": 18316,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18303,
											"end": 18320,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18296,
											"end": 18343,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18360,
											"end": 18491,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 18486,
											"end": 18490,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18360,
											"end": 18491,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 18360,
											"end": 18491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18360,
											"end": 18491,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 18360,
											"end": 18491,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18352,
											"end": 18491,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18352,
											"end": 18491,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18079,
											"end": 18498,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18079,
											"end": 18498,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18079,
											"end": 18498,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18079,
											"end": 18498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18504,
											"end": 18686,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 18504,
											"end": 18686,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18644,
											"end": 18678,
											"name": "PUSH",
											"source": 13,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 18640,
											"end": 18641,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18632,
											"end": 18638,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18628,
											"end": 18642,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18621,
											"end": 18679,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18504,
											"end": 18686,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18504,
											"end": 18686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18692,
											"end": 19058,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 18692,
											"end": 19058,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18834,
											"end": 18837,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18855,
											"end": 18922,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 18919,
											"end": 18921,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18914,
											"end": 18917,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18855,
											"end": 18922,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 18855,
											"end": 18922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18855,
											"end": 18922,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 18855,
											"end": 18922,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18848,
											"end": 18922,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18848,
											"end": 18922,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18931,
											"end": 19024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 19020,
											"end": 19023,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18931,
											"end": 19024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 18931,
											"end": 19024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18931,
											"end": 19024,
											"name": "tag",
											"source": 13,
											"value": "483"
										},
										{
											"begin": 18931,
											"end": 19024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19049,
											"end": 19051,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19044,
											"end": 19047,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19040,
											"end": 19052,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19033,
											"end": 19052,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19033,
											"end": 19052,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18692,
											"end": 19058,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18692,
											"end": 19058,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18692,
											"end": 19058,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18692,
											"end": 19058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19064,
											"end": 19483,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 19064,
											"end": 19483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19230,
											"end": 19234,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19268,
											"end": 19270,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19257,
											"end": 19266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19253,
											"end": 19271,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19245,
											"end": 19271,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19245,
											"end": 19271,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19317,
											"end": 19326,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19311,
											"end": 19315,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19307,
											"end": 19327,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 19303,
											"end": 19304,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19292,
											"end": 19301,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19288,
											"end": 19305,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19281,
											"end": 19328,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19345,
											"end": 19476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 19471,
											"end": 19475,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19345,
											"end": 19476,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 19345,
											"end": 19476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19345,
											"end": 19476,
											"name": "tag",
											"source": 13,
											"value": "485"
										},
										{
											"begin": 19345,
											"end": 19476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19337,
											"end": 19476,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19337,
											"end": 19476,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19064,
											"end": 19483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19064,
											"end": 19483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19064,
											"end": 19483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19064,
											"end": 19483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19489,
											"end": 19931,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 19489,
											"end": 19931,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19638,
											"end": 19642,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19676,
											"end": 19678,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 19665,
											"end": 19674,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19661,
											"end": 19679,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19653,
											"end": 19679,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19653,
											"end": 19679,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19689,
											"end": 19760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 19757,
											"end": 19758,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19746,
											"end": 19755,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19742,
											"end": 19759,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19733,
											"end": 19739,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 19689,
											"end": 19760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 19689,
											"end": 19760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19689,
											"end": 19760,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 19689,
											"end": 19760,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19770,
											"end": 19842,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 19838,
											"end": 19840,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 19827,
											"end": 19836,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19823,
											"end": 19841,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19814,
											"end": 19820,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 19770,
											"end": 19842,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 19770,
											"end": 19842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19770,
											"end": 19842,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 19770,
											"end": 19842,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19852,
											"end": 19924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 19920,
											"end": 19922,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 19909,
											"end": 19918,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 19905,
											"end": 19923,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19896,
											"end": 19902,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 19852,
											"end": 19924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 19852,
											"end": 19924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19852,
											"end": 19924,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 19852,
											"end": 19924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19489,
											"end": 19931,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 19489,
											"end": 19931,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 19489,
											"end": 19931,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19489,
											"end": 19931,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19489,
											"end": 19931,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19489,
											"end": 19931,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19489,
											"end": 19931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19937,
											"end": 20053,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 19937,
											"end": 20053,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20007,
											"end": 20028,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 20022,
											"end": 20027,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20007,
											"end": 20028,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 20007,
											"end": 20028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20007,
											"end": 20028,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 20007,
											"end": 20028,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20000,
											"end": 20005,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19997,
											"end": 20029,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 19987,
											"end": 20047,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 19987,
											"end": 20047,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20043,
											"end": 20044,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20040,
											"end": 20041,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 20033,
											"end": 20045,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 19987,
											"end": 20047,
											"name": "tag",
											"source": 13,
											"value": "492"
										},
										{
											"begin": 19987,
											"end": 20047,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19937,
											"end": 20053,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19937,
											"end": 20053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20059,
											"end": 20196,
											"name": "tag",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 20059,
											"end": 20196,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20113,
											"end": 20118,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20144,
											"end": 20150,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20138,
											"end": 20151,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 20129,
											"end": 20151,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20129,
											"end": 20151,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20160,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 20184,
											"end": 20189,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20160,
											"end": 20190,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 20160,
											"end": 20190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20160,
											"end": 20190,
											"name": "tag",
											"source": 13,
											"value": "494"
										},
										{
											"begin": 20160,
											"end": 20190,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20059,
											"end": 20196,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20059,
											"end": 20196,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20059,
											"end": 20196,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20059,
											"end": 20196,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20059,
											"end": 20196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20202,
											"end": 20547,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 20202,
											"end": 20547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20269,
											"end": 20275,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20318,
											"end": 20320,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20306,
											"end": 20315,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20297,
											"end": 20304,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 20293,
											"end": 20316,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 20289,
											"end": 20321,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 20286,
											"end": 20405,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 20286,
											"end": 20405,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 20286,
											"end": 20405,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20324,
											"end": 20403,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 20324,
											"end": 20403,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 20324,
											"end": 20403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20324,
											"end": 20403,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 20324,
											"end": 20403,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20286,
											"end": 20405,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 20286,
											"end": 20405,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20444,
											"end": 20445,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20469,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 20522,
											"end": 20529,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 20513,
											"end": 20519,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20502,
											"end": 20511,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 20498,
											"end": 20520,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20469,
											"end": 20530,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 20469,
											"end": 20530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20469,
											"end": 20530,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 20469,
											"end": 20530,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20459,
											"end": 20530,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20459,
											"end": 20530,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20415,
											"end": 20540,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20202,
											"end": 20547,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20202,
											"end": 20547,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20202,
											"end": 20547,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20202,
											"end": 20547,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20202,
											"end": 20547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20553,
											"end": 20782,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 20553,
											"end": 20782,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20693,
											"end": 20727,
											"name": "PUSH",
											"source": 13,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 20689,
											"end": 20690,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20681,
											"end": 20687,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20677,
											"end": 20691,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20670,
											"end": 20728,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20762,
											"end": 20774,
											"name": "PUSH",
											"source": 13,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 20757,
											"end": 20759,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20749,
											"end": 20755,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20745,
											"end": 20760,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20738,
											"end": 20775,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 20553,
											"end": 20782,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20553,
											"end": 20782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20788,
											"end": 21154,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 20788,
											"end": 21154,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20930,
											"end": 20933,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20951,
											"end": 21018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 21015,
											"end": 21017,
											"name": "PUSH",
											"source": 13,
											"value": "2A"
										},
										{
											"begin": 21010,
											"end": 21013,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20951,
											"end": 21018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 20951,
											"end": 21018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20951,
											"end": 21018,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 20951,
											"end": 21018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20944,
											"end": 21018,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20944,
											"end": 21018,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21027,
											"end": 21120,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 21116,
											"end": 21119,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21027,
											"end": 21120,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 21027,
											"end": 21120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21027,
											"end": 21120,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 21027,
											"end": 21120,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21145,
											"end": 21147,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 21140,
											"end": 21143,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21136,
											"end": 21148,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21129,
											"end": 21148,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21129,
											"end": 21148,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20788,
											"end": 21154,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20788,
											"end": 21154,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20788,
											"end": 21154,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20788,
											"end": 21154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21160,
											"end": 21579,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 21160,
											"end": 21579,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21326,
											"end": 21330,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21364,
											"end": 21366,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21353,
											"end": 21362,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21349,
											"end": 21367,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21341,
											"end": 21367,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21341,
											"end": 21367,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21413,
											"end": 21422,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21407,
											"end": 21411,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21403,
											"end": 21423,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21399,
											"end": 21400,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21388,
											"end": 21397,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21384,
											"end": 21401,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21377,
											"end": 21424,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21441,
											"end": 21572,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 21567,
											"end": 21571,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21441,
											"end": 21572,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 21441,
											"end": 21572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21441,
											"end": 21572,
											"name": "tag",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 21441,
											"end": 21572,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21433,
											"end": 21572,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21433,
											"end": 21572,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21160,
											"end": 21579,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21160,
											"end": 21579,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21160,
											"end": 21579,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21160,
											"end": 21579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21585,
											"end": 21810,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 21585,
											"end": 21810,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21725,
											"end": 21759,
											"name": "PUSH",
											"source": 13,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 21721,
											"end": 21722,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21713,
											"end": 21719,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21709,
											"end": 21723,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21702,
											"end": 21760,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21794,
											"end": 21802,
											"name": "PUSH",
											"source": 13,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21789,
											"end": 21791,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21781,
											"end": 21787,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21777,
											"end": 21792,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21770,
											"end": 21803,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 21585,
											"end": 21810,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21585,
											"end": 21810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21816,
											"end": 22182,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 21816,
											"end": 22182,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21958,
											"end": 21961,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21979,
											"end": 22046,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 22043,
											"end": 22045,
											"name": "PUSH",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 22038,
											"end": 22041,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 21979,
											"end": 22046,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 21979,
											"end": 22046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21979,
											"end": 22046,
											"name": "tag",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 21979,
											"end": 22046,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21972,
											"end": 22046,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21972,
											"end": 22046,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22055,
											"end": 22148,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 22144,
											"end": 22147,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22055,
											"end": 22148,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 22055,
											"end": 22148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22055,
											"end": 22148,
											"name": "tag",
											"source": 13,
											"value": "508"
										},
										{
											"begin": 22055,
											"end": 22148,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22173,
											"end": 22175,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 22168,
											"end": 22171,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22164,
											"end": 22176,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22157,
											"end": 22176,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22157,
											"end": 22176,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21816,
											"end": 22182,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 21816,
											"end": 22182,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21816,
											"end": 22182,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21816,
											"end": 22182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22188,
											"end": 22607,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 22188,
											"end": 22607,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22354,
											"end": 22358,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22392,
											"end": 22394,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22381,
											"end": 22390,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22377,
											"end": 22395,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22369,
											"end": 22395,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22369,
											"end": 22395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22441,
											"end": 22450,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22435,
											"end": 22439,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22431,
											"end": 22451,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 22427,
											"end": 22428,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22416,
											"end": 22425,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22412,
											"end": 22429,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22405,
											"end": 22452,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22469,
											"end": 22600,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 22595,
											"end": 22599,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22469,
											"end": 22600,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 22469,
											"end": 22600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22469,
											"end": 22600,
											"name": "tag",
											"source": 13,
											"value": "510"
										},
										{
											"begin": 22469,
											"end": 22600,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22461,
											"end": 22600,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22461,
											"end": 22600,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22188,
											"end": 22607,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22188,
											"end": 22607,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22188,
											"end": 22607,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22188,
											"end": 22607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22613,
											"end": 22711,
											"name": "tag",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 22613,
											"end": 22711,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22664,
											"end": 22670,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22698,
											"end": 22703,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22692,
											"end": 22704,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 22682,
											"end": 22704,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22682,
											"end": 22704,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22613,
											"end": 22711,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22613,
											"end": 22711,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22613,
											"end": 22711,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22613,
											"end": 22711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22717,
											"end": 22864,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 22717,
											"end": 22864,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22818,
											"end": 22829,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22855,
											"end": 22858,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22840,
											"end": 22858,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22840,
											"end": 22858,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22717,
											"end": 22864,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22717,
											"end": 22864,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22717,
											"end": 22864,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22717,
											"end": 22864,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22717,
											"end": 22864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22870,
											"end": 23116,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 22870,
											"end": 23116,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22951,
											"end": 22952,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22961,
											"end": 23074,
											"name": "tag",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 22961,
											"end": 23074,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22975,
											"end": 22981,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22972,
											"end": 22973,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22969,
											"end": 22982,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 22961,
											"end": 23074,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 22961,
											"end": 23074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 22961,
											"end": 23074,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 23060,
											"end": 23061,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 23055,
											"end": 23058,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23051,
											"end": 23062,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23045,
											"end": 23063,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 23041,
											"end": 23042,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23036,
											"end": 23039,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23032,
											"end": 23043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23025,
											"end": 23064,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22997,
											"end": 22999,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22994,
											"end": 22995,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 22990,
											"end": 23000,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22985,
											"end": 23000,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22985,
											"end": 23000,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22961,
											"end": 23074,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 22961,
											"end": 23074,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22961,
											"end": 23074,
											"name": "tag",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 22961,
											"end": 23074,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23108,
											"end": 23109,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23099,
											"end": 23105,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23094,
											"end": 23097,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23090,
											"end": 23106,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23083,
											"end": 23110,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22932,
											"end": 23116,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22870,
											"end": 23116,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22870,
											"end": 23116,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22870,
											"end": 23116,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22870,
											"end": 23116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23122,
											"end": 23508,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 23122,
											"end": 23508,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23226,
											"end": 23229,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23254,
											"end": 23292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 23286,
											"end": 23291,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23254,
											"end": 23292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "308"
										},
										{
											"begin": 23254,
											"end": 23292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23254,
											"end": 23292,
											"name": "tag",
											"source": 13,
											"value": "518"
										},
										{
											"begin": 23254,
											"end": 23292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23308,
											"end": 23396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 23389,
											"end": 23395,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23384,
											"end": 23387,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 23308,
											"end": 23396,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 23308,
											"end": 23396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23308,
											"end": 23396,
											"name": "tag",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 23308,
											"end": 23396,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23301,
											"end": 23396,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 23301,
											"end": 23396,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23405,
											"end": 23470,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 23463,
											"end": 23469,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23458,
											"end": 23461,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 23451,
											"end": 23455,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23444,
											"end": 23449,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 23440,
											"end": 23456,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23405,
											"end": 23470,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 23405,
											"end": 23470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23405,
											"end": 23470,
											"name": "tag",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 23405,
											"end": 23470,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23495,
											"end": 23501,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 23490,
											"end": 23493,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23486,
											"end": 23502,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23479,
											"end": 23502,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23479,
											"end": 23502,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23230,
											"end": 23508,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23122,
											"end": 23508,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 23122,
											"end": 23508,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23122,
											"end": 23508,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23122,
											"end": 23508,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23122,
											"end": 23508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23514,
											"end": 23785,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 23514,
											"end": 23785,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23644,
											"end": 23647,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23666,
											"end": 23759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 23755,
											"end": 23758,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23746,
											"end": 23752,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23666,
											"end": 23759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 23666,
											"end": 23759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23666,
											"end": 23759,
											"name": "tag",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 23666,
											"end": 23759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23659,
											"end": 23759,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23659,
											"end": 23759,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23776,
											"end": 23779,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23769,
											"end": 23779,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23769,
											"end": 23779,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23514,
											"end": 23785,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 23514,
											"end": 23785,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23514,
											"end": 23785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23514,
											"end": 23785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23514,
											"end": 23785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23791,
											"end": 23970,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 23791,
											"end": 23970,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23931,
											"end": 23962,
											"name": "PUSH",
											"source": 13,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 23927,
											"end": 23928,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23919,
											"end": 23925,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23915,
											"end": 23929,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23908,
											"end": 23963,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23791,
											"end": 23970,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23791,
											"end": 23970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23976,
											"end": 24342,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 23976,
											"end": 24342,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24118,
											"end": 24121,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24139,
											"end": 24206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 24203,
											"end": 24205,
											"name": "PUSH",
											"source": 13,
											"value": "1D"
										},
										{
											"begin": 24198,
											"end": 24201,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24139,
											"end": 24206,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 24139,
											"end": 24206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24139,
											"end": 24206,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 24139,
											"end": 24206,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24132,
											"end": 24206,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24132,
											"end": 24206,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24215,
											"end": 24308,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 24304,
											"end": 24307,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24215,
											"end": 24308,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 24215,
											"end": 24308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24215,
											"end": 24308,
											"name": "tag",
											"source": 13,
											"value": "526"
										},
										{
											"begin": 24215,
											"end": 24308,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24333,
											"end": 24335,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24328,
											"end": 24331,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24324,
											"end": 24336,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24317,
											"end": 24336,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24317,
											"end": 24336,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23976,
											"end": 24342,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 23976,
											"end": 24342,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23976,
											"end": 24342,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23976,
											"end": 24342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24348,
											"end": 24767,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 24348,
											"end": 24767,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24514,
											"end": 24518,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24552,
											"end": 24554,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24541,
											"end": 24550,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24537,
											"end": 24555,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24529,
											"end": 24555,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24529,
											"end": 24555,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24601,
											"end": 24610,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24595,
											"end": 24599,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24591,
											"end": 24611,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 24587,
											"end": 24588,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24576,
											"end": 24585,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24572,
											"end": 24589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24565,
											"end": 24612,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 24629,
											"end": 24760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 24755,
											"end": 24759,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24629,
											"end": 24760,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 24629,
											"end": 24760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24629,
											"end": 24760,
											"name": "tag",
											"source": 13,
											"value": "528"
										},
										{
											"begin": 24629,
											"end": 24760,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24621,
											"end": 24760,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24621,
											"end": 24760,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24348,
											"end": 24767,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24348,
											"end": 24767,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24348,
											"end": 24767,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24348,
											"end": 24767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24773,
											"end": 24872,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 24773,
											"end": 24872,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24825,
											"end": 24831,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24859,
											"end": 24864,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 24853,
											"end": 24865,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 24843,
											"end": 24865,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24843,
											"end": 24865,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24773,
											"end": 24872,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24773,
											"end": 24872,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24773,
											"end": 24872,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24773,
											"end": 24872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24878,
											"end": 24980,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 24878,
											"end": 24980,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24919,
											"end": 24925,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24970,
											"end": 24972,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 24966,
											"end": 24973,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 24961,
											"end": 24963,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 24954,
											"end": 24959,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24950,
											"end": 24964,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24946,
											"end": 24974,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 24936,
											"end": 24974,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24936,
											"end": 24974,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24878,
											"end": 24980,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24878,
											"end": 24980,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24878,
											"end": 24980,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24878,
											"end": 24980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24986,
											"end": 25363,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 24986,
											"end": 25363,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25074,
											"end": 25077,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25102,
											"end": 25141,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 25135,
											"end": 25140,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25102,
											"end": 25141,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 25102,
											"end": 25141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25102,
											"end": 25141,
											"name": "tag",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 25102,
											"end": 25141,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25157,
											"end": 25228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 25221,
											"end": 25227,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25216,
											"end": 25219,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 25157,
											"end": 25228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 25157,
											"end": 25228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25157,
											"end": 25228,
											"name": "tag",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 25157,
											"end": 25228,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25150,
											"end": 25228,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 25150,
											"end": 25228,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25237,
											"end": 25302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 25295,
											"end": 25301,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25290,
											"end": 25293,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 25283,
											"end": 25287,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 25276,
											"end": 25281,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 25272,
											"end": 25288,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25237,
											"end": 25302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 25237,
											"end": 25302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25237,
											"end": 25302,
											"name": "tag",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 25237,
											"end": 25302,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25327,
											"end": 25356,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 25349,
											"end": 25355,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25327,
											"end": 25356,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 25327,
											"end": 25356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25327,
											"end": 25356,
											"name": "tag",
											"source": 13,
											"value": "535"
										},
										{
											"begin": 25327,
											"end": 25356,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25322,
											"end": 25325,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 25318,
											"end": 25357,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25311,
											"end": 25357,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25311,
											"end": 25357,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25078,
											"end": 25363,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24986,
											"end": 25363,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 24986,
											"end": 25363,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 24986,
											"end": 25363,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24986,
											"end": 25363,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24986,
											"end": 25363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25369,
											"end": 25682,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 25369,
											"end": 25682,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25482,
											"end": 25486,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25520,
											"end": 25522,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 25509,
											"end": 25518,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 25505,
											"end": 25523,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25497,
											"end": 25523,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25497,
											"end": 25523,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25569,
											"end": 25578,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25563,
											"end": 25567,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25559,
											"end": 25579,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 25555,
											"end": 25556,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 25544,
											"end": 25553,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 25540,
											"end": 25557,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 25533,
											"end": 25580,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 25597,
											"end": 25675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 25670,
											"end": 25674,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 25661,
											"end": 25667,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 25597,
											"end": 25675,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 25597,
											"end": 25675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 25597,
											"end": 25675,
											"name": "tag",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 25597,
											"end": 25675,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 25589,
											"end": 25675,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 25589,
											"end": 25675,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25369,
											"end": 25682,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 25369,
											"end": 25682,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 25369,
											"end": 25682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25369,
											"end": 25682,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 25369,
											"end": 25682,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Defly/IIERC721.sol",
								"contracts/Defly/NFTStakingStart.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"AdminAddToken(uint256)": "c0cd40ee",
							"ERC20Address()": "a6021ace",
							"ERC721address()": "b7171a2e",
							"Staker(address)": "b4e929d4",
							"TotalRemaningToken()": "4930e5d1",
							"category1()": "3f431230",
							"category2()": "b10558ab",
							"category3()": "f7d252f4",
							"category4()": "41fcd29a",
							"deposit(uint256,uint256)": "e2bbb158",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(address)": "51cff8d9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ERC721address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_ERC20Address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"AdminAddToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERC20Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ERC721address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Staker\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"day\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"StartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"NFT\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"DepositToken\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TotalRemaningToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"category1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"category2\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"category3\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"category4\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"TokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Days\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Defly/NFTStakingStart.sol\":\"NFTStaking\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Defly/IIERC721.sol\":{\"keccak256\":\"0xef5ff57a7808b26072a271617baa5af1bf24bfe0004f04d84046b7be0867e086\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c5a4af92092f5fe055d6194aef29e64ab9201b19707c9103fc0ed67c313d3fc\",\"dweb:/ipfs/Qmay9egwhxDa8mGNgkohchRxkmuRz7v6KEnpPfswaMVTUa\"]},\"contracts/Defly/NFTStakingStart.sol\":{\"keccak256\":\"0xed73dbc01c360002b8826ce39c5709e791c20f08debdb814cda2d8e2c3128fca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cff6c34e996ff5ff31aeaa94955999578f6bc15cb3e2f1568a993121e0eff2cc\",\"dweb:/ipfs/QmW5FbzwnXSkwrZRHvn5wsTf2xQciKHFK1SpmyFa6LnPLh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/Defly/NFTStakingStart.sol:NFTStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1149,
								"contract": "contracts/Defly/NFTStakingStart.sol:NFTStaking",
								"label": "category1",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(Counter)1030_storage"
							},
							{
								"astId": 1152,
								"contract": "contracts/Defly/NFTStakingStart.sol:NFTStaking",
								"label": "category2",
								"offset": 0,
								"slot": "2",
								"type": "t_struct(Counter)1030_storage"
							},
							{
								"astId": 1155,
								"contract": "contracts/Defly/NFTStakingStart.sol:NFTStaking",
								"label": "category3",
								"offset": 0,
								"slot": "3",
								"type": "t_struct(Counter)1030_storage"
							},
							{
								"astId": 1158,
								"contract": "contracts/Defly/NFTStakingStart.sol:NFTStaking",
								"label": "category4",
								"offset": 0,
								"slot": "4",
								"type": "t_struct(Counter)1030_storage"
							},
							{
								"astId": 1160,
								"contract": "contracts/Defly/NFTStakingStart.sol:NFTStaking",
								"label": "ERC721address",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1162,
								"contract": "contracts/Defly/NFTStakingStart.sol:NFTStaking",
								"label": "ERC20Address",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 1164,
								"contract": "contracts/Defly/NFTStakingStart.sol:NFTStaking",
								"label": "TotalRemaningToken",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1180,
								"contract": "contracts/Defly/NFTStakingStart.sol:NFTStaking",
								"label": "Staker",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_struct(Detail)1175_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(Detail)1175_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct NFTStaking.Detail)",
								"numberOfBytes": "32",
								"value": "t_struct(Detail)1175_storage"
							},
							"t_struct(Counter)1030_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1029,
										"contract": "contracts/Defly/NFTStakingStart.sol:NFTStaking",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(Detail)1175_storage": {
								"encoding": "inplace",
								"label": "struct NFTStaking.Detail",
								"members": [
									{
										"astId": 1166,
										"contract": "contracts/Defly/NFTStakingStart.sol:NFTStaking",
										"label": "tokens",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1168,
										"contract": "contracts/Defly/NFTStakingStart.sol:NFTStaking",
										"label": "day",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1170,
										"contract": "contracts/Defly/NFTStakingStart.sol:NFTStaking",
										"label": "StartTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1172,
										"contract": "contracts/Defly/NFTStakingStart.sol:NFTStaking",
										"label": "NFT",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1174,
										"contract": "contracts/Defly/NFTStakingStart.sol:NFTStaking",
										"label": "DepositToken",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1024
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 1025,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1024,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								1024
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1875:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2141:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							190
						]
					},
					"id": 191,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 190,
							"linearizedBaseContracts": [
								190
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 124,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 125,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 133,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 139,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 190,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 190,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 157,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 190,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 190,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 190,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 190,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 191,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							226
						]
					},
					"id": 227,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 192,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 193,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:2",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 226,
							"linearizedBaseContracts": [
								226
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:2",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1455:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1479:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1471:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1494:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1519:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1550:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1542:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1574:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1568:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 203,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1593:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1585:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 205,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1612:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1604:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 207,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:2"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:2"
									},
									"scope": 226,
									"src": "1446:183:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:2",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1943:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1958:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1950:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:2"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "1988:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:2"
									},
									"scope": 226,
									"src": "1934:63:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:2",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 225,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2198:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "2240:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 222,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:2"
									},
									"scope": 226,
									"src": "2189:60:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 227,
							"src": "620:1631:2",
							"usedErrors": []
						}
					],
					"src": "114:2138:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1002
						],
						"IERC20": [
							190
						],
						"IERC20Permit": [
							226
						],
						"SafeERC20": [
							507
						]
					},
					"id": 508,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 228,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 229,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 508,
							"sourceUnit": 191,
							"src": "140:23:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 230,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 508,
							"sourceUnit": 227,
							"src": "164:46:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 231,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 508,
							"sourceUnit": 1003,
							"src": "211:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 232,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:3",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 507,
							"linearizedBaseContracts": [
								507
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 235,
									"libraryName": {
										"id": 233,
										"name": "Address",
										"nameLocations": [
											"737:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1002,
										"src": "737:7:3"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:3",
									"typeName": {
										"id": 234,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 257,
										"nodeType": "Block",
										"src": "865:103:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 246,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 238,
															"src": "895:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 249,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 238,
																			"src": "925:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "931:8:3",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 157,
																		"src": "925:14:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "940:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 252,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 240,
																	"src": "950:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 253,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "954:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 247,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "906:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 245,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "875:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "875:86:3"
											}
										]
									},
									"id": 258,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "772:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "801:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "794:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 237,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 236,
														"name": "IERC20",
														"nameLocations": [
															"794:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "794:6:3"
													},
													"referencedDeclaration": 190,
													"src": "794:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "824:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "816:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "844:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "836:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:3"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:3"
									},
									"scope": 507,
									"src": "763:205:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 283,
										"nodeType": "Block",
										"src": "1102:113:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 271,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "1132:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 274,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 261,
																			"src": "1162:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1168:12:3",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 189,
																		"src": "1162:18:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1181:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 277,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "1191:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 278,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 265,
																	"src": "1197:2:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 279,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 267,
																	"src": "1201:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 272,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1143:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 270,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "1112:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 282,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:3"
											}
										]
									},
									"id": 284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "983:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1016:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1009:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 260,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 259,
														"name": "IERC20",
														"nameLocations": [
															"1009:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "1009:6:3"
													},
													"referencedDeclaration": 190,
													"src": "1009:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1039:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1031:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1053:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1073:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:3"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:3"
									},
									"scope": 507,
									"src": "974:241:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "1581:497:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 296,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 292,
																			"src": "1830:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 299,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 304,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:3",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$507",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$507",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 303,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 302,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:3",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 305,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:3",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 306,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 290,
																					"src": "1877:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 300,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 288,
																					"src": "1846:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$190",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 301,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1852:9:3",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 167,
																				"src": "1846:15:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 310,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 316,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "2001:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 319,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 288,
																			"src": "2031:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2037:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 177,
																		"src": "2031:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2045:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 322,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 290,
																	"src": "2055:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 323,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "2064:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 317,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2012:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 315,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "1981:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:3"
											}
										]
									},
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:3",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1484:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1512:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1505:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 287,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 286,
														"name": "IERC20",
														"nameLocations": [
															"1505:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "1505:6:3"
													},
													"referencedDeclaration": 190,
													"src": "1505:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1535:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1527:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1560:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "1552:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:3"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:3"
									},
									"scope": 507,
									"src": "1475:603:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "2200:194:3",
										"statements": [
											{
												"assignments": [
													339
												],
												"declarations": [
													{
														"constant": false,
														"id": 339,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2218:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 363,
														"src": "2210:20:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 338,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 350,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 344,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$507",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$507",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 342,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 346,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 333,
																"src": "2264:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 340,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 331,
																"src": "2233:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$190",
																	"typeString": "contract IERC20"
																}
															},
															"id": 341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2239:9:3",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 167,
															"src": "2233:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 347,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 348,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "2275:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 352,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "2310:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 355,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 331,
																			"src": "2340:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$190",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2346:7:3",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 177,
																		"src": "2340:13:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2354:8:3",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 358,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 333,
																	"src": "2364:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 359,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 339,
																	"src": "2373:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 353,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 354,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2321:18:3",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 351,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "2290:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:3"
											}
										]
									},
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2093:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2131:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2124:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 330,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 329,
														"name": "IERC20",
														"nameLocations": [
															"2124:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "2124:6:3"
													},
													"referencedDeclaration": 190,
													"src": "2124:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2154:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2146:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2171:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:3"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:3"
									},
									"scope": 507,
									"src": "2084:310:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "2516:370:3",
										"statements": [
											{
												"id": 410,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:3",
												"statements": [
													{
														"assignments": [
															375
														],
														"declarations": [
															{
																"constant": false,
																"id": 375,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2558:12:3",
																"nodeType": "VariableDeclaration",
																"scope": 410,
																"src": "2550:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 374,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 384,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 380,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$507",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$507",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 379,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 378,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 382,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "2604:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 376,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "2573:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2579:9:3",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 167,
																"src": "2573:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 386,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 375,
																		"src": "2634:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 387,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 371,
																		"src": "2650:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 385,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 391,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:3"
													},
													{
														"assignments": [
															393
														],
														"declarations": [
															{
																"constant": false,
																"id": 393,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:3",
																"nodeType": "VariableDeclaration",
																"scope": 410,
																"src": "2715:20:3",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 392,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 397,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 394,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "2738:12:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 395,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "2753:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:3"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 399,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 367,
																	"src": "2792:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 402,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 367,
																					"src": "2822:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$190",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 403,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2828:7:3",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 177,
																				"src": "2822:13:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2836:8:3",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 405,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 369,
																			"src": "2846:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 406,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 393,
																			"src": "2855:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 400,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2803:18:3",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 398,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 506,
																"src": "2772:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 409,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:3"
													}
												]
											}
										]
									},
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2409:21:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2447:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2440:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 366,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 365,
														"name": "IERC20",
														"nameLocations": [
															"2440:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "2440:6:3"
													},
													"referencedDeclaration": 190,
													"src": "2440:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2470:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2462:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2495:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2487:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:3"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:3"
									},
									"scope": 507,
									"src": "2400:486:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "3107:257:3",
										"statements": [
											{
												"assignments": [
													433
												],
												"declarations": [
													{
														"constant": false,
														"id": 433,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3125:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 467,
														"src": "3117:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 432,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [
														{
															"id": 436,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "3152:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 434,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "3139:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$226",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 435,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3145:6:3",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 219,
														"src": "3139:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "3181:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 419,
															"src": "3188:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "3197:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 445,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "3204:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 446,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "3214:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 447,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "3217:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 448,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "3220:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "3168:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$226",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3174:6:3",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 211,
														"src": "3168:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:3"
											},
											{
												"assignments": [
													452
												],
												"declarations": [
													{
														"constant": false,
														"id": 452,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3240:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 467,
														"src": "3232:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 451,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 457,
												"initialValue": {
													"arguments": [
														{
															"id": 455,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 417,
															"src": "3266:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 453,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "3253:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$226",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3259:6:3",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 219,
														"src": "3253:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 459,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "3290:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 460,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 433,
																	"src": "3304:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 458,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 466,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:3"
											}
										]
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2901:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2934:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2921:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$226",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 414,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 413,
														"name": "IERC20Permit",
														"nameLocations": [
															"2921:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 226,
														"src": "2921:12:3"
													},
													"referencedDeclaration": 226,
													"src": "2921:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$226",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2949:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2972:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3005:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "2997:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3028:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "3020:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3052:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "3046:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 424,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3071:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "3063:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 426,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3090:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 468,
												"src": "3082:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 428,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:3"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:3"
									},
									"scope": 507,
									"src": "2892:472:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "3817:636:3",
										"statements": [
											{
												"assignments": [
													478
												],
												"declarations": [
													{
														"constant": false,
														"id": 478,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4179:10:3",
														"nodeType": "VariableDeclaration",
														"scope": 505,
														"src": "4166:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 477,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 487,
												"initialValue": {
													"arguments": [
														{
															"id": 484,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "4220:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 481,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "4200:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$190",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 479,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4207:12:3",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 762,
														"src": "4192:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 488,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "4275:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4286:6:3",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "IfStatement",
												"src": "4271:176:3",
												"trueBody": {
													"id": 503,
													"nodeType": "Block",
													"src": "4298:149:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 495,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 478,
																				"src": "4370:10:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 497,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:3",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 496,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:3",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 498,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 493,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4363:6:3",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 492,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 502,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:3",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3756:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3783:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "3776:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$190",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 471,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 470,
														"name": "IERC20",
														"nameLocations": [
															"3776:6:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 190,
														"src": "3776:6:3"
													},
													"referencedDeclaration": 190,
													"src": "3776:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$190",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3803:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "3790:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:3"
									},
									"returnParameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:3"
									},
									"scope": 507,
									"src": "3747:706:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 508,
							"src": "707:3748:3",
							"usedErrors": []
						}
					],
					"src": "115:4341:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1110
						],
						"IERC721": [
							623
						]
					},
					"id": 624,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 509,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 510,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 624,
							"sourceUnit": 1111,
							"src": "133:47:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 512,
										"name": "IERC165",
										"nameLocations": [
											"271:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1110,
										"src": "271:7:4"
									},
									"id": 513,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:4"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 511,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 623,
							"linearizedBaseContracts": [
								623,
								1110
							],
							"name": "IERC721",
							"nameLocation": "260:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 522,
									"name": "Transfer",
									"nameLocation": "384:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "393:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "415:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "435:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:4"
									},
									"src": "378:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 531,
									"name": "Approval",
									"nameLocation": "571:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "580:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "603:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "629:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:4"
									},
									"src": "565:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 540,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "803:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "826:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 538,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "852:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 537,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:4"
									},
									"src": "782:85:4"
								},
								{
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 548,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "973:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:4"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1011:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:4"
									},
									"scope": 623,
									"src": "954:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "1187:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:4"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "1227:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:4"
									},
									"scope": 623,
									"src": "1170:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1844:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1866:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1886:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1911:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:4"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:4"
									},
									"scope": 623,
									"src": "1809:137:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 578,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "2679:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "2701:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "2721:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:4"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:4"
									},
									"scope": 623,
									"src": "2644:108:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "2758:732:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 588,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3504:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3534:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "3526:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3526:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3556:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "3548:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3548:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3576:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "3568:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3568:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3516:73:4"
									},
									"returnParameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3598:0:4"
									},
									"scope": 623,
									"src": "3495:104:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "3605:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4071:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4087:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "4079:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4099:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "4091:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4091:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4078:29:4"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4116:0:4"
									},
									"scope": 623,
									"src": "4062:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "4123:309:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4446:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4472:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "4464:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4464:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4487:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "4482:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 600,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4482:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4463:34:4"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4506:0:4"
									},
									"scope": 623,
									"src": "4437:70:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "4513:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4666:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4686:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "4678:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4678:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4677:17:4"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4726:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "4718:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4718:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4717:18:4"
									},
									"scope": 623,
									"src": "4657:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "4742:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4894:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4919:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "4911:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4911:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4934:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "4926:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4926:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4910:33:4"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "4967:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 619,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4967:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4966:6:4"
									},
									"scope": 623,
									"src": "4885:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 624,
							"src": "250:4725:4",
							"usedErrors": []
						}
					],
					"src": "108:4868:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							641
						]
					},
					"id": 642,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 625,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 626,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:5",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 641,
							"linearizedBaseContracts": [
								641
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 627,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:5",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "859:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "885:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "907:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "932:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:5"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "976:6:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 637,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:5"
									},
									"scope": 641,
									"src": "824:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 642,
							"src": "294:692:5",
							"usedErrors": []
						}
					],
					"src": "116:871:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC165": [
							1110
						],
						"IERC721": [
							623
						],
						"IERC721Enumerable": [
							672
						]
					},
					"id": 673,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 643,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "129:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 644,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 673,
							"sourceUnit": 624,
							"src": "154:24:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 646,
										"name": "IERC721",
										"nameLocations": [
											"348:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 623,
										"src": "348:7:6"
									},
									"id": 647,
									"nodeType": "InheritanceSpecifier",
									"src": "348:7:6"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 645,
								"nodeType": "StructuredDocumentation",
								"src": "180:136:6",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 672,
							"linearizedBaseContracts": [
								672,
								623,
								1110
							],
							"name": "IERC721Enumerable",
							"nameLocation": "327:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 648,
										"nodeType": "StructuredDocumentation",
										"src": "362:82:6",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 653,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "458:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "469:2:6"
									},
									"returnParameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 653,
												"src": "495:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:9:6"
									},
									"scope": 672,
									"src": "449:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "510:171:6",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 663,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "695:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "723:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "715:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "738:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "730:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:30:6"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "768:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "767:9:6"
									},
									"scope": 672,
									"src": "686:91:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "783:164:6",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 671,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "961:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "982:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "974:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "973:15:6"
									},
									"returnParameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "1012:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1012:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1011:9:6"
									},
									"scope": 672,
									"src": "952:69:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 673,
							"src": "317:706:6",
							"usedErrors": []
						}
					],
					"src": "129:895:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1002
						]
					},
					"id": 1003,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 674,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 675,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1002,
							"linearizedBaseContracts": [
								1002
							],
							"name": "Address",
							"nameLocation": "202:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "1241:254:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 683,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "1465:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 682,
												"id": 688,
												"nodeType": "Return",
												"src": "1458:30:7"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:7",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "1195:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:7"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "1235:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 680,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:7"
									},
									"scope": 1002,
									"src": "1175:320:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "2483:241:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 701,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1002",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1002",
																				"typeString": "library Address"
																			}
																		],
																		"id": 700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 699,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 702,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 704,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "2526:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 698,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 708,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:7"
											},
											{
												"assignments": [
													710,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 710,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 723,
														"src": "2578:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 709,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 717,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 711,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "2596:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 713,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 695,
																"src": "2618:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 719,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "2647:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 718,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:7"
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "2431:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "2458:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:7"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:7"
									},
									"scope": 1002,
									"src": "2412:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "3555:96:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 735,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "3594:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "3602:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 734,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															782,
															826
														],
														"referencedDeclaration": 826,
														"src": "3572:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 733,
												"id": 740,
												"nodeType": "Return",
												"src": "3565:79:7"
											}
										]
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "3488:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "3504:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 728,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:7"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "3541:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 731,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:7"
									},
									"scope": 1002,
									"src": "3466:185:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "4020:76:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 755,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 745,
															"src": "4059:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "4067:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 758,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "4076:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 754,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															782,
															826
														],
														"referencedDeclaration": 826,
														"src": "4037:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 753,
												"id": 760,
												"nodeType": "Return",
												"src": "4030:59:7"
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "3904:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "3928:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 746,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "3955:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 748,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:7"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "4006:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 751,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:7"
									},
									"scope": 1002,
									"src": "3873:223:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 781,
										"nodeType": "Block",
										"src": "4601:111:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 775,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "4640:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 776,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "4648:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 777,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "4654:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 774,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															782,
															826
														],
														"referencedDeclaration": 826,
														"src": "4618:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 773,
												"id": 780,
												"nodeType": "Return",
												"src": "4611:94:7"
											}
										]
									},
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "4498:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "4522:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 766,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "4549:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:7"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "4587:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 771,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:7"
									},
									"scope": 1002,
									"src": "4458:254:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "5139:267:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 799,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1002",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1002",
																				"typeString": "library Address"
																			}
																		],
																		"id": 798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 797,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 800,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5171:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 802,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "5182:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 796,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:7"
											},
											{
												"assignments": [
													808,
													810
												],
												"declarations": [
													{
														"constant": false,
														"id": 808,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 825,
														"src": "5241:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 807,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 810,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 825,
														"src": "5255:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 809,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 817,
												"initialValue": {
													"arguments": [
														{
															"id": 815,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "5308:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 811,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 785,
																"src": "5282:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 813,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 789,
																"src": "5301:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 819,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "5357:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "5365:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 821,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "5374:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 822,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "5386:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 818,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "5330:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 795,
												"id": 824,
												"nodeType": "Return",
												"src": "5323:76:7"
											}
										]
									},
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:7",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "5000:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "5024:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 786,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "5051:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "5074:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 790,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:7"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "5125:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:7"
									},
									"scope": 1002,
									"src": "4960:446:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "5683:97:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 837,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 829,
															"src": "5719:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 838,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "5727:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 836,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															843,
															872
														],
														"referencedDeclaration": 872,
														"src": "5700:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 835,
												"id": 841,
												"nodeType": "Return",
												"src": "5693:80:7"
											}
										]
									},
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "5611:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "5627:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 830,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:7"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "5669:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 833,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:7"
									},
									"scope": 1002,
									"src": "5583:197:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 871,
										"nodeType": "Block",
										"src": "6122:168:7",
										"statements": [
											{
												"assignments": [
													856,
													858
												],
												"declarations": [
													{
														"constant": false,
														"id": 856,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "6133:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 855,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 858,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 871,
														"src": "6147:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 857,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 863,
												"initialValue": {
													"arguments": [
														{
															"id": 861,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "6192:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 859,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "6174:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6181:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 865,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "6241:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "6249:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 867,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "6258:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 868,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "6270:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 864,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "6214:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 854,
												"id": 870,
												"nodeType": "Return",
												"src": "6207:76:7"
											}
										]
									},
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "6001:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "6025:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 847,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "6052:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 849,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:7"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "6108:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 852,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:7"
									},
									"scope": 1002,
									"src": "5964:326:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 888,
										"nodeType": "Block",
										"src": "6566:101:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 883,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "6604:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 884,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "6612:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 882,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															889,
															918
														],
														"referencedDeclaration": 918,
														"src": "6583:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 881,
												"id": 887,
												"nodeType": "Return",
												"src": "6576:84:7"
											}
										]
									},
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "6499:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "6515:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 876,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:7"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 889,
												"src": "6552:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 879,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:7"
									},
									"scope": 1002,
									"src": "6469:198:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "7008:170:7",
										"statements": [
											{
												"assignments": [
													902,
													904
												],
												"declarations": [
													{
														"constant": false,
														"id": 902,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 917,
														"src": "7019:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 901,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 904,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 917,
														"src": "7033:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 903,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 909,
												"initialValue": {
													"arguments": [
														{
															"id": 907,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 894,
															"src": "7080:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 905,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "7060:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 906,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7067:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 911,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "7129:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 912,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "7137:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 913,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "7146:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 914,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "7158:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 910,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "7102:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 900,
												"id": 916,
												"nodeType": "Return",
												"src": "7095:76:7"
											}
										]
									},
									"documentation": {
										"id": 890,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "6892:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "6916:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 893,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "6943:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 895,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:7"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "6994:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 898,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:7"
									},
									"scope": 1002,
									"src": "6853:325:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "7660:434:7",
										"statements": [
											{
												"condition": {
													"id": 932,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 923,
													"src": "7674:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 954,
													"nodeType": "Block",
													"src": "8030:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 950,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 925,
																		"src": "8052:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 951,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 927,
																		"src": "8064:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 949,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "8044:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 953,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:7"
														}
													]
												},
												"id": 955,
												"nodeType": "IfStatement",
												"src": "7670:418:7",
												"trueBody": {
													"id": 948,
													"nodeType": "Block",
													"src": "7683:341:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 933,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 925,
																		"src": "7701:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7712:6:7",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 945,
															"nodeType": "IfStatement",
															"src": "7697:286:7",
															"trueBody": {
																"id": 944,
																"nodeType": "Block",
																"src": "7725:258:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 939,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 921,
																							"src": "7927:6:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 938,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 690,
																						"src": "7916:10:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 940,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 941,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 937,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 943,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 946,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "8003:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 931,
															"id": 947,
															"nodeType": "Return",
															"src": "7996:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "7511:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "7535:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 922,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "7557:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 924,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "7590:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 926,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:7"
									},
									"returnParameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "7646:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 929,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:7"
									},
									"scope": 1002,
									"src": "7466:628:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "8475:135:7",
										"statements": [
											{
												"condition": {
													"id": 969,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 960,
													"src": "8489:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "8546:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 974,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 962,
																		"src": "8568:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 975,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 964,
																		"src": "8580:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 973,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "8560:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 977,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:7"
														}
													]
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "8485:119:7",
												"trueBody": {
													"id": 972,
													"nodeType": "Block",
													"src": "8498:42:7",
													"statements": [
														{
															"expression": {
																"id": 970,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "8519:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 968,
															"id": 971,
															"nodeType": "Return",
															"src": "8512:17:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:7",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "8350:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 959,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "8372:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 961,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "8405:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 963,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:7"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "8461:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 966,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:7"
									},
									"scope": 1002,
									"src": "8315:295:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "8699:457:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 988,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "8775:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 989,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8786:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 998,
													"nodeType": "Block",
													"src": "9105:45:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 995,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "9126:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 994,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 997,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:7"
														}
													]
												},
												"id": 999,
												"nodeType": "IfStatement",
												"src": "8771:379:7",
												"trueBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "8798:301:7",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:7",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:7"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 983,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 983,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:7",
																	"valueSize": 1
																}
															],
															"id": 992,
															"nodeType": "InlineAssembly",
															"src": "8947:142:7"
														}
													]
												}
											}
										]
									},
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "8633:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "8658:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 984,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:7"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:7"
									},
									"scope": 1002,
									"src": "8616:540:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1003,
							"src": "194:8964:7",
							"usedErrors": []
						}
					],
					"src": "101:9058:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1024
						]
					},
					"id": 1025,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1004,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1005,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1024,
							"linearizedBaseContracts": [
								1024
							],
							"name": "Context",
							"nameLocation": "626:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "702:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1010,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1009,
												"id": 1012,
												"nodeType": "Return",
												"src": "712:17:8"
											}
										]
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:8"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "693:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1007,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:8"
									},
									"scope": 1024,
									"src": "640:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1022,
										"nodeType": "Block",
										"src": "809:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1019,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1021,
												"nodeType": "Return",
												"src": "819:15:8"
											}
										]
									},
									"id": 1023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:8"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "793:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1016,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:8"
									},
									"scope": 1024,
									"src": "742:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1025,
							"src": "608:235:8",
							"usedErrors": []
						}
					],
					"src": "86:758:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1098
						]
					},
					"id": 1099,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1026,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1027,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:9",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1098,
							"linearizedBaseContracts": [
								1098
							],
							"name": "Counters",
							"nameLocation": "432:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1030,
									"members": [
										{
											"constant": false,
											"id": 1029,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 1030,
											"src": "786:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1028,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:9",
									"nodeType": "StructDefinition",
									"scope": 1098,
									"src": "447:374:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1041,
										"nodeType": "Block",
										"src": "901:38:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1038,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1033,
														"src": "918:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1030_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:9",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1029,
													"src": "918:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1037,
												"id": 1040,
												"nodeType": "Return",
												"src": "911:21:9"
											}
										]
									},
									"id": 1042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "844:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1030_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1032,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1031,
														"name": "Counter",
														"nameLocations": [
															"844:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1030,
														"src": "844:7:9"
													},
													"referencedDeclaration": 1030,
													"src": "844:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1030_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:9"
									},
									"returnParameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "892:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:9"
									},
									"scope": 1098,
									"src": "827:112:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1055,
										"nodeType": "Block",
										"src": "998:70:9",
										"statements": [
											{
												"id": 1054,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:9",
												"statements": [
													{
														"expression": {
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1048,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "1032:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1030_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1050,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:9",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1029,
																"src": "1032:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1053,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:9"
													}
												]
											}
										]
									},
									"id": 1056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "964:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1030_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1044,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1043,
														"name": "Counter",
														"nameLocations": [
															"964:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1030,
														"src": "964:7:9"
													},
													"referencedDeclaration": 1030,
													"src": "964:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1030_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:9"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:9"
									},
									"scope": 1098,
									"src": "945:123:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "1127:176:9",
										"statements": [
											{
												"assignments": [
													1063
												],
												"declarations": [
													{
														"constant": false,
														"id": 1063,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1083,
														"src": "1137:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1062,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1066,
												"initialValue": {
													"expression": {
														"id": 1064,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1059,
														"src": "1153:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1030_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1065,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:9",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1029,
													"src": "1153:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1068,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "1185:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1067,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1073,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:9"
											},
											{
												"id": 1082,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:9",
												"statements": [
													{
														"expression": {
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1074,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1059,
																	"src": "1260:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1030_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:9",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1029,
																"src": "1260:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1077,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "1277:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1081,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:9"
													}
												]
											}
										]
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "1093:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1030_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1058,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1057,
														"name": "Counter",
														"nameLocations": [
															"1093:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1030,
														"src": "1093:7:9"
													},
													"referencedDeclaration": 1030,
													"src": "1093:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1030_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:9"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:9"
									},
									"scope": 1098,
									"src": "1074:229:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "1358:35:9",
										"statements": [
											{
												"expression": {
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1090,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "1368:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1030_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1092,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:9",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1029,
														"src": "1368:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:9"
											}
										]
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "1324:23:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1030_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1086,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1085,
														"name": "Counter",
														"nameLocations": [
															"1324:7:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1030,
														"src": "1324:7:9"
													},
													"referencedDeclaration": 1030,
													"src": "1324:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1030_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:9"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:9"
									},
									"scope": 1098,
									"src": "1309:84:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1099,
							"src": "424:971:9",
							"usedErrors": []
						}
					],
					"src": "87:1309:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1110
						]
					},
					"id": 1111,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1100,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1101,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:10",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1110,
							"linearizedBaseContracts": [
								1110
							],
							"name": "IERC165",
							"nameLocation": "415:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "801:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1103,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:10"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "844:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:10"
									},
									"scope": 1110,
									"src": "774:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1111,
							"src": "405:447:10",
							"usedErrors": []
						}
					],
					"src": "100:753:10"
				},
				"id": 10
			},
			"contracts/Defly/IIERC721.sol": {
				"ast": {
					"absolutePath": "contracts/Defly/IIERC721.sol",
					"exportedSymbols": {
						"IIERC721": [
							1126
						]
					},
					"id": 1127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1112,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IIERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1113,
								"nodeType": "StructuredDocumentation",
								"src": "59:67:11",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1126,
							"linearizedBaseContracts": [
								1126
							],
							"name": "IIERC721",
							"nameLocation": "137:8:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "152:76:11",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "64ac7814",
									"id": 1125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeMint",
									"nameLocation": "242:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "259:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "251:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "251:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "277:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "263:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1117,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "263:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "289:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "281:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "281:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "typ",
												"nameLocation": "302:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "296:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1121,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "296:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "250:56:11"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "316:0:11"
									},
									"scope": 1126,
									"src": "233:84:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1127,
							"src": "127:192:11",
							"usedErrors": []
						}
					],
					"src": "33:286:11"
				},
				"id": 11
			},
			"contracts/Defly/NFTStakingStart.sol": {
				"ast": {
					"absolutePath": "contracts/Defly/NFTStakingStart.sol",
					"exportedSymbols": {
						"Address": [
							1002
						],
						"Context": [
							1024
						],
						"Counters": [
							1098
						],
						"IERC165": [
							1110
						],
						"IERC20": [
							190
						],
						"IERC20Permit": [
							226
						],
						"IERC721": [
							623
						],
						"IERC721Enumerable": [
							672
						],
						"IERC721Receiver": [
							641
						],
						"IIERC721": [
							1126
						],
						"NFTStaking": [
							1652
						],
						"Ownable": [
							112
						],
						"SafeERC20": [
							507
						]
					},
					"id": 1653,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1653,
							"sourceUnit": 508,
							"src": "57:65:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1130,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1653,
							"sourceUnit": 113,
							"src": "123:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"id": 1131,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1653,
							"sourceUnit": 673,
							"src": "176:79:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 1132,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1653,
							"sourceUnit": 642,
							"src": "256:66:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 1133,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1653,
							"sourceUnit": 1099,
							"src": "323:52:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/Defly/IIERC721.sol",
							"file": "./IIERC721.sol",
							"id": 1134,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1653,
							"sourceUnit": 1127,
							"src": "376:24:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1135,
										"name": "Ownable",
										"nameLocations": [
											"425:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "425:7:12"
									},
									"id": 1136,
									"nodeType": "InheritanceSpecifier",
									"src": "425:7:12"
								},
								{
									"baseName": {
										"id": 1137,
										"name": "IERC721Receiver",
										"nameLocations": [
											"433:15:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 641,
										"src": "433:15:12"
									},
									"id": 1138,
									"nodeType": "InheritanceSpecifier",
									"src": "433:15:12"
								}
							],
							"canonicalName": "NFTStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1652,
							"linearizedBaseContracts": [
								1652,
								641,
								112,
								1024
							],
							"name": "NFTStaking",
							"nameLocation": "411:10:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1142,
									"libraryName": {
										"id": 1139,
										"name": "SafeERC20",
										"nameLocations": [
											"461:9:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 507,
										"src": "461:9:12"
									},
									"nodeType": "UsingForDirective",
									"src": "455:27:12",
									"typeName": {
										"id": 1141,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1140,
											"name": "IERC20",
											"nameLocations": [
												"475:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 190,
											"src": "475:6:12"
										},
										"referencedDeclaration": 190,
										"src": "475:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$190",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"global": false,
									"id": 1146,
									"libraryName": {
										"id": 1143,
										"name": "Counters",
										"nameLocations": [
											"493:8:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1098,
										"src": "493:8:12"
									},
									"nodeType": "UsingForDirective",
									"src": "487:36:12",
									"typeName": {
										"id": 1145,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1144,
											"name": "Counters.Counter",
											"nameLocations": [
												"506:8:12",
												"515:7:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1030,
											"src": "506:16:12"
										},
										"referencedDeclaration": 1030,
										"src": "506:16:12",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1030_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "3f431230",
									"id": 1149,
									"mutability": "mutable",
									"name": "category1",
									"nameLocation": "552:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 1652,
									"src": "528:33:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1030_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 1148,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1147,
											"name": "Counters.Counter",
											"nameLocations": [
												"528:8:12",
												"537:7:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1030,
											"src": "528:16:12"
										},
										"referencedDeclaration": 1030,
										"src": "528:16:12",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1030_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b10558ab",
									"id": 1152,
									"mutability": "mutable",
									"name": "category2",
									"nameLocation": "591:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 1652,
									"src": "567:33:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1030_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 1151,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1150,
											"name": "Counters.Counter",
											"nameLocations": [
												"567:8:12",
												"576:7:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1030,
											"src": "567:16:12"
										},
										"referencedDeclaration": 1030,
										"src": "567:16:12",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1030_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7d252f4",
									"id": 1155,
									"mutability": "mutable",
									"name": "category3",
									"nameLocation": "630:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 1652,
									"src": "606:33:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1030_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 1154,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1153,
											"name": "Counters.Counter",
											"nameLocations": [
												"606:8:12",
												"615:7:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1030,
											"src": "606:16:12"
										},
										"referencedDeclaration": 1030,
										"src": "606:16:12",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1030_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "41fcd29a",
									"id": 1158,
									"mutability": "mutable",
									"name": "category4",
									"nameLocation": "669:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 1652,
									"src": "645:33:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1030_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 1157,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1156,
											"name": "Counters.Counter",
											"nameLocations": [
												"645:8:12",
												"654:7:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1030,
											"src": "645:16:12"
										},
										"referencedDeclaration": 1030,
										"src": "645:16:12",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1030_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b7171a2e",
									"id": 1160,
									"mutability": "mutable",
									"name": "ERC721address",
									"nameLocation": "699:13:12",
									"nodeType": "VariableDeclaration",
									"scope": 1652,
									"src": "684:28:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1159,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "684:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a6021ace",
									"id": 1162,
									"mutability": "mutable",
									"name": "ERC20Address",
									"nameLocation": "733:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 1652,
									"src": "718:27:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1161,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "718:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4930e5d1",
									"id": 1164,
									"mutability": "mutable",
									"name": "TotalRemaningToken",
									"nameLocation": "766:18:12",
									"nodeType": "VariableDeclaration",
									"scope": 1652,
									"src": "751:33:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1163,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "751:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "NFTStaking.Detail",
									"id": 1175,
									"members": [
										{
											"constant": false,
											"id": 1166,
											"mutability": "mutable",
											"name": "tokens",
											"nameLocation": "818:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 1175,
											"src": "813:11:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1165,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "813:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1168,
											"mutability": "mutable",
											"name": "day",
											"nameLocation": "839:3:12",
											"nodeType": "VariableDeclaration",
											"scope": 1175,
											"src": "834:8:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1167,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "834:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1170,
											"mutability": "mutable",
											"name": "StartTime",
											"nameLocation": "857:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 1175,
											"src": "852:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1169,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "852:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1172,
											"mutability": "mutable",
											"name": "NFT",
											"nameLocation": "881:3:12",
											"nodeType": "VariableDeclaration",
											"scope": 1175,
											"src": "876:8:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1171,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "876:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1174,
											"mutability": "mutable",
											"name": "DepositToken",
											"nameLocation": "899:12:12",
											"nodeType": "VariableDeclaration",
											"scope": 1175,
											"src": "894:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1173,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "894:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Detail",
									"nameLocation": "797:6:12",
									"nodeType": "StructDefinition",
									"scope": 1652,
									"src": "790:128:12",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b4e929d4",
									"id": 1180,
									"mutability": "mutable",
									"name": "Staker",
									"nameLocation": "958:6:12",
									"nodeType": "VariableDeclaration",
									"scope": 1652,
									"src": "923:41:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Detail_$1175_storage_$",
										"typeString": "mapping(address => struct NFTStaking.Detail)"
									},
									"typeName": {
										"id": 1179,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1176,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "932:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "923:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Detail_$1175_storage_$",
											"typeString": "mapping(address => struct NFTStaking.Detail)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1178,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1177,
												"name": "Detail",
												"nameLocations": [
													"943:6:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1175,
												"src": "943:6:12"
											},
											"referencedDeclaration": 1175,
											"src": "943:6:12",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Detail_$1175_storage_ptr",
												"typeString": "struct NFTStaking.Detail"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "1272:85:12",
										"statements": [
											{
												"expression": {
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1187,
														"name": "ERC721address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1160,
														"src": "1282:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1188,
														"name": "_ERC721address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "1298:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1282:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "1282:30:12"
											},
											{
												"expression": {
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1191,
														"name": "ERC20Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "1322:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1192,
														"name": "_ERC20Address",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "1337:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1322:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "1322:28:12"
											}
										]
									},
									"id": 1196,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "_ERC721address",
												"nameLocation": "1233:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "1225:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1225:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "_ERC20Address",
												"nameLocation": "1257:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "1249:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1249:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1224:47:12"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1272:0:12"
									},
									"scope": 1652,
									"src": "1213:144:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1406,
										"nodeType": "Block",
										"src": "1564:1459:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1583:32:12",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1204,
																		"name": "Staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1180,
																		"src": "1584:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Detail_$1175_storage_$",
																			"typeString": "mapping(address => struct NFTStaking.Detail storage ref)"
																		}
																	},
																	"id": 1207,
																	"indexExpression": {
																		"expression": {
																			"id": 1205,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1591:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1206,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1595:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1591:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1584:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Detail_$1175_storage",
																		"typeString": "struct NFTStaking.Detail storage ref"
																	}
																},
																"id": 1208,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1603:12:12",
																"memberName": "DepositToken",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1174,
																"src": "1584:31:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520416c7265616479204465706f736974204e4654",
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1616:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a55098851a0ebd9887a2657839576e0284ebe4317fa572ff82e296dce3b1c332",
																"typeString": "literal_string \"You Already Deposit NFT\""
															},
															"value": "You Already Deposit NFT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a55098851a0ebd9887a2657839576e0284ebe4317fa572ff82e296dce3b1c332",
																"typeString": "literal_string \"You Already Deposit NFT\""
															}
														],
														"id": 1203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1574:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1574:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1212,
												"nodeType": "ExpressionStatement",
												"src": "1574:68:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1213,
														"name": "Days",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "1655:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3135",
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1663:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "1655:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1259,
															"name": "Days",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "1980:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "3330",
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1988:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_30_by_1",
																"typeString": "int_const 30"
															},
															"value": "30"
														},
														"src": "1980:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1305,
																"name": "Days",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1200,
																"src": "2304:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3630",
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2312:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "60"
															},
															"src": "2304:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1351,
																	"name": "Days",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "2629:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "3930",
																	"id": 1352,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2637:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_90_by_1",
																		"typeString": "int_const 90"
																	},
																	"value": "90"
																},
																"src": "2629:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1401,
																"nodeType": "Block",
																"src": "2950:63:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"hexValue": "53656c6c65637420446179732031352c33302c36302c393020212121",
																					"id": 1398,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2971:30:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_0362aadfad75f8d1514bed2241ef9233db5f01322c03768d43f74d86629736b2",
																						"typeString": "literal_string \"Sellect Days 15,30,60,90 !!!\""
																					},
																					"value": "Sellect Days 15,30,60,90 !!!"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_stringliteral_0362aadfad75f8d1514bed2241ef9233db5f01322c03768d43f74d86629736b2",
																						"typeString": "literal_string \"Sellect Days 15,30,60,90 !!!\""
																					}
																				],
																				"id": 1397,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "2964:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2964:38:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1400,
																		"nodeType": "ExpressionStatement",
																		"src": "2964:38:12"
																	}
																]
															},
															"id": 1402,
															"nodeType": "IfStatement",
															"src": "2626:387:12",
															"trueBody": {
																"id": 1396,
																"nodeType": "Block",
																"src": "2640:297:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1354,
																					"name": "category4",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1158,
																					"src": "2654:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Counter_$1030_storage",
																						"typeString": "struct Counters.Counter storage ref"
																					}
																				},
																				"id": 1356,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2664:9:12",
																				"memberName": "increment",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1056,
																				"src": "2654:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1030_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1030_storage_ptr_$",
																					"typeString": "function (struct Counters.Counter storage pointer)"
																				}
																			},
																			"id": 1357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2654:21:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1358,
																		"nodeType": "ExpressionStatement",
																		"src": "2654:21:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1364,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"expression": {
																								"id": 1360,
																								"name": "category4",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1158,
																								"src": "2697:9:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Counter_$1030_storage",
																									"typeString": "struct Counters.Counter storage ref"
																								}
																							},
																							"id": 1361,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "2707:7:12",
																							"memberName": "current",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1042,
																							"src": "2697:17:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1030_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1030_storage_ptr_$",
																								"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																							}
																						},
																						"id": 1362,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "2697:19:12",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<=",
																					"rightExpression": {
																						"hexValue": "323530",
																						"id": 1363,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2719:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_250_by_1",
																							"typeString": "int_const 250"
																						},
																						"value": "250"
																					},
																					"src": "2697:25:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "393020446179732043617465676f72792069732046756c6c20212121",
																					"id": 1365,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2723:30:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_2d8b114046bff8662406d3b79f38e6738d86943825c129f00f84dbdea8ee25b4",
																						"typeString": "literal_string \"90 Days Category is Full !!!\""
																					},
																					"value": "90 Days Category is Full !!!"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_2d8b114046bff8662406d3b79f38e6738d86943825c129f00f84dbdea8ee25b4",
																						"typeString": "literal_string \"90 Days Category is Full !!!\""
																					}
																				],
																				"id": 1359,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "2689:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2689:65:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1367,
																		"nodeType": "ExpressionStatement",
																		"src": "2689:65:12"
																	},
																	{
																		"expression": {
																			"id": 1380,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1368,
																					"name": "Staker",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1180,
																					"src": "2768:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Detail_$1175_storage_$",
																						"typeString": "mapping(address => struct NFTStaking.Detail storage ref)"
																					}
																				},
																				"id": 1371,
																				"indexExpression": {
																					"expression": {
																						"id": 1369,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "2775:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1370,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2779:6:12",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "2775:10:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2768:18:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Detail_$1175_storage",
																					"typeString": "struct NFTStaking.Detail storage ref"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"hexValue": "3137353030",
																						"id": 1373,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2796:5:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_17500_by_1",
																							"typeString": "int_const 17500"
																						},
																						"value": "17500"
																					},
																					{
																						"id": 1374,
																						"name": "Days",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1200,
																						"src": "2802:4:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"expression": {
																							"id": 1375,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "2807:5:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 1376,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2813:9:12",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "2807:15:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 1377,
																						"name": "TokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1198,
																						"src": "2823:7:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"hexValue": "74727565",
																						"id": 1378,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "bool",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2831:4:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						},
																						"value": "true"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_17500_by_1",
																							"typeString": "int_const 17500"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					],
																					"id": 1372,
																					"name": "Detail",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1175,
																					"src": "2789:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_struct$_Detail_$1175_storage_ptr_$",
																						"typeString": "type(struct NFTStaking.Detail storage pointer)"
																					}
																				},
																				"id": 1379,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "structConstructorCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2789:47:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Detail_$1175_memory_ptr",
																					"typeString": "struct NFTStaking.Detail memory"
																				}
																			},
																			"src": "2768:68:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Detail_$1175_storage",
																				"typeString": "struct NFTStaking.Detail storage ref"
																			}
																		},
																		"id": 1381,
																		"nodeType": "ExpressionStatement",
																		"src": "2768:68:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1386,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "2890:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1387,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2894:6:12",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "2890:10:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"id": 1390,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "2909:4:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_NFTStaking_$1652",
																								"typeString": "contract NFTStaking"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_NFTStaking_$1652",
																								"typeString": "contract NFTStaking"
																							}
																						],
																						"id": 1389,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "2901:7:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1388,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "2901:7:12",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1391,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2901:13:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1392,
																					"name": "TokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1198,
																					"src": "2915:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"hexValue": "",
																					"id": 1393,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2923:2:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																						"typeString": "literal_string \"\""
																					},
																					"value": ""
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																						"typeString": "literal_string \"\""
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1383,
																							"name": "ERC721address",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1160,
																							"src": "2858:13:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1382,
																						"name": "IERC721",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 623,
																						"src": "2850:7:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IERC721_$623_$",
																							"typeString": "type(contract IERC721)"
																						}
																					},
																					"id": 1384,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2850:22:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC721_$623",
																						"typeString": "contract IERC721"
																					}
																				},
																				"id": 1385,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2873:16:12",
																				"memberName": "safeTransferFrom",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 568,
																				"src": "2850:39:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,uint256,bytes memory) external"
																				}
																			},
																			"id": 1394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2850:76:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1395,
																		"nodeType": "ExpressionStatement",
																		"src": "2850:76:12"
																	}
																]
															}
														},
														"id": 1403,
														"nodeType": "IfStatement",
														"src": "2301:712:12",
														"trueBody": {
															"id": 1350,
															"nodeType": "Block",
															"src": "2315:297:12",
															"statements": [
																{
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1308,
																				"name": "category3",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1155,
																				"src": "2329:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Counter_$1030_storage",
																					"typeString": "struct Counters.Counter storage ref"
																				}
																			},
																			"id": 1310,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2339:9:12",
																			"memberName": "increment",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1056,
																			"src": "2329:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1030_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1030_storage_ptr_$",
																				"typeString": "function (struct Counters.Counter storage pointer)"
																			}
																		},
																		"id": 1311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2329:21:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1312,
																	"nodeType": "ExpressionStatement",
																	"src": "2329:21:12"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 1314,
																							"name": "category3",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1155,
																							"src": "2372:9:12",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Counter_$1030_storage",
																								"typeString": "struct Counters.Counter storage ref"
																							}
																						},
																						"id": 1315,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "2382:7:12",
																						"memberName": "current",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1042,
																						"src": "2372:17:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1030_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1030_storage_ptr_$",
																							"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																						}
																					},
																					"id": 1316,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "2372:19:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"hexValue": "353030",
																					"id": 1317,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2394:3:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_500_by_1",
																						"typeString": "int_const 500"
																					},
																					"value": "500"
																				},
																				"src": "2372:25:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			{
																				"hexValue": "363020446179732043617465676f72792069732046756c6c20212121",
																				"id": 1319,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2398:30:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_96174b8098a0756df4a8cf8185e42278721efe8b421242f0a2d23d73619846c8",
																					"typeString": "literal_string \"60 Days Category is Full !!!\""
																				},
																				"value": "60 Days Category is Full !!!"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_96174b8098a0756df4a8cf8185e42278721efe8b421242f0a2d23d73619846c8",
																					"typeString": "literal_string \"60 Days Category is Full !!!\""
																				}
																			],
																			"id": 1313,
																			"name": "require",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				4294967278,
																				4294967278
																			],
																			"referencedDeclaration": 4294967278,
																			"src": "2364:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																				"typeString": "function (bool,string memory) pure"
																			}
																		},
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2364:65:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1321,
																	"nodeType": "ExpressionStatement",
																	"src": "2364:65:12"
																},
																{
																	"expression": {
																		"id": 1334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1322,
																				"name": "Staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1180,
																				"src": "2443:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Detail_$1175_storage_$",
																					"typeString": "mapping(address => struct NFTStaking.Detail storage ref)"
																				}
																			},
																			"id": 1325,
																			"indexExpression": {
																				"expression": {
																					"id": 1323,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2450:3:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1324,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2454:6:12",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2450:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "2443:18:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Detail_$1175_storage",
																				"typeString": "struct NFTStaking.Detail storage ref"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"hexValue": "3132353030",
																					"id": 1327,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2471:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_12500_by_1",
																						"typeString": "int_const 12500"
																					},
																					"value": "12500"
																				},
																				{
																					"id": 1328,
																					"name": "Days",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1200,
																					"src": "2477:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"id": 1329,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "2482:5:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 1330,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2488:9:12",
																					"memberName": "timestamp",
																					"nodeType": "MemberAccess",
																					"src": "2482:15:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1331,
																					"name": "TokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1198,
																					"src": "2498:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"hexValue": "74727565",
																					"id": 1332,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "bool",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "2506:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					"value": "true"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_12500_by_1",
																						"typeString": "int_const 12500"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				],
																				"id": 1326,
																				"name": "Detail",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1175,
																				"src": "2464:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_struct$_Detail_$1175_storage_ptr_$",
																					"typeString": "type(struct NFTStaking.Detail storage pointer)"
																				}
																			},
																			"id": 1333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "structConstructorCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2464:47:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Detail_$1175_memory_ptr",
																				"typeString": "struct NFTStaking.Detail memory"
																			}
																		},
																		"src": "2443:68:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Detail_$1175_storage",
																			"typeString": "struct NFTStaking.Detail storage ref"
																		}
																	},
																	"id": 1335,
																	"nodeType": "ExpressionStatement",
																	"src": "2443:68:12"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1340,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "2565:3:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1341,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2569:6:12",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "2565:10:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [
																					{
																						"id": 1344,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "2584:4:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_NFTStaking_$1652",
																							"typeString": "contract NFTStaking"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_NFTStaking_$1652",
																							"typeString": "contract NFTStaking"
																						}
																					],
																					"id": 1343,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "2576:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1342,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "2576:7:12",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1345,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2576:13:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1346,
																				"name": "TokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1198,
																				"src": "2590:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "",
																				"id": 1347,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2598:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																					"typeString": "literal_string \"\""
																				},
																				"value": ""
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																					"typeString": "literal_string \"\""
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1337,
																						"name": "ERC721address",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1160,
																						"src": "2533:13:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1336,
																					"name": "IERC721",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 623,
																					"src": "2525:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IERC721_$623_$",
																						"typeString": "type(contract IERC721)"
																					}
																				},
																				"id": 1338,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2525:22:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC721_$623",
																					"typeString": "contract IERC721"
																				}
																			},
																			"id": 1339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2548:16:12",
																			"memberName": "safeTransferFrom",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 568,
																			"src": "2525:39:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,address,uint256,bytes memory) external"
																			}
																		},
																		"id": 1348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2525:76:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1349,
																	"nodeType": "ExpressionStatement",
																	"src": "2525:76:12"
																}
															]
														}
													},
													"id": 1404,
													"nodeType": "IfStatement",
													"src": "1977:1036:12",
													"trueBody": {
														"id": 1304,
														"nodeType": "Block",
														"src": "1991:296:12",
														"statements": [
															{
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1262,
																			"name": "category2",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1152,
																			"src": "2005:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Counter_$1030_storage",
																				"typeString": "struct Counters.Counter storage ref"
																			}
																		},
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2015:9:12",
																		"memberName": "increment",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1056,
																		"src": "2005:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1030_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1030_storage_ptr_$",
																			"typeString": "function (struct Counters.Counter storage pointer)"
																		}
																	},
																	"id": 1265,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2005:21:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1266,
																"nodeType": "ExpressionStatement",
																"src": "2005:21:12"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1272,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 1268,
																						"name": "category2",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1152,
																						"src": "2048:9:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Counter_$1030_storage",
																							"typeString": "struct Counters.Counter storage ref"
																						}
																					},
																					"id": 1269,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "2058:7:12",
																					"memberName": "current",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1042,
																					"src": "2048:17:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1030_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1030_storage_ptr_$",
																						"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																					}
																				},
																				"id": 1270,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2048:19:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"hexValue": "373530",
																				"id": 1271,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2070:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_750_by_1",
																					"typeString": "int_const 750"
																				},
																				"value": "750"
																			},
																			"src": "2048:25:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		{
																			"hexValue": "333020446179732043617465676f72792069732046756c6c20212121",
																			"id": 1273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2074:30:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_f2ba20d657046b0f65fbea10716222e539090f7e5b324152631fdff76654446b",
																				"typeString": "literal_string \"30 Days Category is Full !!!\""
																			},
																			"value": "30 Days Category is Full !!!"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_f2ba20d657046b0f65fbea10716222e539090f7e5b324152631fdff76654446b",
																				"typeString": "literal_string \"30 Days Category is Full !!!\""
																			}
																		],
																		"id": 1267,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "2040:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (bool,string memory) pure"
																		}
																	},
																	"id": 1274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2040:65:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1275,
																"nodeType": "ExpressionStatement",
																"src": "2040:65:12"
															},
															{
																"expression": {
																	"id": 1288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 1276,
																			"name": "Staker",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1180,
																			"src": "2119:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Detail_$1175_storage_$",
																				"typeString": "mapping(address => struct NFTStaking.Detail storage ref)"
																			}
																		},
																		"id": 1279,
																		"indexExpression": {
																			"expression": {
																				"id": 1277,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2126:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2130:6:12",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2126:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "2119:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Detail_$1175_storage",
																			"typeString": "struct NFTStaking.Detail storage ref"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"arguments": [
																			{
																				"hexValue": "37353030",
																				"id": 1281,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2147:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_7500_by_1",
																					"typeString": "int_const 7500"
																				},
																				"value": "7500"
																			},
																			{
																				"id": 1282,
																				"name": "Days",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1200,
																				"src": "2152:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"expression": {
																					"id": 1283,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "2157:5:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1284,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2163:9:12",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "2157:15:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1285,
																				"name": "TokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1198,
																				"src": "2173:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "74727565",
																				"id": 1286,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2181:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_7500_by_1",
																					"typeString": "int_const 7500"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1280,
																			"name": "Detail",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1175,
																			"src": "2140:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_Detail_$1175_storage_ptr_$",
																				"typeString": "type(struct NFTStaking.Detail storage pointer)"
																			}
																		},
																		"id": 1287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2140:46:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Detail_$1175_memory_ptr",
																			"typeString": "struct NFTStaking.Detail memory"
																		}
																	},
																	"src": "2119:67:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Detail_$1175_storage",
																		"typeString": "struct NFTStaking.Detail storage ref"
																	}
																},
																"id": 1289,
																"nodeType": "ExpressionStatement",
																"src": "2119:67:12"
															},
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1294,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2240:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2244:6:12",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "2240:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 1298,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "2259:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_NFTStaking_$1652",
																						"typeString": "contract NFTStaking"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_NFTStaking_$1652",
																						"typeString": "contract NFTStaking"
																					}
																				],
																				"id": 1297,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "2251:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1296,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "2251:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2251:13:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1300,
																			"name": "TokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1198,
																			"src": "2265:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "",
																			"id": 1301,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2273:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			},
																			"value": ""
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																				"typeString": "literal_string \"\""
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1291,
																					"name": "ERC721address",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1160,
																					"src": "2208:13:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1290,
																				"name": "IERC721",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 623,
																				"src": "2200:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC721_$623_$",
																					"typeString": "type(contract IERC721)"
																				}
																			},
																			"id": 1292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2200:22:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC721_$623",
																				"typeString": "contract IERC721"
																			}
																		},
																		"id": 1293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2223:16:12",
																		"memberName": "safeTransferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 568,
																		"src": "2200:39:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																			"typeString": "function (address,address,uint256,bytes memory) external"
																		}
																	},
																	"id": 1302,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2200:76:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1303,
																"nodeType": "ExpressionStatement",
																"src": "2200:76:12"
															}
														]
													}
												},
												"id": 1405,
												"nodeType": "IfStatement",
												"src": "1652:1361:12",
												"trueBody": {
													"id": 1258,
													"nodeType": "Block",
													"src": "1666:297:12",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1216,
																		"name": "category1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1149,
																		"src": "1680:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Counter_$1030_storage",
																			"typeString": "struct Counters.Counter storage ref"
																		}
																	},
																	"id": 1218,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1690:9:12",
																	"memberName": "increment",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1056,
																	"src": "1680:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1030_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1030_storage_ptr_$",
																		"typeString": "function (struct Counters.Counter storage pointer)"
																	}
																},
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1680:21:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1220,
															"nodeType": "ExpressionStatement",
															"src": "1680:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1222,
																					"name": "category1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1149,
																					"src": "1723:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Counter_$1030_storage",
																						"typeString": "struct Counters.Counter storage ref"
																					}
																				},
																				"id": 1223,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1733:7:12",
																				"memberName": "current",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1042,
																				"src": "1723:17:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1030_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1030_storage_ptr_$",
																					"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
																				}
																			},
																			"id": 1224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1723:19:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "31303030",
																			"id": 1225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1745:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		},
																		"src": "1723:26:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "313520446179732043617465676f72792069732046756c6c20212121",
																		"id": 1227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1750:30:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_2ea564f91322c4e6360e343eafee06fa15490d9b0c58fcc61cf27678bc1a8b36",
																			"typeString": "literal_string \"15 Days Category is Full !!!\""
																		},
																		"value": "15 Days Category is Full !!!"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_2ea564f91322c4e6360e343eafee06fa15490d9b0c58fcc61cf27678bc1a8b36",
																			"typeString": "literal_string \"15 Days Category is Full !!!\""
																		}
																	],
																	"id": 1221,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1715:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1715:66:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1229,
															"nodeType": "ExpressionStatement",
															"src": "1715:66:12"
														},
														{
															"expression": {
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1230,
																		"name": "Staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1180,
																		"src": "1795:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Detail_$1175_storage_$",
																			"typeString": "mapping(address => struct NFTStaking.Detail storage ref)"
																		}
																	},
																	"id": 1233,
																	"indexExpression": {
																		"expression": {
																			"id": 1231,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1802:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1806:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1802:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1795:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Detail_$1175_storage",
																		"typeString": "struct NFTStaking.Detail storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"hexValue": "35303030",
																			"id": 1235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1823:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_5000_by_1",
																				"typeString": "int_const 5000"
																			},
																			"value": "5000"
																		},
																		{
																			"id": 1236,
																			"name": "Days",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1200,
																			"src": "1828:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"expression": {
																				"id": 1237,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "1833:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1839:9:12",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "1833:15:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1239,
																			"name": "TokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1198,
																			"src": "1849:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "74727565",
																			"id": 1240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1857:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_5000_by_1",
																				"typeString": "int_const 5000"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"id": 1234,
																		"name": "Detail",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1175,
																		"src": "1816:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_struct$_Detail_$1175_storage_ptr_$",
																			"typeString": "type(struct NFTStaking.Detail storage pointer)"
																		}
																	},
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "structConstructorCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1816:46:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Detail_$1175_memory_ptr",
																		"typeString": "struct NFTStaking.Detail memory"
																	}
																},
																"src": "1795:67:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Detail_$1175_storage",
																	"typeString": "struct NFTStaking.Detail storage ref"
																}
															},
															"id": 1243,
															"nodeType": "ExpressionStatement",
															"src": "1795:67:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1248,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1916:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1920:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1916:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1252,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1935:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_NFTStaking_$1652",
																					"typeString": "contract NFTStaking"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_NFTStaking_$1652",
																					"typeString": "contract NFTStaking"
																				}
																			],
																			"id": 1251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1927:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1250,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1927:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1927:13:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1254,
																		"name": "TokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1198,
																		"src": "1941:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "",
																		"id": 1255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1949:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1245,
																				"name": "ERC721address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1160,
																				"src": "1884:13:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1244,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 623,
																			"src": "1876:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$623_$",
																				"typeString": "type(contract IERC721)"
																			}
																		},
																		"id": 1246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1876:22:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$623",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 1247,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1899:16:12",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 568,
																	"src": "1876:39:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,uint256,bytes memory) external"
																	}
																},
																"id": 1256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1876:76:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1257,
															"nodeType": "ExpressionStatement",
															"src": "1876:76:12"
														}
													]
												}
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 1407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "1525:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "TokenId",
												"nameLocation": "1538:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "1533:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1533:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "Days",
												"nameLocation": "1551:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "1546:9:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1546:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1532:24:12"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1564:0:12"
									},
									"scope": 1652,
									"src": "1516:1507:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1606,
										"nodeType": "Block",
										"src": "3249:1276:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1413,
																	"name": "Staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1180,
																	"src": "3268:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Detail_$1175_storage_$",
																		"typeString": "mapping(address => struct NFTStaking.Detail storage ref)"
																	}
																},
																"id": 1415,
																"indexExpression": {
																	"id": 1414,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1409,
																	"src": "3275:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3268:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Detail_$1175_storage",
																	"typeString": "struct NFTStaking.Detail storage ref"
																}
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3280:12:12",
															"memberName": "DepositToken",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1174,
															"src": "3268:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c65617365204669727374204465706f736974204e465420212121",
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3293:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0be85b0fd62b353be3601e32894ceb7d1f17bd52fed9d0e6964a0beb0bba260b",
																"typeString": "literal_string \"Please First Deposit NFT !!!\""
															},
															"value": "Please First Deposit NFT !!!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0be85b0fd62b353be3601e32894ceb7d1f17bd52fed9d0e6964a0beb0bba260b",
																"typeString": "literal_string \"Please First Deposit NFT !!!\""
															}
														],
														"id": 1412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3259:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3259:65:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "3259:65:12"
											},
											{
												"assignments": [
													1421
												],
												"declarations": [
													{
														"constant": false,
														"id": 1421,
														"mutability": "mutable",
														"name": "Time",
														"nameLocation": "3339:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 1606,
														"src": "3334:9:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1420,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3334:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1438,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1422,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "3348:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 1423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3354:9:12",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "3348:15:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 1424,
																					"name": "Staker",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1180,
																					"src": "3366:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Detail_$1175_storage_$",
																						"typeString": "mapping(address => struct NFTStaking.Detail storage ref)"
																					}
																				},
																				"id": 1426,
																				"indexExpression": {
																					"id": 1425,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1409,
																					"src": "3373:3:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3366:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Detail_$1175_storage",
																					"typeString": "struct NFTStaking.Detail storage ref"
																				}
																			},
																			"id": 1427,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3378:9:12",
																			"memberName": "StartTime",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1170,
																			"src": "3366:21:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3348:39:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1429,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3347:41:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_86400_by_1",
																			"typeString": "int_const 86400"
																		},
																		"id": 1434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_rational_1440_by_1",
																				"typeString": "int_const 1440"
																			},
																			"id": 1432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3234",
																				"id": 1430,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3390:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_24_by_1",
																					"typeString": "int_const 24"
																				},
																				"value": "24"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "3630",
																				"id": 1431,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3393:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_60_by_1",
																					"typeString": "int_const 60"
																				},
																				"value": "60"
																			},
																			"src": "3390:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1440_by_1",
																				"typeString": "int_const 1440"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3630",
																			"id": 1433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3396:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_60_by_1",
																				"typeString": "int_const 60"
																			},
																			"value": "60"
																		},
																		"src": "3390:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_86400_by_1",
																			"typeString": "int_const 86400"
																		}
																	}
																],
																"id": 1435,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3389:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																}
															},
															"src": "3347:52:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1437,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3346:54:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3334:66:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1439,
														"name": "Time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1421,
														"src": "3413:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1440,
																"name": "Staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "3420:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Detail_$1175_storage_$",
																	"typeString": "mapping(address => struct NFTStaking.Detail storage ref)"
																}
															},
															"id": 1442,
															"indexExpression": {
																"id": 1441,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "3427:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3420:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Detail_$1175_storage",
																"typeString": "struct NFTStaking.Detail storage ref"
															}
														},
														"id": 1443,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3432:3:12",
														"memberName": "day",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1168,
														"src": "3420:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3413:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1552,
													"nodeType": "Block",
													"src": "3911:261:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1517,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1409,
																		"src": "3959:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1518,
																				"name": "Staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1180,
																				"src": "3964:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Detail_$1175_storage_$",
																					"typeString": "mapping(address => struct NFTStaking.Detail storage ref)"
																				}
																			},
																			"id": 1520,
																			"indexExpression": {
																				"id": 1519,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1409,
																				"src": "3971:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3964:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Detail_$1175_storage",
																				"typeString": "struct NFTStaking.Detail storage ref"
																			}
																		},
																		"id": 1521,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3976:6:12",
																		"memberName": "tokens",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1166,
																		"src": "3964:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1514,
																				"name": "ERC20Address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1162,
																				"src": "3932:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1513,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "3925:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3925:20:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3946:12:12",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 258,
																	"src": "3925:33:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3925:58:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1523,
															"nodeType": "ExpressionStatement",
															"src": "3925:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1530,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4045:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_NFTStaking_$1652",
																					"typeString": "contract NFTStaking"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_NFTStaking_$1652",
																					"typeString": "contract NFTStaking"
																				}
																			],
																			"id": 1529,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4037:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1528,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4037:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4037:13:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1532,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1409,
																		"src": "4052:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1533,
																				"name": "Staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1180,
																				"src": "4056:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Detail_$1175_storage_$",
																					"typeString": "mapping(address => struct NFTStaking.Detail storage ref)"
																				}
																			},
																			"id": 1535,
																			"indexExpression": {
																				"id": 1534,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1409,
																				"src": "4063:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4056:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Detail_$1175_storage",
																				"typeString": "struct NFTStaking.Detail storage ref"
																			}
																		},
																		"id": 1536,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4068:3:12",
																		"memberName": "NFT",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1172,
																		"src": "4056:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "",
																		"id": 1537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4072:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1525,
																				"name": "ERC721address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1160,
																				"src": "4005:13:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1524,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 623,
																			"src": "3997:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$623_$",
																				"typeString": "type(contract IERC721)"
																			}
																		},
																		"id": 1526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3997:22:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$623",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 1527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4020:16:12",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 568,
																	"src": "3997:39:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,uint256,bytes memory) external"
																	}
																},
																"id": 1538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3997:78:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1539,
															"nodeType": "ExpressionStatement",
															"src": "3997:78:12"
														},
														{
															"expression": {
																"id": 1545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1540,
																	"name": "TotalRemaningToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1164,
																	"src": "4089:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1541,
																			"name": "Staker",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1180,
																			"src": "4111:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Detail_$1175_storage_$",
																				"typeString": "mapping(address => struct NFTStaking.Detail storage ref)"
																			}
																		},
																		"id": 1543,
																		"indexExpression": {
																			"id": 1542,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1409,
																			"src": "4118:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4111:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Detail_$1175_storage",
																			"typeString": "struct NFTStaking.Detail storage ref"
																		}
																	},
																	"id": 1544,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4123:6:12",
																	"memberName": "tokens",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1166,
																	"src": "4111:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4089:40:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1546,
															"nodeType": "ExpressionStatement",
															"src": "4089:40:12"
														},
														{
															"expression": {
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "4143:18:12",
																"subExpression": {
																	"baseExpression": {
																		"id": 1547,
																		"name": "Staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1180,
																		"src": "4150:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Detail_$1175_storage_$",
																			"typeString": "mapping(address => struct NFTStaking.Detail storage ref)"
																		}
																	},
																	"id": 1549,
																	"indexExpression": {
																		"id": 1548,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1409,
																		"src": "4157:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4150:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Detail_$1175_storage",
																		"typeString": "struct NFTStaking.Detail storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1551,
															"nodeType": "ExpressionStatement",
															"src": "4143:18:12"
														}
													]
												},
												"id": 1553,
												"nodeType": "IfStatement",
												"src": "3410:762:12",
												"trueBody": {
													"id": 1512,
													"nodeType": "Block",
													"src": "3436:462:12",
													"statements": [
														{
															"assignments": [
																1446
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1446,
																	"mutability": "mutable",
																	"name": "TokenDays",
																	"nameLocation": "3455:9:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1512,
																	"src": "3450:14:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1445,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3450:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1459,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1447,
																	"name": "Time",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1421,
																	"src": "3467:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1448,
																						"name": "Staker",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1180,
																						"src": "3473:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Detail_$1175_storage_$",
																							"typeString": "mapping(address => struct NFTStaking.Detail storage ref)"
																						}
																					},
																					"id": 1450,
																					"indexExpression": {
																						"id": 1449,
																						"name": "_to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1409,
																						"src": "3480:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3473:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Detail_$1175_storage",
																						"typeString": "struct NFTStaking.Detail storage ref"
																					}
																				},
																				"id": 1451,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3485:6:12",
																				"memberName": "tokens",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1166,
																				"src": "3473:18:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1452,
																						"name": "Staker",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1180,
																						"src": "3492:6:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Detail_$1175_storage_$",
																							"typeString": "mapping(address => struct NFTStaking.Detail storage ref)"
																						}
																					},
																					"id": 1454,
																					"indexExpression": {
																						"id": 1453,
																						"name": "_to",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1409,
																						"src": "3499:3:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3492:11:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Detail_$1175_storage",
																						"typeString": "struct NFTStaking.Detail storage ref"
																					}
																				},
																				"id": 1455,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3504:3:12",
																				"memberName": "day",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1168,
																				"src": "3492:15:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3473:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1457,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3472:36:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3467:41:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3450:58:12"
														},
														{
															"assignments": [
																1461
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1461,
																	"mutability": "mutable",
																	"name": "fine",
																	"nameLocation": "3527:4:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 1512,
																	"src": "3522:9:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1460,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "3522:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1468,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "32",
																				"id": 1462,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3535:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1463,
																				"name": "TokenDays",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1446,
																				"src": "3537:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3535:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1465,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3534:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 1466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3548:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "3534:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3522:29:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1473,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1409,
																		"src": "3599:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1474,
																			"name": "TokenDays",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "3604:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1475,
																			"name": "fine",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1461,
																			"src": "3616:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3604:16:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1470,
																				"name": "ERC20Address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1162,
																				"src": "3572:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1469,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "3565:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3565:20:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3586:12:12",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 258,
																	"src": "3565:33:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:56:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1478,
															"nodeType": "ExpressionStatement",
															"src": "3565:56:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
																		"id": 1483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3669:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"value": "0x000000000000000000000000000000000000dEaD"
																	},
																	{
																		"id": 1484,
																		"name": "fine",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1461,
																		"src": "3713:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1480,
																				"name": "ERC20Address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1162,
																				"src": "3642:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1479,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 190,
																			"src": "3635:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3635:20:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$190",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3656:12:12",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 258,
																	"src": "3635:33:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3635:83:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1486,
															"nodeType": "ExpressionStatement",
															"src": "3635:83:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1493,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3780:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_NFTStaking_$1652",
																					"typeString": "contract NFTStaking"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_NFTStaking_$1652",
																					"typeString": "contract NFTStaking"
																				}
																			],
																			"id": 1492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3772:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1491,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3772:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1494,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3772:13:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1495,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1409,
																		"src": "3787:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 1496,
																				"name": "Staker",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1180,
																				"src": "3791:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Detail_$1175_storage_$",
																					"typeString": "mapping(address => struct NFTStaking.Detail storage ref)"
																				}
																			},
																			"id": 1498,
																			"indexExpression": {
																				"id": 1497,
																				"name": "_to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1409,
																				"src": "3798:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3791:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Detail_$1175_storage",
																				"typeString": "struct NFTStaking.Detail storage ref"
																			}
																		},
																		"id": 1499,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3803:3:12",
																		"memberName": "NFT",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1172,
																		"src": "3791:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "",
																		"id": 1500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3807:2:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1488,
																				"name": "ERC721address",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1160,
																				"src": "3740:13:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1487,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 623,
																			"src": "3732:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$623_$",
																				"typeString": "type(contract IERC721)"
																			}
																		},
																		"id": 1489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3732:22:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$623",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 1490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3755:16:12",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 568,
																	"src": "3732:39:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,uint256,bytes memory) external"
																	}
																},
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3732:78:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1502,
															"nodeType": "ExpressionStatement",
															"src": "3732:78:12"
														},
														{
															"expression": {
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1503,
																	"name": "TotalRemaningToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1164,
																	"src": "3824:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1504,
																	"name": "TokenDays",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1446,
																	"src": "3846:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3824:31:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1506,
															"nodeType": "ExpressionStatement",
															"src": "3824:31:12"
														},
														{
															"expression": {
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "3869:18:12",
																"subExpression": {
																	"baseExpression": {
																		"id": 1507,
																		"name": "Staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1180,
																		"src": "3876:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Detail_$1175_storage_$",
																			"typeString": "mapping(address => struct NFTStaking.Detail storage ref)"
																		}
																	},
																	"id": 1509,
																	"indexExpression": {
																		"id": 1508,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1409,
																		"src": "3883:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3876:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Detail_$1175_storage",
																		"typeString": "struct NFTStaking.Detail storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1511,
															"nodeType": "ExpressionStatement",
															"src": "3869:18:12"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1554,
																"name": "Staker",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "4185:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Detail_$1175_storage_$",
																	"typeString": "mapping(address => struct NFTStaking.Detail storage ref)"
																}
															},
															"id": 1556,
															"indexExpression": {
																"id": 1555,
																"name": "_to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1409,
																"src": "4192:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4185:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Detail_$1175_storage",
																"typeString": "struct NFTStaking.Detail storage ref"
															}
														},
														"id": 1557,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4197:3:12",
														"memberName": "day",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1168,
														"src": "4185:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3135",
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4204:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_15_by_1",
															"typeString": "int_const 15"
														},
														"value": "15"
													},
													"src": "4185:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1566,
																	"name": "Staker",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1180,
																	"src": "4270:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Detail_$1175_storage_$",
																		"typeString": "mapping(address => struct NFTStaking.Detail storage ref)"
																	}
																},
																"id": 1568,
																"indexExpression": {
																	"id": 1567,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1409,
																	"src": "4277:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4270:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Detail_$1175_storage",
																	"typeString": "struct NFTStaking.Detail storage ref"
																}
															},
															"id": 1569,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4282:3:12",
															"memberName": "day",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1168,
															"src": "4270:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "3330",
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4289:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_30_by_1",
																"typeString": "int_const 30"
															},
															"value": "30"
														},
														"src": "4270:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1578,
																		"name": "Staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1180,
																		"src": "4358:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Detail_$1175_storage_$",
																			"typeString": "mapping(address => struct NFTStaking.Detail storage ref)"
																		}
																	},
																	"id": 1580,
																	"indexExpression": {
																		"id": 1579,
																		"name": "_to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1409,
																		"src": "4365:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4358:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Detail_$1175_storage",
																		"typeString": "struct NFTStaking.Detail storage ref"
																	}
																},
																"id": 1581,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4370:3:12",
																"memberName": "day",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1168,
																"src": "4358:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "3630",
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4377:2:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_60_by_1",
																	"typeString": "int_const 60"
																},
																"value": "60"
															},
															"src": "4358:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1590,
																			"name": "Staker",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1180,
																			"src": "4446:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Detail_$1175_storage_$",
																				"typeString": "mapping(address => struct NFTStaking.Detail storage ref)"
																			}
																		},
																		"id": 1592,
																		"indexExpression": {
																			"id": 1591,
																			"name": "_to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1409,
																			"src": "4453:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4446:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Detail_$1175_storage",
																			"typeString": "struct NFTStaking.Detail storage ref"
																		}
																	},
																	"id": 1593,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4458:3:12",
																	"memberName": "day",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1168,
																	"src": "4446:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "3930",
																	"id": 1594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4465:2:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_90_by_1",
																		"typeString": "int_const 90"
																	},
																	"value": "90"
																},
																"src": "4446:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1602,
															"nodeType": "IfStatement",
															"src": "4443:74:12",
															"trueBody": {
																"id": 1601,
																"nodeType": "Block",
																"src": "4468:49:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 1596,
																					"name": "category4",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1158,
																					"src": "4482:9:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Counter_$1030_storage",
																						"typeString": "struct Counters.Counter storage ref"
																					}
																				},
																				"id": 1598,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4492:9:12",
																				"memberName": "decrement",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1084,
																				"src": "4482:19:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1030_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1030_storage_ptr_$",
																					"typeString": "function (struct Counters.Counter storage pointer)"
																				}
																			},
																			"id": 1599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4482:21:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1600,
																		"nodeType": "ExpressionStatement",
																		"src": "4482:21:12"
																	}
																]
															}
														},
														"id": 1603,
														"nodeType": "IfStatement",
														"src": "4355:162:12",
														"trueBody": {
															"id": 1589,
															"nodeType": "Block",
															"src": "4380:49:12",
															"statements": [
																{
																	"expression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 1584,
																				"name": "category3",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1155,
																				"src": "4394:9:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Counter_$1030_storage",
																					"typeString": "struct Counters.Counter storage ref"
																				}
																			},
																			"id": 1586,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4404:9:12",
																			"memberName": "decrement",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1084,
																			"src": "4394:19:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1030_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1030_storage_ptr_$",
																				"typeString": "function (struct Counters.Counter storage pointer)"
																			}
																		},
																		"id": 1587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4394:21:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1588,
																	"nodeType": "ExpressionStatement",
																	"src": "4394:21:12"
																}
															]
														}
													},
													"id": 1604,
													"nodeType": "IfStatement",
													"src": "4267:250:12",
													"trueBody": {
														"id": 1577,
														"nodeType": "Block",
														"src": "4292:49:12",
														"statements": [
															{
																"expression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"id": 1572,
																			"name": "category2",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1152,
																			"src": "4306:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Counter_$1030_storage",
																				"typeString": "struct Counters.Counter storage ref"
																			}
																		},
																		"id": 1574,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4316:9:12",
																		"memberName": "decrement",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1084,
																		"src": "4306:19:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1030_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1030_storage_ptr_$",
																			"typeString": "function (struct Counters.Counter storage pointer)"
																		}
																	},
																	"id": 1575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4306:21:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1576,
																"nodeType": "ExpressionStatement",
																"src": "4306:21:12"
															}
														]
													}
												},
												"id": 1605,
												"nodeType": "IfStatement",
												"src": "4182:335:12",
												"trueBody": {
													"id": 1565,
													"nodeType": "Block",
													"src": "4207:46:12",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1560,
																		"name": "category1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1149,
																		"src": "4221:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Counter_$1030_storage",
																			"typeString": "struct Counters.Counter storage ref"
																		}
																	},
																	"id": 1562,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4231:9:12",
																	"memberName": "decrement",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1084,
																	"src": "4221:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1030_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1030_storage_ptr_$",
																		"typeString": "function (struct Counters.Counter storage pointer)"
																	}
																},
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4221:21:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1564,
															"nodeType": "ExpressionStatement",
															"src": "4221:21:12"
														}
													]
												}
											}
										]
									},
									"functionSelector": "51cff8d9",
									"id": 1607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "3219:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3237:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1607,
												"src": "3229:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3229:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3228:13:12"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3249:0:12"
									},
									"scope": 1652,
									"src": "3210:1315:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1631,
										"nodeType": "Block",
										"src": "4835:129:12",
										"statements": [
											{
												"expression": {
													"id": 1616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1614,
														"name": "TotalRemaningToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1164,
														"src": "4845:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1615,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1609,
														"src": "4867:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4845:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1617,
												"nodeType": "ExpressionStatement",
												"src": "4845:29:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1622,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4922:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4926:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4922:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1626,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4942:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStaking_$1652",
																		"typeString": "contract NFTStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStaking_$1652",
																		"typeString": "contract NFTStaking"
																	}
																],
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4934:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1624,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4934:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4934:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1628,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1609,
															"src": "4949:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1619,
																	"name": "ERC20Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "4891:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1618,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "4884:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$190_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4884:20:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$190",
																"typeString": "contract IERC20"
															}
														},
														"id": 1621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4905:16:12",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 284,
														"src": "4884:37:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$190_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$190_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4884:73:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "4884:73:12"
											}
										]
									},
									"functionSelector": "c0cd40ee",
									"id": 1632,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1612,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1611,
												"name": "onlyOwner",
												"nameLocations": [
													"4826:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "4826:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4826:9:12"
										}
									],
									"name": "AdminAddToken",
									"nameLocation": "4791:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4810:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "4805:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1608,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "4805:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4804:14:12"
									},
									"returnParameters": {
										"id": 1613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4835:0:12"
									},
									"scope": 1652,
									"src": "4782:182:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										640
									],
									"body": {
										"id": 1650,
										"nodeType": "Block",
										"src": "5075:65:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1646,
															"name": "IERC721Receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "5092:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$641_$",
																"typeString": "type(contract IERC721Receiver)"
															}
														},
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5108:16:12",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 640,
														"src": "5092:32:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
															"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "5125:8:12",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "5092:41:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 1645,
												"id": 1649,
												"nodeType": "Return",
												"src": "5085:48:12"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 1651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "4978:16:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1642,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5049:8:12"
									},
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "4995:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4995:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "5003:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5003:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "5011:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "5019:14:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5019:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4994:40:12"
									},
									"returnParameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1651,
												"src": "5067:6:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1643,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5067:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5066:8:12"
									},
									"scope": 1652,
									"src": "4969:171:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1653,
							"src": "402:4740:12",
							"usedErrors": []
						}
					],
					"src": "32:5110:12"
				},
				"id": 12
			}
		}
	}
}